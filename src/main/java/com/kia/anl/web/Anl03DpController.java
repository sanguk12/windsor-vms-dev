package com.kia.anl.web;

import java.io.File;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import kr.co.nis.waf.ResultMessage;
import kr.co.nis.waf.dao.SimpleService;
import kr.co.nis.waf.system.biz.service.CodeService;
import kr.co.nis.waf.system.common.web.SessionManager;
import kr.co.nis.waf.system.common.web.SimpleMultiActionController;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFRichTextString;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.hssf.util.HSSFColor;
import org.apache.poi.hssf.util.Region;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.DataFormat;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.Row;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;


@Controller
@RequestMapping("/service/anl03Dp")
public class Anl03DpController extends SimpleMultiActionController {

	protected final Log logger = LogFactory.getLog(getClass());

	//@Resource
	//private Anl03Service anl03Service;
	
	@Resource
	private CodeService codeService;
	
	@Resource
	private SimpleService simpleService;
	
	@Value("#{system['docLink.realUploadPath']}")
	private String realUploadPath;

	@Value("#{system['docLink.realDownloadPath']}")
	private String realDownloadPath;

//	@Value("#{system['jXls.templateFilePath']}")
//	private String templateFilePath;

//	@Value("#{system['jXls.createTempFilePath']}")
//	private String createTempFilePath;
	
	int seq = 0;
	
	/* 계산 식 위한 데이터 값 담는 리스트 */
	// Industry Depletion
	ArrayList<Map> indDepl = null;
	Map indDeplMap = null;
	
	// DK Depletion 
	ArrayList<Map> dkDepl = null;
	Map dkDeplMap = null;
	ArrayList<Map> dkDepl2 = null;
	Map dkDeplMap2 = null;
	
	// Note G
	ArrayList<Map> noteG = null;
	Map noteGMap = null;
	
	// 계산식 있는 그리드에서 쓸 행 변수
	int row_cal1 = 0;
	int row_cal2 = 0;
	int row_cal3 = 0;
	int row_cal4 = 0;
	int row_cal5 = 0;
	int row_cal6 = 0;
	int row_cal7 = 0;
	
	/* Military 합계 계산을 위한 변수 - Industry Depletion Forecast */
	Double indDepFcAcP01 = 0.0;
	Double indDepFcAcP02 = 0.0;
	Double indDepFcAcP03 = 0.0;
	Double indDepFcAcP04 = 0.0;
	Double indDepFcAcP05 = 0.0;
	Double indDepFcAcP06 = 0.0;
	Double indDepFcAcP07 = 0.0;
	Double indDepFcAcP08 = 0.0;
	Double indDepFcAcP09 = 0.0;
	Double indDepFcAcP10 = 0.0;
	Double indDepFcAcP11 = 0.0;
	Double indDepFcAcP12 = 0.0;
	Double indDepFcAcQ01 = 0.0;
	Double indDepFcAcQ02 = 0.0;
	Double indDepFcAcQ03 = 0.0;
	Double indDepFcAcQ04 = 0.0;
	Double indDepFcAcH01 = 0.0;
	Double indDepFcAcH02 = 0.0;
	Double indDepFcAcYTD = 0.0;
	
	Double indDepFcForP01 = 0.0;
	Double indDepFcForP02 = 0.0;
	Double indDepFcForP03 = 0.0;
	Double indDepFcForP04 = 0.0;
	Double indDepFcForP05 = 0.0;
	Double indDepFcForP06 = 0.0;
	Double indDepFcForP07 = 0.0;
	Double indDepFcForP08 = 0.0;
	Double indDepFcForP09 = 0.0;
	Double indDepFcForP10 = 0.0;
	Double indDepFcForP11 = 0.0;
	Double indDepFcForP12 = 0.0;
	Double indDepFcForQ01 = 0.0;
	Double indDepFcForQ02 = 0.0;
	Double indDepFcForQ03 = 0.0;
	Double indDepFcForQ04 = 0.0;
	Double indDepFcForH01 = 0.0;
	Double indDepFcForH02 = 0.0;
	Double indDepFcForYTD = 0.0;
	
	Double indDepFcOutP01 = 0.0;
	Double indDepFcOutP02 = 0.0;
	Double indDepFcOutP03 = 0.0;
	Double indDepFcOutP04 = 0.0;
	Double indDepFcOutP05 = 0.0;
	Double indDepFcOutP06 = 0.0;
	Double indDepFcOutP07 = 0.0;
	Double indDepFcOutP08 = 0.0;
	Double indDepFcOutP09 = 0.0;
	Double indDepFcOutP10 = 0.0;
	Double indDepFcOutP11 = 0.0;
	Double indDepFcOutP12 = 0.0;
	Double indDepFcOutQ01 = 0.0;
	Double indDepFcOutQ02 = 0.0;
	Double indDepFcOutQ03 = 0.0;
	Double indDepFcOutQ04 = 0.0;
	Double indDepFcOutH01 = 0.0;
	Double indDepFcOutH02 = 0.0;
	Double indDepFcOutYTD = 0.0;
	
	Double indDepFcTgP01 = 0.0;
	Double indDepFcTgP02 = 0.0;
	Double indDepFcTgP03 = 0.0;
	Double indDepFcTgP04 = 0.0;
	Double indDepFcTgP05 = 0.0;
	Double indDepFcTgP06 = 0.0;
	Double indDepFcTgP07 = 0.0;
	Double indDepFcTgP08 = 0.0;
	Double indDepFcTgP09 = 0.0;
	Double indDepFcTgP10 = 0.0;
	Double indDepFcTgP11 = 0.0;
	Double indDepFcTgP12 = 0.0;
	Double indDepFcTgQ01 = 0.0;
	Double indDepFcTgQ02 = 0.0;
	Double indDepFcTgQ03 = 0.0;
	Double indDepFcTgQ04 = 0.0;
	Double indDepFcTgH01 = 0.0;
	Double indDepFcTgH02 = 0.0;
	Double indDepFcTgYTD = 0.0;
	
	/* Military 합계 계산을 위한 변수 - DK Depletion Forecast */
	Double dkDepFcAcP01 = 0.0;
	Double dkDepFcAcP02 = 0.0;
	Double dkDepFcAcP03 = 0.0;
	Double dkDepFcAcP04 = 0.0;
	Double dkDepFcAcP05 = 0.0;
	Double dkDepFcAcP06 = 0.0;
	Double dkDepFcAcP07 = 0.0;
	Double dkDepFcAcP08 = 0.0;
	Double dkDepFcAcP09 = 0.0;
	Double dkDepFcAcP10 = 0.0;
	Double dkDepFcAcP11 = 0.0;
	Double dkDepFcAcP12 = 0.0;
	Double dkDepFcAcQ01 = 0.0;
	Double dkDepFcAcQ02 = 0.0;
	Double dkDepFcAcQ03 = 0.0;
	Double dkDepFcAcQ04 = 0.0;
	Double dkDepFcAcH01 = 0.0;
	Double dkDepFcAcH02 = 0.0;
	Double dkDepFcAcYTD = 0.0;
	
	Double dkDepFcForP01 = 0.0;
	Double dkDepFcForP02 = 0.0;
	Double dkDepFcForP03 = 0.0;
	Double dkDepFcForP04 = 0.0;
	Double dkDepFcForP05 = 0.0;
	Double dkDepFcForP06 = 0.0;
	Double dkDepFcForP07 = 0.0;
	Double dkDepFcForP08 = 0.0;
	Double dkDepFcForP09 = 0.0;
	Double dkDepFcForP10 = 0.0;
	Double dkDepFcForP11 = 0.0;
	Double dkDepFcForP12 = 0.0;
	Double dkDepFcForQ01 = 0.0;
	Double dkDepFcForQ02 = 0.0;
	Double dkDepFcForQ03 = 0.0;
	Double dkDepFcForQ04 = 0.0;
	Double dkDepFcForH01 = 0.0;
	Double dkDepFcForH02 = 0.0;
	Double dkDepFcForYTD = 0.0;
	
	Double dkDepFcOutP01 = 0.0;
	Double dkDepFcOutP02 = 0.0;
	Double dkDepFcOutP03 = 0.0;
	Double dkDepFcOutP04 = 0.0;
	Double dkDepFcOutP05 = 0.0;
	Double dkDepFcOutP06 = 0.0;
	Double dkDepFcOutP07 = 0.0;
	Double dkDepFcOutP08 = 0.0;
	Double dkDepFcOutP09 = 0.0;
	Double dkDepFcOutP10 = 0.0;
	Double dkDepFcOutP11 = 0.0;
	Double dkDepFcOutP12 = 0.0;
	Double dkDepFcOutQ01 = 0.0;
	Double dkDepFcOutQ02 = 0.0;
	Double dkDepFcOutQ03 = 0.0;
	Double dkDepFcOutQ04 = 0.0;
	Double dkDepFcOutH01 = 0.0;
	Double dkDepFcOutH02 = 0.0;
	Double dkDepFcOutYTD = 0.0;
	
	Double dkDepFcTgP01 = 0.0;
	Double dkDepFcTgP02 = 0.0;
	Double dkDepFcTgP03 = 0.0;
	Double dkDepFcTgP04 = 0.0;
	Double dkDepFcTgP05 = 0.0;
	Double dkDepFcTgP06 = 0.0;
	Double dkDepFcTgP07 = 0.0;
	Double dkDepFcTgP08 = 0.0;
	Double dkDepFcTgP09 = 0.0;
	Double dkDepFcTgP10 = 0.0;
	Double dkDepFcTgP11 = 0.0;
	Double dkDepFcTgP12 = 0.0;
	Double dkDepFcTgQ01 = 0.0;
	Double dkDepFcTgQ02 = 0.0;
	Double dkDepFcTgQ03 = 0.0;
	Double dkDepFcTgQ04 = 0.0;
	Double dkDepFcTgH01 = 0.0;
	Double dkDepFcTgH02 = 0.0;
	Double dkDepFcTgYTD = 0.0;
	
	/* Note G 합계 계산을 위한 변수 */
	Double dkDeplFcAcP01 = 0.0;
	Double dkDeplFcAcP02 = 0.0;
	Double dkDeplFcAcP03 = 0.0;
	Double dkDeplFcAcP04 = 0.0;
	Double dkDeplFcAcP05 = 0.0;
	Double dkDeplFcAcP06 = 0.0;
	Double dkDeplFcAcP07 = 0.0;
	Double dkDeplFcAcP08 = 0.0;
	Double dkDeplFcAcP09 = 0.0;
	Double dkDeplFcAcP10 = 0.0;
	Double dkDeplFcAcP11 = 0.0;
	Double dkDeplFcAcP12 = 0.0;
	Double dkDeplFcAcQ01 = 0.0;
	Double dkDeplFcAcQ02 = 0.0;
	Double dkDeplFcAcQ03 = 0.0;
	Double dkDeplFcAcQ04 = 0.0;
	Double dkDeplFcAcH01 = 0.0;
	Double dkDeplFcAcH02 = 0.0;
	Double dkDeplFcAcYTD = 0.0;
	
	/* Note G 합계 계산을 위한 변수 */
	Double noteGDkAcP01 = 0.0;
	Double noteGDkAcP02 = 0.0;
	Double noteGDkAcP03 = 0.0;
	Double noteGDkAcP04 = 0.0;
	Double noteGDkAcP05 = 0.0;
	Double noteGDkAcP06 = 0.0;
	Double noteGDkAcP07 = 0.0;
	Double noteGDkAcP08 = 0.0;
	Double noteGDkAcP09 = 0.0;
	Double noteGDkAcP10 = 0.0;
	Double noteGDkAcP11 = 0.0;
	Double noteGDkAcP12 = 0.0;
	Double noteGDkAcQ01 = 0.0;
	Double noteGDkAcQ02 = 0.0;
	Double noteGDkAcQ03 = 0.0;
	Double noteGDkAcQ04 = 0.0;
	Double noteGDkAcH01 = 0.0;
	Double noteGDkAcH02 = 0.0;
	Double noteGDkAcYTD = 0.0;
	
	Double noteGDkForP01 = 0.0;
	Double noteGDkForP02 = 0.0;
	Double noteGDkForP03 = 0.0;
	Double noteGDkForP04 = 0.0;
	Double noteGDkForP05 = 0.0;
	Double noteGDkForP06 = 0.0;
	Double noteGDkForP07 = 0.0;
	Double noteGDkForP08 = 0.0;
	Double noteGDkForP09 = 0.0;
	Double noteGDkForP10 = 0.0;
	Double noteGDkForP11 = 0.0;
	Double noteGDkForP12 = 0.0;
	Double noteGDkForQ01 = 0.0;
	Double noteGDkForQ02 = 0.0;
	Double noteGDkForQ03 = 0.0;
	Double noteGDkForQ04 = 0.0;
	Double noteGDkForH01 = 0.0;
	Double noteGDkForH02 = 0.0;
	Double noteGDkForYTD = 0.0;
	
	Double noteGDkOutP01 = 0.0;
	Double noteGDkOutP02 = 0.0;
	Double noteGDkOutP03 = 0.0;
	Double noteGDkOutP04 = 0.0;
	Double noteGDkOutP05 = 0.0;
	Double noteGDkOutP06 = 0.0;
	Double noteGDkOutP07 = 0.0;
	Double noteGDkOutP08 = 0.0;
	Double noteGDkOutP09 = 0.0;
	Double noteGDkOutP10 = 0.0;
	Double noteGDkOutP11 = 0.0;
	Double noteGDkOutP12 = 0.0;
	Double noteGDkOutQ01 = 0.0;
	Double noteGDkOutQ02 = 0.0;
	Double noteGDkOutQ03 = 0.0;
	Double noteGDkOutQ04 = 0.0;
	Double noteGDkOutH01 = 0.0;
	Double noteGDkOutH02 = 0.0;
	Double noteGDkOutYTD = 0.0;
	
	Double noteGDkTgP01 = 0.0;
	Double noteGDkTgP02 = 0.0;
	Double noteGDkTgP03 = 0.0;
	Double noteGDkTgP04 = 0.0;
	Double noteGDkTgP05 = 0.0;
	Double noteGDkTgP06 = 0.0;
	Double noteGDkTgP07 = 0.0;
	Double noteGDkTgP08 = 0.0;
	Double noteGDkTgP09 = 0.0;
	Double noteGDkTgP10 = 0.0;
	Double noteGDkTgP11 = 0.0;
	Double noteGDkTgP12 = 0.0;
	Double noteGDkTgQ01 = 0.0;
	Double noteGDkTgQ02 = 0.0;
	Double noteGDkTgQ03 = 0.0;
	Double noteGDkTgQ04 = 0.0;
	Double noteGDkTgH01 = 0.0;
	Double noteGDkTgH02 = 0.0;
	Double noteGDkTgYTD = 0.0;
	
	Double noteGDkAc2P01 = 0.0;
	Double noteGDkAc2P02 = 0.0;
	Double noteGDkAc2P03 = 0.0;
	Double noteGDkAc2P04 = 0.0;
	Double noteGDkAc2P05 = 0.0;
	Double noteGDkAc2P06 = 0.0;
	Double noteGDkAc2P07 = 0.0;
	Double noteGDkAc2P08 = 0.0;
	Double noteGDkAc2P09 = 0.0;
	Double noteGDkAc2P10 = 0.0;
	Double noteGDkAc2P11 = 0.0;
	Double noteGDkAc2P12 = 0.0;
	Double noteGDkAc2Q01 = 0.0;
	Double noteGDkAc2Q02 = 0.0;
	Double noteGDkAc2Q03 = 0.0;
	Double noteGDkAc2Q04 = 0.0;
	Double noteGDkAc2H01 = 0.0;
	Double noteGDkAc2H02 = 0.0;
	Double noteGDkAc2YTD = 0.0;
	
	Double noteGDkFor2P01 = 0.0;
	Double noteGDkFor2P02 = 0.0;
	Double noteGDkFor2P03 = 0.0;
	Double noteGDkFor2P04 = 0.0;
	Double noteGDkFor2P05 = 0.0;
	Double noteGDkFor2P06 = 0.0;
	Double noteGDkFor2P07 = 0.0;
	Double noteGDkFor2P08 = 0.0;
	Double noteGDkFor2P09 = 0.0;
	Double noteGDkFor2P10 = 0.0;
	Double noteGDkFor2P11 = 0.0;
	Double noteGDkFor2P12 = 0.0;
	Double noteGDkFor2Q01 = 0.0;
	Double noteGDkFor2Q02 = 0.0;
	Double noteGDkFor2Q03 = 0.0;
	Double noteGDkFor2Q04 = 0.0;
	Double noteGDkFor2H01 = 0.0;
	Double noteGDkFor2H02 = 0.0;
	Double noteGDkFor2YTD = 0.0;
	
	Double noteGDkOut2P01 = 0.0;
	Double noteGDkOut2P02 = 0.0;
	Double noteGDkOut2P03 = 0.0;
	Double noteGDkOut2P04 = 0.0;
	Double noteGDkOut2P05 = 0.0;
	Double noteGDkOut2P06 = 0.0;
	Double noteGDkOut2P07 = 0.0;
	Double noteGDkOut2P08 = 0.0;
	Double noteGDkOut2P09 = 0.0;
	Double noteGDkOut2P10 = 0.0;
	Double noteGDkOut2P11 = 0.0;
	Double noteGDkOut2P12 = 0.0;
	Double noteGDkOut2Q01 = 0.0;
	Double noteGDkOut2Q02 = 0.0;
	Double noteGDkOut2Q03 = 0.0;
	Double noteGDkOut2Q04 = 0.0;
	Double noteGDkOut2H01 = 0.0;
	Double noteGDkOut2H02 = 0.0;
	Double noteGDkOut2YTD = 0.0;
	
	Double noteGDkTg2P01 = 0.0;
	Double noteGDkTg2P02 = 0.0;
	Double noteGDkTg2P03 = 0.0;
	Double noteGDkTg2P04 = 0.0;
	Double noteGDkTg2P05 = 0.0;
	Double noteGDkTg2P06 = 0.0;
	Double noteGDkTg2P07 = 0.0;
	Double noteGDkTg2P08 = 0.0;
	Double noteGDkTg2P09 = 0.0;
	Double noteGDkTg2P10 = 0.0;
	Double noteGDkTg2P11 = 0.0;
	Double noteGDkTg2P12 = 0.0;
	Double noteGDkTg2Q01 = 0.0;
	Double noteGDkTg2Q02 = 0.0;
	Double noteGDkTg2Q03 = 0.0;
	Double noteGDkTg2Q04 = 0.0;
	Double noteGDkTg2H01 = 0.0;
	Double noteGDkTg2H02 = 0.0;
	Double noteGDkTg2YTD = 0.0;
	
	/* Parameter 값 받는 변수 */
	String Lfy_Param = null;
	String fy_Param = null;
	String period_Param = null;
	String periodChk_Param = null;
	String ytd_Param = null;
	String channel_Param = null;
	String region_Param = null;
	String team_Param = null;
	
	// Depletion 엑셀 조회
	@RequestMapping("/dpExcelSearch")
	public ModelAndView dpExcelSearch(Map model, HttpServletRequest request, HttpServletResponse response) throws Exception {
        String templateFilePath = request.getServletContext().getRealPath("WEB-INF/excel/");
        String createTempFilePath = request.getServletContext().getRealPath("WEB-INF/temp/");

		indDepl = new ArrayList<Map>();
		dkDepl = new ArrayList<Map>();
		dkDepl2 = new ArrayList<Map>();
		noteG = new ArrayList<Map>();
		
		SessionManager session = new SessionManager(request, response);
		ResultMessage rm = new ResultMessage();
		Map param = new HashMap();
		
		bind(request, param);
		
		// 변수에 Parameter 값 담는다.
		Lfy_Param = (String)param.get("Lfy");
		fy_Param = (String)param.get("fy");
		period_Param = (String)param.get("period");
		periodChk_Param = (String)param.get("periodChk");
		ytd_Param = (String)param.get("ytd"); 
		channel_Param = (String)param.get("channel"); 
		region_Param = (String)param.get("region"); 
		team_Param = (String)param.get("team"); 
		
		// 회계월 조건에 따른 기간 컬럼 항목 변화
		int actual = 4;
		int forecast = 0;
		int forecastEnd = 0;
		int outlook = 0;
		int outlookEnd = 0;
		int som = 0;
		int somEnd = 0;
		int signal = 0;
		
		if(periodChk_Param.equals("Y")){
			forecast = 23;
			forecastEnd = 41;
			outlook = 43;
			outlookEnd = 61;
			som = 63;
			somEnd = 88;
			signal = 7;
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			forecast = 10;
			forecastEnd = 15;
			outlook = 17;
			outlookEnd = 22;
			som = 24;
			somEnd = 32;
			signal = 3;
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			forecast = 11;
			forecastEnd = 17;
			outlook = 19;
			outlookEnd = 25;
			som = 27;
			somEnd = 37;
			signal = 4;
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09") || period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			forecast = 12;
			forecastEnd = 19;
			outlook = 21;
			outlookEnd = 28;
			som = 30;
			somEnd = 42;
			signal = 5;
		}
		
		try {
			
			// 조회리스트
			List data = (List) simpleService.queryForList("ANL0300206S", param);
			List data2 = (List) simpleService.queryForList("ANL0300207S", param);
			List data3 = (List) simpleService.queryForList("ANL0300208S", param);
			
			// 엑셀 생성
			HSSFWorkbook wb = new HSSFWorkbook();
			HSSFSheet sheet = wb.createSheet("Depletion");
			
			// 표 이외의 선들은 안보이게 처리
			sheet.setDisplayGridlines(false);
			
			// 폰트 스타일
			Font font1 = wb.createFont();
        	font1.setColor(HSSFColor.DARK_RED.index);
        	font1.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
        	font1.setFontName("맑은 고딕");
        	
        	Font font2 = wb.createFont();
        	font2.setFontName("맑은 고딕");
        	
        	Font font3 = wb.createFont();
        	font3.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
        	font3.setFontName("맑은 고딕");
        	
        	// 데이터 포맷
        	DataFormat format = wb.createDataFormat();
        	
			// 셀 스타일 설정
			CellStyle style1 = wb.createCellStyle();
        	style1.setFont(font1);
        	
        	CellStyle style2 = wb.createCellStyle();
        	style2.setAlignment(CellStyle.ALIGN_CENTER);
        	style2.setFillForegroundColor(HSSFColor.GREY_25_PERCENT.index);
        	style2.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style2.setBorderRight(CellStyle.BORDER_THIN);
        	style2.setBorderLeft(CellStyle.BORDER_THIN);
        	style2.setBorderTop(CellStyle.BORDER_THIN);
        	style2.setBorderBottom(CellStyle.BORDER_THIN);
        	style2.setFont(font2);
        	
			CellStyle style3 = wb.createCellStyle();
        	style3.setAlignment(CellStyle.ALIGN_CENTER);
        	style3.setVerticalAlignment(CellStyle.VERTICAL_CENTER);
        	style3.setBorderRight(CellStyle.BORDER_THIN);
        	style3.setBorderLeft(CellStyle.BORDER_THIN);
        	style3.setBorderTop(CellStyle.BORDER_THIN);
        	style3.setBorderBottom(CellStyle.BORDER_THIN);
        	style3.setFont(font2);
        	
        	CellStyle style4 = wb.createCellStyle();
        	style4.setDataFormat(format.getFormat("#,##0"));
        	style4.setAlignment(CellStyle.ALIGN_RIGHT);
        	style4.setBorderRight(CellStyle.BORDER_THIN);
        	style4.setBorderLeft(CellStyle.BORDER_THIN);
        	style4.setBorderTop(CellStyle.BORDER_THIN);
        	style4.setBorderBottom(CellStyle.BORDER_THIN);
        	style4.setFont(font2);
        	
        	CellStyle style5 = wb.createCellStyle();
        	style5.setAlignment(CellStyle.ALIGN_CENTER);
        	style5.setFillForegroundColor(HSSFColor.GOLD.index);
        	style5.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style5.setBorderRight(CellStyle.BORDER_THICK);
        	style5.setBorderLeft(CellStyle.BORDER_THIN);
        	style5.setBorderTop(CellStyle.BORDER_THIN);
        	style5.setBorderBottom(CellStyle.BORDER_THIN);
        	style5.setFont(font3);
        	
        	CellStyle style6 = wb.createCellStyle();
        	style6.setDataFormat(format.getFormat("#,##0"));
        	style6.setAlignment(CellStyle.ALIGN_RIGHT);
        	style6.setFillForegroundColor(HSSFColor.GOLD.index);
        	style6.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style6.setBorderRight(CellStyle.BORDER_THIN);
        	style6.setBorderLeft(CellStyle.BORDER_THIN);
        	style6.setBorderTop(CellStyle.BORDER_THIN);
        	style6.setBorderBottom(CellStyle.BORDER_THIN);
        	style6.setFont(font3);
        	
        	CellStyle style7 = wb.createCellStyle();
        	style7.setAlignment(CellStyle.ALIGN_CENTER);
        	HSSFFont font7 = wb.createFont();
        	font7.setColor(HSSFColor.WHITE.index);
        	font7.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
        	font7.setFontName("맑은 고딕");
        	style7.setFont(font7);
        	style7.setFillForegroundColor(HSSFColor.INDIGO.index);
        	style7.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style7.setBorderRight(CellStyle.BORDER_THIN);
        	style7.setBorderLeft(CellStyle.BORDER_THIN);
        	style7.setBorderTop(CellStyle.BORDER_THIN);
        	style7.setBorderBottom(CellStyle.BORDER_THIN);
        	
        	CellStyle style8 = wb.createCellStyle();
        	style8.setDataFormat(format.getFormat("#,##0"));
        	style8.setAlignment(CellStyle.ALIGN_RIGHT);
        	HSSFFont font8 = wb.createFont();
        	font8.setColor(HSSFColor.WHITE.index);
        	font8.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
        	font8.setFontName("맑은 고딕");
        	style8.setFont(font8);
        	style8.setFillForegroundColor(HSSFColor.INDIGO.index);
        	style8.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style8.setBorderRight(CellStyle.BORDER_THIN);
        	style8.setBorderLeft(CellStyle.BORDER_THIN);
        	style8.setBorderTop(CellStyle.BORDER_THIN);
        	style8.setBorderBottom(CellStyle.BORDER_THIN);
        	
        	CellStyle style9 = wb.createCellStyle();
        	style9.setAlignment(CellStyle.ALIGN_CENTER);
        	HSSFFont font9 = wb.createFont();
        	font9.setColor(HSSFColor.WHITE.index);
        	font9.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
        	font9.setFontName("맑은 고딕");
        	style9.setFont(font9);
        	style9.setFillForegroundColor(HSSFColor.DARK_RED.index);
        	style9.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style9.setBorderRight(CellStyle.BORDER_THICK);
        	style9.setBorderLeft(CellStyle.BORDER_THICK);
        	style9.setBorderTop(CellStyle.BORDER_THICK);
        	style9.setBorderBottom(CellStyle.BORDER_THICK);
        	
        	CellStyle style10 = wb.createCellStyle();
        	style10.setDataFormat(format.getFormat("#,##0"));
        	style10.setFillForegroundColor(HSSFColor.DARK_RED.index);
        	HSSFFont font10 = wb.createFont();
        	font10.setColor(HSSFColor.WHITE.index);
        	font10.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD); 
        	font10.setFontName("맑은 고딕");
        	style10.setFont(font10);
        	style10.setAlignment(CellStyle.ALIGN_RIGHT);
        	style10.setFillForegroundColor(HSSFColor.DARK_RED.index);
        	style10.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style10.setBorderRight(CellStyle.BORDER_THIN);
        	style10.setBorderLeft(CellStyle.BORDER_THIN);
        	style10.setBorderTop(CellStyle.BORDER_THICK);
        	style10.setBorderBottom(CellStyle.BORDER_THICK);
        	
        	CellStyle style11 = wb.createCellStyle();
        	style11.setAlignment(CellStyle.ALIGN_LEFT);
        	style11.setBorderRight(CellStyle.BORDER_THICK);
        	style11.setBorderLeft(CellStyle.BORDER_THIN);
        	style11.setBorderTop(CellStyle.BORDER_THIN);
        	style11.setBorderBottom(CellStyle.BORDER_THIN);
        	style11.setFont(font2);
        	
        	
        	/* 계산식 스타일  : 값에 %를 붙여준다. */
        	CellStyle style12 = wb.createCellStyle();
        	style12.setDataFormat(format.getFormat("#,##0.0%"));
        	style12.setAlignment(CellStyle.ALIGN_RIGHT);
        	style12.setBorderRight(CellStyle.BORDER_THIN);
        	style12.setBorderLeft(CellStyle.BORDER_THIN);
        	style12.setBorderTop(CellStyle.BORDER_THIN);
        	style12.setBorderBottom(CellStyle.BORDER_THIN);
        	style12.setFont(font2);
        	
        	CellStyle style13 = wb.createCellStyle();
        	style13.setDataFormat(format.getFormat("#,##0.0%"));
        	style13.setAlignment(CellStyle.ALIGN_RIGHT);
        	style13.setFillForegroundColor(HSSFColor.GOLD.index);
        	style13.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style13.setBorderRight(CellStyle.BORDER_THIN);
        	style13.setBorderLeft(CellStyle.BORDER_THIN);
        	style13.setBorderTop(CellStyle.BORDER_THIN);
        	style13.setBorderBottom(CellStyle.BORDER_THIN);
        	style13.setFont(font3);
        	
        	CellStyle style14 = wb.createCellStyle();
        	style14.setDataFormat(format.getFormat("#,##0.0%"));
        	style14.setAlignment(CellStyle.ALIGN_RIGHT);
        	HSSFFont font14 = wb.createFont();
        	font14.setColor(HSSFColor.WHITE.index);
        	font14.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
        	font14.setFontName("맑은 고딕");
        	style14.setFont(font14);
        	style14.setFillForegroundColor(HSSFColor.INDIGO.index);
        	style14.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style14.setBorderRight(CellStyle.BORDER_THIN);
        	style14.setBorderLeft(CellStyle.BORDER_THIN);
        	style14.setBorderTop(CellStyle.BORDER_THIN);
        	style14.setBorderBottom(CellStyle.BORDER_THIN);
        	
        	CellStyle style15 = wb.createCellStyle();
        	style15.setDataFormat(format.getFormat("#,##0.0%"));
        	style15.setFillForegroundColor(HSSFColor.DARK_RED.index);
        	HSSFFont font15 = wb.createFont();
        	font15.setColor(HSSFColor.WHITE.index);
        	font15.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD); 
        	font15.setFontName("맑은 고딕");
        	style15.setFont(font15);
        	style15.setAlignment(CellStyle.ALIGN_RIGHT);
        	style15.setFillForegroundColor(HSSFColor.DARK_RED.index);
        	style15.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style15.setBorderRight(CellStyle.BORDER_THIN);
        	style15.setBorderLeft(CellStyle.BORDER_THIN);
        	style15.setBorderTop(CellStyle.BORDER_THICK);
        	style15.setBorderBottom(CellStyle.BORDER_THICK);
        	
        	
        	/* 구분선 스타일 */
        	// 타이틀 : 오른쪽 굵은 선
        	CellStyle style20 = wb.createCellStyle();
        	style20.setAlignment(CellStyle.ALIGN_CENTER);
        	style20.setVerticalAlignment(CellStyle.VERTICAL_CENTER);
        	style20.setBorderRight(CellStyle.BORDER_THICK);
        	style20.setBorderLeft(CellStyle.BORDER_THIN);
        	style20.setBorderTop(CellStyle.BORDER_THIN);
        	style20.setBorderBottom(CellStyle.BORDER_THIN);
        	style20.setFont(font2);
        	// 타이틀 : 오른쪽, 아래쪽 굵은 선
        	CellStyle style21 = wb.createCellStyle();
        	style21.setAlignment(CellStyle.ALIGN_LEFT);
        	style21.setBorderRight(CellStyle.BORDER_THICK);
        	style21.setBorderLeft(CellStyle.BORDER_THIN);
        	style21.setBorderTop(CellStyle.BORDER_THIN);
        	style21.setBorderBottom(CellStyle.BORDER_THICK);
        	style21.setFont(font2);
        	// 타이틀 : 회색바탕 오른쪽, 위쪽 굵은 선
        	CellStyle style22 = wb.createCellStyle();
        	style22.setAlignment(CellStyle.ALIGN_CENTER);
        	style22.setFillForegroundColor(HSSFColor.GREY_25_PERCENT.index);
        	style22.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style22.setBorderRight(CellStyle.BORDER_THICK);
        	style22.setBorderLeft(CellStyle.BORDER_THIN);
        	style22.setBorderTop(CellStyle.BORDER_THICK);
        	style22.setBorderBottom(CellStyle.BORDER_THIN);
        	style22.setFont(font3);
        	// 타이틀 : 회색바탕 오른쪽 굵은 선
        	CellStyle style23 = wb.createCellStyle();
        	style23.setAlignment(CellStyle.ALIGN_CENTER);
        	style23.setFillForegroundColor(HSSFColor.GREY_25_PERCENT.index);
        	style23.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style23.setBorderRight(CellStyle.BORDER_THICK);
        	style23.setBorderLeft(CellStyle.BORDER_THIN);
        	style23.setBorderTop(CellStyle.BORDER_THIN);
        	style23.setBorderBottom(CellStyle.BORDER_THIN);
        	style23.setFont(font2);
        	// 타이틀 : 회색바탕 왼쪽, 윗쪽  굵은 선
        	CellStyle style24 = wb.createCellStyle();
        	style24.setAlignment(CellStyle.ALIGN_CENTER);
        	style24.setFillForegroundColor(HSSFColor.GREY_25_PERCENT.index);
        	style24.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style24.setBorderRight(CellStyle.BORDER_THIN);
        	style24.setBorderLeft(CellStyle.BORDER_THICK);
        	style24.setBorderTop(CellStyle.BORDER_THICK);
        	style24.setBorderBottom(CellStyle.BORDER_THIN);
        	style24.setFont(font3);
        	// 타이틀 : 회색바탕 왼쪽 굵은 선
        	CellStyle style25 = wb.createCellStyle();
        	style25.setAlignment(CellStyle.ALIGN_CENTER);
        	style25.setFillForegroundColor(HSSFColor.GREY_25_PERCENT.index);
        	style25.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style25.setBorderRight(CellStyle.BORDER_THIN);
        	style25.setBorderLeft(CellStyle.BORDER_THICK);
        	style25.setBorderTop(CellStyle.BORDER_THIN);
        	style25.setBorderBottom(CellStyle.BORDER_THIN);
        	style25.setFont(font2);

        	// 데이터값 : 흰색 바탕 오른쪽 굵은 선
        	CellStyle style26 = wb.createCellStyle();
        	style26.setDataFormat(format.getFormat("#,##0"));
        	style26.setAlignment(CellStyle.ALIGN_RIGHT);
        	style26.setBorderRight(CellStyle.BORDER_THICK);
        	style26.setBorderLeft(CellStyle.BORDER_THIN);
        	style26.setBorderTop(CellStyle.BORDER_THIN);
        	style26.setBorderBottom(CellStyle.BORDER_THIN);
        	style26.setFont(font2);
        	
        	//  데이터값 : 노란색 바탕 오른쪽 굵은 선
        	CellStyle style27 = wb.createCellStyle();
        	style27.setDataFormat(format.getFormat("#,##0"));
        	style27.setAlignment(CellStyle.ALIGN_RIGHT);
        	style27.setFillForegroundColor(HSSFColor.GOLD.index);
        	style27.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style27.setBorderRight(CellStyle.BORDER_THICK);
        	style27.setBorderLeft(CellStyle.BORDER_THIN);
        	style27.setBorderTop(CellStyle.BORDER_THIN);
        	style27.setBorderBottom(CellStyle.BORDER_THIN);
        	style27.setFont(font3);
        	
        	//  데이터값 : 파란색 바탕 오른쪽 굵은 선
        	CellStyle style28 = wb.createCellStyle();
        	style28.setDataFormat(format.getFormat("#,##0"));
        	style28.setAlignment(CellStyle.ALIGN_RIGHT);
        	HSSFFont font28 = wb.createFont();
        	font28.setColor(HSSFColor.WHITE.index);
        	font28.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
        	font28.setFontName("맑은 고딕");
        	style28.setFont(font8);
        	style28.setFillForegroundColor(HSSFColor.INDIGO.index);
        	style28.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style28.setBorderRight(CellStyle.BORDER_THIN);
        	style28.setBorderLeft(CellStyle.BORDER_THIN);
        	style28.setBorderTop(CellStyle.BORDER_THIN);
        	style28.setBorderBottom(CellStyle.BORDER_THIN);
        	
        	//  데이터값 : 빨간색 바탕 오른쪽 굵은 선
        	CellStyle style29 = wb.createCellStyle();
        	style29.setDataFormat(format.getFormat("#,##0"));
        	style29.setFillForegroundColor(HSSFColor.DARK_RED.index);
        	HSSFFont font29 = wb.createFont();
        	font29.setColor(HSSFColor.WHITE.index);
        	font29.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD); 
        	font29.setFontName("맑은 고딕");
        	style29.setFont(font29);
        	style29.setAlignment(CellStyle.ALIGN_RIGHT);
        	style29.setFillForegroundColor(HSSFColor.DARK_RED.index);
        	style29.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style29.setBorderRight(CellStyle.BORDER_THICK);
        	style29.setBorderLeft(CellStyle.BORDER_THIN);
        	style29.setBorderTop(CellStyle.BORDER_THICK);
        	style29.setBorderBottom(CellStyle.BORDER_THICK);
        	
        	// 오른쪽, 왼쪽 굵은 선 
        	CellStyle style30 = wb.createCellStyle();
        	style30.setBorderRight(CellStyle.BORDER_THICK);
        	style30.setBorderLeft(CellStyle.BORDER_THICK);
        	style30.setBorderTop(CellStyle.BORDER_NONE);
        	style30.setBorderBottom(CellStyle.BORDER_NONE);
        	style30.setFont(font3);
        	
        	// 왼쪽 굵은 선 
        	CellStyle style31 = wb.createCellStyle();
        	style31.setBorderRight(CellStyle.BORDER_NONE);
        	style31.setBorderLeft(CellStyle.BORDER_THICK);
        	style31.setBorderTop(CellStyle.BORDER_NONE);
        	style31.setBorderBottom(CellStyle.BORDER_NONE);
        	
        	// Note G - Total Dependency Rate 중간 구분선
        	CellStyle style32 = wb.createCellStyle();
        	style32.setDataFormat(format.getFormat("#,##0.0%"));
        	style32.setFillForegroundColor(HSSFColor.DARK_RED.index);
        	HSSFFont font32 = wb.createFont();
        	font32.setColor(HSSFColor.WHITE.index);
        	font32.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD); 
        	font32.setFontName("맑은 고딕");
        	style32.setFont(font32);
        	style32.setAlignment(CellStyle.ALIGN_RIGHT);
        	style32.setFillForegroundColor(HSSFColor.DARK_RED.index);
        	style32.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style32.setBorderRight(CellStyle.BORDER_THICK);
        	style32.setBorderLeft(CellStyle.BORDER_THIN);
        	style32.setBorderTop(CellStyle.BORDER_THICK);
        	style32.setBorderBottom(CellStyle.BORDER_THICK);
        	
        	// 오른쪽, 아래쪽 굵은 선 
        	CellStyle style33 = wb.createCellStyle();
        	style33.setAlignment(CellStyle.ALIGN_LEFT);
        	style33.setBorderRight(CellStyle.BORDER_THICK);
        	style33.setBorderLeft(CellStyle.BORDER_THIN);
        	style33.setBorderTop(CellStyle.BORDER_THIN);
        	style33.setBorderBottom(CellStyle.BORDER_THICK);
        	style33.setFont(font2);
        	
        	/* 신호등 스타일 */
        	// 노랑바탕 녹색 신호등
        	CellStyle style40 = wb.createCellStyle();
        	style40.setAlignment(CellStyle.ALIGN_CENTER);
        	style40.setFillForegroundColor(HSSFColor.GOLD.index);
        	style40.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style40.setBorderRight(CellStyle.BORDER_THIN);
        	style40.setBorderLeft(CellStyle.BORDER_THIN);
        	style40.setBorderTop(CellStyle.BORDER_THIN);
        	style40.setBorderBottom(CellStyle.BORDER_THIN);
        	Font font40 = wb.createFont();
        	font40.setFontName("맑은 고딕");
        	font40.setColor(HSSFColor.GREEN.index);
        	style40.setFont(font40);
        	// 노랑바탕 노란색 신호등
        	CellStyle style41 = wb.createCellStyle();
        	style41.setAlignment(CellStyle.ALIGN_CENTER);
        	style41.setFillForegroundColor(HSSFColor.GOLD.index);
        	style41.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style41.setBorderRight(CellStyle.BORDER_THIN);
        	style41.setBorderLeft(CellStyle.BORDER_THIN);
        	style41.setBorderTop(CellStyle.BORDER_THIN);
        	style41.setBorderBottom(CellStyle.BORDER_THIN);
        	Font font41 = wb.createFont();
        	font41.setFontName("맑은 고딕");
        	font41.setColor(HSSFColor.YELLOW.index);
        	style41.setFont(font41);
        	// 노랑바탕 빨간색 신호등
        	CellStyle style42 = wb.createCellStyle();
        	style42.setAlignment(CellStyle.ALIGN_CENTER);
        	style42.setFillForegroundColor(HSSFColor.GOLD.index);
        	style42.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style42.setBorderRight(CellStyle.BORDER_THIN);
        	style42.setBorderLeft(CellStyle.BORDER_THIN);
        	style42.setBorderTop(CellStyle.BORDER_THIN);
        	style42.setBorderBottom(CellStyle.BORDER_THIN);
        	Font font42 = wb.createFont();
        	font42.setFontName("맑은 고딕");
        	font42.setColor(HSSFColor.RED.index);
        	style42.setFont(font42);
        	// 흰바탕 녹색 신호등
        	CellStyle style43 = wb.createCellStyle();
        	style43.setAlignment(CellStyle.ALIGN_CENTER);
        	HSSFFont font43 = wb.createFont();
        	font43.setColor(HSSFColor.WHITE.index);
        	font43.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
        	font43.setFontName("맑은 고딕");
        	font43.setColor(HSSFColor.GREEN.index);
        	style43.setFont(font43);
        	style43.setFillForegroundColor(HSSFColor.INDIGO.index);
        	style43.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style43.setBorderRight(CellStyle.BORDER_THIN);
        	style43.setBorderLeft(CellStyle.BORDER_THIN);
        	style43.setBorderTop(CellStyle.BORDER_THIN);
        	style43.setBorderBottom(CellStyle.BORDER_THIN);
        	
        	CellStyle style44 = wb.createCellStyle();
        	style44.setAlignment(CellStyle.ALIGN_CENTER);
        	HSSFFont font44 = wb.createFont();
        	font44.setColor(HSSFColor.WHITE.index);
        	font44.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
        	font44.setFontName("맑은 고딕");
        	font44.setColor(HSSFColor.YELLOW.index);
        	style44.setFont(font44);
        	style44.setFillForegroundColor(HSSFColor.INDIGO.index);
        	style44.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style44.setBorderRight(CellStyle.BORDER_THIN);
        	style44.setBorderLeft(CellStyle.BORDER_THIN);
        	style44.setBorderTop(CellStyle.BORDER_THIN);
        	style44.setBorderBottom(CellStyle.BORDER_THIN);
        	
        	CellStyle style45 = wb.createCellStyle();
        	style45.setAlignment(CellStyle.ALIGN_CENTER);
        	HSSFFont font45 = wb.createFont();
        	font45.setColor(HSSFColor.WHITE.index);
        	font45.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
        	font45.setFontName("맑은 고딕");
        	font45.setColor(HSSFColor.RED.index);
        	style45.setFont(font45);
        	style45.setFillForegroundColor(HSSFColor.INDIGO.index);
        	style45.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style45.setBorderRight(CellStyle.BORDER_THIN);
        	style45.setBorderLeft(CellStyle.BORDER_THIN);
        	style45.setBorderTop(CellStyle.BORDER_THIN);
        	style45.setBorderBottom(CellStyle.BORDER_THIN);
        	
        	CellStyle style46 = wb.createCellStyle();
        	style46.setFillForegroundColor(HSSFColor.DARK_RED.index);
        	HSSFFont font46 = wb.createFont();
        	font46.setColor(HSSFColor.WHITE.index);
        	font46.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD); 
        	font46.setColor(HSSFColor.GREEN.index);
        	font46.setFontName("맑은 고딕");
        	style46.setFont(font46);
        	style46.setAlignment(CellStyle.ALIGN_CENTER);
        	style46.setFillForegroundColor(HSSFColor.DARK_RED.index);
        	style46.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style46.setBorderRight(CellStyle.BORDER_THIN);
        	style46.setBorderLeft(CellStyle.BORDER_THIN);
        	style46.setBorderTop(CellStyle.BORDER_THICK);
        	style46.setBorderBottom(CellStyle.BORDER_THICK);
        	
        	CellStyle style47 = wb.createCellStyle();
        	style47.setFillForegroundColor(HSSFColor.DARK_RED.index);
        	HSSFFont font47 = wb.createFont();
        	font47.setColor(HSSFColor.WHITE.index);
        	font47.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD); 
        	font47.setColor(HSSFColor.YELLOW.index);
        	font47.setFontName("맑은 고딕");
        	style47.setFont(font47);
        	style47.setAlignment(CellStyle.ALIGN_CENTER);
        	style47.setFillForegroundColor(HSSFColor.DARK_RED.index);
        	style47.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style47.setBorderRight(CellStyle.BORDER_THIN);
        	style47.setBorderLeft(CellStyle.BORDER_THIN);
        	style47.setBorderTop(CellStyle.BORDER_THICK);
        	style47.setBorderBottom(CellStyle.BORDER_THICK);
        	
        	CellStyle style48 = wb.createCellStyle();
        	style48.setFillForegroundColor(HSSFColor.DARK_RED.index);
        	HSSFFont font48 = wb.createFont();
        	font48.setColor(HSSFColor.WHITE.index);
        	font48.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD); 
        	font48.setFontName("맑은 고딕");
        	font48.setColor(HSSFColor.RED.index);
        	style48.setFont(font48);
        	style48.setAlignment(CellStyle.ALIGN_CENTER);
        	style48.setFillForegroundColor(HSSFColor.DARK_RED.index);
        	style48.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style48.setBorderRight(CellStyle.BORDER_THIN);
        	style48.setBorderLeft(CellStyle.BORDER_THIN);
        	style48.setBorderTop(CellStyle.BORDER_THICK);
        	style48.setBorderBottom(CellStyle.BORDER_THICK);

        	CellStyle style49 = wb.createCellStyle();
        	style49.setDataFormat(format.getFormat("#,##0.0%"));
        	style49.setAlignment(CellStyle.ALIGN_RIGHT);
        	style49.setBorderRight(CellStyle.BORDER_THIN);
        	style49.setBorderLeft(CellStyle.BORDER_THIN);
        	style49.setBorderTop(CellStyle.BORDER_THIN);
        	style49.setBorderBottom(CellStyle.BORDER_THIN);
        	style49.setFont(font2);
        	
        	CellStyle style50 = wb.createCellStyle();
        	HSSFFont font50 = wb.createFont();
        	font50.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD); 
        	font50.setColor(HSSFColor.GREEN.index);
        	font50.setFontName("맑은 고딕");
        	style50.setFont(font50);
        	style50.setAlignment(CellStyle.ALIGN_CENTER);
        	style50.setBorderRight(CellStyle.BORDER_THIN);
        	style50.setBorderLeft(CellStyle.BORDER_THIN);
        	style50.setBorderTop(CellStyle.BORDER_THIN);
        	style50.setBorderBottom(CellStyle.BORDER_THIN);
        	
        	CellStyle style51 = wb.createCellStyle();
        	HSSFFont font51 = wb.createFont();
        	font51.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD); 
        	font51.setColor(HSSFColor.YELLOW.index);
        	font51.setFontName("맑은 고딕");
        	style51.setFont(font51);
        	style51.setAlignment(CellStyle.ALIGN_CENTER);
        	style51.setBorderRight(CellStyle.BORDER_THIN);
        	style51.setBorderLeft(CellStyle.BORDER_THIN);
        	style51.setBorderTop(CellStyle.BORDER_THIN);
        	style51.setBorderBottom(CellStyle.BORDER_THIN);
        	
        	CellStyle style52 = wb.createCellStyle();
        	HSSFFont font52 = wb.createFont();
        	font52.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD); 
        	font52.setColor(HSSFColor.RED.index);
        	font52.setFontName("맑은 고딕");
        	style52.setFont(font52);
        	style52.setAlignment(CellStyle.ALIGN_CENTER);
        	style52.setBorderRight(CellStyle.BORDER_THIN);
        	style52.setBorderLeft(CellStyle.BORDER_THIN);
        	style52.setBorderTop(CellStyle.BORDER_THIN);
        	style52.setBorderBottom(CellStyle.BORDER_THIN);
        	
        	CellStyle style53 = wb.createCellStyle();
        	style53.setDataFormat(format.getFormat("#,##0.0%"));
        	HSSFFont font53 = wb.createFont();
        	font53.setColor(HSSFColor.WHITE.index);
        	font53.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD); 
        	font53.setFontName("맑은 고딕");
        	style53.setFont(font53);
        	style53.setFillForegroundColor(HSSFColor.WHITE.index);
        	style53.setAlignment(CellStyle.ALIGN_RIGHT);
        	style53.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	//style53.setBorderRight(CellStyle.BORDER_THIN);
        	//style53.setBorderLeft(CellStyle.BORDER_THIN);
        	style53.setBorderTop(CellStyle.BORDER_THICK);
        	style53.setBorderBottom(CellStyle.BORDER_THICK);

        	CellStyle style54 = wb.createCellStyle();
        	style54.setDataFormat(format.getFormat("#,##0.0%"));
        	HSSFFont font54 = wb.createFont();
        	font54.setColor(HSSFColor.WHITE.index);
        	font54.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD); 
        	font54.setFontName("맑은 고딕");
        	style54.setFont(font54);
        	style54.setFillForegroundColor(HSSFColor.WHITE.index);
        	style54.setAlignment(CellStyle.ALIGN_RIGHT);
        	style54.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style54.setBorderRight(CellStyle.BORDER_THICK);
        	//style54.setBorderLeft(CellStyle.BORDER_THIN);
        	style54.setBorderTop(CellStyle.BORDER_THICK);
        	style54.setBorderBottom(CellStyle.BORDER_THICK);
        	
        	// 흰색 바탕 오른쪽 굵은 선 
        	CellStyle style55 = wb.createCellStyle();
        	style55.setDataFormat(format.getFormat("#,##0.0%"));
        	style55.setAlignment(CellStyle.ALIGN_RIGHT);
        	style55.setBorderRight(CellStyle.BORDER_THICK);
        	style55.setBorderLeft(CellStyle.BORDER_THIN);
        	style55.setBorderTop(CellStyle.BORDER_THIN);
        	style55.setBorderBottom(CellStyle.BORDER_THIN);
        	style55.setFont(font2);
        
        	// 흰색 바탕 아래 굵은 선 
        	CellStyle style56 = wb.createCellStyle();
        	style56.setDataFormat(format.getFormat("#,##0.0%"));
        	style56.setAlignment(CellStyle.ALIGN_RIGHT);
        	style56.setBorderRight(CellStyle.BORDER_THIN);
        	style56.setBorderLeft(CellStyle.BORDER_THIN);
        	style56.setBorderTop(CellStyle.BORDER_THIN);
        	style56.setBorderBottom(CellStyle.BORDER_THICK);
        	style56.setFont(font2);
        	
        	// 흰색 바탕 아래, 오른쪽  굵은 선 
        	CellStyle style57 = wb.createCellStyle();
        	style57.setDataFormat(format.getFormat("#,##0.0%"));
        	style57.setAlignment(CellStyle.ALIGN_RIGHT);
        	style57.setBorderRight(CellStyle.BORDER_THICK);
        	style57.setBorderLeft(CellStyle.BORDER_THIN);
        	style57.setBorderTop(CellStyle.BORDER_THIN);
        	style57.setBorderBottom(CellStyle.BORDER_THICK);
        	style57.setFont(font2);
        	
        	// 맨 앞 타이틀 아래  굵은 선 
        	CellStyle style58 = wb.createCellStyle();
        	style58.setAlignment(CellStyle.ALIGN_CENTER);
        	style58.setVerticalAlignment(CellStyle.VERTICAL_CENTER);
        	style58.setBorderRight(CellStyle.BORDER_THIN);
        	style58.setBorderLeft(CellStyle.BORDER_THIN);
        	style58.setBorderTop(CellStyle.BORDER_THIN);
        	style58.setBorderBottom(CellStyle.BORDER_THICK);
        	style58.setFont(font2);
        	
        	// 전체 Total
        	CellStyle style59 = wb.createCellStyle();
        	style59.setAlignment(CellStyle.ALIGN_CENTER);
        	HSSFFont font59 = wb.createFont();
        	font59.setColor(HSSFColor.WHITE.index);
        	font59.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
        	font59.setFontName("맑은 고딕");
        	style59.setFont(font59);
        	style59.setFillForegroundColor(HSSFColor.INDIGO.index);
        	style59.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style59.setBorderRight(CellStyle.BORDER_THIN);
        	style59.setBorderLeft(CellStyle.BORDER_THIN);
        	style59.setBorderTop(CellStyle.BORDER_THICK);
        	style59.setBorderBottom(CellStyle.BORDER_THICK);
        	
        	CellStyle style60 = wb.createCellStyle();
        	style60.setDataFormat(format.getFormat("#,##0"));
        	style60.setAlignment(CellStyle.ALIGN_RIGHT);
        	HSSFFont font60 = wb.createFont();
        	font60.setColor(HSSFColor.WHITE.index);
        	font60.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
        	font60.setFontName("맑은 고딕");
        	style60.setFont(font60);
        	style60.setFillForegroundColor(HSSFColor.INDIGO.index);
        	style60.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style60.setBorderRight(CellStyle.BORDER_THIN);
        	style60.setBorderLeft(CellStyle.BORDER_THIN);
        	style60.setBorderTop(CellStyle.BORDER_THICK);
        	style60.setBorderBottom(CellStyle.BORDER_THICK);
        	
        	// 파란색 바탕 오른쪽 굵은 선 
        	CellStyle style61 = wb.createCellStyle();
        	style61.setDataFormat(format.getFormat("#,##0"));
        	style61.setAlignment(CellStyle.ALIGN_RIGHT);
        	HSSFFont font61 = wb.createFont();
        	font61.setColor(HSSFColor.WHITE.index);
        	font61.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
        	font61.setFontName("맑은 고딕");
        	style61.setFont(font61);
        	style61.setFillForegroundColor(HSSFColor.INDIGO.index);
        	style61.setFillPattern(CellStyle.SOLID_FOREGROUND);
        	style61.setBorderRight(CellStyle.BORDER_THIN);
        	style61.setBorderLeft(CellStyle.BORDER_THIN);
        	style61.setBorderTop(CellStyle.BORDER_THIN);
        	style61.setBorderBottom(CellStyle.BORDER_THIN);
        	
        	CellStyle style62 = wb.createCellStyle();
        	style62.setDataFormat(format.getFormat("#,##0"));
        	style62.setAlignment(CellStyle.ALIGN_RIGHT);
        	style62.setBorderRight(CellStyle.BORDER_THIN);
        	style62.setBorderLeft(CellStyle.BORDER_THIN);
        	style62.setBorderTop(CellStyle.BORDER_THIN);
        	style62.setBorderBottom(CellStyle.BORDER_THICK);
        	style62.setFont(font2);
        	
        	CellStyle style63 = wb.createCellStyle();
        	style63.setDataFormat(format.getFormat("#,##0"));
        	style63.setAlignment(CellStyle.ALIGN_RIGHT);
        	style63.setBorderRight(CellStyle.BORDER_THICK);
        	style63.setBorderLeft(CellStyle.BORDER_THIN);
        	style63.setBorderTop(CellStyle.BORDER_THIN);
        	style63.setBorderBottom(CellStyle.BORDER_THICK);
        	style63.setFont(font2);
        	
        	CellStyle style64 = wb.createCellStyle();
        	HSSFFont font64 = wb.createFont();
        	font64.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD); 
        	font64.setColor(HSSFColor.GREEN.index);
        	font64.setFontName("맑은 고딕");
        	style64.setFont(font64);
        	style64.setAlignment(CellStyle.ALIGN_CENTER);
        	style64.setBorderRight(CellStyle.BORDER_THIN);
        	style64.setBorderLeft(CellStyle.BORDER_THIN);
        	style64.setBorderTop(CellStyle.BORDER_THIN);
        	style64.setBorderBottom(CellStyle.BORDER_THICK);
        	
        	CellStyle style65 = wb.createCellStyle();
        	HSSFFont font65 = wb.createFont();
        	font65.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD); 
        	font65.setColor(HSSFColor.YELLOW.index);
        	font65.setFontName("맑은 고딕");
        	style65.setFont(font65);
        	style65.setAlignment(CellStyle.ALIGN_CENTER);
        	style65.setBorderRight(CellStyle.BORDER_THIN);
        	style65.setBorderLeft(CellStyle.BORDER_THIN);
        	style65.setBorderTop(CellStyle.BORDER_THIN);
        	style65.setBorderBottom(CellStyle.BORDER_THICK);
        	
        	CellStyle style66 = wb.createCellStyle();
        	HSSFFont font66 = wb.createFont();
        	font66.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD); 
        	font66.setColor(HSSFColor.RED.index);
        	font66.setFontName("맑은 고딕");
        	style66.setFont(font66);
        	style66.setAlignment(CellStyle.ALIGN_CENTER);
        	style66.setBorderRight(CellStyle.BORDER_THIN);
        	style66.setBorderLeft(CellStyle.BORDER_THIN);
        	style66.setBorderTop(CellStyle.BORDER_THIN);
        	style66.setBorderBottom(CellStyle.BORDER_THICK);
        	
        	CellStyle style67 = wb.createCellStyle();
        	style67.setDataFormat(format.getFormat("#,##0.0%"));
        	style67.setAlignment(CellStyle.ALIGN_RIGHT);
        	style67.setBorderRight(CellStyle.BORDER_THIN);
        	style67.setBorderLeft(CellStyle.BORDER_THIN);
        	style67.setBorderTop(CellStyle.BORDER_THIN);
        	style67.setBorderBottom(CellStyle.BORDER_THICK);
        	style67.setFont(font2);
        	
        	// 열 너비값 설정
        	sheet.setColumnWidth((short)0, (short)4000);
        	sheet.setColumnWidth((short)1, (short)3000);
        	sheet.setColumnWidth((short)2, (short)3300);
        	sheet.setColumnWidth((short)3, (short)4600);
        	sheet.setColumnWidth((short)4, (short)3000);
        	sheet.setColumnWidth((short)5, (short)3000);
        	sheet.setColumnWidth((short)6, (short)3000);
        	sheet.setColumnWidth((short)7, (short)3000);
        	sheet.setColumnWidth((short)8, (short)3000);
        	sheet.setColumnWidth((short)9, (short)3000);
        	sheet.setColumnWidth((short)10, (short)3000);
        	sheet.setColumnWidth((short)11, (short)3000);
        	sheet.setColumnWidth((short)12, (short)3000);
        	sheet.setColumnWidth((short)13, (short)3000);
        	sheet.setColumnWidth((short)14, (short)3000);
        	sheet.setColumnWidth((short)15, (short)3000);
        	sheet.setColumnWidth((short)16, (short)3000);
        	sheet.setColumnWidth((short)17, (short)3000);
        	sheet.setColumnWidth((short)18, (short)3000);
        	sheet.setColumnWidth((short)19, (short)3000);
        	sheet.setColumnWidth((short)20, (short)3000);
        	sheet.setColumnWidth((short)21, (short)3000);
        	sheet.setColumnWidth((short)22, (short)3000);
        	sheet.setColumnWidth((short)23, (short)3000);
        	sheet.setColumnWidth((short)24, (short)3000);
        	sheet.setColumnWidth((short)25, (short)3000);
        	sheet.setColumnWidth((short)26, (short)3000);
        	sheet.setColumnWidth((short)27, (short)3000);
        	sheet.setColumnWidth((short)28, (short)3000);
        	sheet.setColumnWidth((short)29, (short)3000);
        	sheet.setColumnWidth((short)30, (short)3000);
        	sheet.setColumnWidth((short)31, (short)3000);
        	sheet.setColumnWidth((short)32, (short)3000);
        	sheet.setColumnWidth((short)33, (short)3000);
        	sheet.setColumnWidth((short)34, (short)3000);
        	sheet.setColumnWidth((short)35, (short)3000);
        	sheet.setColumnWidth((short)36, (short)3000);
        	sheet.setColumnWidth((short)37, (short)3000);
        	sheet.setColumnWidth((short)38, (short)3000);
        	sheet.setColumnWidth((short)39, (short)3000);
        	sheet.setColumnWidth((short)40, (short)3000);
        	sheet.setColumnWidth((short)41, (short)3000);
        	sheet.setColumnWidth((short)42, (short)3000);
        	sheet.setColumnWidth((short)43, (short)3000);
        	sheet.setColumnWidth((short)44, (short)3000);
        	sheet.setColumnWidth((short)45, (short)3000);
        	sheet.setColumnWidth((short)46, (short)3000);
        	sheet.setColumnWidth((short)47, (short)3000);
        	sheet.setColumnWidth((short)48, (short)3000);
        	sheet.setColumnWidth((short)49, (short)3000);
        	sheet.setColumnWidth((short)50, (short)3000);
        	sheet.setColumnWidth((short)51, (short)3000);
        	sheet.setColumnWidth((short)52, (short)3000);
        	sheet.setColumnWidth((short)53, (short)3000);
        	sheet.setColumnWidth((short)54, (short)3000);
        	sheet.setColumnWidth((short)55, (short)3000);
        	sheet.setColumnWidth((short)56, (short)3000);
        	sheet.setColumnWidth((short)57, (short)3000);
        	sheet.setColumnWidth((short)58, (short)3000);
        	sheet.setColumnWidth((short)59, (short)3000);
        	sheet.setColumnWidth((short)60, (short)3000);
        	sheet.setColumnWidth((short)61, (short)3000);
        	sheet.setColumnWidth((short)62, (short)3000);
        	sheet.setColumnWidth((short)63, (short)3000);
        	sheet.setColumnWidth((short)64, (short)3000);
        	sheet.setColumnWidth((short)65, (short)3000);
        	sheet.setColumnWidth((short)66, (short)3000);
        	sheet.setColumnWidth((short)67, (short)3000);
        	sheet.setColumnWidth((short)68, (short)3000);
        	sheet.setColumnWidth((short)69, (short)3000);
        	sheet.setColumnWidth((short)70, (short)3000);
        	sheet.setColumnWidth((short)71, (short)3000);
        	sheet.setColumnWidth((short)72, (short)3000);
        	sheet.setColumnWidth((short)73, (short)3000);
        	sheet.setColumnWidth((short)74, (short)3000);
        	sheet.setColumnWidth((short)75, (short)3000);
        	sheet.setColumnWidth((short)77, (short)3000);
        	sheet.setColumnWidth((short)77, (short)3000);
        	sheet.setColumnWidth((short)78, (short)3000);
        	sheet.setColumnWidth((short)79, (short)3000);
        	sheet.setColumnWidth((short)80, (short)3000);
        	sheet.setColumnWidth((short)81, (short)3000);
        	sheet.setColumnWidth((short)82, (short)3000);
        	sheet.setColumnWidth((short)83, (short)3000);
        	sheet.setColumnWidth((short)84, (short)3000);
        	sheet.setColumnWidth((short)85, (short)3000);
        	sheet.setColumnWidth((short)88, (short)3000);
        	sheet.setColumnWidth((short)87, (short)3000);
        	sheet.setColumnWidth((short)88, (short)3000);
        	sheet.setColumnWidth((short)89, (short)3000);
        	sheet.setColumnWidth((short)90, (short)3000);
        	sheet.setColumnWidth((short)91, (short)3000);
        	sheet.setColumnWidth((short)92, (short)3000);
        	sheet.setColumnWidth((short)93, (short)3000);
        	sheet.setColumnWidth((short)94, (short)3000);
        	sheet.setColumnWidth((short)95, (short)3000);
        	
        	int rowNum = 3;
        	row_cal1 = rowNum;	// 계산식 그리드를 위한 row
        	
        	
        	/** Industry Depletion Forecast **/
			if (data.size() > 0 ){
				
				//----------------------------------------
	        	HSSFRow row = sheet.createRow(0);
	        	HSSFCell cell = row.createCell(0);
	        	cell.setCellValue(new HSSFRichTextString("Industry Depletion Forecast"));
	        	cell.setCellStyle(style1);
	        	//----------------------------------------
	        	row = sheet.createRow(1);
	        	
	        	row.createCell(actual).setCellValue(new HSSFRichTextString(Lfy_Param+" Actual"));
	        	row.createCell(forecast).setCellValue(new HSSFRichTextString(fy_Param+" Forecast"));
	        	row.createCell(outlook).setCellValue(new HSSFRichTextString(fy_Param+" Actual (Outlook)"));
	        	row.createCell(som).setCellValue(new HSSFRichTextString(fy_Param+" SOM"));
	        	setColStyle(row, style24, 0, 0);
	        	setColStyle(row, style22, 1, forecastEnd);
	        	setColStyle(row, style24, outlook, outlook);
	        	setColStyle(row, style22, outlook+1, outlookEnd);
	        	setColStyle(row, style24, som, som);
	        	setColStyle(row, style22, som+1, somEnd);
	        	//----------------------------------------
	        	row = sheet.createRow(2);
	        	
	        	if(periodChk_Param.equals("Y")){
	        		// forecast
	        		row.createCell(4).setCellValue(new HSSFRichTextString("P01"));
		        	row.createCell(5).setCellValue(new HSSFRichTextString("P02"));
		        	row.createCell(6).setCellValue(new HSSFRichTextString("P03"));
		        	row.createCell(7).setCellValue(new HSSFRichTextString("P04"));
		        	row.createCell(8).setCellValue(new HSSFRichTextString("P05"));
		        	row.createCell(9).setCellValue(new HSSFRichTextString("P06"));
		        	row.createCell(10).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(11).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(12).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(13).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(14).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(15).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(16).setCellValue(new HSSFRichTextString("Q1"));
		        	row.createCell(17).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(18).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(19).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(20).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(21).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(22).setCellValue(new HSSFRichTextString("YTD"));
		        	row.createCell(23).setCellValue(new HSSFRichTextString("P01"));
		        	row.createCell(24).setCellValue(new HSSFRichTextString("P02"));
		        	row.createCell(25).setCellValue(new HSSFRichTextString("P03"));
		        	row.createCell(26).setCellValue(new HSSFRichTextString("P04"));
		        	row.createCell(27).setCellValue(new HSSFRichTextString("P05"));
		        	row.createCell(28).setCellValue(new HSSFRichTextString("P06"));
		        	row.createCell(29).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(30).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(31).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(32).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(33).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(34).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(35).setCellValue(new HSSFRichTextString("Q1"));
		        	row.createCell(36).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(37).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(38).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(39).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(40).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(41).setCellValue(new HSSFRichTextString("YTD"));
		        	// outlook
		        	row.createCell(43).setCellValue(new HSSFRichTextString("P01"));
		        	row.createCell(44).setCellValue(new HSSFRichTextString("P02"));
		        	row.createCell(45).setCellValue(new HSSFRichTextString("P03"));
		        	row.createCell(46).setCellValue(new HSSFRichTextString("P04"));
		        	row.createCell(47).setCellValue(new HSSFRichTextString("P05"));
		        	row.createCell(48).setCellValue(new HSSFRichTextString("P06"));
		        	row.createCell(49).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(50).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(51).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(52).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(53).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(54).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(55).setCellValue(new HSSFRichTextString("Q1"));
		        	row.createCell(56).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(57).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(58).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(59).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(60).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(61).setCellValue(new HSSFRichTextString("YTD"));
		        	// F15 SOM
		        	row.createCell(63).setCellValue(new HSSFRichTextString("P01"));
		        	row.createCell(64).setCellValue(new HSSFRichTextString("P02"));
		        	row.createCell(65).setCellValue(new HSSFRichTextString("P03"));
		        	row.createCell(66).setCellValue(new HSSFRichTextString("P04"));
		        	row.createCell(67).setCellValue(new HSSFRichTextString("P05"));
		        	row.createCell(68).setCellValue(new HSSFRichTextString("P06"));
		        	row.createCell(69).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(70).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(71).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(72).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(73).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(74).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(75).setCellValue(new HSSFRichTextString("Q1"));
		        	row.createCell(76).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(77).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(78).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(79).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(80).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(81).setCellValue(new HSSFRichTextString("YTD"));
		        	// 신호등
		        	row.createCell(82).setCellValue(new HSSFRichTextString("Q1신호등"));
		        	row.createCell(83).setCellValue(new HSSFRichTextString("Q2신호등"));
		        	row.createCell(84).setCellValue(new HSSFRichTextString("Q3신호등"));
		        	row.createCell(85).setCellValue(new HSSFRichTextString("Q4신호등"));
		        	row.createCell(86).setCellValue(new HSSFRichTextString("H1신호등"));
		        	row.createCell(87).setCellValue(new HSSFRichTextString("H2신호등"));
		        	row.createCell(88).setCellValue(new HSSFRichTextString("YTD신호등"));
	        	}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
        			row.createCell(4).setCellValue(new HSSFRichTextString("P01"));
    	        	row.createCell(5).setCellValue(new HSSFRichTextString("P02"));
    	        	row.createCell(6).setCellValue(new HSSFRichTextString("P03"));
    	        	row.createCell(7).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(8).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(9).setCellValue(new HSSFRichTextString("YTD"));
    	        	row.createCell(10).setCellValue(new HSSFRichTextString("P01"));
    	        	row.createCell(11).setCellValue(new HSSFRichTextString("P02"));
    	        	row.createCell(12).setCellValue(new HSSFRichTextString("P03"));
    	        	row.createCell(13).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(14).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(15).setCellValue(new HSSFRichTextString("YTD"));
    	        	
    	        	row.createCell(17).setCellValue(new HSSFRichTextString("P01"));
    	        	row.createCell(18).setCellValue(new HSSFRichTextString("P02"));
    	        	row.createCell(19).setCellValue(new HSSFRichTextString("P03"));
    	        	row.createCell(20).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(21).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(22).setCellValue(new HSSFRichTextString("YTD"));
    	        	
    	        	row.createCell(24).setCellValue(new HSSFRichTextString("P01"));
    	        	row.createCell(25).setCellValue(new HSSFRichTextString("P02"));
    	        	row.createCell(26).setCellValue(new HSSFRichTextString("P03"));
    	        	row.createCell(27).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(28).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(29).setCellValue(new HSSFRichTextString("YTD"));
    	        	
		        	row.createCell(30).setCellValue(new HSSFRichTextString("Q1신호등"));
		        	row.createCell(31).setCellValue(new HSSFRichTextString("H1신호등"));
		        	row.createCell(32).setCellValue(new HSSFRichTextString("YTD신호등"));
        		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
        			row.createCell(4).setCellValue(new HSSFRichTextString("P04"));
    	        	row.createCell(5).setCellValue(new HSSFRichTextString("P05"));
    	        	row.createCell(6).setCellValue(new HSSFRichTextString("P06"));
    	        	row.createCell(7).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(8).setCellValue(new HSSFRichTextString("Q2"));
    	        	row.createCell(9).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(10).setCellValue(new HSSFRichTextString("YTD"));
    	        	row.createCell(11).setCellValue(new HSSFRichTextString("P04"));
    	        	row.createCell(12).setCellValue(new HSSFRichTextString("P05"));
    	        	row.createCell(13).setCellValue(new HSSFRichTextString("P06"));
    	        	row.createCell(14).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(15).setCellValue(new HSSFRichTextString("Q2"));
    	        	row.createCell(16).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(17).setCellValue(new HSSFRichTextString("YTD"));
    	        	
    	        	row.createCell(19).setCellValue(new HSSFRichTextString("P04"));
    	        	row.createCell(20).setCellValue(new HSSFRichTextString("P05"));
    	        	row.createCell(21).setCellValue(new HSSFRichTextString("P06"));
    	        	row.createCell(22).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(23).setCellValue(new HSSFRichTextString("Q2"));
    	        	row.createCell(24).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(25).setCellValue(new HSSFRichTextString("YTD"));
    	        	
    	        	row.createCell(27).setCellValue(new HSSFRichTextString("P04"));
    	        	row.createCell(28).setCellValue(new HSSFRichTextString("P05"));
    	        	row.createCell(29).setCellValue(new HSSFRichTextString("P06"));
    	        	row.createCell(30).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(31).setCellValue(new HSSFRichTextString("Q2"));
    	        	row.createCell(32).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(33).setCellValue(new HSSFRichTextString("YTD"));
    	        	
		        	row.createCell(34).setCellValue(new HSSFRichTextString("Q1신호등"));
		        	row.createCell(35).setCellValue(new HSSFRichTextString("Q2신호등"));
		        	row.createCell(36).setCellValue(new HSSFRichTextString("H1신호등"));
		        	row.createCell(37).setCellValue(new HSSFRichTextString("YTD신호등"));
	        	}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
	        		row.createCell(4).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(5).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(6).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(7).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(8).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(9).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(10).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(11).setCellValue(new HSSFRichTextString("YTD"));
		        	row.createCell(12).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(13).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(14).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(15).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(16).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(17).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(18).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(19).setCellValue(new HSSFRichTextString("YTD"));
		        	
		        	row.createCell(21).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(22).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(23).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(24).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(25).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(26).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(27).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(28).setCellValue(new HSSFRichTextString("YTD"));
		        	
		        	row.createCell(30).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(31).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(32).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(33).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(34).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(35).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(36).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(37).setCellValue(new HSSFRichTextString("YTD"));
		        	
		        	row.createCell(38).setCellValue(new HSSFRichTextString("Q2신호등"));
		        	row.createCell(39).setCellValue(new HSSFRichTextString("Q3신호등"));
		        	row.createCell(40).setCellValue(new HSSFRichTextString("H1신호등"));
		        	row.createCell(41).setCellValue(new HSSFRichTextString("H2신호등"));
		        	row.createCell(42).setCellValue(new HSSFRichTextString("YTD신호등"));
	        	}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
	        		row.createCell(4).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(5).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(6).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(7).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(8).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(9).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(10).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(11).setCellValue(new HSSFRichTextString("YTD"));
		        	row.createCell(12).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(13).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(14).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(15).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(16).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(17).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(18).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(19).setCellValue(new HSSFRichTextString("YTD"));
		        	
		        	row.createCell(21).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(22).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(23).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(24).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(25).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(26).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(27).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(28).setCellValue(new HSSFRichTextString("YTD"));
		        	
		        	row.createCell(30).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(31).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(32).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(33).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(34).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(35).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(36).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(37).setCellValue(new HSSFRichTextString("YTD"));
		        	
		        	row.createCell(38).setCellValue(new HSSFRichTextString("Q3신호등"));
		        	row.createCell(39).setCellValue(new HSSFRichTextString("Q4신호등"));
		        	row.createCell(40).setCellValue(new HSSFRichTextString("H1신호등"));
		        	row.createCell(41).setCellValue(new HSSFRichTextString("H2신호등"));
		        	row.createCell(42).setCellValue(new HSSFRichTextString("YTD신호등"));
	        	}
	        	
	        	setColStyle(row, style25, 0, 0);
	        	setColStyle(row, style23, 1, 3);
	        	setColStyle(row, style2, 4, forecast-2);
	        	setColStyle(row, style23, forecast-1, forecast-1);
	        	setColStyle(row, style2, forecast, forecastEnd-1);
	        	setColStyle(row, style23, forecastEnd, forecastEnd);
	        	setColStyle(row, style25, outlook, outlook);
	        	setColStyle(row, style2, outlook+1, outlookEnd-1);
	        	setColStyle(row, style23, outlookEnd, outlookEnd);
	        	setColStyle(row, style25, som, som);
	        	setColStyle(row, style2, som+1, (somEnd-1));
	        	setColStyle(row, style23, somEnd, somEnd);
	        	
	        	sheet.addMergedRegion(new Region(( int) 1 , ( short )0 , ( int) 2, (short )3 ));
	        	sheet.addMergedRegion(new Region(( int) 1 , ( short )4 , ( int) 1, (short )(forecast-1) ));
	        	sheet.addMergedRegion(new Region(( int) 1 , ( short )forecast , ( int) 1, (short )forecastEnd ));
	        	sheet.addMergedRegion(new Region(( int) 1 , ( short )outlook , ( int) 1, (short )outlookEnd ));
	        	sheet.addMergedRegion(new Region(( int) 1 , ( short )som , ( int) 1, (short )somEnd ));
	        	
	        	String col0 = "", col1 = "", col2="";
	        	int col0Num = 3, col1Num = 3, col2Num = 3;
	        	
	        	Map rowData = null;
	        	
	        	for (int i=0; i < data.size(); i++) {
	        		
	        		rowData = (Map)data.get(i);
	        	
	        		// channel을 '전체선택' 또는 'ON'으로 선택 시, Whisky ON 값 셋팅
	        		if(rowData.get("DATALV2_NM").toString().equals("ON")){
	        			
	        			row = sheet.createRow(rowNum++);
	        			
	        			if (col0.equals("")) {	// 첫 행
		        			col0 = rowData.get("DATALV1_NM").toString();
		        			col1 = rowData.get("DATALV2_NM").toString();
		        			col2 = rowData.get("DATALV3_NM").toString();
		        			row.createCell(0).setCellValue(new HSSFRichTextString(rowData.get("DATALV1_NM").toString()));
		        			row.createCell(1).setCellValue(new HSSFRichTextString(rowData.get("DATALV2_NM").toString()));
		    	        	row.createCell(2).setCellValue(new HSSFRichTextString(rowData.get("DATALV3_NM").toString()));
		    	        	row.createCell(3).setCellValue(new HSSFRichTextString(rowData.get("DATALV4_NM").toString()));
		    	        	setColStyle(row, style3, 0, 2);	 // Whisky ~ Local/Int`l까지 스타일
		    	        	setColStyle(row, style20, 3, 3); // 권역 스타일
		    	        	setRowValue(row, style4, rowData, "style4");
		    	        	
		    	        	setColStyle(row, style26, forecast-1, forecast-1);
		    	        	setColStyle(row, style30, outlook-1, outlook-1);
		    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
		        		}
		        		
		        		else if (rowData.get("DATALV1_NM").toString().equals(col0)) {
		        			
		        			if (col1.equals("")) {	// 두 번째 행
			        			col1 = rowData.get("DATALV2_NM").toString();
			        			col2 = rowData.get("DATALV3_NM").toString();
			        			row.createCell(0).setCellValue(new HSSFRichTextString(rowData.get("DATALV1_NM").toString()));
			        			row.createCell(1).setCellValue(new HSSFRichTextString(rowData.get("DATALV2_NM").toString()));
			    	        	row.createCell(2).setCellValue(new HSSFRichTextString(rowData.get("DATALV3_NM").toString()));
			    	        	row.createCell(3).setCellValue(new HSSFRichTextString(rowData.get("DATALV4_NM").toString()));
			    	        	setColStyle(row, style3, 0, 2);
			    	        	setRowValue(row, style4, rowData, "style4");
			    	        	setColStyle(row, style26, forecast-1, forecast-1);
			    	        	setColStyle(row, style30, outlook-1, outlook-1);
			    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			        		}
		        			
		        			else if (rowData.get("DATALV2_NM").toString().equals(col1)) {	// 세 번째 행 ~ Whisky ON 끝날 때 까지
		        				
		        				if (rowData.get("DATALV3_NM").toString().equals(col2)) {	// Local 시작부터 끝까지 & Int`l 시작부터 끝까지
		        					row.createCell(3).setCellValue(new HSSFRichTextString(rowData.get("DATALV4_NM").toString())); // 권역 셋팅
		        					setColStyle(row, style3, 0, 2);	 // Whisky ~ Local/Int`l까지 스타일
				    	        	setColStyle(row, style20, 3, 3); // 권역 스타일
				        			setRowValue(row, style4, rowData, "style4"); // P01~YMD 값 및 스타일 셋팅
				        			setColStyle(row, style26, forecast-1, forecast-1);
				        			setColStyle(row, style30, outlook-1, outlook-1);
				    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
				        			
				        			if(i == (data.size()-1)){ // 데이터 마지막에 소계 넣어주는 부분
				        				row = sheet.createRow(rowNum++);
				        				row.createCell(3).setCellValue(new HSSFRichTextString(col2+" "+col1.replace(" ", "")));
			        					setColStyle(row, style3, 0, 2);
			        					setColStyle(row, style5, 3, 3);
			        					setRowSumValue(row, style6, data, "DATALV3_NM", col2, "DATALV2_NM", col1, "style6"); // Local, Int`l 소계 값 및 스타일 셋팅 (P01~YMD)
			        					setColStyle(row, style27, forecast-1, forecast-1);
			        					setColStyle(row, style30, outlook-1, outlook-1);
					    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
					    	        	
			        					sheet.addMergedRegion(new Region(( int) col2Num , ( short )2 , ( int) rowNum-1, (short )2 )); // Local, Int`l 타이틀 행 합병
			        					
			        					// 앞 부분 Whisky ON 전체 합계
					        			row = sheet.createRow(rowNum++);
					        			
					        			setColStyle(row, style3, 0, 1); // Whisky ~ OFF 스타일
					        			row.createCell(2).setCellValue(new HSSFRichTextString(col0+" "+col1.replace(" ", "")+" Total")); // 합계 타이틀
					        			setColStyle(row, style7, 2, 3); // 소계 스타일
					        			
					        			setRowSumValue(row, style8, data, "DATALV1_NM", col0, "DATALV2_NM", col1, "style8"); // 합계 값 셋팅 (P01~YMD)
					        			setColStyle(row, style28, forecast-1, forecast-1);
					        			setColStyle(row, style30, outlook-1, outlook-1);
					    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
					    	        	
					        			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); // 합계 타이틀 합병
					        			sheet.addMergedRegion(new Region(( int) col1Num , ( short )1 , ( int) rowNum-1, (short )1 ));  // ON, OFF 타이틀 행 합병 
					        			
				        			}
				        			
		        				}
		        				else if (!rowData.get("DATALV3_NM").toString().equals(col2)) {	// Local에서 Int'l로 넘어가는 부분
			        				if (!col2.equals("LOCAL") && !col2.equals("INT`L")) {		// 만약 col2 값이 Local도 Int`l도 아닐 경우 해당 값 넣어주기
			        					col2 = rowData.get("DATALV3_NM").toString();
					        			row.createCell(2).setCellValue(new HSSFRichTextString(rowData.get("DATALV3_NM").toString()));	// local 부분
					    	        	row.createCell(3).setCellValue(new HSSFRichTextString(rowData.get("DATALV4_NM").toString()));	// 권역 부분
					    	        	setColStyle(row, style3, 0, 2);	 // Whisky ~ Local/Int`l까지 스타일
					    	        	setColStyle(row, style20, 3, 3); // 권역 스타일
					    	        	setRowValue(row, style4, rowData, "style4");	// P01~YMD 값 및 스타일 셋팅
					    	        	setColStyle(row, style26, forecast-1, forecast-1);
					    	        	setColStyle(row, style30, outlook-1, outlook-1);
					    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			        				}
			        				else {														// 만약 col2 값이 Local이거나 Int`l인 경우 이전까지의 값 소계 넣어주기
				        				if (col2.equals("LOCAL")) {								// col2 가 Local인 경우 소계 타이틀
				        					row.createCell(3).setCellValue(new HSSFRichTextString("Local ON"));
				        					setColStyle(row, style3, 0, 2);	// Whisky ~ Local 까지 스타일
				        					setColStyle(row, style5, 3, 3); // Local소계 스타일
				        					
				        				}
				        				else if (col2.equals("INT`L")) {						// col2 가 Int`l인 경우 소계 타이틀
				        					row.createCell(3).setCellValue(new HSSFRichTextString("Int`l ON"));
				        					setColStyle(row, style3, 0, 2); // Whisky ~ Int`l 까지 스타일
				        					setColStyle(row, style5, 3, 3); // Int`l소계 스타일
				        				}
				        				
				        				setRowSumValue(row, style6, data, "DATALV3_NM", col2, "DATALV2_NM", col1, "style6"); // Local, Int`l 소계 값 및 스타일 셋팅 (P01~YMD)
				        				setColStyle(row, style27, forecast-1, forecast-1);
				        				setColStyle(row, style30, outlook-1, outlook-1);
					    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
					    	        	
					        			sheet.addMergedRegion(new Region(( int) col2Num , ( short )2 , ( int) rowNum-1, (short )2 )); // Local, Int`l 값 같은 경우 행 합병
					    	        	
					        			col2 = rowData.get("DATALV3_NM").toString();	// col2 값에 현재 DATALV3_NM 값 담아주기
					        			col2Num = rowNum;								// col2Num에 현재 행 값 담아주기
					    	        	
					        			row = sheet.createRow(rowNum++);				// Local, Int`l 중 새로들어온 값 다음 줄에 셋팅해주기
					    	        	row.createCell(2).setCellValue(new HSSFRichTextString(rowData.get("DATALV3_NM").toString()));	// Local, Int`l 
					    	        	row.createCell(3).setCellValue(new HSSFRichTextString(rowData.get("DATALV4_NM").toString()));	// 권역
					    	        	setColStyle(row, style3, 0, 2);	 // Whisky ~ Local/Int`l까지 스타일
					    	        	setColStyle(row, style20, 3, 3); // 권역 스타일	
					    	        	setRowValue(row, style4, rowData, "style4");	// P01~YMD 값 및 스타일 셋팅
					    	        	setColStyle(row, style26, forecast-1, forecast-1);
					    	        	setColStyle(row, style30, outlook-1, outlook-1);
					    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			        				}
			        			}
		        			}
		        		}
	        		
	        		// 데이터에서 Whisky OFF값이 나오면
		        	}else{
		        		
		        		if(request.getParameter("channel").toString().equals("") || request.getParameter("channel").toString().equals("ON")){
			        		
		        			// 앞 부분 Whisky On의 소계 넣어준다.
		        			row = sheet.createRow(rowNum++);
			        		
	        				if (col2.equals("LOCAL")) {
	        					row.createCell(3).setCellValue(new HSSFRichTextString("Local ON"));
	        					setColStyle(row, style3, 0, 2);
	        					setColStyle(row, style5, 3, 3);
	        				}
	        				else if (col2.equals("INT`L")) {
	        					row.createCell(3).setCellValue(new HSSFRichTextString("Int`l ON"));
	        					setColStyle(row, style3, 0, 2);
	        					setColStyle(row, style5, 3, 3);
	        				}
	        				
	        				setRowSumValue(row, style6, data, "DATALV3_NM", col2, "DATALV2_NM", col1, "style6");	// Local, Int`l 소계 값 및 스타일 셋팅 (P01~YMD)		
	        				setColStyle(row, style27, forecast-1, forecast-1);
	        				setColStyle(row, style30, outlook-1, outlook-1);
		    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
		    	        	
		        			sheet.addMergedRegion(new Region(( int) col2Num , ( short )2 , ( int) rowNum-1, (short )2 )); // Local, Int`l 행 합병
		        			
		        			// 앞 부분 Whisky ON 전체 합계
		        			row = sheet.createRow(rowNum++);
		        			
		        			setColStyle(row, style3, 0, 1); // Whisky ~ OFF 스타일
		        			row.createCell(2).setCellValue(new HSSFRichTextString(col0+" "+col1.replace(" ", "")+" Total")); // 합계 타이틀
		        			setColStyle(row, style7, 2, 3); // 소계 스타일
		        			
		        			setRowSumValue(row, style8, data, "DATALV1_NM", col0, "DATALV2_NM", col1, "style8"); // 합계 값 셋팅 (P01~YMD)
		        			setColStyle(row, style28, forecast-1, forecast-1);
		        			setColStyle(row, style30, outlook-1, outlook-1);
		    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
		    	        	
		        			sheet.addMergedRegion(new Region(( int) col1Num , ( short )1 , ( int) rowNum-1, (short )1 )); // 앞에 ON 부분 합병
		        			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); // 합계 타이틀 합병
		        			
		        			col1Num = rowNum;
		        			col2Num = rowNum;
		        			
		        			col0 = rowData.get("DATALV1_NM").toString();
		        			col1 = rowData.get("DATALV2_NM").toString();
		        		}
		        		
	        			// Whisky Off 값을 넣어준다.
			        	row = sheet.createRow(rowNum++);
			        	
		    			row.createCell(0).setCellValue("Whisky");
			        	row.createCell(1).setCellValue("OFF");
			        	row.createCell(2).setCellValue("LOCAL");
			        	setColStyle(row, style3, 0, 1);	 // Whisky ~ Local/Int`l까지 스타일
	    	        	setColStyle(row, style20, 2, 3); // 권역 스타일
			        	sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); 
			        	
			        	setRowSumValue(row, style4, data, "DATALV3_NM", "LOCAL", "DATALV2_NM", "OFF", "style4"); // LOCAL OFF 값
			        	setColStyle(row, style26, forecast-1, forecast-1);
			        	setColStyle(row, style30, outlook-1, outlook-1);
	    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			        	
			        	row = sheet.createRow(rowNum++);
			        	
		    			row.createCell(0).setCellValue("Whisky");
			        	row.createCell(1).setCellValue("OFF");
			        	row.createCell(2).setCellValue("Int`l");
			        	setColStyle(row, style3, 0, 1);	 // Whisky ~ Local/Int`l까지 스타일
	    	        	setColStyle(row, style20, 2, 3); // 권역 스타일
			        	sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); 
			        	
			        	setRowSumValue(row, style4, data, "DATALV3_NM", "INT`L", "DATALV2_NM", "OFF", "style4"); // Int`l OFF 값
			        	setColStyle(row, style26, forecast-1, forecast-1);
			        	setColStyle(row, style30, outlook-1, outlook-1);
	    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			        	
	        			col0 = rowData.get("DATALV1_NM").toString();
	        			col1 = rowData.get("DATALV2_NM").toString();
	        			
	        			row = sheet.createRow(rowNum++);
			        	
		    			row.createCell(0).setCellValue("Whisky");
			        	row.createCell(1).setCellValue("OFF");
			        	row.createCell(2).setCellValue("Military");
			        	setColStyle(row, style3, 0, 1);	 // Whisky ~ Local/Int`l까지 스타일
	    	        	setColStyle(row, style20, 2, 3); // 권역 스타일
			        	sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); 
			        	
			        	setRowSumValue(row, style4, data, "DATALV3_NM", "MILITARY", "DATALV2_NM", "OFF", "style4");  // Military OFF 값
			        	setColStyle(row, style26, forecast-1, forecast-1);
			        	setColStyle(row, style30, outlook-1, outlook-1);
	    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    	        	
	        			row = sheet.createRow(rowNum++);
	            		
	        			//  Whisky OFF 전체 합계
	        			setColStyle(row, style3, 0, 1); // Whisky ~ OFF 스타일
	        			row.createCell(2).setCellValue(new HSSFRichTextString(col0+" "+col1.replace(" ", "")+" Total")); // 합계 타이틀
	        			setColStyle(row, style7, 2, 3); // 합계 스타일
	        			setRowSumValue(row, style8, data, "DATALV1_NM", col0, "DATALV2_NM", col1, "style8"); // Whisky OFF Total 값
	        			setColStyle(row, style28, forecast-1, forecast-1);
	        			setColStyle(row, style30, outlook-1, outlook-1);
	    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    	        	
	        			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); // 합계 타이틀 합병
	        			
	        			row = sheet.createRow(rowNum++);
	            		
	        			// Whisky OFF Total (excl Military) 합계
	        			setColStyle(row, style3, 0, 1); // Whisky ~ OFF 스타일
	        			row.createCell(2).setCellValue("Whisky OFF Total (excl Military)"); // 소계 타이틀
	        			setColStyle(row, style7, 2, 3); // 소계 스타일
	        			setRowSumValue(row, style8, data, "", "", "DATALV2_NM","OFF", "style8"); // Whisky OFF Total (excl Military) 값
	        			setColStyle(row, style28, forecast-1, forecast-1);
	        			setColStyle(row, style30, outlook-1, outlook-1);
	    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    	        	
	        			sheet.addMergedRegion(new Region(( int) col1Num , ( short )1 , ( int) rowNum-1, (short )1 )); // 앞에  OFF 부분 합병
	        			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); // 소계 타이틀 합병
			        	
	        			break;
	        			
		        	}
	        	}
	        	
	        	// 앞에 Whisky 타이틀 병합
	        	sheet.addMergedRegion(new Region(( int) col0Num, ( short )0 , ( int) rowNum-1, (short )0 )); 
	        	
    			// 전체 Total 합계
	        	row = sheet.createRow(rowNum);
	        	row.createCell(0).setCellValue(new HSSFRichTextString("Total"));
	        	setColStyle(row, style9, 0, 3);	 // Whisky ~ 권역까지 스타일
    			setRowSumValue(row, style10, data, "DATALV1_NM", "Whisky", "", "", "style10");
    			setColStyle(row, style29, forecast-1, forecast-1);
    			setColStyle(row, style30, outlook-1, outlook-1);
	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
    			sheet.addMergedRegion(new Region(( int) rowNum , ( short )0 , ( int) rowNum, (short )3 ));
    			
			}
			 
			
			/** DK Depletion Forecast **/
			if (data2.size() > 0 ){
				
				//----------------------------------------
				rowNum = rowNum+3;
				HSSFRow row = sheet.createRow(rowNum);
	        	HSSFCell cell = row.createCell(0);
	        	cell.setCellValue(new HSSFRichTextString("DK Depletion Forecast"));
	        	cell.setCellStyle(style1);
	        	//----------------------------------------
	        	row = sheet.createRow(rowNum+1);
	        	row.createCell(actual).setCellValue(new HSSFRichTextString(Lfy_Param+" Actual"));
	        	row.createCell(forecast).setCellValue(new HSSFRichTextString(fy_Param+" Forecast"));
	        	row.createCell(outlook).setCellValue(new HSSFRichTextString("Growth Rate% vs. "+Lfy_Param));
	        	setColStyle(row, style24, 0, 0);
	        	setColStyle(row, style22, 1, forecastEnd);
	        	setColStyle(row, style24, outlook, outlook);
	        	setColStyle(row, style22, outlook+1, (outlookEnd+signal));
	        	//----------------------------------------
	        	row = sheet.createRow(rowNum+2);
	        	
	        	if(periodChk_Param.equals("Y")){
	        		row.createCell(4).setCellValue(new HSSFRichTextString("P01"));
		        	row.createCell(5).setCellValue(new HSSFRichTextString("P02"));
		        	row.createCell(6).setCellValue(new HSSFRichTextString("P03"));
		        	row.createCell(7).setCellValue(new HSSFRichTextString("P04"));
		        	row.createCell(8).setCellValue(new HSSFRichTextString("P05"));
		        	row.createCell(9).setCellValue(new HSSFRichTextString("P06"));
		        	row.createCell(10).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(11).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(12).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(13).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(14).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(15).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(16).setCellValue(new HSSFRichTextString("Q1"));
		        	row.createCell(17).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(18).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(19).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(20).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(21).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(22).setCellValue(new HSSFRichTextString("YTD"));
		        	row.createCell(23).setCellValue(new HSSFRichTextString("P01"));
		        	row.createCell(24).setCellValue(new HSSFRichTextString("P02"));
		        	row.createCell(25).setCellValue(new HSSFRichTextString("P03"));
		        	row.createCell(26).setCellValue(new HSSFRichTextString("P04"));
		        	row.createCell(27).setCellValue(new HSSFRichTextString("P05"));
		        	row.createCell(28).setCellValue(new HSSFRichTextString("P06"));
		        	row.createCell(29).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(30).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(31).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(32).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(33).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(34).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(35).setCellValue(new HSSFRichTextString("Q1"));
		        	row.createCell(36).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(37).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(38).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(39).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(40).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(41).setCellValue(new HSSFRichTextString("YTD"));

		        	row.createCell(43).setCellValue(new HSSFRichTextString("P01"));
		        	row.createCell(44).setCellValue(new HSSFRichTextString("P02"));
		        	row.createCell(45).setCellValue(new HSSFRichTextString("P03"));
		        	row.createCell(46).setCellValue(new HSSFRichTextString("P04"));
		        	row.createCell(47).setCellValue(new HSSFRichTextString("P05"));
		        	row.createCell(48).setCellValue(new HSSFRichTextString("P06"));
		        	row.createCell(49).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(50).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(51).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(52).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(53).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(54).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(55).setCellValue(new HSSFRichTextString("Q1"));
		        	row.createCell(56).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(57).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(58).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(59).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(60).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(61).setCellValue(new HSSFRichTextString("YTD"));
		        	row.createCell(62).setCellValue(new HSSFRichTextString("Q1신호등"));
		        	row.createCell(63).setCellValue(new HSSFRichTextString("Q2신호등"));
		        	row.createCell(64).setCellValue(new HSSFRichTextString("Q3신호등"));
		        	row.createCell(65).setCellValue(new HSSFRichTextString("Q4신호등"));
		        	row.createCell(66).setCellValue(new HSSFRichTextString("H1신호등"));
		        	row.createCell(67).setCellValue(new HSSFRichTextString("H2신호등"));
		        	row.createCell(68).setCellValue(new HSSFRichTextString("YTD신호등"));
		        	
	        	}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
        			row.createCell(4).setCellValue(new HSSFRichTextString("P01"));
    	        	row.createCell(5).setCellValue(new HSSFRichTextString("P02"));
    	        	row.createCell(6).setCellValue(new HSSFRichTextString("P03"));
    	        	row.createCell(7).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(8).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(9).setCellValue(new HSSFRichTextString("YTD"));
    	        	row.createCell(10).setCellValue(new HSSFRichTextString("P01"));
    	        	row.createCell(11).setCellValue(new HSSFRichTextString("P02"));
    	        	row.createCell(12).setCellValue(new HSSFRichTextString("P03"));
    	        	row.createCell(13).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(14).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(15).setCellValue(new HSSFRichTextString("YTD"));
    	        	
    	        	row.createCell(17).setCellValue(new HSSFRichTextString("P01"));
    	        	row.createCell(18).setCellValue(new HSSFRichTextString("P02"));
    	        	row.createCell(19).setCellValue(new HSSFRichTextString("P03"));
    	        	row.createCell(20).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(21).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(22).setCellValue(new HSSFRichTextString("YTD"));
    	        	row.createCell(23).setCellValue(new HSSFRichTextString("Q1신호등"));
		        	row.createCell(24).setCellValue(new HSSFRichTextString("H1신호등"));
		        	row.createCell(25).setCellValue(new HSSFRichTextString("YTD신호등"));
		        	
        		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
        			row.createCell(4).setCellValue(new HSSFRichTextString("P04"));
    	        	row.createCell(5).setCellValue(new HSSFRichTextString("P05"));
    	        	row.createCell(6).setCellValue(new HSSFRichTextString("P06"));
    	        	row.createCell(7).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(8).setCellValue(new HSSFRichTextString("Q2"));
    	        	row.createCell(9).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(10).setCellValue(new HSSFRichTextString("YTD"));
    	        	row.createCell(11).setCellValue(new HSSFRichTextString("P04"));
    	        	row.createCell(12).setCellValue(new HSSFRichTextString("P05"));
    	        	row.createCell(13).setCellValue(new HSSFRichTextString("P06"));
    	        	row.createCell(14).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(15).setCellValue(new HSSFRichTextString("Q2"));
    	        	row.createCell(16).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(17).setCellValue(new HSSFRichTextString("YTD"));
    	        	
    	        	row.createCell(19).setCellValue(new HSSFRichTextString("P04"));
    	        	row.createCell(20).setCellValue(new HSSFRichTextString("P05"));
    	        	row.createCell(21).setCellValue(new HSSFRichTextString("P06"));
    	        	row.createCell(22).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(23).setCellValue(new HSSFRichTextString("Q2"));
    	        	row.createCell(24).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(25).setCellValue(new HSSFRichTextString("YTD"));
		        	row.createCell(26).setCellValue(new HSSFRichTextString("Q1신호등"));
		        	row.createCell(27).setCellValue(new HSSFRichTextString("Q2신호등"));
		        	row.createCell(28).setCellValue(new HSSFRichTextString("H1신호등"));
		        	row.createCell(29).setCellValue(new HSSFRichTextString("YTD신호등"));
    	        	
	        	}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
	        		row.createCell(4).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(5).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(6).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(7).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(8).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(9).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(10).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(11).setCellValue(new HSSFRichTextString("YTD"));
		        	row.createCell(12).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(13).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(14).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(15).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(16).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(17).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(18).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(19).setCellValue(new HSSFRichTextString("YTD"));
		        	
		        	row.createCell(21).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(22).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(23).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(24).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(25).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(26).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(27).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(28).setCellValue(new HSSFRichTextString("YTD"));
		        	row.createCell(29).setCellValue(new HSSFRichTextString("Q2신호등"));
		        	row.createCell(30).setCellValue(new HSSFRichTextString("Q3신호등"));
		        	row.createCell(31).setCellValue(new HSSFRichTextString("H1신호등"));
		        	row.createCell(32).setCellValue(new HSSFRichTextString("H2신호등"));
		        	row.createCell(33).setCellValue(new HSSFRichTextString("YTD신호등"));
		        	
	        	}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
	        		row.createCell(4).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(5).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(6).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(7).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(8).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(9).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(10).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(11).setCellValue(new HSSFRichTextString("YTD"));
		        	row.createCell(12).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(13).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(14).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(15).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(16).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(17).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(18).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(19).setCellValue(new HSSFRichTextString("YTD"));
		        	
		        	row.createCell(21).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(22).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(23).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(24).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(25).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(26).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(27).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(28).setCellValue(new HSSFRichTextString("YTD"));
		        	row.createCell(29).setCellValue(new HSSFRichTextString("Q3신호등"));
		        	row.createCell(30).setCellValue(new HSSFRichTextString("Q4신호등"));
		        	row.createCell(31).setCellValue(new HSSFRichTextString("H1신호등"));
		        	row.createCell(32).setCellValue(new HSSFRichTextString("H2신호등"));
		        	row.createCell(33).setCellValue(new HSSFRichTextString("YTD신호등"));
		        	
	        	}
	        	
	        	setColStyle(row, style25, 0, 0);
	        	setColStyle(row, style23, 1, 3);
	        	setColStyle(row, style2, 4, forecast-2);
	        	setColStyle(row, style23, forecast-1, forecast-1);
	        	setColStyle(row, style2, forecast, forecastEnd-1);
	        	setColStyle(row, style23, forecastEnd, forecastEnd);
	        	setColStyle(row, style25, outlook, outlook);
	        	setColStyle(row, style2, outlook+1, (outlookEnd+signal)-1);
	        	setColStyle(row, style23, (outlookEnd+signal), (outlookEnd+signal));
	        	
	        	sheet.addMergedRegion(new Region(( int) rowNum+1 , ( short )0 , ( int) rowNum+2, (short )3 ));
	        	sheet.addMergedRegion(new Region(( int) rowNum+1 , ( short )4 , ( int) rowNum+1, (short )(forecast-1) ));
	        	sheet.addMergedRegion(new Region(( int) rowNum+1 , ( short )forecast , ( int) rowNum+1, (short )forecastEnd ));
	        	sheet.addMergedRegion(new Region(( int) rowNum+1 , ( short )outlook , ( int) rowNum+1, (short )(outlookEnd+signal) ));
	        	
	        	row_cal2 = rowNum+3;
	        	rowNum = rowNum+3;
	        	
	        	String col0 = "", col1 = "", col2 = "", col3 = "";
	        	int col0Num = rowNum, col1Num = rowNum, col2Num = rowNum;
	        	
	        	Map rowData = null;
	        	
	        	for (int i=0; i < data2.size(); i++) {
	        		
	        		rowData = (Map)data2.get(i);
	        	
	        		if(rowData.get("DATALV2_NM").toString().equals("ON")){
	        			
	        			row = sheet.createRow(rowNum++);
	        			
	        			if (col0.equals("")) {	// 첫 행
		        			col0 = rowData.get("DATALV1_NM").toString();
		        			col1 = rowData.get("DATALV2_NM").toString();
		        			col2 = rowData.get("DATALV3_NM").toString();
		        			row.createCell(0).setCellValue(new HSSFRichTextString(rowData.get("DATALV1_NM").toString()));
		        			row.createCell(1).setCellValue(new HSSFRichTextString(rowData.get("DATALV2_NM").toString()));
		    	        	row.createCell(2).setCellValue(new HSSFRichTextString(rowData.get("DATALV3_NM").toString()));
		    	        	row.createCell(3).setCellValue(new HSSFRichTextString(rowData.get("DATALV4_NM").toString()));
		    	        	setColStyle(row, style3, 0, 2);	 // Whisky ~ Local/Int`l까지 스타일
		    	        	setColStyle(row, style20, 3, 3); // 권역 스타일
		    	        	setRowValue2(row, style4, rowData, "style4");	
		    	        	setColStyle(row, style26, forecast-1, forecast-1);
		        			setColStyle(row, style30, outlook-1, outlook-1);
		    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
		        		}
		        		
		        		else if (rowData.get("DATALV1_NM").toString().equals(col0)) {
		        			
		        			if (col1.equals("")) {	// 두 번째 행
			        			col1 = rowData.get("DATALV2_NM").toString();
			        			col2 = rowData.get("DATALV3_NM").toString();
			        			row.createCell(0).setCellValue(new HSSFRichTextString(rowData.get("DATALV1_NM").toString()));
			        			row.createCell(1).setCellValue(new HSSFRichTextString(rowData.get("DATALV2_NM").toString()));
			    	        	row.createCell(2).setCellValue(new HSSFRichTextString(rowData.get("DATALV3_NM").toString()));
			    	        	row.createCell(3).setCellValue(new HSSFRichTextString(rowData.get("DATALV4_NM").toString()));
			    	        	setColStyle(row, style3, 0, 2);
			    	        	setRowValue2(row, style4, rowData, "style4");
			    	        	setColStyle(row, style26, forecast-1, forecast-1);
			    	        	setColStyle(row, style30, outlook-1, outlook-1);
			    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			        		}
		        			
		        			else if (rowData.get("DATALV2_NM").toString().equals(col1)) {	// 세 번째 행 ~ Whisky ON 끝날 때 까지
		        				
		        				// Whisky On Local 부분 ( Local 소계, Whisky On 합계 제외 부분 )
		        				if (rowData.get("DATALV3_NM").toString().equals(col2)) {	// Local 시작부터 끝까지 & Int`l 시작부터 끝까지
		        					row.createCell(3).setCellValue(new HSSFRichTextString(rowData.get("DATALV4_NM").toString())); // 권역 셋팅
		        					setColStyle(row, style3, 0, 2);	 // Whisky ~ Local/Int`l까지 스타일
				    	        	setColStyle(row, style20, 3, 3); // 권역 스타일
				        			setRowValue2(row, style4, rowData, "style4"); // P01~YMD 값 및 스타일 셋팅
				        			setColStyle(row, style26, forecast-1, forecast-1);
				        			setColStyle(row, style30, outlook-1, outlook-1);
				    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
				        			
				    	        	if(i == (data.size()-1)){ // 데이터 마지막에 소계 넣어주는 부분
				        				row = sheet.createRow(rowNum++);
				        				row.createCell(3).setCellValue(new HSSFRichTextString(col2+" "+col1.replace(" ", "")));
			        					setColStyle(row, style3, 0, 2);
			        					setColStyle(row, style5, 3, 3);
			        					setRowSumValue2(row, style6, data2, "DATALV3_NM", col2, "DATALV2_NM", col1, "style6"); // Local, Int`l 소계 값 및 스타일 셋팅 (P01~YMD)
			        					setColStyle(row, style27, forecast-1, forecast-1);
			        					setColStyle(row, style30, outlook-1, outlook-1);
					    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
					    	        	
			        					sheet.addMergedRegion(new Region(( int) col2Num , ( short )2 , ( int) rowNum-1, (short )2 )); // Local, Int`l 타이틀 행 합병
			        					
			        					// 앞 부분 Whisky ON 전체 합계
					        			row = sheet.createRow(rowNum++);
					        			
					        			setColStyle(row, style3, 0, 1); // Whisky ~ OFF 스타일
					        			row.createCell(2).setCellValue(new HSSFRichTextString(col0+" "+col1.replace(" ", "")+" Total")); // 합계 타이틀
					        			setColStyle(row, style7, 2, 3); // 소계 스타일
					        			
					        			setRowSumValue2(row, style8, data2, "DATALV1_NM", col0, "DATALV2_NM", col1, "style8"); // 합계 값 셋팅 (P01~YMD)
					        			setColStyle(row, style28, forecast-1, forecast-1);
					        			setColStyle(row, style30, outlook-1, outlook-1);
					    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
					    	        	
					        			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); // 합계 타이틀 합병
					        			sheet.addMergedRegion(new Region(( int) col1Num , ( short )1 , ( int) rowNum-1, (short )1 ));  // ON, OFF 타이틀 행 합병
					        			
				        			}
				        			
		        				}
		        				else if (!rowData.get("DATALV3_NM").toString().equals(col2)) {	// Local에서 Int'l로 넘어가는 부분
			        				if (!col2.equals("LOCAL") && !col2.equals("INT`L")) {		// 만약 col2 값이 Local도 Int`l도 아닐 경우 해당 값 넣어주기
			        					col2 = rowData.get("DATALV3_NM").toString();
					        			row.createCell(2).setCellValue(new HSSFRichTextString(rowData.get("DATALV3_NM").toString()));	// local 부분
					    	        	row.createCell(3).setCellValue(new HSSFRichTextString(rowData.get("DATALV4_NM").toString()));	// 권역 부분
					    	        	setColStyle(row, style3, 0, 2);	 // Whisky ~ Local/Int`l까지 스타일
					    	        	setColStyle(row, style20, 3, 3); // 권역 스타일
					    	        	setRowValue2(row, style4, rowData, "style4");	// P01~YMD 값 및 스타일 셋팅
					    	        	setColStyle(row, style26, forecast-1, forecast-1);
					    	        	setColStyle(row, style30, outlook-1, outlook-1);
					    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			        				}
			        				else {														// 만약 col2 값이 Local이거나 Int`l인 경우 이전까지의 값 소계 넣어주기
				        				if (col2.equals("LOCAL")) {								// col2 가 Local인 경우 소계 타이틀
				        					row.createCell(3).setCellValue(new HSSFRichTextString("Local ON"));
				        					setColStyle(row, style3, 0, 2);	// Whisky ~ Local 까지 스타일
				        					setColStyle(row, style5, 3, 3); // Local소계 스타일
				        					
				        				}
				        				else if (col2.equals("INT`L")) {						// col2 가 Int`l인 경우 소계 타이틀
				        					row.createCell(3).setCellValue(new HSSFRichTextString("Int`l ON"));
				        					setColStyle(row, style3, 0, 2); // Whisky ~ Int`l 까지 스타일
				        					setColStyle(row, style5, 3, 3); // Int`l소계 스타일
				        				}
				        				
				        				setRowSumValue2(row, style6, data2, "DATALV3_NM", col2, "DATALV2_NM", col1, "style6"); // Local, Int`l 소계 값 및 스타일 셋팅 (P01~YMD)
				        				setColStyle(row, style27, forecast-1, forecast-1);
				        				setColStyle(row, style30, outlook-1, outlook-1);
					    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
					        			
					        			sheet.addMergedRegion(new Region(( int) col2Num , ( short )2 , ( int) rowNum-1, (short )2 )); // Local, Int`l 값 같은 경우 행 합병
					    	        	
					        			col2 = rowData.get("DATALV3_NM").toString();	// col2 값에 현재 DATALV3_NM 값 담아주기
					        			col2Num = rowNum;								// col2Num에 현재 행 값 담아주기
					    	        	
					        			row = sheet.createRow(rowNum++);				// Local, Int`l 중 새로들어온 값 다음 줄에 셋팅해주기
					    	        	row.createCell(2).setCellValue(new HSSFRichTextString(rowData.get("DATALV3_NM").toString()));	// Local, Int`l 
					    	        	row.createCell(3).setCellValue(new HSSFRichTextString(rowData.get("DATALV4_NM").toString()));	// 권역
					    	        	setColStyle(row, style3, 0, 2);	 // Whisky ~ Local/Int`l까지 스타일
					    	        	setColStyle(row, style20, 3, 3); // 권역 스타일
					    	        	setRowValue2(row, style4, rowData, "style4");	// P01~YMD 값 및 스타일 셋팅
					    	        	setColStyle(row, style26, forecast-1, forecast-1);
					    	        	setColStyle(row, style30, outlook-1, outlook-1);
					    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
					    	        	
			        				}
			        			}
		        			}
		        		}
	        		
	        		// 데이터에서 Whisky OFF값이 나오면
		        	}else if(rowData.get("DATALV2_NM").toString().equals("OFF")){
		        		
		        		if(request.getParameter("channel").toString().equals("") || request.getParameter("channel").toString().equals("ON")){
			        		
		        			// 앞 부분 Whisky On의 소계 넣어준다.
		        			row = sheet.createRow(rowNum++);
			        		
	        				if (col2.equals("LOCAL")) {
	        					row.createCell(3).setCellValue(new HSSFRichTextString("Local ON"));
	        					setColStyle(row, style3, 0, 2);
	        					setColStyle(row, style5, 3, 3);
	        				}
	        				else if (col2.equals("INT`L")) {
	        					row.createCell(3).setCellValue(new HSSFRichTextString("Int`l ON"));
	        					setColStyle(row, style3, 0, 2);
	        					setColStyle(row, style5, 3, 3);
	        				}
	        				
	        				setRowSumValue2(row, style6, data2, "DATALV3_NM", col2, "DATALV2_NM", col1, "style6");	// Local, Int`l 소계 값 및 스타일 셋팅 (P01~YMD)		
	        				setColStyle(row, style27, forecast-1, forecast-1);
	        				setColStyle(row, style30, outlook-1, outlook-1);
		    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
		    	        	
		        			sheet.addMergedRegion(new Region(( int) col2Num , ( short )2 , ( int) rowNum-1, (short )2 )); // Local, Int`l 행 합병
		        			
		        			// 앞 부분 Whisky ON 전체 합계
		        			row = sheet.createRow(rowNum++);
		        			
		        			setColStyle(row, style3, 0, 1); // Whisky ~ OFF 스타일
		        			row.createCell(2).setCellValue(new HSSFRichTextString(col0+" "+col1.replace(" ", "")+" Total")); // 합계 타이틀
		        			setColStyle(row, style7, 2, 3); // 소계 스타일
		        			
		        			setRowSumValue2(row, style8, data2, "DATALV1_NM", col0, "DATALV2_NM", col1, "style8"); // 합계 값 셋팅 (P01~YMD)
		        			setColStyle(row, style28, forecast-1, forecast-1);
		        			setColStyle(row, style30, outlook-1, outlook-1);
		    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
		    	        	
		        			sheet.addMergedRegion(new Region(( int) col1Num , ( short )1 , ( int) rowNum-1, (short )1 )); // 앞에 ON 부분 합병
		        			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); // 합계 타이틀 합병
		        			
		        			col1Num = rowNum;
		        			col2Num = rowNum;
		        			
		        			col0 = rowData.get("DATALV1_NM").toString();
		        			col1 = rowData.get("DATALV2_NM").toString();
		        		}
		        		
	        			// Whisky Off 값을 넣어준다.
			        	row = sheet.createRow(rowNum++);
			        	
		    			row.createCell(0).setCellValue("Whisky");
			        	row.createCell(1).setCellValue("OFF");
			        	row.createCell(2).setCellValue("LOCAL");
			        	setColStyle(row, style3, 0, 1);	 // Whisky ~ Local/Int`l까지 스타일
	    	        	setColStyle(row, style20, 2, 3); // 권역 스타일
			        	sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); 
			        	
			        	setRowSumValue2(row, style4, data2, "DATALV3_NM", "LOCAL", "DATALV2_NM", "OFF", "style4"); // LOCAL OFF 값
			        	setColStyle(row, style26, forecast-1, forecast-1);
			        	setColStyle(row, style30, outlook-1, outlook-1);
	    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			        	
			        	row = sheet.createRow(rowNum++);
			        	
		    			row.createCell(0).setCellValue("Whisky");
			        	row.createCell(1).setCellValue("OFF");
			        	row.createCell(2).setCellValue("Int`l");
			        	setColStyle(row, style3, 0, 1);	 // Whisky ~ Local/Int`l까지 스타일
	    	        	setColStyle(row, style20, 2, 3); // 권역 스타일
			        	sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); 
			        	
			        	setRowSumValue2(row, style4, data2, "DATALV3_NM", "INT`L", "DATALV2_NM", "OFF", "style4"); // Int`l 값
			        	setColStyle(row, style26, forecast-1, forecast-1);
			        	setColStyle(row, style30, outlook-1, outlook-1);
	    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			        	
	        			col0 = rowData.get("DATALV1_NM").toString();
	        			col1 = rowData.get("DATALV2_NM").toString();
	        			
	        			row = sheet.createRow(rowNum++);
			        	
		    			row.createCell(0).setCellValue("Whisky");
			        	row.createCell(1).setCellValue("OFF");
			        	row.createCell(2).setCellValue("Military");
			        	setColStyle(row, style3, 0, 1);	 // Whisky ~ Local/Int`l까지 스타일
	    	        	setColStyle(row, style20, 2, 3); // 권역 스타일
			        	sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); 
			        	
			        	setRowSumValue2(row, style4, data2, "DATALV3_NM", "MILITARY", "DATALV2_NM", "OFF", "style4");  // Military 값
			        	setColStyle(row, style26, forecast-1, forecast-1);
			        	setColStyle(row, style30, outlook-1, outlook-1);
	    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    	        	
	        			row = sheet.createRow(rowNum++);
	            		
	        			//  Whisky OFF 전체 합계
	        			setColStyle(row, style3, 0, 1); // Whisky ~ OFF 스타일
	        			row.createCell(2).setCellValue(new HSSFRichTextString(col0+" "+col1.replace(" ", "")+" Total")); // 합계 타이틀
	        			setColStyle(row, style7, 2, 3); // 합계 스타일
	        			setRowSumValue2(row, style8, data2, "DATALV1_NM", col0, "DATALV2_NM", col1, "style8"); // 합계 값 셋팅 (P01~YMD)
	        			setColStyle(row, style28, forecast-1, forecast-1);
	        			setColStyle(row, style30, outlook-1, outlook-1);
	    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    	        	
	        			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); // 합계 타이틀 합병
	        			
	        			row = sheet.createRow(rowNum++);
	            		
	        			// Whisky OFF Total (excl Military) 합계
	        			setColStyle(row, style3, 0, 1); // Whisky ~ OFF 스타일
	        			row.createCell(2).setCellValue("Whisky OFF Total (excl Military)"); // 소계 타이틀
	        			setColStyle(row, style7, 2, 3); // 소계 스타일
	        			setRowSumValue2(row, style8, data2, "", "", "DATALV2_NM", "OFF", "style8"); // 소계 값 셋팅 (P01~YMD)
	        			setColStyle(row, style28, forecast-1, forecast-1);
	        			setColStyle(row, style30, outlook-1, outlook-1);
	    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    	        	
	        			sheet.addMergedRegion(new Region(( int) col1Num , ( short )1 , ( int) rowNum-1, (short )1 )); // 앞에  OFF 부분 합병
	        			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); // 소계 타이틀 합병
			        	
	        			break;
	        			
		        	}
	        	}
	        	
	        	// 앞에 Whisky 타이틀 병합
	        	sheet.addMergedRegion(new Region(( int) col0Num, ( short )0 , ( int) rowNum-1, (short )0 )); 
	        	
	        	// Non Whisky
	        	// 전체 조회 시에만 보이도록
	        	if(channel_Param.equals("") && region_Param.equals("") && team_Param.equals("")){
		        	// BEER ON
		        	int col0Num_non = rowNum;
					row = sheet.createRow(rowNum++);
					
	    			row.createCell(0).setCellValue("Non Whisky");
	    			row.createCell(1).setCellValue("ON");
		        	row.createCell(2).setCellValue("BEER ON");
	    			row.createCell(3).setCellValue("Hang Out"); 	// BEER ON 타이틀
	    			setColStyle(row, style3, 0, 2);	 // Non Whisky ~ BEER 스타일
		        	setColStyle(row, style20, 3, 3); // BEER ON 스타일
		        	
	    			setRowSumValue2(row, style4, data2, "DATALV3_NM", "BEER", "DATALV2_NM", "ON", "style4"); // BEER ON 값 셋팅 (P01~YMD)
	    			
	    			setColStyle(row, style26, forecast-1, forecast-1);
	    			setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    			
	    			// VODKA ON
	    			row = sheet.createRow(rowNum++);
					
		        	row.createCell(2).setCellValue("VODKA ON");
	    			row.createCell(3).setCellValue("Hang Out"); // VODKA ON 타이틀
	    			setColStyle(row, style3, 0, 2);	 // Non Whisky ~ VODKA 스타일
		        	setColStyle(row, style20, 3, 3); // VODKA ON 스타일
		        	
	    			setRowSumValue2(row, style4, data2, "DATALV3_NM", "VODKA", "DATALV2_NM", "ON", "style4"); // VODKA ON 값 셋팅 (P01~YMD)
	    			
	    			setColStyle(row, style26, forecast-1, forecast-1);
	    			setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    			
	    			// OTHERS ON
	    			row = sheet.createRow(rowNum++);
					
	    			row.createCell(0).setCellValue(new HSSFRichTextString(rowData.get("DATALV1_NM").toString()));
	    			row.createCell(1).setCellValue(new HSSFRichTextString(rowData.get("DATALV2_NM").toString()));
		        	row.createCell(2).setCellValue("OTHERS ON");
	    			row.createCell(3).setCellValue("Hang Out"); 	// BEER ON 타이틀
	    			setColStyle(row, style3, 0, 2);	 // Non Whisky ~ OTHERS 스타일
		        	setColStyle(row, style20, 3, 3); // OTHERS ON 스타일
	    			
	    			setRowSumValue2(row, style4, data2, "DATALV3_NM", "OTHERS", "DATALV2_NM", "ON", "style4"); // OTHERS ON 값 셋팅 (P01~YMD)
	    			
	    			setColStyle(row, style26, forecast-1, forecast-1);
	    			setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    			
		        	sheet.addMergedRegion(new Region(( int) col0Num_non , ( short )3 , ( int) rowNum-1, (short )3 )); // Hang Out 타이틀 행 합병
		        	
		        	// Non Whisky ON 소계
		        	row = sheet.createRow(rowNum++);
	    			row.createCell(2).setCellValue("Non Whisky ON");
	    			setColStyle(row, style3, 0, 1);	 // Non Whisky ~ ON 스타일
		        	setColStyle(row, style5, 2, 3); // 소계 타이틀 스타일
		        	sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); // 소계 타이틀 행 합병
	    			setRowSumValue2(row, style6, data2, "DATALV1_NM", "Non Whisky", "DATALV2_NM", "ON", "style6"); // 소계 값 셋팅 (P01~YMD)
	    			
	    			setColStyle(row, style27, forecast-1, forecast-1);
					setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
		        	
	    			sheet.addMergedRegion(new Region(( int) col0Num_non , ( short )1 , ( int) rowNum-1, (short )1 )); // ON 타이틀 행 합병
	    			
	    			int col2Num_non = rowNum;
	    			
	    			// BEER OFF
					row = sheet.createRow(rowNum++);
					
	    			row.createCell(0).setCellValue("Non Whisky");
	    			row.createCell(1).setCellValue("OFF");
		        	row.createCell(2).setCellValue("BEER OFF");
	    			row.createCell(3).setCellValue("OFF"); 	// BEER OFF 타이틀
	    			setColStyle(row, style3, 0, 2);	 // Non Whisky ~ BEER 스타일
		        	setColStyle(row, style20, 3, 3); // BEER OFF 스타일
		        	
	    			setRowSumValue2(row, style4, data2, "DATALV3_NM", "BEER", "DATALV2_NM", "OFF", "style4"); // BEER OFF 값 셋팅 (P01~YMD)
	    			
	    			setColStyle(row, style26, forecast-1, forecast-1);
	    			setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    			
	    			// VODKA OFF
	    			row = sheet.createRow(rowNum++);
					
		        	row.createCell(2).setCellValue("VODKA OFF");
	    			row.createCell(3).setCellValue("Hang Out"); // VODKA OFF 타이틀
	    			setColStyle(row, style3, 0, 2);	 // Non Whisky ~ VODKA 스타일
		        	setColStyle(row, style20, 3, 3); // VODKA OFF 스타일
		        	
	    			setRowSumValue2(row, style4, data2, "DATALV3_NM", "VODKA", "DATALV2_NM", "OFF", "style4"); // VODKA OFF 값 셋팅 (P01~YMD)
	    			
	    			setColStyle(row, style26, forecast-1, forecast-1);
	    			setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    			
	    			// OTHERS OFF
	    			row = sheet.createRow(rowNum++);
					
		        	row.createCell(2).setCellValue("OTHERS OFF");
	    			row.createCell(3).setCellValue("Hang Out"); 	// BEER OFF 타이틀
	    			setColStyle(row, style3, 0, 2);	 // Non Whisky ~ OTHERS 스타일
		        	setColStyle(row, style20, 3, 3); // OTHERS OFF 스타일
	    			
	    			setRowSumValue2(row, style4, data2, "DATALV3_NM", "OTHERS", "DATALV2_NM", "OFF", "style4"); // OTHERS OFF 값 셋팅 (P01~YMD)
	    			
	    			setColStyle(row, style26, forecast-1, forecast-1);
	    			setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    			
	    			sheet.addMergedRegion(new Region(( int) col2Num_non , ( short )3 , ( int) rowNum-1, (short )3 )); // 뒤 OFF 타이틀 행 합병
				
	    			// Non Whisky OFF 소계
		        	row = sheet.createRow(rowNum++);
		        	
	    			row.createCell(2).setCellValue("Non Whisky OFF");
	    			setColStyle(row, style3, 0, 1);	 // Non Whisky ~ OFF 스타일
		        	setColStyle(row, style5, 2, 3);  // 소계 타이틀 스타일
		        	sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); // 소계 타이틀 행 합병
	    			setRowSumValue2(row, style6, data2, "DATALV1_NM", "Non Whisky", "DATALV2_NM", "OFF", "style6"); // 소계 값 셋팅 (P01~YMD)
	    			
	    			setColStyle(row, style27, forecast-1, forecast-1);		// 구분선
					setColStyle(row, style30, outlook-1, outlook-1);		// 구분선
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);	// 구분선
		        	
		        	sheet.addMergedRegion(new Region(( int) col2Num_non , ( short )1 , ( int) rowNum-1, (short )1 )); // OFF 타이틀 행 합병
		        	sheet.addMergedRegion(new Region(( int) col0Num_non , ( short )0 , ( int) rowNum-1, (short )0 )); // Non Whisky 타이틀 행 합병
	        	}
	        	
	        	// Whisky 전체 합계
	        	row = sheet.createRow(rowNum++);
	        	row.createCell(0).setCellValue(new HSSFRichTextString("Whisky Total"));
	        	setColStyle(row, style9, 0, 3);
    			setRowSumValue2(row, style10, data2, "DATALV1_NM", "Whisky", "", "", "style10");
    			setColStyle(row, style29, forecast-1, forecast-1);
    			setColStyle(row, style30, outlook-1, outlook-1);
	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
    			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )0 , ( int) rowNum-1, (short )3 ));
	        	
    			row = sheet.createRow(rowNum++);
    			
    			
    			// Non Whisky 전체 합계
    			if(channel_Param.equals("")){
	    			row = sheet.createRow(rowNum++);
		        	row.createCell(0).setCellValue(new HSSFRichTextString("Non Whisky Total"));
		        	setColStyle(row, style9, 0, 3);
	    			setRowSumValue2(row, style10, data2, "DATALV1_NM", "Non Whisky", "", "", "style10");
	    			setColStyle(row, style29, forecast-1, forecast-1);
	    			setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )0 , ( int) rowNum-1, (short )3 ));
	    			
	    			row = sheet.createRow(rowNum++);
    			}
    			
	        	
    			// 전체 Total 합계
	        	row = sheet.createRow(rowNum);
	        	row.createCell(0).setCellValue(new HSSFRichTextString("Total"));
	        	setColStyle(row, style59, 0, 3);
    			setRowSumValue2(row, style60, data2, "", "", "", "", "style8");
    			setColStyle(row, style61, forecast-1, forecast-1);
    			setColStyle(row, style30, outlook-1, outlook-1);
	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	        	
    			sheet.addMergedRegion(new Region(( int) rowNum , ( short )0 , ( int) rowNum, (short )3 ));
    			
    			// Note G Forecast / Outlook 의 Total Dependency Rate 값 계산을 위한  SUM(DK Depletion Forecast.Actual Volume실적)
    			dkDeplFcAcP01 = getSum(data2, "", "", "DK_AC_P01", "", "");
    			dkDeplFcAcP02 = getSum(data2, "", "", "DK_AC_P02", "", "");
    			dkDeplFcAcP03 = getSum(data2, "", "", "DK_AC_P03", "", "");
    			dkDeplFcAcP04 = getSum(data2, "", "", "DK_AC_P04", "", "");
    			dkDeplFcAcP05 = getSum(data2, "", "", "DK_AC_P05", "", "");
    			dkDeplFcAcP06 = getSum(data2, "", "", "DK_AC_P06", "", "");
    			dkDeplFcAcP07 = getSum(data2, "", "", "DK_AC_P07", "", "");
    			dkDeplFcAcP08 = getSum(data2, "", "", "DK_AC_P08", "", "");
    			dkDeplFcAcP09 = getSum(data2, "", "", "DK_AC_P09", "", "");
    			dkDeplFcAcP10 = getSum(data2, "", "", "DK_AC_P10", "", "");
    			dkDeplFcAcP11 = getSum(data2, "", "", "DK_AC_P11", "", "");
    			dkDeplFcAcP12 = getSum(data2, "", "", "DK_AC_P12", "", "");
    			dkDeplFcAcQ01 = getSum(data2, "", "", "DK_AC_Q01", "", "");
    			dkDeplFcAcQ02 = getSum(data2, "", "", "DK_AC_Q02", "", "");
    			dkDeplFcAcQ03 = getSum(data2, "", "", "DK_AC_Q03", "", "");
    			dkDeplFcAcQ04 = getSum(data2, "", "", "DK_AC_Q04", "", "");
    			dkDeplFcAcH01 = getSum(data2, "", "", "DK_AC_H01", "", "");
    			dkDeplFcAcH02 = getSum(data2, "", "", "DK_AC_H02", "", "");
    			if(ytd_Param.equals("P01")){
    				dkDeplFcAcYTD = getSum(data2, "", "", "DK_AC_YTD01", "", "");
    			}else if(ytd_Param.equals("P02")){
    				dkDeplFcAcYTD = getSum(data2, "", "", "DK_AC_YTD02", "", "");
    			}else if(ytd_Param.equals("P03")){
    				dkDeplFcAcYTD = getSum(data2, "", "", "DK_AC_YTD03", "", "");
    			}else if(ytd_Param.equals("P04")){
    				dkDeplFcAcYTD = getSum(data2, "", "", "DK_AC_YTD04", "", "");
    			}else if(ytd_Param.equals("P05")){
    				dkDeplFcAcYTD = getSum(data2, "", "", "DK_AC_YTD05", "", "");
    			}else if(ytd_Param.equals("P06")){
    				dkDeplFcAcYTD = getSum(data2, "", "", "DK_AC_YTD06", "", "");
    			}else if(ytd_Param.equals("P07")){
    				dkDeplFcAcYTD = getSum(data2, "", "", "DK_AC_YTD07", "", "");
    			}else if(ytd_Param.equals("P08")){
    				dkDeplFcAcYTD = getSum(data2, "", "", "DK_AC_YTD08", "", "");
    			}else if(ytd_Param.equals("P09")){
    				dkDeplFcAcYTD = getSum(data2, "", "", "DK_AC_YTD09", "", "");
    			}else if(ytd_Param.equals("P10")){
    				dkDeplFcAcYTD = getSum(data2, "", "", "DK_AC_YTD10", "", "");
    			}else if(ytd_Param.equals("P11")){
    				dkDeplFcAcYTD = getSum(data2, "", "", "DK_AC_YTD11", "", "");
    			}else if(ytd_Param.equals("P12")){
    				dkDeplFcAcYTD = getSum(data2, "", "", "DK_AC_YTD12", "", "");
    			}else{
    				dkDeplFcAcYTD = getSum(data2, "", "", "DK_AC_YTD12", "", "");
    			}
    			
			}
			
			
			/** DK Depletion Target **/
			if (data2.size() > 0 ){
				
				//----------------------------------------
				rowNum = rowNum+3;
				HSSFRow row = sheet.createRow(rowNum);
	        	HSSFCell cell = row.createCell(0);
	        	cell.setCellValue(new HSSFRichTextString("DK Depletion Target"));
	        	cell.setCellStyle(style1);
	        	//----------------------------------------
	        	row = sheet.createRow(rowNum+1);
	        	row.createCell(actual).setCellValue(new HSSFRichTextString(fy_Param+" Actual (Outlook)"));
	        	row.createCell(forecast).setCellValue(new HSSFRichTextString(fy_Param+" Target"));
	        	row.createCell(outlook).setCellValue(new HSSFRichTextString("Achievement% vs. Target"));
	        	row.createCell(som+signal).setCellValue(new HSSFRichTextString("Forecast Accuracy% vs. Actual"));
	        	setColStyle(row, style24, 0, 0);
	        	setColStyle(row, style22, 1, forecastEnd);
	        	setColStyle(row, style24, outlook, outlook);
	        	setColStyle(row, style22, outlook+1, (outlookEnd+signal));
	        	setColStyle(row, style24, (som+signal), (som+signal));
	        	setColStyle(row, style22, (som+signal)+1, (somEnd+signal));
	        	//----------------------------------------
	        	row = sheet.createRow(rowNum+2);
	        	
	        	if(periodChk_Param.equals("Y")){
	        		row.createCell(4).setCellValue(new HSSFRichTextString("P01"));
		        	row.createCell(5).setCellValue(new HSSFRichTextString("P02"));
		        	row.createCell(6).setCellValue(new HSSFRichTextString("P03"));
		        	row.createCell(7).setCellValue(new HSSFRichTextString("P04"));
		        	row.createCell(8).setCellValue(new HSSFRichTextString("P05"));
		        	row.createCell(9).setCellValue(new HSSFRichTextString("P06"));
		        	row.createCell(10).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(11).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(12).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(13).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(14).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(15).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(16).setCellValue(new HSSFRichTextString("Q1"));
		        	row.createCell(17).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(18).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(19).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(20).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(21).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(22).setCellValue(new HSSFRichTextString("YTD"));
		        	row.createCell(23).setCellValue(new HSSFRichTextString("P01"));
		        	row.createCell(24).setCellValue(new HSSFRichTextString("P02"));
		        	row.createCell(25).setCellValue(new HSSFRichTextString("P03"));
		        	row.createCell(26).setCellValue(new HSSFRichTextString("P04"));
		        	row.createCell(27).setCellValue(new HSSFRichTextString("P05"));
		        	row.createCell(28).setCellValue(new HSSFRichTextString("P06"));
		        	row.createCell(29).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(30).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(31).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(32).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(33).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(34).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(35).setCellValue(new HSSFRichTextString("Q1"));
		        	row.createCell(36).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(37).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(38).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(39).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(40).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(41).setCellValue(new HSSFRichTextString("YTD"));

		        	row.createCell(43).setCellValue(new HSSFRichTextString("P01"));
		        	row.createCell(44).setCellValue(new HSSFRichTextString("P02"));
		        	row.createCell(45).setCellValue(new HSSFRichTextString("P03"));
		        	row.createCell(46).setCellValue(new HSSFRichTextString("P04"));
		        	row.createCell(47).setCellValue(new HSSFRichTextString("P05"));
		        	row.createCell(48).setCellValue(new HSSFRichTextString("P06"));
		        	row.createCell(49).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(50).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(51).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(52).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(53).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(54).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(55).setCellValue(new HSSFRichTextString("Q1"));
		        	row.createCell(56).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(57).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(58).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(59).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(60).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(61).setCellValue(new HSSFRichTextString("YTD"));
		        	row.createCell(62).setCellValue(new HSSFRichTextString("신호등Q1"));
		        	row.createCell(63).setCellValue(new HSSFRichTextString("신호등Q2"));
		        	row.createCell(64).setCellValue(new HSSFRichTextString("신호등Q3"));
		        	row.createCell(65).setCellValue(new HSSFRichTextString("신호등Q4"));
		        	row.createCell(66).setCellValue(new HSSFRichTextString("신호등H1"));
		        	row.createCell(67).setCellValue(new HSSFRichTextString("신호등H2"));
		        	row.createCell(68).setCellValue(new HSSFRichTextString("신호등YTD"));
		        	
		        	row.createCell(70).setCellValue(new HSSFRichTextString("P01"));
		        	row.createCell(71).setCellValue(new HSSFRichTextString("P02"));
		        	row.createCell(72).setCellValue(new HSSFRichTextString("P03"));
		        	row.createCell(73).setCellValue(new HSSFRichTextString("P04"));
		        	row.createCell(74).setCellValue(new HSSFRichTextString("P05"));
		        	row.createCell(75).setCellValue(new HSSFRichTextString("P06"));
		        	row.createCell(76).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(77).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(78).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(79).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(80).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(81).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(82).setCellValue(new HSSFRichTextString("Q1"));
		        	row.createCell(83).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(84).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(85).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(86).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(87).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(88).setCellValue(new HSSFRichTextString("YTD"));
		        	row.createCell(89).setCellValue(new HSSFRichTextString("신호등Q1"));
		        	row.createCell(90).setCellValue(new HSSFRichTextString("신호등Q2"));
		        	row.createCell(91).setCellValue(new HSSFRichTextString("신호등Q3"));
		        	row.createCell(92).setCellValue(new HSSFRichTextString("신호등Q4"));
		        	row.createCell(93).setCellValue(new HSSFRichTextString("신호등H1"));
		        	row.createCell(94).setCellValue(new HSSFRichTextString("신호등H2"));
		        	row.createCell(95).setCellValue(new HSSFRichTextString("신호등YTD"));
		        	
	        	}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
	        		
        			row.createCell(4).setCellValue(new HSSFRichTextString("P01"));
    	        	row.createCell(5).setCellValue(new HSSFRichTextString("P02"));
    	        	row.createCell(6).setCellValue(new HSSFRichTextString("P03"));
    	        	row.createCell(7).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(8).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(9).setCellValue(new HSSFRichTextString("YTD"));
    	        	row.createCell(10).setCellValue(new HSSFRichTextString("P01"));
    	        	row.createCell(11).setCellValue(new HSSFRichTextString("P02"));
    	        	row.createCell(12).setCellValue(new HSSFRichTextString("P03"));
    	        	row.createCell(13).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(14).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(15).setCellValue(new HSSFRichTextString("YTD"));
    	        	
    	        	row.createCell(17).setCellValue(new HSSFRichTextString("P01"));
    	        	row.createCell(18).setCellValue(new HSSFRichTextString("P02"));
    	        	row.createCell(19).setCellValue(new HSSFRichTextString("P03"));
    	        	row.createCell(20).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(21).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(22).setCellValue(new HSSFRichTextString("YTD"));
    	        	row.createCell(23).setCellValue(new HSSFRichTextString("신호등Q1"));
		        	row.createCell(24).setCellValue(new HSSFRichTextString("신호등H1"));
		        	row.createCell(25).setCellValue(new HSSFRichTextString("신호등YTD"));
		        	
    	        	row.createCell(27).setCellValue(new HSSFRichTextString("P01"));
    	        	row.createCell(28).setCellValue(new HSSFRichTextString("P02"));
    	        	row.createCell(29).setCellValue(new HSSFRichTextString("P03"));
    	        	row.createCell(30).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(31).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(32).setCellValue(new HSSFRichTextString("YTD"));
    	        	row.createCell(33).setCellValue(new HSSFRichTextString("신호등Q1"));
		        	row.createCell(34).setCellValue(new HSSFRichTextString("신호등H1"));
		        	row.createCell(35).setCellValue(new HSSFRichTextString("신호등YTD"));
    	        	
        		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
        			row.createCell(4).setCellValue(new HSSFRichTextString("P04"));
    	        	row.createCell(5).setCellValue(new HSSFRichTextString("P05"));
    	        	row.createCell(6).setCellValue(new HSSFRichTextString("P06"));
    	        	row.createCell(7).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(8).setCellValue(new HSSFRichTextString("Q2"));
    	        	row.createCell(9).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(10).setCellValue(new HSSFRichTextString("YTD"));
    	        	row.createCell(11).setCellValue(new HSSFRichTextString("P04"));
    	        	row.createCell(12).setCellValue(new HSSFRichTextString("P05"));
    	        	row.createCell(13).setCellValue(new HSSFRichTextString("P06"));
    	        	row.createCell(14).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(15).setCellValue(new HSSFRichTextString("Q2"));
    	        	row.createCell(16).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(17).setCellValue(new HSSFRichTextString("YTD"));
    	        	
    	        	row.createCell(19).setCellValue(new HSSFRichTextString("P04"));
    	        	row.createCell(20).setCellValue(new HSSFRichTextString("P05"));
    	        	row.createCell(21).setCellValue(new HSSFRichTextString("P06"));
    	        	row.createCell(22).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(23).setCellValue(new HSSFRichTextString("Q2"));
    	        	row.createCell(24).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(25).setCellValue(new HSSFRichTextString("YTD"));
    	        	row.createCell(26).setCellValue(new HSSFRichTextString("신호등Q1"));
		        	row.createCell(27).setCellValue(new HSSFRichTextString("신호등Q2"));
		        	row.createCell(28).setCellValue(new HSSFRichTextString("신호등H1"));
		        	row.createCell(29).setCellValue(new HSSFRichTextString("신호등YTD"));
    	        	
    	        	row.createCell(31).setCellValue(new HSSFRichTextString("P04"));
    	        	row.createCell(32).setCellValue(new HSSFRichTextString("P05"));
    	        	row.createCell(33).setCellValue(new HSSFRichTextString("P06"));
    	        	row.createCell(34).setCellValue(new HSSFRichTextString("Q1"));
    	        	row.createCell(35).setCellValue(new HSSFRichTextString("Q2"));
    	        	row.createCell(36).setCellValue(new HSSFRichTextString("H1"));
    	        	row.createCell(37).setCellValue(new HSSFRichTextString("YTD"));
    	        	row.createCell(38).setCellValue(new HSSFRichTextString("신호등Q1"));
		        	row.createCell(39).setCellValue(new HSSFRichTextString("신호등Q2"));
		        	row.createCell(40).setCellValue(new HSSFRichTextString("신호등H1"));
		        	row.createCell(41).setCellValue(new HSSFRichTextString("신호등YTD"));
    	        	
	        	}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
	        		row.createCell(4).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(5).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(6).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(7).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(8).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(9).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(10).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(11).setCellValue(new HSSFRichTextString("YTD"));
		        	row.createCell(12).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(13).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(14).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(15).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(16).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(17).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(18).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(19).setCellValue(new HSSFRichTextString("YTD"));
		        	
		        	row.createCell(21).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(22).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(23).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(24).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(25).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(26).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(27).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(28).setCellValue(new HSSFRichTextString("YTD"));
		        	row.createCell(29).setCellValue(new HSSFRichTextString("신호등Q2"));
		        	row.createCell(30).setCellValue(new HSSFRichTextString("신호등Q3"));
		        	row.createCell(31).setCellValue(new HSSFRichTextString("신호등H1"));
		        	row.createCell(32).setCellValue(new HSSFRichTextString("신호등H2"));
		        	row.createCell(33).setCellValue(new HSSFRichTextString("신호등YTD"));
		        	
		        	row.createCell(35).setCellValue(new HSSFRichTextString("P07"));
		        	row.createCell(36).setCellValue(new HSSFRichTextString("P08"));
		        	row.createCell(37).setCellValue(new HSSFRichTextString("P09"));
		        	row.createCell(38).setCellValue(new HSSFRichTextString("Q2"));
		        	row.createCell(39).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(40).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(41).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(42).setCellValue(new HSSFRichTextString("YTD"));
		        	row.createCell(43).setCellValue(new HSSFRichTextString("신호등Q2"));
		        	row.createCell(44).setCellValue(new HSSFRichTextString("신호등Q3"));
		        	row.createCell(45).setCellValue(new HSSFRichTextString("신호등H1"));
		        	row.createCell(46).setCellValue(new HSSFRichTextString("신호등H2"));
		        	row.createCell(47).setCellValue(new HSSFRichTextString("신호등YTD"));
		        	
	        	}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
	        		row.createCell(4).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(5).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(6).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(7).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(8).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(9).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(10).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(11).setCellValue(new HSSFRichTextString("YTD"));
		        	row.createCell(12).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(13).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(14).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(15).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(16).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(17).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(18).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(19).setCellValue(new HSSFRichTextString("YTD"));
		        	
		        	row.createCell(21).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(22).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(23).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(24).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(25).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(26).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(27).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(28).setCellValue(new HSSFRichTextString("YTD"));
		        	row.createCell(29).setCellValue(new HSSFRichTextString("신호등Q3"));
		        	row.createCell(30).setCellValue(new HSSFRichTextString("신호등Q4"));
		        	row.createCell(31).setCellValue(new HSSFRichTextString("신호등H1"));
		        	row.createCell(32).setCellValue(new HSSFRichTextString("신호등H2"));
		        	row.createCell(33).setCellValue(new HSSFRichTextString("신호등YTD"));
		        	
		        	row.createCell(35).setCellValue(new HSSFRichTextString("P10"));
		        	row.createCell(36).setCellValue(new HSSFRichTextString("P11"));
		        	row.createCell(37).setCellValue(new HSSFRichTextString("P12"));
		        	row.createCell(38).setCellValue(new HSSFRichTextString("Q3"));
		        	row.createCell(39).setCellValue(new HSSFRichTextString("Q4"));
		        	row.createCell(40).setCellValue(new HSSFRichTextString("H1"));
		        	row.createCell(41).setCellValue(new HSSFRichTextString("H2"));
		        	row.createCell(42).setCellValue(new HSSFRichTextString("YTD"));
		        	row.createCell(43).setCellValue(new HSSFRichTextString("신호등Q3"));
		        	row.createCell(44).setCellValue(new HSSFRichTextString("신호등Q4"));
		        	row.createCell(45).setCellValue(new HSSFRichTextString("신호등H1"));
		        	row.createCell(46).setCellValue(new HSSFRichTextString("신호등H2"));
		        	row.createCell(47).setCellValue(new HSSFRichTextString("신호등YTD"));
		        	
	        	}
	        	
	        	setColStyle(row, style25, 0, 0);
	        	setColStyle(row, style23, 1, 3);
	        	setColStyle(row, style2, 4, forecast-2);
	        	setColStyle(row, style23, forecast-1, forecast-1);
	        	setColStyle(row, style2, forecast, forecastEnd-1);
	        	setColStyle(row, style23, forecastEnd, forecastEnd);
	        	setColStyle(row, style25, outlook, outlook);
	        	setColStyle(row, style2, outlook+1, (outlookEnd+signal)-1);
	        	setColStyle(row, style23, (outlookEnd+signal), (outlookEnd+signal));
	        	setColStyle(row, style25, (som+signal), (som+signal));
	        	setColStyle(row, style2, (som+signal)+1, ((somEnd+signal)-1));
	        	setColStyle(row, style23, (somEnd+signal), (somEnd+signal));
	        	
	        	sheet.addMergedRegion(new Region(( int) rowNum+1 , ( short )0 , ( int) rowNum+2, (short )3 ));
	        	sheet.addMergedRegion(new Region(( int) rowNum+1 , ( short )4 , ( int) rowNum+1, (short )(forecast-1) ));
	        	sheet.addMergedRegion(new Region(( int) rowNum+1 , ( short )forecast , ( int) rowNum+1, (short )forecastEnd ));
	        	sheet.addMergedRegion(new Region(( int) rowNum+1 , ( short )outlook , ( int) rowNum+1, (short )(outlookEnd+signal) ));
	        	sheet.addMergedRegion(new Region(( int) rowNum+1 , ( short )(som+signal) , ( int) rowNum+1, (short )(somEnd+signal) ));
	        	
	        	row_cal3 = rowNum+3;
	        	row_cal4 = rowNum+3;
	        	rowNum = rowNum+3;
	        	
	        	String col0 = "", col1 = "", col2 = "", col3 = "", whiskyFlg="", nonWhiskyFlg = "";
	        	int col0Num = rowNum, col1Num = rowNum, col2Num = rowNum;

	        	Map rowData = null;
	        	
	        	for (int i=0; i < data2.size(); i++) {
	        		
	        		rowData = (Map)data2.get(i);
	        	
	        		if(rowData.get("DATALV2_NM").toString().equals("ON")){
	        			
	        			row = sheet.createRow(rowNum++);
	        			
	        			if (col0.equals("")) {	// 첫 행
		        			col0 = rowData.get("DATALV1_NM").toString();
		        			col1 = rowData.get("DATALV2_NM").toString();
		        			col2 = rowData.get("DATALV3_NM").toString();
		        			row.createCell(0).setCellValue(new HSSFRichTextString(rowData.get("DATALV1_NM").toString()));
		        			row.createCell(1).setCellValue(new HSSFRichTextString(rowData.get("DATALV2_NM").toString()));
		    	        	row.createCell(2).setCellValue(new HSSFRichTextString(rowData.get("DATALV3_NM").toString()));
		    	        	row.createCell(3).setCellValue(new HSSFRichTextString(rowData.get("DATALV4_NM").toString()));
		    	        	setColStyle(row, style3, 0, 2);	 // Whisky ~ Local/Int`l까지 스타일
		    	        	setColStyle(row, style20, 3, 3); // 권역 스타일
		    	        	setRowValue3(row, style4, rowData, "style4");	
		    	        	setColStyle(row, style26, forecast-1, forecast-1);
		    	        	setColStyle(row, style30, outlook-1, outlook-1);
		    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
		        		}
		        		
		        		else if (rowData.get("DATALV1_NM").toString().equals(col0)) {
		        			
		        			if (col1.equals("")) {	// 두 번째 행
			        			col1 = rowData.get("DATALV2_NM").toString();
			        			col2 = rowData.get("DATALV3_NM").toString();
			        			row.createCell(0).setCellValue(new HSSFRichTextString(rowData.get("DATALV1_NM").toString()));
			        			row.createCell(1).setCellValue(new HSSFRichTextString(rowData.get("DATALV2_NM").toString()));
			    	        	row.createCell(2).setCellValue(new HSSFRichTextString(rowData.get("DATALV3_NM").toString()));
			    	        	row.createCell(3).setCellValue(new HSSFRichTextString(rowData.get("DATALV4_NM").toString()));
			    	        	setColStyle(row, style3, 0, 2);
			    	        	setRowValue3(row, style4, rowData, "style4");
			    	        	setColStyle(row, style26, forecast-1, forecast-1);
			    	        	setColStyle(row, style30, outlook-1, outlook-1);
			    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			        		}
		        			
		        			else if (rowData.get("DATALV2_NM").toString().equals(col1)) {	// 세 번째 행 ~ Whisky ON 끝날 때 까지
		        				
		        				if (rowData.get("DATALV3_NM").toString().equals(col2)) {	// Local 시작부터 끝까지 & Int`l 시작부터 끝까지
		        					row.createCell(3).setCellValue(new HSSFRichTextString(rowData.get("DATALV4_NM").toString())); // 권역 셋팅
		        					setColStyle(row, style3, 0, 2);	 // Whisky ~ Local/Int`l까지 스타일
				    	        	setColStyle(row, style20, 3, 3); // 권역 스타일
				        			setRowValue3(row, style4, rowData, "style4"); // P01~YMD 값 및 스타일 셋팅
				        			setColStyle(row, style26, forecast-1, forecast-1);
				        			setColStyle(row, style30, outlook-1, outlook-1);
				    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
				    	        	
				    	        	if(i == (data.size()-1)){ // 데이터 마지막에 소계 넣어주는 부분
				        				row = sheet.createRow(rowNum++);
				        				row.createCell(3).setCellValue(new HSSFRichTextString(col2+" "+col1.replace(" ", "")));
			        					setColStyle(row, style3, 0, 2);
			        					setColStyle(row, style5, 3, 3);
			        					setRowSumValue3(row, style6, data2, "DATALV3_NM", col2, "DATALV2_NM", col1, "style6"); // Local, Int`l 소계 값 및 스타일 셋팅 (P01~YMD)
			        					setColStyle(row, style27, forecast-1, forecast-1);
			        					setColStyle(row, style30, outlook-1, outlook-1);
					    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
					    	        	
			        					sheet.addMergedRegion(new Region(( int) col2Num , ( short )2 , ( int) rowNum-1, (short )2 )); // Local, Int`l 타이틀 행 합병
			        					
			        					// 앞 부분 Whisky ON 전체 합계
					        			row = sheet.createRow(rowNum++);
					        			
					        			setColStyle(row, style3, 0, 1); // Whisky ~ OFF 스타일
					        			row.createCell(2).setCellValue(new HSSFRichTextString(col0+" "+col1.replace(" ", "")+" Total")); // 합계 타이틀
					        			setColStyle(row, style7, 2, 3); // 소계 스타일
					        			
					        			setRowSumValue3(row, style8, data2, "DATALV1_NM", col0, "DATALV2_NM", col1, "style8"); // 합계 값 셋팅 (P01~YMD)
					        			setColStyle(row, style28, forecast-1, forecast-1);
					        			setColStyle(row, style30, outlook-1, outlook-1);
					    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
					    	        	
					        			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); // 합계 타이틀 합병
					        			sheet.addMergedRegion(new Region(( int) col1Num , ( short )1 , ( int) rowNum-1, (short )1 ));  // ON, OFF 타이틀 행 합병
					        			
				        			}
				        			
		        				}
		        				else if (!rowData.get("DATALV3_NM").toString().equals(col2)) {	// Local에서 Int'l로 넘어가는 부분
			        				if (!col2.equals("LOCAL") && !col2.equals("INT`L")) {		// 만약 col2 값이 Local도 Int`l도 아닐 경우 해당 값 넣어주기
			        					col2 = rowData.get("DATALV3_NM").toString();
					        			row.createCell(2).setCellValue(new HSSFRichTextString(rowData.get("DATALV3_NM").toString()));	// local 부분
					    	        	row.createCell(3).setCellValue(new HSSFRichTextString(rowData.get("DATALV4_NM").toString()));	// 권역 부분
					    	        	setColStyle(row, style3, 0, 2);	 // Whisky ~ Local/Int`l까지 스타일
					    	        	setColStyle(row, style20, 3, 3); // 권역 스타일
					    	        	setRowValue3(row, style4, rowData, "style4");	// P01~YMD 값 및 스타일 셋팅
					    	        	setColStyle(row, style26, forecast-1, forecast-1);
					    	        	setColStyle(row, style30, outlook-1, outlook-1);
					    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			        				}
			        				else {														// 만약 col2 값이 Local이거나 Int`l인 경우 이전까지의 값 소계 넣어주기
				        				if (col2.equals("LOCAL")) {								// col2 가 Local인 경우 소계 타이틀
				        					row.createCell(3).setCellValue(new HSSFRichTextString("Local ON"));
				        					setColStyle(row, style3, 0, 2);	// Whisky ~ Local 까지 스타일
				        					setColStyle(row, style5, 3, 3); // Local소계 스타일
				        					
				        				}
				        				else if (col2.equals("INT`L")) {						// col2 가 Int`l인 경우 소계 타이틀
				        					row.createCell(3).setCellValue(new HSSFRichTextString("Int`l ON"));
				        					setColStyle(row, style3, 0, 2); // Whisky ~ Int`l 까지 스타일
				        					setColStyle(row, style5, 3, 3); // Int`l소계 스타일
				        				}
				        				
				        				setRowSumValue3(row, style6, data2, "DATALV3_NM", col2, "DATALV2_NM", col1, "style6"); // Local, Int`l 소계 값 및 스타일 셋팅 (P01~YMD)
				        				setColStyle(row, style27, forecast-1, forecast-1);
				        				setColStyle(row, style30, outlook-1, outlook-1);
					    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
					        			
					        			sheet.addMergedRegion(new Region(( int) col2Num , ( short )2 , ( int) rowNum-1, (short )2 )); // Local, Int`l 값 같은 경우 행 합병
					    	        	
					        			col2 = rowData.get("DATALV3_NM").toString();	// col2 값에 현재 DATALV3_NM 값 담아주기
					        			col2Num = rowNum;								// col2Num에 현재 행 값 담아주기
					    	        	
					        			row = sheet.createRow(rowNum++);				// Local, Int`l 중 새로들어온 값 다음 줄에 셋팅해주기
					    	        	row.createCell(2).setCellValue(new HSSFRichTextString(rowData.get("DATALV3_NM").toString()));	// Local, Int`l 
					    	        	row.createCell(3).setCellValue(new HSSFRichTextString(rowData.get("DATALV4_NM").toString()));	// 권역
					    	        	setColStyle(row, style3, 0, 2);	 // Whisky ~ Local/Int`l까지 스타일
					    	        	setColStyle(row, style20, 3, 3); // 권역 스타일
					    	        	setRowValue3(row, style4, rowData, "style4");	// P01~YMD 값 및 스타일 셋팅
					    	        	setColStyle(row, style26, forecast-1, forecast-1);
					    	        	setColStyle(row, style30, outlook-1, outlook-1);
					    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			        				}
			        			}
		        			}
		        		}
	        		
	        		// 데이터에서 Whisky OFF값이 나오면
		        	}else if(rowData.get("DATALV2_NM").toString().equals("OFF")){
		        		
		        		if(request.getParameter("channel").toString().equals("") || request.getParameter("channel").toString().equals("ON")){
			        		
		        			// 앞 부분 Whisky On의 소계 넣어준다.
		        			row = sheet.createRow(rowNum++);
			        		
	        				if (col2.equals("LOCAL")) {
	        					row.createCell(3).setCellValue(new HSSFRichTextString("Local ON"));
	        					setColStyle(row, style3, 0, 2);
	        					setColStyle(row, style5, 3, 3);
	        				}
	        				else if (col2.equals("INT`L")) {
	        					row.createCell(3).setCellValue(new HSSFRichTextString("Int`l ON"));
	        					setColStyle(row, style3, 0, 2);
	        					setColStyle(row, style5, 3, 3);
	        				}
	        				
	        				setRowSumValue3(row, style6, data2, "DATALV3_NM", col2, "DATALV2_NM", col1, "style6");	// Local, Int`l 소계 값 및 스타일 셋팅 (P01~YMD)		
	        				setColStyle(row, style27, forecast-1, forecast-1);
	        				setColStyle(row, style30, outlook-1, outlook-1);
		    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
		    	        	
		        			sheet.addMergedRegion(new Region(( int) col2Num , ( short )2 , ( int) rowNum-1, (short )2 )); // Local, Int`l 행 합병
		        			
		        			// 앞 부분 Whisky ON 전체 합계
		        			row = sheet.createRow(rowNum++);
		        			
		        			setColStyle(row, style3, 0, 1); // Whisky ~ OFF 스타일
		        			row.createCell(2).setCellValue(new HSSFRichTextString(col0+" "+col1.replace(" ", "")+" Total")); // 합계 타이틀
		        			setColStyle(row, style7, 2, 3); // 소계 스타일
		        			
		        			setRowSumValue3(row, style8, data2, "DATALV1_NM", col0, "DATALV2_NM", col1, "style8"); // 합계 값 셋팅 (P01~YMD)
		        			setColStyle(row, style28, forecast-1, forecast-1);
		        			setColStyle(row, style30, outlook-1, outlook-1);
		    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
		    	        	
		        			sheet.addMergedRegion(new Region(( int) col1Num , ( short )1 , ( int) rowNum-1, (short )1 )); // 앞에 ON 부분 합병
		        			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); // 합계 타이틀 합병
		        			
		        			col1Num = rowNum;
		        			col2Num = rowNum;
		        			
		        			col0 = rowData.get("DATALV1_NM").toString();
		        			col1 = rowData.get("DATALV2_NM").toString();
		        		}
		        		
	        			// Whisky Off 값을 넣어준다.
			        	row = sheet.createRow(rowNum++);
			        	
		    			row.createCell(0).setCellValue("Whisky");
			        	row.createCell(1).setCellValue("OFF");
			        	row.createCell(2).setCellValue("LOCAL");
			        	setColStyle(row, style3, 0, 1);	 // Whisky ~ Local/Int`l까지 스타일
	    	        	setColStyle(row, style20, 2, 3); // 권역 스타일
			        	sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); 
			        	
			        	setRowSumValue3(row, style4, data2, "DATALV3_NM", "LOCAL", "DATALV2_NM", "OFF", "style4"); // LOCAL OFF 값
			        	setColStyle(row, style26, forecast-1, forecast-1);
			        	setColStyle(row, style30, outlook-1, outlook-1);
	    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			        	
			        	row = sheet.createRow(rowNum++);
			        	
		    			row.createCell(0).setCellValue("Whisky");
			        	row.createCell(1).setCellValue("OFF");
			        	row.createCell(2).setCellValue("Int`l");
			        	setColStyle(row, style3, 0, 1);	 // Whisky ~ Local/Int`l까지 스타일
	    	        	setColStyle(row, style20, 2, 3); // 권역 스타일
			        	sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); 
			        	
			        	setRowSumValue3(row, style4, data2, "DATALV3_NM", "INT`L", "DATALV2_NM", "OFF", "style4"); // Int`l 값
			        	setColStyle(row, style26, forecast-1, forecast-1);
			        	setColStyle(row, style30, outlook-1, outlook-1);
	    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			        	
	        			col0 = rowData.get("DATALV1_NM").toString();
	        			col1 = rowData.get("DATALV2_NM").toString();
	        			
	        			row = sheet.createRow(rowNum++);
			        	
		    			row.createCell(0).setCellValue("Whisky");
			        	row.createCell(1).setCellValue("OFF");
			        	row.createCell(2).setCellValue("Military");
			        	setColStyle(row, style3, 0, 1);	 // Whisky ~ Local/Int`l까지 스타일
	    	        	setColStyle(row, style20, 2, 3); // 권역 스타일
			        	sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); 
			        	
			        	setRowSumValue3(row, style4, data2, "DATALV3_NM", "MILITARY", "DATALV2_NM", "OFF", "style4");  // Military 값
			        	setColStyle(row, style26, forecast-1, forecast-1);
			        	setColStyle(row, style30, outlook-1, outlook-1);
	    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    	        	
	        			row = sheet.createRow(rowNum++);
	            		
	        			//  Whisky OFF 전체 합계
	        			setColStyle(row, style3, 0, 1); // Whisky ~ OFF 스타일
	        			row.createCell(2).setCellValue(new HSSFRichTextString(col0+" "+col1.replace(" ", "")+" Total")); // 합계 타이틀
	        			setColStyle(row, style7, 2, 3); // 합계 스타일
	        			setRowSumValue3(row, style8, data2, "DATALV1_NM", col0, "DATALV2_NM", col1, "style8"); // 합계 값 셋팅 (P01~YMD)
	        			setColStyle(row, style28, forecast-1, forecast-1);
	        			setColStyle(row, style30, outlook-1, outlook-1);
	    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    	        	
	        			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); // 합계 타이틀 합병
	        			
	        			row = sheet.createRow(rowNum++);
	            		
	        			// Whisky OFF Total (excl Military) 합계
	        			setColStyle(row, style3, 0, 1); // Whisky ~ OFF 스타일
	        			row.createCell(2).setCellValue("Whisky OFF Total (excl Military)"); // 소계 타이틀
	        			setColStyle(row, style7, 2, 3); // 소계 스타일
	        			setRowSumValue3(row, style8, data2, "", "", "DATALV2_NM", "OFF", "style8"); // 소계 값 셋팅 (P01~YMD)
	        			setColStyle(row, style28, forecast-1, forecast-1);
	        			setColStyle(row, style30, outlook-1, outlook-1);
	    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    	        	
	        			sheet.addMergedRegion(new Region(( int) col1Num , ( short )1 , ( int) rowNum-1, (short )1 )); // 앞에  OFF 부분 합병
	        			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); // 소계 타이틀 합병
			        	
	        			break;
	        			
		        	}
	        	}
	        	
	        	// 앞에 Whisky 타이틀 병합
	        	sheet.addMergedRegion(new Region(( int) col0Num, ( short )0 , ( int) rowNum-1, (short )0 )); 
	        	
	        	
	        	// Non Whisky
	        	// 전체 조회 시에만 보이도록
	        	if(channel_Param.equals("") && region_Param.equals("") && team_Param.equals("")){
		        	// BEER ON
		        	int col0Num_non = rowNum;
					row = sheet.createRow(rowNum++);
					
	    			row.createCell(0).setCellValue("Non Whisky");
	    			row.createCell(1).setCellValue("ON");
		        	row.createCell(2).setCellValue("BEER ON");
	    			row.createCell(3).setCellValue("Hang Out"); 	// BEER ON 타이틀
	    			setColStyle(row, style3, 0, 2);	 // Non Whisky ~ BEER 스타일
		        	setColStyle(row, style20, 3, 3); // BEER ON 스타일
		        	
	    			setRowSumValue3(row, style4, data2, "DATALV3_NM", "BEER", "DATALV2_NM", "ON", "style4"); // BEER ON 값 셋팅 (P01~YMD)
	    			
	    			setColStyle(row, style26, forecast-1, forecast-1);
	    			setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    			
	    			// VODKA ON
	    			row = sheet.createRow(rowNum++);
					
		        	row.createCell(2).setCellValue("VODKA ON");
	    			row.createCell(3).setCellValue("Hang Out"); // VODKA ON 타이틀
	    			setColStyle(row, style3, 0, 2);	 // Non Whisky ~ VODKA 스타일
		        	setColStyle(row, style20, 3, 3); // VODKA ON 스타일
		        	
	    			setRowSumValue3(row, style4, data2, "DATALV3_NM", "VODKA", "DATALV2_NM", "ON", "style4"); // VODKA ON 값 셋팅 (P01~YMD)
	    			
	    			setColStyle(row, style26, forecast-1, forecast-1);
	    			setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    			
	    			// OTHERS ON
	    			row = sheet.createRow(rowNum++);
					
	    			row.createCell(0).setCellValue(new HSSFRichTextString(rowData.get("DATALV1_NM").toString()));
	    			row.createCell(1).setCellValue(new HSSFRichTextString(rowData.get("DATALV2_NM").toString()));
		        	row.createCell(2).setCellValue("OTHERS ON");
	    			row.createCell(3).setCellValue("Hang Out"); 	// BEER ON 타이틀
	    			setColStyle(row, style3, 0, 2);	 // Non Whisky ~ OTHERS 스타일
		        	setColStyle(row, style20, 3, 3); // OTHERS ON 스타일
	    			
	    			setRowSumValue3(row, style4, data2, "DATALV3_NM", "OTHERS", "DATALV2_NM", "ON", "style4"); // OTHERS ON 값 셋팅 (P01~YMD)
	    			
	    			setColStyle(row, style26, forecast-1, forecast-1);
	    			setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    			
		        	sheet.addMergedRegion(new Region(( int) col0Num_non , ( short )3 , ( int) rowNum-1, (short )3 )); // Hang Out 타이틀 행 합병
		        	
		        	// Non Whisky ON 소계
		        	row = sheet.createRow(rowNum++);
	    			row.createCell(2).setCellValue("Non Whisky ON");
	    			setColStyle(row, style3, 0, 1);	 // Non Whisky ~ ON 스타일
		        	setColStyle(row, style5, 2, 3); // 소계 타이틀 스타일
		        	sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); // 소계 타이틀 행 합병
	    			setRowSumValue3(row, style6, data2, "DATALV1_NM", "Non Whisky", "DATALV2_NM", "ON", "style6"); // 소계 값 셋팅 (P01~YMD)
	    			
	    			setColStyle(row, style27, forecast-1, forecast-1);
					setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
		        	
	    			sheet.addMergedRegion(new Region(( int) col0Num_non , ( short )1 , ( int) rowNum-1, (short )1 )); // ON 타이틀 행 합병
	    			
	    			int col2Num_non = rowNum;
	    			
	    			// BEER OFF
					row = sheet.createRow(rowNum++);
					
	    			row.createCell(0).setCellValue("Non Whisky");
	    			row.createCell(1).setCellValue("OFF");
		        	row.createCell(2).setCellValue("BEER OFF");
	    			row.createCell(3).setCellValue("OFF"); 	// BEER OFF 타이틀
	    			setColStyle(row, style3, 0, 2);	 // Non Whisky ~ BEER 스타일
		        	setColStyle(row, style20, 3, 3); // BEER OFF 스타일
		        	
	    			setRowSumValue3(row, style4, data2, "DATALV3_NM", "BEER", "DATALV2_NM", "OFF", "style4"); // BEER OFF 값 셋팅 (P01~YMD)
	    			
	    			setColStyle(row, style26, forecast-1, forecast-1);
	    			setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    			
	    			// VODKA OFF
	    			row = sheet.createRow(rowNum++);
					
		        	row.createCell(2).setCellValue("VODKA OFF");
	    			row.createCell(3).setCellValue("Hang Out"); // VODKA OFF 타이틀
	    			setColStyle(row, style3, 0, 2);	 // Non Whisky ~ VODKA 스타일
		        	setColStyle(row, style20, 3, 3); // VODKA OFF 스타일
		        	
	    			setRowSumValue3(row, style4, data2, "DATALV3_NM", "VODKA", "DATALV2_NM", "OFF", "style4"); // VODKA OFF 값 셋팅 (P01~YMD)
	    			
	    			setColStyle(row, style26, forecast-1, forecast-1);
	    			setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    			
	    			// OTHERS OFF
	    			row = sheet.createRow(rowNum++);
					
		        	row.createCell(2).setCellValue("OTHERS OFF");
	    			row.createCell(3).setCellValue("Hang Out"); 	// BEER OFF 타이틀
	    			setColStyle(row, style3, 0, 2);	 // Non Whisky ~ OTHERS 스타일
		        	setColStyle(row, style20, 3, 3); // OTHERS OFF 스타일
	    			
	    			setRowSumValue3(row, style4, data2, "DATALV3_NM", "OTHERS", "DATALV2_NM", "OFF", "style4"); // OTHERS OFF 값 셋팅 (P01~YMD)
	    			
	    			setColStyle(row, style26, forecast-1, forecast-1);
	    			setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1); 
	    			
	    			sheet.addMergedRegion(new Region(( int) col2Num_non , ( short )3 , ( int) rowNum-1, (short )3 )); // 뒤 OFF 타이틀 행 합병
				
	    			// Non Whisky OFF 소계
		        	row = sheet.createRow(rowNum++);
		        	
	    			row.createCell(2).setCellValue("Non Whisky OFF");
	    			setColStyle(row, style3, 0, 1);	 // Non Whisky ~ OFF 스타일
		        	setColStyle(row, style5, 2, 3);  // 소계 타이틀 스타일
		        	sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )2 , ( int) rowNum-1, (short )3 )); // 소계 타이틀 행 합병
	    			setRowSumValue3(row, style6, data2, "DATALV1_NM", "Non Whisky", "DATALV2_NM", "OFF", "style6"); // 소계 값 셋팅 (P01~YMD)
	    			
	    			setColStyle(row, style27, forecast-1, forecast-1);		// 구분선
					setColStyle(row, style30, outlook-1, outlook-1);		// 구분선
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);	// 구분선
		        	
		        	sheet.addMergedRegion(new Region(( int) col2Num_non , ( short )1 , ( int) rowNum-1, (short )1 )); // OFF 타이틀 행 합병
		        	sheet.addMergedRegion(new Region(( int) col0Num_non , ( short )0 , ( int) rowNum-1, (short )0 )); // Non Whisky 타이틀 행 합병
	        	}
	        	
	        	
	        	// Whisky 전체 합계
	        	row = sheet.createRow(rowNum++);
	        	row.createCell(0).setCellValue(new HSSFRichTextString("Whisky Total"));
	        	setColStyle(row, style9, 0, 3);
    			setRowSumValue3(row, style10, data2, "DATALV1_NM", "Whisky", "", "", "style10");
    			setColStyle(row, style29, forecast-1, forecast-1);
    			setColStyle(row, style30, outlook-1, outlook-1);
	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
    			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )0 , ( int) rowNum-1, (short )3 ));
	        	
    			row = sheet.createRow(rowNum++);
    			
    			
    			// Non Whisky 전체 합계
    			if(channel_Param.equals("")){
	    			row = sheet.createRow(rowNum++);
		        	row.createCell(0).setCellValue(new HSSFRichTextString("Non Whisky Total"));
		        	setColStyle(row, style9, 0, 3);
	    			setRowSumValue3(row, style10, data2, "DATALV1_NM", "Non Whisky", "", "", "style10");
	    			setColStyle(row, style29, forecast-1, forecast-1);
	    			setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )0 , ( int) rowNum-1, (short )3 ));
	    			
	    			row = sheet.createRow(rowNum++);
    			}
	        	
    			
    			// 전체 Total 합계
	        	row = sheet.createRow(rowNum);
	        	row.createCell(0).setCellValue(new HSSFRichTextString("Total"));
	        	setColStyle(row, style59, 0, 3);
    			setRowSumValue3(row, style60, data2, "", "", "", "", "style8");
    			setColStyle(row, style61, forecast-1, forecast-1);
    			setColStyle(row, style30, outlook-1, outlook-1);
	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	        	
    			sheet.addMergedRegion(new Region(( int) rowNum , ( short )0 , ( int) rowNum, (short )3 ));
    			
    			
    			// F15 SOM
    			// Industry Depletion ForeCast [ Calc = Actual(Outlook) / DK Depletion Target.Actual(Outlook) ]
    			List data_Dep_IDF_Calc1 = (List) Dep_IDF_Calc1(indDepl, dkDepl, data2);
    			
    			for(int i=0; i<data_Dep_IDF_Calc1.size(); i++){
    				
    				seq = 0;
    				
    				Map rowData_Dep_IDF_Calc1 = (Map)data_Dep_IDF_Calc1.get(i);
    				row = sheet.getRow(row_cal1++);
    				
    				if(rowData_Dep_IDF_Calc1.get("STYLE").equals("style4")){
    					setRowValue6(row, style12, rowData_Dep_IDF_Calc1);
    					setRowValue13(row, style4, rowData_Dep_IDF_Calc1);
    					setColStyle(row, style30, som-1, som-1);
    					setColStyle(row, style31, somEnd+1, somEnd+1);
    				}else if(rowData_Dep_IDF_Calc1.get("STYLE").equals("style6")){
    					setRowValue6(row, style13, rowData_Dep_IDF_Calc1);
    					
    					// 신호등 처리
    					if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q01_SN").toString().equals("GREEN")){
    						signalStyle(row, style40, "IND_CALC1_Q01_SN");
    					}else if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q01_SN").toString().equals("YELLOW")){
    						signalStyle(row, style41, "IND_CALC1_Q01_SN");
    					}else{
    						signalStyle(row, style42, "IND_CALC1_Q01_SN");
    					}
    					
    					
    					if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q02_SN").toString().equals("GREEN")){
    						signalStyle(row, style40, "IND_CALC1_Q02_SN");
    					}else if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q02_SN").toString().equals("YELLOW")){
    						signalStyle(row, style41, "IND_CALC1_Q02_SN");
    					}else{
    						signalStyle(row, style42, "IND_CALC1_Q02_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q03_SN").toString().equals("GREEN")){
    						signalStyle(row, style40, "IND_CALC1_Q03_SN");
    					}else if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q03_SN").toString().equals("YELLOW")){
    						signalStyle(row, style41, "IND_CALC1_Q03_SN");
    					}else{
    						signalStyle(row, style42, "IND_CALC1_Q03_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q04_SN").toString().equals("GREEN")){
    						signalStyle(row, style40, "IND_CALC1_Q04_SN");
    					}else if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q04_SN").toString().equals("YELLOW")){
    						signalStyle(row, style41, "IND_CALC1_Q04_SN");
    					}else{
    						signalStyle(row, style42, "IND_CALC1_Q04_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc1.get("IND_CALC1_H01_SN").toString().equals("GREEN")){
    						signalStyle(row, style40, "IND_CALC1_H01_SN");
    					}else if(rowData_Dep_IDF_Calc1.get("IND_CALC1_H01_SN").toString().equals("YELLOW")){
    						signalStyle(row, style41, "IND_CALC1_H01_SN");
    					}else{
    						signalStyle(row, style42, "IND_CALC1_H01_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc1.get("IND_CALC1_H02_SN").toString().equals("GREEN")){
    						signalStyle(row, style40, "IND_CALC1_H02_SN");
    					}else if(rowData_Dep_IDF_Calc1.get("IND_CALC1_H02_SN").toString().equals("YELLOW")){
    						signalStyle(row, style41, "IND_CALC1_H02_SN");
    					}else{
    						signalStyle(row, style42, "IND_CALC1_H02_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc1.get("IND_CALC1_YTD_SN").toString().equals("GREEN")){
    						signalStyle(row, style40, "IND_CALC1_YTD_SN");
    					}else if(rowData_Dep_IDF_Calc1.get("IND_CALC1_YTD_SN").toString().equals("YELLOW")){
    						signalStyle(row, style41, "IND_CALC1_YTD_SN");
    					}else{
    						signalStyle(row, style42, "IND_CALC1_YTD_SN");
    					}
    				
    					setColStyle(row, style30, som-1, som-1);
    					setColStyle(row, style31, somEnd+1, somEnd+1);
    					
    				}else if(rowData_Dep_IDF_Calc1.get("STYLE").equals("style8")){
    					setRowValue6(row, style14, rowData_Dep_IDF_Calc1);
    					
    					
    					// 신호등 처리
    					if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q01_SN").toString().equals("GREEN")){
    						signalStyle(row, style43, "IND_CALC1_Q01_SN");
    					}else if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q01_SN").toString().equals("YELLOW")){
    						signalStyle(row, style44, "IND_CALC1_Q01_SN");
    					}else{
    						signalStyle(row, style45, "IND_CALC1_Q01_SN");
    					}
    					
    					
    					if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q02_SN").toString().equals("GREEN")){
    						signalStyle(row, style43, "IND_CALC1_Q02_SN");
    					}else if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q02_SN").toString().equals("YELLOW")){
    						signalStyle(row, style44, "IND_CALC1_Q02_SN");
    					}else{
    						signalStyle(row, style45, "IND_CALC1_Q02_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q03_SN").toString().equals("GREEN")){
    						signalStyle(row, style43, "IND_CALC1_Q03_SN");
    					}else if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q03_SN").toString().equals("YELLOW")){
    						signalStyle(row, style44, "IND_CALC1_Q03_SN");
    					}else{
    						signalStyle(row, style45, "IND_CALC1_Q03_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q04_SN").toString().equals("GREEN")){
    						signalStyle(row, style43, "IND_CALC1_Q04_SN");
    					}else if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q04_SN").toString().equals("YELLOW")){
    						signalStyle(row, style44, "IND_CALC1_Q04_SN");
    					}else{
    						signalStyle(row, style45, "IND_CALC1_Q04_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc1.get("IND_CALC1_H01_SN").toString().equals("GREEN")){
    						signalStyle(row, style43, "IND_CALC1_H01_SN");
    					}else if(rowData_Dep_IDF_Calc1.get("IND_CALC1_H01_SN").toString().equals("YELLOW")){
    						signalStyle(row, style44, "IND_CALC1_H01_SN");
    					}else{
    						signalStyle(row, style45, "IND_CALC1_H01_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc1.get("IND_CALC1_H02_SN").toString().equals("GREEN")){
    						signalStyle(row, style43, "IND_CALC1_H02_SN");
    					}else if(rowData_Dep_IDF_Calc1.get("IND_CALC1_H02_SN").toString().equals("YELLOW")){
    						signalStyle(row, style44, "IND_CALC1_H02_SN");
    					}else{
    						signalStyle(row, style45, "IND_CALC1_H02_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc1.get("IND_CALC1_YTD_SN").toString().equals("GREEN")){
    						signalStyle(row, style43, "IND_CALC1_YTD_SN");
    					}else if(rowData_Dep_IDF_Calc1.get("IND_CALC1_YTD_SN").toString().equals("YELLOW")){
    						signalStyle(row, style44, "IND_CALC1_YTD_SN");
    					}else{
    						signalStyle(row, style45, "IND_CALC1_YTD_SN");
    					}
    					
    					setColStyle(row, style30, som-1, som-1);
    					setColStyle(row, style31, somEnd+1, somEnd+1);
    					
    				}else if(rowData_Dep_IDF_Calc1.get("STYLE").equals("style10")){
    					setRowValue6(row, style15, rowData_Dep_IDF_Calc1);
    				
    					// 신호등 처리
    					if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q01_SN").toString().equals("GREEN")){
    						signalStyle(row, style46, "IND_CALC1_Q01_SN");
    					}else if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q01_SN").toString().equals("YELLOW")){
    						signalStyle(row, style47, "IND_CALC1_Q01_SN");
    					}else{
    						signalStyle(row, style48, "IND_CALC1_Q01_SN");
    					}
    					
    					
    					if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q02_SN").toString().equals("GREEN")){
    						signalStyle(row, style46, "IND_CALC1_Q02_SN");
    					}else if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q02_SN").toString().equals("YELLOW")){
    						signalStyle(row, style47, "IND_CALC1_Q02_SN");
    					}else{
    						signalStyle(row, style48, "IND_CALC1_Q02_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q03_SN").toString().equals("GREEN")){
    						signalStyle(row, style46, "IND_CALC1_Q03_SN");
    					}else if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q03_SN").toString().equals("YELLOW")){
    						signalStyle(row, style47, "IND_CALC1_Q03_SN");
    					}else{
    						signalStyle(row, style48, "IND_CALC1_Q03_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q04_SN").toString().equals("GREEN")){
    						signalStyle(row, style46, "IND_CALC1_Q04_SN");
    					}else if(rowData_Dep_IDF_Calc1.get("IND_CALC1_Q04_SN").toString().equals("YELLOW")){
    						signalStyle(row, style47, "IND_CALC1_Q04_SN");
    					}else{
    						signalStyle(row, style48, "IND_CALC1_Q04_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc1.get("IND_CALC1_H01_SN").toString().equals("GREEN")){
    						signalStyle(row, style46, "IND_CALC1_H01_SN");
    					}else if(rowData_Dep_IDF_Calc1.get("IND_CALC1_H01_SN").toString().equals("YELLOW")){
    						signalStyle(row, style47, "IND_CALC1_H01_SN");
    					}else{
    						signalStyle(row, style48, "IND_CALC1_H01_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc1.get("IND_CALC1_H02_SN").toString().equals("GREEN")){
    						signalStyle(row, style46, "IND_CALC1_H02_SN");
    					}else if(rowData_Dep_IDF_Calc1.get("IND_CALC1_H02_SN").toString().equals("YELLOW")){
    						signalStyle(row, style47, "IND_CALC1_H02_SN");
    					}else{
    						signalStyle(row, style48, "IND_CALC1_H02_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc1.get("IND_CALC1_YTD_SN").toString().equals("GREEN")){
    						signalStyle(row, style46, "IND_CALC1_YTD_SN");
    					}else if(rowData_Dep_IDF_Calc1.get("IND_CALC1_YTD_SN").toString().equals("YELLOW")){
    						signalStyle(row, style47, "IND_CALC1_YTD_SN");
    					}else{
    						signalStyle(row, style48, "IND_CALC1_YTD_SN");
    					}
    					
    					setColStyle(row, style30, som-1, som-1);
    					setColStyle(row, style31, somEnd+1, somEnd+1);
    					
    				}
    			}
    			
    			// Growth Rate% vs. F14
    			// DK Depletion ForeCast [ Calc = (F15 Actual (Outlook) / F14 Actual) - 1 ]
    			List data_Dep_DKDF_Calc1 = (List) Dep_DKDF_Calc1(dkDepl2);
    			
    			for(int i=0; i<data_Dep_DKDF_Calc1.size(); i++){
    				
    				seq = 0;
    				
    				Map rowData_Dep_DKDF_Calc1 = (Map)data_Dep_DKDF_Calc1.get(i);
    				
    				row = sheet.getRow(row_cal2++);
    				
    				if(rowData_Dep_DKDF_Calc1.get("TOTAL").toString().equals("TOTAL")){
    					row = sheet.getRow(row_cal2++);
    				}
    				
    				if(rowData_Dep_DKDF_Calc1.get("STYLE").equals("style4")){
    					setRowValue7(row, style12, rowData_Dep_DKDF_Calc1);
    					setRowValue14(row, style4, rowData_Dep_DKDF_Calc1);
    					setColStyle(row, style30, outlook-1, outlook-1);
    					setColStyle(row, style31, outlookEnd+signal+1, outlookEnd+signal+1);
    				}else if(rowData_Dep_DKDF_Calc1.get("STYLE").equals("style6")){
    					setRowValue7(row, style13, rowData_Dep_DKDF_Calc1);
    					
    					// 신호등 처리
    					if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q01_SN").toString().equals("GREEN")){
    						signalStyle2(row, style40, "DKF_CALC1_Q01_SN");
    					}else if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q01_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style41, "DKF_CALC1_Q01_SN");
    					}else{
    						signalStyle2(row, style42, "DKF_CALC1_Q01_SN");
    					}
    					
    					
    					if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q02_SN").toString().equals("GREEN")){
    						signalStyle2(row, style40, "DKF_CALC1_Q02_SN");
    					}else if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q02_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style41, "DKF_CALC1_Q02_SN");
    					}else{
    						signalStyle2(row, style42, "DKF_CALC1_Q02_SN");
    					}
    					
    					if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q03_SN").toString().equals("GREEN")){
    						signalStyle2(row, style40, "DKF_CALC1_Q03_SN");
    					}else if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q03_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style41, "DKF_CALC1_Q03_SN");
    					}else{
    						signalStyle2(row, style42, "DKF_CALC1_Q03_SN");
    					}
    					
    					if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q04_SN").toString().equals("GREEN")){
    						signalStyle2(row, style40, "DKF_CALC1_Q04_SN");
    					}else if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q04_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style41, "DKF_CALC1_Q04_SN");
    					}else{
    						signalStyle2(row, style42, "DKF_CALC1_Q04_SN");
    					}
    					
    					if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_H01_SN").toString().equals("GREEN")){
    						signalStyle2(row, style40, "DKF_CALC1_H01_SN");
    					}else if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_H01_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style41, "DKF_CALC1_H01_SN");
    					}else{
    						signalStyle2(row, style42, "DKF_CALC1_H01_SN");
    					}
    					
    					if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_H02_SN").toString().equals("GREEN")){
    						signalStyle2(row, style40, "DKF_CALC1_H02_SN");
    					}else if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_H02_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style41, "DKF_CALC1_H02_SN");
    					}else{
    						signalStyle2(row, style42, "DKF_CALC1_H02_SN");
    					}
    					
    					if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_YTD_SN").toString().equals("GREEN")){
    						signalStyle2(row, style40, "DKF_CALC1_YTD_SN");
    					}else if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_YTD_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style41, "DKF_CALC1_YTD_SN");
    					}else{
    						signalStyle2(row, style42, "DKF_CALC1_YTD_SN");
    					}
    					
    					setColStyle(row, style30, outlook-1, outlook-1);
    					setColStyle(row, style31, outlookEnd+signal+1, outlookEnd+signal+1);
    					
    				}else if(rowData_Dep_DKDF_Calc1.get("STYLE").equals("style8")){
    					setRowValue7(row, style14, rowData_Dep_DKDF_Calc1);
    					
    					// 신호등 처리
    					if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q01_SN").toString().equals("GREEN")){
    						signalStyle2(row, style43, "DKF_CALC1_Q01_SN");
    					}else if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q01_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style44, "DKF_CALC1_Q01_SN");
    					}else{
    						signalStyle2(row, style45, "DKF_CALC1_Q01_SN");
    					}
    					
    					
    					if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q02_SN").toString().equals("GREEN")){
    						signalStyle2(row, style43, "DKF_CALC1_Q02_SN");
    					}else if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q02_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style44, "DKF_CALC1_Q02_SN");
    					}else{
    						signalStyle2(row, style45, "DKF_CALC1_Q02_SN");
    					}
    					
    					if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q03_SN").toString().equals("GREEN")){
    						signalStyle2(row, style43, "DKF_CALC1_Q03_SN");
    					}else if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q03_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style44, "DKF_CALC1_Q03_SN");
    					}else{
    						signalStyle2(row, style45, "DKF_CALC1_Q03_SN");
    					}
    					
    					if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q04_SN").toString().equals("GREEN")){
    						signalStyle2(row, style43, "DKF_CALC1_Q04_SN");
    					}else if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q04_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style44, "DKF_CALC1_Q04_SN");
    					}else{
    						signalStyle2(row, style45, "DKF_CALC1_Q04_SN");
    					}
    					
    					if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_H01_SN").toString().equals("GREEN")){
    						signalStyle2(row, style43, "DKF_CALC1_H01_SN");
    					}else if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_H01_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style44, "DKF_CALC1_H01_SN");
    					}else{
    						signalStyle2(row, style45, "DKF_CALC1_H01_SN");
    					}
    					
    					if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_H02_SN").toString().equals("GREEN")){
    						signalStyle2(row, style43, "DKF_CALC1_H02_SN");
    					}else if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_H02_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style44, "DKF_CALC1_H02_SN");
    					}else{
    						signalStyle2(row, style45, "DKF_CALC1_H02_SN");
    					}
    					
    					if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_YTD_SN").toString().equals("GREEN")){
    						signalStyle2(row, style43, "DKF_CALC1_YTD_SN");
    					}else if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_YTD_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style44, "DKF_CALC1_YTD_SN");
    					}else{
    						signalStyle2(row, style45, "DKF_CALC1_YTD_SN");
    					}
    					
    					setColStyle(row, style30, outlook-1, outlook-1);
    					setColStyle(row, style31, outlookEnd+signal+1, outlookEnd+signal+1);
    					
    				}else if(rowData_Dep_DKDF_Calc1.get("STYLE").equals("style10")){
    					setRowValue7(row, style15, rowData_Dep_DKDF_Calc1);
    					
    					// 신호등 처리
    					if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q01_SN").toString().equals("GREEN")){
    						signalStyle2(row, style46, "DKF_CALC1_Q01_SN");
    					}else if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q01_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style47, "DKF_CALC1_Q01_SN");
    					}else{
    						signalStyle2(row, style48, "DKF_CALC1_Q01_SN");
    					}
    					
    					
    					if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q02_SN").toString().equals("GREEN")){
    						signalStyle2(row, style46, "DKF_CALC1_Q02_SN");
    					}else if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q02_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style47, "DKF_CALC1_Q02_SN");
    					}else{
    						signalStyle2(row, style48, "DKF_CALC1_Q02_SN");
    					}
    					
    					if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q03_SN").toString().equals("GREEN")){
    						signalStyle2(row, style46, "DKF_CALC1_Q03_SN");
    					}else if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q03_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style47, "DKF_CALC1_Q03_SN");
    					}else{
    						signalStyle2(row, style48, "DKF_CALC1_Q03_SN");
    					}
    					
    					if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q04_SN").toString().equals("GREEN")){
    						signalStyle2(row, style46, "DKF_CALC1_Q04_SN");
    					}else if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_Q04_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style47, "DKF_CALC1_Q04_SN");
    					}else{
    						signalStyle2(row, style48, "DKF_CALC1_Q04_SN");
    					}
    					
    					if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_H01_SN").toString().equals("GREEN")){
    						signalStyle2(row, style46, "DKF_CALC1_H01_SN");
    					}else if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_H01_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style47, "DKF_CALC1_H01_SN");
    					}else{
    						signalStyle2(row, style48, "DKF_CALC1_H01_SN");
    					}
    					
    					if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_H02_SN").toString().equals("GREEN")){
    						signalStyle2(row, style46, "DKF_CALC1_H02_SN");
    					}else if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_H02_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style47, "DKF_CALC1_H02_SN");
    					}else{
    						signalStyle2(row, style48, "DKF_CALC1_H02_SN");
    					}
    					
    					if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_YTD_SN").toString().equals("GREEN")){
    						signalStyle2(row, style46, "DKF_CALC1_YTD_SN");
    					}else if(rowData_Dep_DKDF_Calc1.get("DKF_CALC1_YTD_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style47, "DKF_CALC1_YTD_SN");
    					}else{
    						signalStyle2(row, style48, "DKF_CALC1_YTD_SN");
    					}
    					
    					setColStyle(row, style30, outlook-1, outlook-1);
    					setColStyle(row, style31, outlookEnd+signal+1, outlookEnd+signal+1);
    					
    				}
    				
    			}
    			
    			// Achievement% vs. Target
    			// DK Depletion ForeCast [ Calc = F15 Actual (Outlook) / F15 Target ]
    			List data_Dep_DKDT_Calc1 = (List) Dep_DKDT_Calc1(dkDepl2);
    			
    			for(int i=0; i<data_Dep_DKDT_Calc1.size(); i++){
    				
    				seq = 0;
    				
    				Map rowData_Dep_DKDT_Calc1 = (Map)data_Dep_DKDT_Calc1.get(i);
    				row = sheet.getRow(row_cal3++);
    				
    				if(rowData_Dep_DKDT_Calc1.get("TOTAL").toString().equals("TOTAL")){
    					row = sheet.getRow(row_cal3++);
    				}
    				
    				if(rowData_Dep_DKDT_Calc1.get("STYLE").equals("style4")){
    					setRowValue8(row, style12, rowData_Dep_DKDT_Calc1);
    					setRowValue14(row, style4, rowData_Dep_DKDT_Calc1);
    					
    					setColStyle(row, style30, outlook-1, outlook-1);
    					setColStyle(row, style31, outlookEnd+signal+1, outlookEnd+signal+1);
    					
    				}else if(rowData_Dep_DKDT_Calc1.get("STYLE").equals("style6")){
    					setRowValue8(row, style13, rowData_Dep_DKDT_Calc1);
    					
    					// 신호등 처리
    					if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q01_SN").toString().equals("GREEN")){
    						signalStyle2(row, style40, "DKT_CALC1_Q01_SN");
    					}else if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q01_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style41, "DKT_CALC1_Q01_SN");
    					}else{
    						signalStyle2(row, style42, "DKT_CALC1_Q01_SN");
    					}
    					
    					
    					if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q02_SN").toString().equals("GREEN")){
    						signalStyle2(row, style40, "DKT_CALC1_Q02_SN");
    					}else if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q02_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style41, "DKT_CALC1_Q02_SN");
    					}else{
    						signalStyle2(row, style42, "DKT_CALC1_Q02_SN");
    					}
    					
    					if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q03_SN").toString().equals("GREEN")){
    						signalStyle2(row, style40, "DKT_CALC1_Q03_SN");
    					}else if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q03_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style41, "DKT_CALC1_Q03_SN");
    					}else{
    						signalStyle2(row, style42, "DKT_CALC1_Q03_SN");
    					}
    					
    					if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q04_SN").toString().equals("GREEN")){
    						signalStyle2(row, style40, "DKT_CALC1_Q04_SN");
    					}else if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q04_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style41, "DKT_CALC1_Q04_SN");
    					}else{
    						signalStyle2(row, style42, "DKT_CALC1_Q04_SN");
    					}
    					
    					if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_H01_SN").toString().equals("GREEN")){
    						signalStyle2(row, style40, "DKT_CALC1_H01_SN");
    					}else if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_H01_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style41, "DKT_CALC1_H01_SN");
    					}else{
    						signalStyle2(row, style42, "DKT_CALC1_H01_SN");
    					}
    					
    					if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_H02_SN").toString().equals("GREEN")){
    						signalStyle2(row, style40, "DKT_CALC1_H02_SN");
    					}else if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_H02_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style41, "DKT_CALC1_H02_SN");
    					}else{
    						signalStyle2(row, style42, "DKT_CALC1_H02_SN");
    					}
    					
    					if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_YTD_SN").toString().equals("GREEN")){
    						signalStyle2(row, style40, "DKT_CALC1_YTD_SN");
    					}else if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_YTD_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style41, "DKT_CALC1_YTD_SN");
    					}else{
    						signalStyle2(row, style42, "DKT_CALC1_YTD_SN");
    					}
    					
    					setColStyle(row, style30, outlook-1, outlook-1);
    					setColStyle(row, style31, outlookEnd+signal+1, outlookEnd+signal+1);
    					
    				}else if(rowData_Dep_DKDT_Calc1.get("STYLE").equals("style8")){
    					setRowValue8(row, style14, rowData_Dep_DKDT_Calc1);
    					
    					// 신호등 처리
    					if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q01_SN").toString().equals("GREEN")){
    						signalStyle2(row, style43, "DKT_CALC1_Q01_SN");
    					}else if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q01_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style44, "DKT_CALC1_Q01_SN");
    					}else{
    						signalStyle2(row, style45, "DKT_CALC1_Q01_SN");
    					}
    					
    					
    					if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q02_SN").toString().equals("GREEN")){
    						signalStyle2(row, style43, "DKT_CALC1_Q02_SN");
    					}else if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q02_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style44, "DKT_CALC1_Q02_SN");
    					}else{
    						signalStyle2(row, style45, "DKT_CALC1_Q02_SN");
    					}
    					
    					if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q03_SN").toString().equals("GREEN")){
    						signalStyle2(row, style43, "DKT_CALC1_Q03_SN");
    					}else if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q03_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style44, "DKT_CALC1_Q03_SN");
    					}else{
    						signalStyle2(row, style45, "DKT_CALC1_Q03_SN");
    					}
    					
    					if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q04_SN").toString().equals("GREEN")){
    						signalStyle2(row, style43, "DKT_CALC1_Q04_SN");
    					}else if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q04_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style44, "DKT_CALC1_Q04_SN");
    					}else{
    						signalStyle2(row, style45, "DKT_CALC1_Q04_SN");
    					}
    					
    					if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_H01_SN").toString().equals("GREEN")){
    						signalStyle2(row, style43, "DKT_CALC1_H01_SN");
    					}else if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_H01_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style44, "DKT_CALC1_H01_SN");
    					}else{
    						signalStyle2(row, style45, "DKT_CALC1_H01_SN");
    					}
    					
    					if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_H02_SN").toString().equals("GREEN")){
    						signalStyle2(row, style43, "DKT_CALC1_H02_SN");
    					}else if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_H02_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style44, "DKT_CALC1_H02_SN");
    					}else{
    						signalStyle2(row, style45, "DKT_CALC1_H02_SN");
    					}
    					
    					if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_YTD_SN").toString().equals("GREEN")){
    						signalStyle2(row, style43, "DKT_CALC1_YTD_SN");
    					}else if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_YTD_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style44, "DKT_CALC1_YTD_SN");
    					}else{
    						signalStyle2(row, style45, "DKT_CALC1_YTD_SN");
    					}
    					
    					setColStyle(row, style30, outlook-1, outlook-1);
    					setColStyle(row, style31, outlookEnd+signal+1, outlookEnd+signal+1);
    					
    				}else if(rowData_Dep_DKDT_Calc1.get("STYLE").equals("style10")){
    					setRowValue8(row, style15, rowData_Dep_DKDT_Calc1);
    					
    					// 신호등 처리
    					if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q01_SN").toString().equals("GREEN")){
    						signalStyle2(row, style46, "DKT_CALC1_Q01_SN");
    					}else if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q01_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style47, "DKT_CALC1_Q01_SN");
    					}else{
    						signalStyle2(row, style48, "DKT_CALC1_Q01_SN");
    					}
    					
    					
    					if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q02_SN").toString().equals("GREEN")){
    						signalStyle2(row, style46, "DKT_CALC1_Q02_SN");
    					}else if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q02_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style47, "DKT_CALC1_Q02_SN");
    					}else{
    						signalStyle2(row, style48, "DKT_CALC1_Q02_SN");
    					}
    					
    					if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q03_SN").toString().equals("GREEN")){
    						signalStyle2(row, style46, "DKT_CALC1_Q03_SN");
    					}else if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q03_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style47, "DKT_CALC1_Q03_SN");
    					}else{
    						signalStyle2(row, style48, "DKT_CALC1_Q03_SN");
    					}
    					
    					if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q04_SN").toString().equals("GREEN")){
    						signalStyle2(row, style46, "DKT_CALC1_Q04_SN");
    					}else if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_Q04_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style47, "DKT_CALC1_Q04_SN");
    					}else{
    						signalStyle2(row, style48, "DKT_CALC1_Q04_SN");
    					}
    					
    					if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_H01_SN").toString().equals("GREEN")){
    						signalStyle2(row, style46, "DKT_CALC1_H01_SN");
    					}else if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_H01_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style47, "DKT_CALC1_H01_SN");
    					}else{
    						signalStyle2(row, style48, "DKT_CALC1_H01_SN");
    					}
    					
    					if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_H02_SN").toString().equals("GREEN")){
    						signalStyle2(row, style46, "DKT_CALC1_H02_SN");
    					}else if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_H02_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style47, "DKT_CALC1_H02_SN");
    					}else{
    						signalStyle2(row, style48, "DKT_CALC1_H02_SN");
    					}
    					
    					if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_YTD_SN").toString().equals("GREEN")){
    						signalStyle2(row, style46, "DKT_CALC1_YTD_SN");
    					}else if(rowData_Dep_DKDT_Calc1.get("DKT_CALC1_YTD_SN").toString().equals("YELLOW")){
    						signalStyle2(row, style47, "DKT_CALC1_YTD_SN");
    					}else{
    						signalStyle2(row, style48, "DKT_CALC1_YTD_SN");
    					}
    					
    					setColStyle(row, style30, outlook-1, outlook-1);
    					setColStyle(row, style31, outlookEnd+signal+1, outlookEnd+signal+1);
    					
    				}
    				
    			}
    			
    			// Forecast Accuracy% vs. Actual
    			// DK Depletion ForeCast [ Calc = (F15 Actual (Outlook)-F15 Forecast) / F15 Forecast ]
    			List data_Dep_DKDT_Calc2 = (List) Dep_DKDT_Calc2(dkDepl2);
    			
    			for(int i=0; i<data_Dep_DKDT_Calc2.size(); i++){
    				
    				seq = 0;
    				
    				Map rowData_Dep_IDF_Calc2 = (Map)data_Dep_DKDT_Calc2.get(i);
    				row = sheet.getRow(row_cal4++);
    				if(rowData_Dep_IDF_Calc2.get("TOTAL").toString().equals("TOTAL")){
    					row = sheet.getRow(row_cal4++);
    				}
    				
    				if(rowData_Dep_IDF_Calc2.get("STYLE").equals("style4")){
    					setRowValue9(row, style12, rowData_Dep_IDF_Calc2);
    					setRowValue15(row, style4, rowData_Dep_IDF_Calc2);
    					
    					setColStyle(row, style30, outlookEnd+signal+1, outlookEnd+signal+1);
    					setColStyle(row, style31, somEnd+signal+1, somEnd+signal+1);
    					
    				}else if(rowData_Dep_IDF_Calc2.get("STYLE").equals("style6")){
    					setRowValue9(row, style13, rowData_Dep_IDF_Calc2);
    					
    					// 신호등 처리
    					if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q01_SN").toString().equals("GREEN")){
    						signalStyle3(row, style40, "DKT_CALC2_Q01_SN");
    					}else if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q01_SN").toString().equals("YELLOW")){
    						signalStyle3(row, style41, "DKT_CALC2_Q01_SN");
    					}else{
    						signalStyle3(row, style42, "DKT_CALC2_Q01_SN");
    					}
    					
    					
    					if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q02_SN").toString().equals("GREEN")){
    						signalStyle3(row, style40, "DKT_CALC2_Q02_SN");
    					}else if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q02_SN").toString().equals("YELLOW")){
    						signalStyle3(row, style41, "DKT_CALC2_Q02_SN");
    					}else{
    						signalStyle3(row, style42, "DKT_CALC2_Q02_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q03_SN").toString().equals("GREEN")){
    						signalStyle3(row, style40, "DKT_CALC2_Q03_SN");
    					}else if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q03_SN").toString().equals("YELLOW")){
    						signalStyle3(row, style41, "DKT_CALC2_Q03_SN");
    					}else{
    						signalStyle3(row, style42, "DKT_CALC2_Q03_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q04_SN").toString().equals("GREEN")){
    						signalStyle3(row, style40, "DKT_CALC2_Q04_SN");
    					}else if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q04_SN").toString().equals("YELLOW")){
    						signalStyle3(row, style41, "DKT_CALC2_Q04_SN");
    					}else{
    						signalStyle3(row, style42, "DKT_CALC2_Q04_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_H01_SN").toString().equals("GREEN")){
    						signalStyle3(row, style40, "DKT_CALC2_H01_SN");
    					}else if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_H01_SN").toString().equals("YELLOW")){
    						signalStyle3(row, style41, "DKT_CALC2_H01_SN");
    					}else{
    						signalStyle3(row, style42, "DKT_CALC2_H01_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_H02_SN").toString().equals("GREEN")){
    						signalStyle3(row, style40, "DKT_CALC2_H02_SN");
    					}else if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_H02_SN").toString().equals("YELLOW")){
    						signalStyle3(row, style41, "DKT_CALC2_H02_SN");
    					}else{
    						signalStyle3(row, style42, "DKT_CALC2_H02_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_YTD_SN").toString().equals("GREEN")){
    						signalStyle3(row, style40, "DKT_CALC2_YTD_SN");
    					}else if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_YTD_SN").toString().equals("YELLOW")){
    						signalStyle3(row, style41, "DKT_CALC2_YTD_SN");
    					}else{
    						signalStyle3(row, style42, "DKT_CALC2_YTD_SN");
    					}
    					
    					setColStyle(row, style30, outlookEnd+signal+1, outlookEnd+signal+1);
    					setColStyle(row, style31, somEnd+signal+1, somEnd+signal+1);
    					
    				}else if(rowData_Dep_IDF_Calc2.get("STYLE").equals("style8")){
    					setRowValue9(row, style14, rowData_Dep_IDF_Calc2);
    					
    					// 신호등 처리
    					if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q01_SN").toString().equals("GREEN")){
    						signalStyle3(row, style43, "DKT_CALC2_Q01_SN");
    					}else if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q01_SN").toString().equals("YELLOW")){
    						signalStyle3(row, style44, "DKT_CALC2_Q01_SN");
    					}else{
    						signalStyle3(row, style45, "DKT_CALC2_Q01_SN");
    					}
    					
    					
    					if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q02_SN").toString().equals("GREEN")){
    						signalStyle3(row, style43, "DKT_CALC2_Q02_SN");
    					}else if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q02_SN").toString().equals("YELLOW")){
    						signalStyle3(row, style44, "DKT_CALC2_Q02_SN");
    					}else{
    						signalStyle3(row, style45, "DKT_CALC2_Q02_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q03_SN").toString().equals("GREEN")){
    						signalStyle3(row, style43, "DKT_CALC2_Q03_SN");
    					}else if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q03_SN").toString().equals("YELLOW")){
    						signalStyle3(row, style44, "DKT_CALC2_Q03_SN");
    					}else{
    						signalStyle3(row, style45, "DKT_CALC2_Q03_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q04_SN").toString().equals("GREEN")){
    						signalStyle3(row, style43, "DKT_CALC2_Q04_SN");
    					}else if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q04_SN").toString().equals("YELLOW")){
    						signalStyle3(row, style44, "DKT_CALC2_Q04_SN");
    					}else{
    						signalStyle3(row, style45, "DKT_CALC2_Q04_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_H01_SN").toString().equals("GREEN")){
    						signalStyle3(row, style43, "DKT_CALC2_H01_SN");
    					}else if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_H01_SN").toString().equals("YELLOW")){
    						signalStyle3(row, style44, "DKT_CALC2_H01_SN");
    					}else{
    						signalStyle3(row, style45, "DKT_CALC2_H01_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_H02_SN").toString().equals("GREEN")){
    						signalStyle3(row, style43, "DKT_CALC2_H02_SN");
    					}else if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_H02_SN").toString().equals("YELLOW")){
    						signalStyle3(row, style44, "DKT_CALC2_H02_SN");
    					}else{
    						signalStyle3(row, style45, "DKT_CALC2_H02_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_YTD_SN").toString().equals("GREEN")){
    						signalStyle3(row, style43, "DKT_CALC2_YTD_SN");
    					}else if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_YTD_SN").toString().equals("YELLOW")){
    						signalStyle3(row, style44, "DKT_CALC2_YTD_SN");
    					}else{
    						signalStyle3(row, style45, "DKT_CALC2_YTD_SN");
    					}
    					
    					setColStyle(row, style30, outlookEnd+signal+1, outlookEnd+signal+1);
    					setColStyle(row, style31, somEnd+signal+1, somEnd+signal+1);
    					
    				}else if(rowData_Dep_IDF_Calc2.get("STYLE").equals("style10")){
    					setRowValue9(row, style15, rowData_Dep_IDF_Calc2);
    					
    					// 신호등 처리
    					if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q01_SN").toString().equals("GREEN")){
    						signalStyle3(row, style46, "DKT_CALC2_Q01_SN");
    					}else if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q01_SN").toString().equals("YELLOW")){
    						signalStyle3(row, style47, "DKT_CALC2_Q01_SN");
    					}else{
    						signalStyle3(row, style48, "DKT_CALC2_Q01_SN");
    					}
    					
    					
    					if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q02_SN").toString().equals("GREEN")){
    						signalStyle3(row, style46, "DKT_CALC2_Q02_SN");
    					}else if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q02_SN").toString().equals("YELLOW")){
    						signalStyle3(row, style47, "DKT_CALC2_Q02_SN");
    					}else{
    						signalStyle3(row, style48, "DKT_CALC2_Q02_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q03_SN").toString().equals("GREEN")){
    						signalStyle3(row, style46, "DKT_CALC2_Q03_SN");
    					}else if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q03_SN").toString().equals("YELLOW")){
    						signalStyle3(row, style47, "DKT_CALC2_Q03_SN");
    					}else{
    						signalStyle3(row, style48, "DKT_CALC2_Q03_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q04_SN").toString().equals("GREEN")){
    						signalStyle3(row, style46, "DKT_CALC2_Q04_SN");
    					}else if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_Q04_SN").toString().equals("YELLOW")){
    						signalStyle3(row, style47, "DKT_CALC2_Q04_SN");
    					}else{
    						signalStyle3(row, style48, "DKT_CALC2_Q04_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_H01_SN").toString().equals("GREEN")){
    						signalStyle3(row, style46, "DKT_CALC2_H01_SN");
    					}else if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_H01_SN").toString().equals("YELLOW")){
    						signalStyle3(row, style47, "DKT_CALC2_H01_SN");
    					}else{
    						signalStyle3(row, style48, "DKT_CALC2_H01_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_H02_SN").toString().equals("GREEN")){
    						signalStyle3(row, style46, "DKT_CALC2_H02_SN");
    					}else if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_H02_SN").toString().equals("YELLOW")){
    						signalStyle3(row, style47, "DKT_CALC2_H02_SN");
    					}else{
    						signalStyle3(row, style48, "DKT_CALC2_H02_SN");
    					}
    					
    					if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_YTD_SN").toString().equals("GREEN")){
    						signalStyle3(row, style46, "DKT_CALC2_YTD_SN");
    					}else if(rowData_Dep_IDF_Calc2.get("DKT_CALC2_YTD_SN").toString().equals("YELLOW")){
    						signalStyle3(row, style47, "DKT_CALC2_YTD_SN");
    					}else{
    						signalStyle3(row, style48, "DKT_CALC2_YTD_SN");
    					}
    					
    					setColStyle(row, style30, outlookEnd+signal+1, outlookEnd+signal+1);
    					setColStyle(row, style31, somEnd+signal+1, somEnd+signal+1);
    					
    				}
    				
    			}
    			
			}
			
			if(channel_Param.equals("") || channel_Param.equals("ON")){
			
				/** Note G Forecast (ON channel) **/
				if (data3.size() > 0 ){
					
					//----------------------------------------
					rowNum = rowNum+3;
					HSSFRow row = sheet.createRow(rowNum);
		        	HSSFCell cell = row.createCell(0);
		        	cell.setCellValue(new HSSFRichTextString("Note G Forecast (ON channel)"));
		        	cell.setCellStyle(style1);
		        	//----------------------------------------
		        	row = sheet.createRow(rowNum+1);
		        	row.createCell(actual).setCellValue(new HSSFRichTextString(Lfy_Param+" Actual"));
		        	row.createCell(forecast).setCellValue(new HSSFRichTextString(fy_Param+" Forecast"));
		        	row.createCell(outlook).setCellValue(new HSSFRichTextString("Growth Rate% vs. "+Lfy_Param));
		        	setColStyle(row, style24, 0, 0);
		        	setColStyle(row, style22, 1, forecastEnd);
		        	setColStyle(row, style24, outlook, outlook);
		        	setColStyle(row, style22, outlook+1, (outlookEnd+signal));
		        	//----------------------------------------
		        	row = sheet.createRow(rowNum+2);
		        	
		        	if(periodChk_Param.equals("Y")){
		        		row.createCell(4).setCellValue(new HSSFRichTextString("P01"));
			        	row.createCell(5).setCellValue(new HSSFRichTextString("P02"));
			        	row.createCell(6).setCellValue(new HSSFRichTextString("P03"));
			        	row.createCell(7).setCellValue(new HSSFRichTextString("P04"));
			        	row.createCell(8).setCellValue(new HSSFRichTextString("P05"));
			        	row.createCell(9).setCellValue(new HSSFRichTextString("P06"));
			        	row.createCell(10).setCellValue(new HSSFRichTextString("P07"));
			        	row.createCell(11).setCellValue(new HSSFRichTextString("P08"));
			        	row.createCell(12).setCellValue(new HSSFRichTextString("P09"));
			        	row.createCell(13).setCellValue(new HSSFRichTextString("P10"));
			        	row.createCell(14).setCellValue(new HSSFRichTextString("P11"));
			        	row.createCell(15).setCellValue(new HSSFRichTextString("P12"));
			        	row.createCell(16).setCellValue(new HSSFRichTextString("Q1"));
			        	row.createCell(17).setCellValue(new HSSFRichTextString("Q2"));
			        	row.createCell(18).setCellValue(new HSSFRichTextString("Q3"));
			        	row.createCell(19).setCellValue(new HSSFRichTextString("Q4"));
			        	row.createCell(20).setCellValue(new HSSFRichTextString("H1"));
			        	row.createCell(21).setCellValue(new HSSFRichTextString("H2"));
			        	row.createCell(22).setCellValue(new HSSFRichTextString("YTD"));
			        	row.createCell(23).setCellValue(new HSSFRichTextString("P01"));
			        	row.createCell(24).setCellValue(new HSSFRichTextString("P02"));
			        	row.createCell(25).setCellValue(new HSSFRichTextString("P03"));
			        	row.createCell(26).setCellValue(new HSSFRichTextString("P04"));
			        	row.createCell(27).setCellValue(new HSSFRichTextString("P05"));
			        	row.createCell(28).setCellValue(new HSSFRichTextString("P06"));
			        	row.createCell(29).setCellValue(new HSSFRichTextString("P07"));
			        	row.createCell(30).setCellValue(new HSSFRichTextString("P08"));
			        	row.createCell(31).setCellValue(new HSSFRichTextString("P09"));
			        	row.createCell(32).setCellValue(new HSSFRichTextString("P10"));
			        	row.createCell(33).setCellValue(new HSSFRichTextString("P11"));
			        	row.createCell(34).setCellValue(new HSSFRichTextString("P12"));
			        	row.createCell(35).setCellValue(new HSSFRichTextString("Q1"));
			        	row.createCell(36).setCellValue(new HSSFRichTextString("Q2"));
			        	row.createCell(37).setCellValue(new HSSFRichTextString("Q3"));
			        	row.createCell(38).setCellValue(new HSSFRichTextString("Q4"));
			        	row.createCell(39).setCellValue(new HSSFRichTextString("H1"));
			        	row.createCell(40).setCellValue(new HSSFRichTextString("H2"));
			        	row.createCell(41).setCellValue(new HSSFRichTextString("YTD"));
			        	
			        	row.createCell(43).setCellValue(new HSSFRichTextString("P01"));
			        	row.createCell(44).setCellValue(new HSSFRichTextString("P02"));
			        	row.createCell(45).setCellValue(new HSSFRichTextString("P03"));
			        	row.createCell(46).setCellValue(new HSSFRichTextString("P04"));
			        	row.createCell(47).setCellValue(new HSSFRichTextString("P05"));
			        	row.createCell(48).setCellValue(new HSSFRichTextString("P06"));
			        	row.createCell(49).setCellValue(new HSSFRichTextString("P07"));
			        	row.createCell(50).setCellValue(new HSSFRichTextString("P08"));
			        	row.createCell(51).setCellValue(new HSSFRichTextString("P09"));
			        	row.createCell(52).setCellValue(new HSSFRichTextString("P10"));
			        	row.createCell(53).setCellValue(new HSSFRichTextString("P11"));
			        	row.createCell(54).setCellValue(new HSSFRichTextString("P12"));
			        	row.createCell(55).setCellValue(new HSSFRichTextString("Q1"));
			        	row.createCell(56).setCellValue(new HSSFRichTextString("Q2"));
			        	row.createCell(57).setCellValue(new HSSFRichTextString("Q3"));
			        	row.createCell(58).setCellValue(new HSSFRichTextString("Q4"));
			        	row.createCell(59).setCellValue(new HSSFRichTextString("H1"));
			        	row.createCell(60).setCellValue(new HSSFRichTextString("H2"));
			        	row.createCell(61).setCellValue(new HSSFRichTextString("YTD"));
			        	row.createCell(62).setCellValue(new HSSFRichTextString("신호등Q1"));
			        	row.createCell(63).setCellValue(new HSSFRichTextString("신호등Q2"));
			        	row.createCell(64).setCellValue(new HSSFRichTextString("신호등Q3"));
			        	row.createCell(65).setCellValue(new HSSFRichTextString("신호등Q4"));
			        	row.createCell(66).setCellValue(new HSSFRichTextString("신호등H1"));
			        	row.createCell(67).setCellValue(new HSSFRichTextString("신호등H2"));
			        	row.createCell(68).setCellValue(new HSSFRichTextString("신호등YTD"));
			        	
			        	
		        	}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
	        			row.createCell(4).setCellValue(new HSSFRichTextString("P01"));
	    	        	row.createCell(5).setCellValue(new HSSFRichTextString("P02"));
	    	        	row.createCell(6).setCellValue(new HSSFRichTextString("P03"));
	    	        	row.createCell(7).setCellValue(new HSSFRichTextString("Q1"));
	    	        	row.createCell(8).setCellValue(new HSSFRichTextString("H1"));
	    	        	row.createCell(9).setCellValue(new HSSFRichTextString("YTD"));
	    	        	row.createCell(10).setCellValue(new HSSFRichTextString("P01"));
	    	        	row.createCell(11).setCellValue(new HSSFRichTextString("P02"));
	    	        	row.createCell(12).setCellValue(new HSSFRichTextString("P03"));
	    	        	row.createCell(13).setCellValue(new HSSFRichTextString("Q1"));
	    	        	row.createCell(14).setCellValue(new HSSFRichTextString("H1"));
	    	        	row.createCell(15).setCellValue(new HSSFRichTextString("YTD"));
	    	        	
	    	        	row.createCell(17).setCellValue(new HSSFRichTextString("P01"));
	    	        	row.createCell(18).setCellValue(new HSSFRichTextString("P02"));
	    	        	row.createCell(19).setCellValue(new HSSFRichTextString("P03"));
	    	        	row.createCell(20).setCellValue(new HSSFRichTextString("Q1"));
	    	        	row.createCell(21).setCellValue(new HSSFRichTextString("H1"));
	    	        	row.createCell(22).setCellValue(new HSSFRichTextString("YTD"));
	    	        	row.createCell(23).setCellValue(new HSSFRichTextString("신호등Q1"));
			        	row.createCell(24).setCellValue(new HSSFRichTextString("신호등H1"));
			        	row.createCell(25).setCellValue(new HSSFRichTextString("신호등YTD"));
	    	        	
	        		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
	        			row.createCell(4).setCellValue(new HSSFRichTextString("P04"));
	    	        	row.createCell(5).setCellValue(new HSSFRichTextString("P05"));
	    	        	row.createCell(6).setCellValue(new HSSFRichTextString("P06"));
	    	        	row.createCell(7).setCellValue(new HSSFRichTextString("Q1"));
	    	        	row.createCell(8).setCellValue(new HSSFRichTextString("Q2"));
	    	        	row.createCell(9).setCellValue(new HSSFRichTextString("H1"));
	    	        	row.createCell(10).setCellValue(new HSSFRichTextString("YTD"));
	    	        	row.createCell(11).setCellValue(new HSSFRichTextString("P04"));
	    	        	row.createCell(12).setCellValue(new HSSFRichTextString("P05"));
	    	        	row.createCell(13).setCellValue(new HSSFRichTextString("P06"));
	    	        	row.createCell(14).setCellValue(new HSSFRichTextString("Q1"));
	    	        	row.createCell(15).setCellValue(new HSSFRichTextString("Q2"));
	    	        	row.createCell(16).setCellValue(new HSSFRichTextString("H1"));
	    	        	row.createCell(17).setCellValue(new HSSFRichTextString("YTD"));
	    	        	
	    	        	row.createCell(19).setCellValue(new HSSFRichTextString("P04"));
	    	        	row.createCell(20).setCellValue(new HSSFRichTextString("P05"));
	    	        	row.createCell(21).setCellValue(new HSSFRichTextString("P06"));
	    	        	row.createCell(22).setCellValue(new HSSFRichTextString("Q1"));
	    	        	row.createCell(23).setCellValue(new HSSFRichTextString("Q2"));
	    	        	row.createCell(24).setCellValue(new HSSFRichTextString("H1"));
	    	        	row.createCell(25).setCellValue(new HSSFRichTextString("YTD"));
	    	        	row.createCell(26).setCellValue(new HSSFRichTextString("신호등Q1"));
			        	row.createCell(27).setCellValue(new HSSFRichTextString("신호등Q2"));
			        	row.createCell(28).setCellValue(new HSSFRichTextString("신호등H1"));
			        	row.createCell(29).setCellValue(new HSSFRichTextString("신호등YTD"));
	    	        	
		        	}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
		        		row.createCell(4).setCellValue(new HSSFRichTextString("P07"));
			        	row.createCell(5).setCellValue(new HSSFRichTextString("P08"));
			        	row.createCell(6).setCellValue(new HSSFRichTextString("P09"));
			        	row.createCell(7).setCellValue(new HSSFRichTextString("Q2"));
			        	row.createCell(8).setCellValue(new HSSFRichTextString("Q3"));
			        	row.createCell(9).setCellValue(new HSSFRichTextString("H1"));
			        	row.createCell(10).setCellValue(new HSSFRichTextString("H2"));
			        	row.createCell(11).setCellValue(new HSSFRichTextString("YTD"));
			        	row.createCell(12).setCellValue(new HSSFRichTextString("P07"));
			        	row.createCell(13).setCellValue(new HSSFRichTextString("P08"));
			        	row.createCell(14).setCellValue(new HSSFRichTextString("P09"));
			        	row.createCell(15).setCellValue(new HSSFRichTextString("Q2"));
			        	row.createCell(16).setCellValue(new HSSFRichTextString("Q3"));
			        	row.createCell(17).setCellValue(new HSSFRichTextString("H1"));
			        	row.createCell(18).setCellValue(new HSSFRichTextString("H2"));
			        	row.createCell(19).setCellValue(new HSSFRichTextString("YTD"));
			        	
			        	row.createCell(21).setCellValue(new HSSFRichTextString("P07"));
			        	row.createCell(22).setCellValue(new HSSFRichTextString("P08"));
			        	row.createCell(23).setCellValue(new HSSFRichTextString("P09"));
			        	row.createCell(24).setCellValue(new HSSFRichTextString("Q2"));
			        	row.createCell(25).setCellValue(new HSSFRichTextString("Q3"));
			        	row.createCell(26).setCellValue(new HSSFRichTextString("H1"));
			        	row.createCell(27).setCellValue(new HSSFRichTextString("H2"));
			        	row.createCell(28).setCellValue(new HSSFRichTextString("YTD"));
			        	row.createCell(29).setCellValue(new HSSFRichTextString("신호등Q2"));
			        	row.createCell(30).setCellValue(new HSSFRichTextString("신호등Q3"));
			        	row.createCell(31).setCellValue(new HSSFRichTextString("신호등H1"));
			        	row.createCell(32).setCellValue(new HSSFRichTextString("신호등H2"));
			        	row.createCell(33).setCellValue(new HSSFRichTextString("신호등YTD"));
			        	
		        	}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
		        		row.createCell(4).setCellValue(new HSSFRichTextString("P10"));
			        	row.createCell(5).setCellValue(new HSSFRichTextString("P11"));
			        	row.createCell(6).setCellValue(new HSSFRichTextString("P12"));
			        	row.createCell(7).setCellValue(new HSSFRichTextString("Q3"));
			        	row.createCell(8).setCellValue(new HSSFRichTextString("Q4"));
			        	row.createCell(9).setCellValue(new HSSFRichTextString("H1"));
			        	row.createCell(10).setCellValue(new HSSFRichTextString("H2"));
			        	row.createCell(11).setCellValue(new HSSFRichTextString("YTD"));
			        	row.createCell(12).setCellValue(new HSSFRichTextString("P10"));
			        	row.createCell(13).setCellValue(new HSSFRichTextString("P11"));
			        	row.createCell(14).setCellValue(new HSSFRichTextString("P12"));
			        	row.createCell(15).setCellValue(new HSSFRichTextString("Q3"));
			        	row.createCell(16).setCellValue(new HSSFRichTextString("Q4"));
			        	row.createCell(17).setCellValue(new HSSFRichTextString("H1"));
			        	row.createCell(18).setCellValue(new HSSFRichTextString("H2"));
			        	row.createCell(19).setCellValue(new HSSFRichTextString("YTD"));
			        	
			        	row.createCell(21).setCellValue(new HSSFRichTextString("P10"));
			        	row.createCell(22).setCellValue(new HSSFRichTextString("P11"));
			        	row.createCell(23).setCellValue(new HSSFRichTextString("P12"));
			        	row.createCell(24).setCellValue(new HSSFRichTextString("Q3"));
			        	row.createCell(25).setCellValue(new HSSFRichTextString("Q4"));
			        	row.createCell(26).setCellValue(new HSSFRichTextString("H1"));
			        	row.createCell(27).setCellValue(new HSSFRichTextString("H2"));
			        	row.createCell(28).setCellValue(new HSSFRichTextString("YTD"));
			        	row.createCell(29).setCellValue(new HSSFRichTextString("신호등Q3"));
			        	row.createCell(30).setCellValue(new HSSFRichTextString("신호등Q4"));
			        	row.createCell(31).setCellValue(new HSSFRichTextString("신호등H1"));
			        	row.createCell(32).setCellValue(new HSSFRichTextString("신호등H2"));
			        	row.createCell(33).setCellValue(new HSSFRichTextString("신호등YTD"));
			        	
		        	}
		        	
		        	setColStyle(row, style25, 0, 0);
		        	setColStyle(row, style23, 1, 3);
		        	setColStyle(row, style2, 4, forecast-2);
		        	setColStyle(row, style23, forecast-1, forecast-1);
		        	setColStyle(row, style2, forecast, forecastEnd-1);
		        	setColStyle(row, style23, forecastEnd, forecastEnd);
		        	setColStyle(row, style25, outlook, outlook);
		        	setColStyle(row, style2, outlook+1, (outlookEnd+signal)-1);
		        	setColStyle(row, style23, (outlookEnd+signal), (outlookEnd+signal));
		        	
		        	
		        	sheet.addMergedRegion(new Region(( int) rowNum+1 , ( short )0 , ( int) rowNum+2, (short )3 ));
		        	sheet.addMergedRegion(new Region(( int) rowNum+1 , ( short )4 , ( int) rowNum+1, (short )(forecast-1) ));
		        	sheet.addMergedRegion(new Region(( int) rowNum+1 , ( short )forecast , ( int) rowNum+1, (short )forecastEnd ));
		        	sheet.addMergedRegion(new Region(( int) rowNum+1 , ( short )outlook , ( int) rowNum+1, (short )(outlookEnd+signal) ));
	
		        	row_cal5 = rowNum+3;
		        	rowNum = rowNum+3;
		        	
		        	String col0 = "", col1 = "";
		        	int col0Num = rowNum;
		        			
		        	for (int i=0; i < data3.size(); i++) {
		        		
		        		Map rowData = (Map)data3.get(i);
		        		
		        		if(!rowData.get("DATALV2").toString().equals("0")){ // hidden 데이터 제외
			        		
		        			row = sheet.createRow(rowNum++);
		        			
		        			if (col0.equals("")) {
		        				// Total Account Plan Volume
		        				col0 = rowData.get("DATALV1_NM").toString();
		        				row.createCell(0).setCellValue(new HSSFRichTextString(rowData.get("DATALV1_NM").toString()));
			        			row.createCell(1).setCellValue(new HSSFRichTextString(rowData.get("DATALV2_NM").toString()));
			        			setColStyle(row, style58, 0, 0);
			        			setColStyle(row, style11, 1, 3);
			    	        	setRowValue4(row, style4, rowData, "style4");
			    	        	setColStyle(row, style26, forecast-1, forecast-1);
			    	        	setColStyle(row, style30, outlook-1, outlook-1);
			    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			    	        	sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )1 , ( int) rowNum-1, (short )3 ));
			    	        	
			    	        	// Total Dependency Rate
			    	        	row = sheet.createRow(rowNum++);
		        				row.createCell(1).setCellValue(new HSSFRichTextString("Total Dependency Rate"));
		        				setColStyle(row, style58, 0, 0);
			        			setColStyle(row, style11, 1, 3);
			        			/**************************
			        			   (1) Total Accout Plan Volume / DK Depletion Forecast.Actual Volume실적  *100 --LV1 값이 LOCAL, INT`L인 경우		
			        			   (2) Total Accout Plan Volume / Shipment Forecast.Forecast.Actual Volume실적 *100  -- LV1값이 VODKA, BEER인 경우
			        			**************************/
			        			if(rowData.get("DATALV1_NM").toString().equals("LOCAL")||rowData.get("DATALV1_NM").toString().equals("INT`L")){
			        				// [Note G ForeCast] LOCAL에 2번째줄 Rate
			        				setRowValue20(row, style49, rowData, "style4",data2, "ON", "LOCAL", team_Param);
			        				
			        			}else{
			        				/*
			        				setRowValue18(row, style4, rowData, "style4");
			        				*/
			        			}
			        			
			        			setColStyle(row, style55, forecast-1, forecast-1);
			    	        	setColStyle(row, style30, outlook-1, outlook-1);
			    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			        			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )1 , ( int) rowNum-1, (short )3 ));
			        			
		        			}
		        			
		        			else if (rowData.get("DATALV1_NM").toString().equals(col0)) {
		        				
			        			// Total Note G Spending(K KRW)
			        			row.createCell(1).setCellValue(new HSSFRichTextString(rowData.get("DATALV2_NM").toString()));
			        			setColStyle(row, style58, 0, 0);
			        			setColStyle(row, style11, 1, 3);
			    	        	setRowValue4(row, style4, rowData, "style4");
			    	        	setColStyle(row, style26, forecast-1, forecast-1);
			    	        	setColStyle(row, style30, outlook-1, outlook-1);
			    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			    	        	sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )1 , ( int) rowNum-1, (short )3 ));
			    	        	
			    	        	// Total Note G Case Rate
			    	        	row = sheet.createRow(rowNum++);
			    	        	row.createCell(1).setCellValue(new HSSFRichTextString("Total Note G Case Rate"));
			    	        	setColStyle(row, style58, 0, 0);
			        			setColStyle(row, style33, 1, 3);
			        			/**************************
			        			   (1) Total Note G Spending(K KRW) / DK Depletion Forecast.Actual Volume실적   -- LV1값이 LPB, GPB인 경우						
	 							   (2) Total Note G Spending(K KRW) / Shipment Forecast.Forecast.Actual Volume실적   -- VL1값이 Vodka, Beer인 경우	
			        			**************************/
			        			if(rowData.get("DATALV1_NM").toString().equals("LOCAL")||rowData.get("DATALV1_NM").toString().equals("INT`L")){
			        				if(rowData.get("DATALV1_NM").toString().equals("LOCAL")){
			        					// [Note G FC Actual, ForeCast] LOCAL에 4번째줄 Rate
			        					setRowValue20(row, style62, rowData, "style4",data2,"ON","LOCAL", team_Param);
			        				}else if(rowData.get("DATALV1_NM").toString().equals("INT`L")){
			        					// [Note G FC Actual, ForeCast] INT`L에 4번째줄 Rate
			        					setRowValue20(row, style62, rowData, "style4",data2,"ON","INT`L", team_Param);
			        				}
			        			}else{
			        				if(rowData.get("DATALV1_NM").toString().equals("VODKA")){
			        					
			        					// [Note G FC Actual, ForeCast] VODKA에 4번째줄 Rate
			        					setRowValue21(row, style62, rowData, "style4",data3,"0","VODKA", team_Param);
			        					
			        				}else if(rowData.get("DATALV1_NM").toString().equals("BEER")){
			        					
			        					// [Note G FC Actual, ForeCast] BEER에 4번째줄 Rate
			        					setRowValue21(row, style62, rowData, "style4",data3,"0","BEER", team_Param);
		
			        				}
			        			}
			        			setColStyle(row, style63, forecast-1, forecast-1);
			    	        	setColStyle(row, style30, outlook-1, outlook-1);
			    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			        			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )1 , ( int) rowNum-1, (short )3 ));
			        			
			    	        	// 모든 값 셋팅하고 마지막 값일 때 타이틀 합병
		        				if(i == (data3.size()-1)){
		        					setColStyle(row, style21, 1, 3);
		        					sheet.addMergedRegion(new Region(( int) col0Num , ( short )0 , ( int) rowNum-1, (short )0 ));
		        				}
			        			
		        			}
		        			
		        			else if (!rowData.get("DATALV1_NM").toString().equals(col0)) { // Local->Int`l,Vodka,Beer
			        			
		        				sheet.addMergedRegion(new Region(( int) col0Num , ( short )0 , ( int) rowNum-2, (short )0 ));  // 타이틀 합병
		        				
			        			// 뒤에 새로 나오는 부분 값 셋팅
		        				// Total Account Plan Volume
			        			row.createCell(0).setCellValue(new HSSFRichTextString(rowData.get("DATALV1_NM").toString()));
			    	        	row.createCell(1).setCellValue(new HSSFRichTextString(rowData.get("DATALV2_NM").toString()));
			    	        	setColStyle(row, style58, 0, 0);
			        			setColStyle(row, style11, 1, 3);
			    	        	setRowValue4(row, style4, rowData, "style4");
			    	        	setColStyle(row, style26, forecast-1, forecast-1);
			    	        	setColStyle(row, style30, outlook-1, outlook-1);
			    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			    	        	sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )1 , ( int) rowNum-1, (short )3 ));
			    	        	
			    	        	col0 = rowData.get("DATALV1_NM").toString();
			        			col0Num = rowNum-1;
			        			
			    	        	// Total Dependency Rate
			    	        	row = sheet.createRow(rowNum++);
		        				row.createCell(1).setCellValue(new HSSFRichTextString("Total Dependency Rate"));
		        				setColStyle(row, style58, 0, 0);
			        			setColStyle(row, style11, 1, 3);
			        			/**************************
			        			   (1) Total Accout Plan Volume / DK Depletion Forecast.Actual Volume실적  *100 --LV1 값이 LOCAL, INT`L인 경우		
			        			   (2) Total Accout Plan Volume / Shipment Forecast.Forecast.Actual Volume실적 *100  -- LV1값이 VODKA, BEER인 경우
			        			**************************/
			        			if(rowData.get("DATALV1_NM").toString().equals("LOCAL")||rowData.get("DATALV1_NM").toString().equals("INT`L")){
			        				
			        				// [Note G FC Actual, ForeCast] INT`L에 2번째줄 Rate
			        				setRowValue20(row, style49, rowData, "style4", data2, "ON", "INT`L", team_Param);
			        				
			        			}else{
			        				if(rowData.get("DATALV1_NM").toString().equals("VODKA")){
			        					
			        					// [Note G ForeCast] Vodka에 2번째줄 Rate
			        					setRowValue21(row, style49, rowData, "style4",data3,"0","VODKA", team_Param);
			        					
			        				}else if(rowData.get("DATALV1_NM").toString().equals("BEER")){

			        					// [Note G ForeCast] BEER에 2번째줄 Rate
			        					 setRowValue21(row, style49, rowData, "style4", data3, "0" , "BEER", team_Param);

			        				}
			        			}
			        			
			        			setColStyle(row, style55, forecast-1, forecast-1);
			    	        	setColStyle(row, style30, outlook-1, outlook-1);
			    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			        			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )1 , ( int) rowNum-1, (short )3 ));
			        			
							}
			        		
		        		}
		        		
		        	}
		        	
		        	// Total Dependency Rate
		        	row = sheet.createRow(rowNum++);
		        	row.createCell(0).setCellValue(new HSSFRichTextString("Total Dependency Rate"));
		        	setColStyle(row, style9, 0, 3);
	    			setRowSumValue4(row, style15, data3, "DATALV2", "10", "", "", "style10");
	    			setColStyle(row, style32, forecast-1, forecast-1);
	    			setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )0 , ( int) rowNum-1, (short )3 ));
		        	
	    			row = sheet.createRow(rowNum++);
	    			
	    			// Total Note G Spending 합계
	    			row = sheet.createRow(rowNum++);
		        	row.createCell(0).setCellValue(new HSSFRichTextString("Total Note G Spending"));
		        	setColStyle(row, style9, 0, 3);
	    			setRowSumValue4(row, style10, data3, "DATALV2", "30", "", "", "style10");
	    			setColStyle(row, style29, forecast-1, forecast-1);
	    			setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )0 , ( int) rowNum-1, (short )3 ));
	    			
	    			row = sheet.createRow(rowNum++);
	    			
	    			// Whisky Note G Spending 합계
		        	row = sheet.createRow(rowNum);
		        	row.createCell(0).setCellValue(new HSSFRichTextString("Whisky Note G Spending"));
		        	setColStyle(row, style9, 0, 3);
	    			setRowSumValue4(row, style10, data3, "DATALV2", "30", "DATALV1_NM", "", "style10");
	    			setColStyle(row, style29, forecast-1, forecast-1);
	    			setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    			sheet.addMergedRegion(new Region(( int) rowNum , ( short )0 , ( int) rowNum, (short )3 ));
	 
				}
				
				/** Note G Target (ON Channel) **/
				if (data3.size() > 0 ){
					
					//----------------------------------------
					rowNum = rowNum+3;
					HSSFRow row = sheet.createRow(rowNum);
		        	HSSFCell cell = row.createCell(0);
		        	cell.setCellValue(new HSSFRichTextString("Note G Target (ON Channel)"));
		        	cell.setCellStyle(style1);
		        	//----------------------------------------
		        	row = sheet.createRow(rowNum+1);
		        	row.createCell(actual).setCellValue(new HSSFRichTextString(fy_Param+" Actual (Outlook)"));
		        	row.createCell(forecast).setCellValue(new HSSFRichTextString(fy_Param+" Target"));
		        	row.createCell(outlook).setCellValue(new HSSFRichTextString("Achievement% vs. Target"));
		        	row.createCell(som+signal).setCellValue(new HSSFRichTextString("Forecast Accuracy% vs. Actual"));
		        	setColStyle(row, style24, 0, 0);
		        	setColStyle(row, style22, 1, forecastEnd);
		        	setColStyle(row, style24, outlook, outlook);
		        	setColStyle(row, style22, outlook+1, (outlookEnd+signal));
		        	setColStyle(row, style24, (som+signal), (som+signal));
		        	setColStyle(row, style22, (som+signal)+1, (somEnd+signal));
		        	//----------------------------------------
		        	row = sheet.createRow(rowNum+2);
		        	
		        	if(periodChk_Param.equals("Y")){
		        		row.createCell(4).setCellValue(new HSSFRichTextString("P01"));
			        	row.createCell(5).setCellValue(new HSSFRichTextString("P02"));
			        	row.createCell(6).setCellValue(new HSSFRichTextString("P03"));
			        	row.createCell(7).setCellValue(new HSSFRichTextString("P04"));
			        	row.createCell(8).setCellValue(new HSSFRichTextString("P05"));
			        	row.createCell(9).setCellValue(new HSSFRichTextString("P06"));
			        	row.createCell(10).setCellValue(new HSSFRichTextString("P07"));
			        	row.createCell(11).setCellValue(new HSSFRichTextString("P08"));
			        	row.createCell(12).setCellValue(new HSSFRichTextString("P09"));
			        	row.createCell(13).setCellValue(new HSSFRichTextString("P10"));
			        	row.createCell(14).setCellValue(new HSSFRichTextString("P11"));
			        	row.createCell(15).setCellValue(new HSSFRichTextString("P12"));
			        	row.createCell(16).setCellValue(new HSSFRichTextString("Q1"));
			        	row.createCell(17).setCellValue(new HSSFRichTextString("Q2"));
			        	row.createCell(18).setCellValue(new HSSFRichTextString("Q3"));
			        	row.createCell(19).setCellValue(new HSSFRichTextString("Q4"));
			        	row.createCell(20).setCellValue(new HSSFRichTextString("H1"));
			        	row.createCell(21).setCellValue(new HSSFRichTextString("H2"));
			        	row.createCell(22).setCellValue(new HSSFRichTextString("YTD"));
			        	row.createCell(23).setCellValue(new HSSFRichTextString("P01"));
			        	row.createCell(24).setCellValue(new HSSFRichTextString("P02"));
			        	row.createCell(25).setCellValue(new HSSFRichTextString("P03"));
			        	row.createCell(26).setCellValue(new HSSFRichTextString("P04"));
			        	row.createCell(27).setCellValue(new HSSFRichTextString("P05"));
			        	row.createCell(28).setCellValue(new HSSFRichTextString("P06"));
			        	row.createCell(29).setCellValue(new HSSFRichTextString("P07"));
			        	row.createCell(30).setCellValue(new HSSFRichTextString("P08"));
			        	row.createCell(31).setCellValue(new HSSFRichTextString("P09"));
			        	row.createCell(32).setCellValue(new HSSFRichTextString("P10"));
			        	row.createCell(33).setCellValue(new HSSFRichTextString("P11"));
			        	row.createCell(34).setCellValue(new HSSFRichTextString("P12"));
			        	row.createCell(35).setCellValue(new HSSFRichTextString("Q1"));
			        	row.createCell(36).setCellValue(new HSSFRichTextString("Q2"));
			        	row.createCell(37).setCellValue(new HSSFRichTextString("Q3"));
			        	row.createCell(38).setCellValue(new HSSFRichTextString("Q4"));
			        	row.createCell(39).setCellValue(new HSSFRichTextString("H1"));
			        	row.createCell(40).setCellValue(new HSSFRichTextString("H2"));
			        	row.createCell(41).setCellValue(new HSSFRichTextString("YTD"));
			        	
			        	row.createCell(43).setCellValue(new HSSFRichTextString("P01"));
			        	row.createCell(44).setCellValue(new HSSFRichTextString("P02"));
			        	row.createCell(45).setCellValue(new HSSFRichTextString("P03"));
			        	row.createCell(46).setCellValue(new HSSFRichTextString("P04"));
			        	row.createCell(47).setCellValue(new HSSFRichTextString("P05"));
			        	row.createCell(48).setCellValue(new HSSFRichTextString("P06"));
			        	row.createCell(49).setCellValue(new HSSFRichTextString("P07"));
			        	row.createCell(50).setCellValue(new HSSFRichTextString("P08"));
			        	row.createCell(51).setCellValue(new HSSFRichTextString("P09"));
			        	row.createCell(52).setCellValue(new HSSFRichTextString("P10"));
			        	row.createCell(53).setCellValue(new HSSFRichTextString("P11"));
			        	row.createCell(54).setCellValue(new HSSFRichTextString("P12"));
			        	row.createCell(55).setCellValue(new HSSFRichTextString("Q1"));
			        	row.createCell(56).setCellValue(new HSSFRichTextString("Q2"));
			        	row.createCell(57).setCellValue(new HSSFRichTextString("Q3"));
			        	row.createCell(58).setCellValue(new HSSFRichTextString("Q4"));
			        	row.createCell(59).setCellValue(new HSSFRichTextString("H1"));
			        	row.createCell(60).setCellValue(new HSSFRichTextString("H2"));
			        	row.createCell(61).setCellValue(new HSSFRichTextString("YTD"));
			        	row.createCell(62).setCellValue(new HSSFRichTextString("신호등Q1"));
			        	row.createCell(63).setCellValue(new HSSFRichTextString("신호등Q2"));
			        	row.createCell(64).setCellValue(new HSSFRichTextString("신호등Q3"));
			        	row.createCell(65).setCellValue(new HSSFRichTextString("신호등Q4"));
			        	row.createCell(66).setCellValue(new HSSFRichTextString("신호등H1"));
			        	row.createCell(67).setCellValue(new HSSFRichTextString("신호등H2"));
			        	row.createCell(68).setCellValue(new HSSFRichTextString("신호등YTD"));
			        	
			        	row.createCell(70).setCellValue(new HSSFRichTextString("P01"));
			        	row.createCell(71).setCellValue(new HSSFRichTextString("P02"));
			        	row.createCell(72).setCellValue(new HSSFRichTextString("P03"));
			        	row.createCell(73).setCellValue(new HSSFRichTextString("P04"));
			        	row.createCell(74).setCellValue(new HSSFRichTextString("P05"));
			        	row.createCell(75).setCellValue(new HSSFRichTextString("P06"));
			        	row.createCell(76).setCellValue(new HSSFRichTextString("P07"));
			        	row.createCell(77).setCellValue(new HSSFRichTextString("P08"));
			        	row.createCell(78).setCellValue(new HSSFRichTextString("P09"));
			        	row.createCell(79).setCellValue(new HSSFRichTextString("P10"));
			        	row.createCell(80).setCellValue(new HSSFRichTextString("P11"));
			        	row.createCell(81).setCellValue(new HSSFRichTextString("P12"));
			        	row.createCell(82).setCellValue(new HSSFRichTextString("Q1"));
			        	row.createCell(83).setCellValue(new HSSFRichTextString("Q2"));
			        	row.createCell(84).setCellValue(new HSSFRichTextString("Q3"));
			        	row.createCell(85).setCellValue(new HSSFRichTextString("Q4"));
			        	row.createCell(86).setCellValue(new HSSFRichTextString("H1"));
			        	row.createCell(87).setCellValue(new HSSFRichTextString("H2"));
			        	row.createCell(88).setCellValue(new HSSFRichTextString("YTD"));
			        	row.createCell(89).setCellValue(new HSSFRichTextString("신호등Q1"));
			        	row.createCell(90).setCellValue(new HSSFRichTextString("신호등Q2"));
			        	row.createCell(91).setCellValue(new HSSFRichTextString("신호등Q3"));
			        	row.createCell(92).setCellValue(new HSSFRichTextString("신호등Q4"));
			        	row.createCell(93).setCellValue(new HSSFRichTextString("신호등H1"));
			        	row.createCell(94).setCellValue(new HSSFRichTextString("신호등H2"));
			        	row.createCell(95).setCellValue(new HSSFRichTextString("신호등YTD"));
			        	
		        	}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
	        			row.createCell(4).setCellValue(new HSSFRichTextString("P01"));
	    	        	row.createCell(5).setCellValue(new HSSFRichTextString("P02"));
	    	        	row.createCell(6).setCellValue(new HSSFRichTextString("P03"));
	    	        	row.createCell(7).setCellValue(new HSSFRichTextString("Q1"));
	    	        	row.createCell(8).setCellValue(new HSSFRichTextString("H1"));
	    	        	row.createCell(9).setCellValue(new HSSFRichTextString("YTD"));
	    	        	row.createCell(10).setCellValue(new HSSFRichTextString("P01"));
	    	        	row.createCell(11).setCellValue(new HSSFRichTextString("P02"));
	    	        	row.createCell(12).setCellValue(new HSSFRichTextString("P03"));
	    	        	row.createCell(13).setCellValue(new HSSFRichTextString("Q1"));
	    	        	row.createCell(14).setCellValue(new HSSFRichTextString("H1"));
	    	        	row.createCell(15).setCellValue(new HSSFRichTextString("YTD"));
	    	        	
	    	        	row.createCell(17).setCellValue(new HSSFRichTextString("P01"));
	    	        	row.createCell(18).setCellValue(new HSSFRichTextString("P02"));
	    	        	row.createCell(19).setCellValue(new HSSFRichTextString("P03"));
	    	        	row.createCell(20).setCellValue(new HSSFRichTextString("Q1"));
	    	        	row.createCell(21).setCellValue(new HSSFRichTextString("H1"));
	    	        	row.createCell(22).setCellValue(new HSSFRichTextString("YTD"));
	    	        	row.createCell(23).setCellValue(new HSSFRichTextString("신호등Q1"));
			        	row.createCell(24).setCellValue(new HSSFRichTextString("신호등H1"));
			        	row.createCell(25).setCellValue(new HSSFRichTextString("신호등YTD"));
			        	
	    	        	row.createCell(27).setCellValue(new HSSFRichTextString("P01"));
	    	        	row.createCell(28).setCellValue(new HSSFRichTextString("P02"));
	    	        	row.createCell(29).setCellValue(new HSSFRichTextString("P03"));
	    	        	row.createCell(30).setCellValue(new HSSFRichTextString("Q1"));
	    	        	row.createCell(31).setCellValue(new HSSFRichTextString("H1"));
	    	        	row.createCell(32).setCellValue(new HSSFRichTextString("YTD"));
	    	        	row.createCell(33).setCellValue(new HSSFRichTextString("신호등Q1"));
			        	row.createCell(34).setCellValue(new HSSFRichTextString("신호등H1"));
			        	row.createCell(35).setCellValue(new HSSFRichTextString("신호등YTD"));
			        	
	        		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
	        			row.createCell(4).setCellValue(new HSSFRichTextString("P04"));
	    	        	row.createCell(5).setCellValue(new HSSFRichTextString("P05"));
	    	        	row.createCell(6).setCellValue(new HSSFRichTextString("P06"));
	    	        	row.createCell(7).setCellValue(new HSSFRichTextString("Q1"));
	    	        	row.createCell(8).setCellValue(new HSSFRichTextString("Q2"));
	    	        	row.createCell(9).setCellValue(new HSSFRichTextString("H1"));
	    	        	row.createCell(10).setCellValue(new HSSFRichTextString("YTD"));
	    	        	row.createCell(11).setCellValue(new HSSFRichTextString("P04"));
	    	        	row.createCell(12).setCellValue(new HSSFRichTextString("P05"));
	    	        	row.createCell(13).setCellValue(new HSSFRichTextString("P06"));
	    	        	row.createCell(14).setCellValue(new HSSFRichTextString("Q1"));
	    	        	row.createCell(15).setCellValue(new HSSFRichTextString("Q2"));
	    	        	row.createCell(16).setCellValue(new HSSFRichTextString("H1"));
	    	        	row.createCell(17).setCellValue(new HSSFRichTextString("YTD"));
	    	        	
	    	        	row.createCell(19).setCellValue(new HSSFRichTextString("P04"));
	    	        	row.createCell(20).setCellValue(new HSSFRichTextString("P05"));
	    	        	row.createCell(21).setCellValue(new HSSFRichTextString("P06"));
	    	        	row.createCell(22).setCellValue(new HSSFRichTextString("Q1"));
	    	        	row.createCell(23).setCellValue(new HSSFRichTextString("Q2"));
	    	        	row.createCell(24).setCellValue(new HSSFRichTextString("H1"));
	    	        	row.createCell(25).setCellValue(new HSSFRichTextString("YTD"));
	    	        	row.createCell(26).setCellValue(new HSSFRichTextString("신호등Q1"));
	    	        	row.createCell(27).setCellValue(new HSSFRichTextString("신호등Q2"));
			        	row.createCell(28).setCellValue(new HSSFRichTextString("신호등H1"));
			        	row.createCell(29).setCellValue(new HSSFRichTextString("신호등YTD"));
	    	        	
	    	        	row.createCell(31).setCellValue(new HSSFRichTextString("P04"));
	    	        	row.createCell(32).setCellValue(new HSSFRichTextString("P05"));
	    	        	row.createCell(33).setCellValue(new HSSFRichTextString("P06"));
	    	        	row.createCell(34).setCellValue(new HSSFRichTextString("Q1"));
	    	        	row.createCell(35).setCellValue(new HSSFRichTextString("Q2"));
	    	        	row.createCell(36).setCellValue(new HSSFRichTextString("H1"));
	    	        	row.createCell(37).setCellValue(new HSSFRichTextString("YTD"));
	    	        	row.createCell(38).setCellValue(new HSSFRichTextString("신호등Q1"));
	    	        	row.createCell(39).setCellValue(new HSSFRichTextString("신호등Q2"));
			        	row.createCell(40).setCellValue(new HSSFRichTextString("신호등H1"));
			        	row.createCell(41).setCellValue(new HSSFRichTextString("신호등YTD"));
	    	        	
		        	}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
		        		row.createCell(4).setCellValue(new HSSFRichTextString("P07"));
			        	row.createCell(5).setCellValue(new HSSFRichTextString("P08"));
			        	row.createCell(6).setCellValue(new HSSFRichTextString("P09"));
			        	row.createCell(7).setCellValue(new HSSFRichTextString("Q2"));
			        	row.createCell(8).setCellValue(new HSSFRichTextString("Q3"));
			        	row.createCell(9).setCellValue(new HSSFRichTextString("H1"));
			        	row.createCell(10).setCellValue(new HSSFRichTextString("H2"));
			        	row.createCell(11).setCellValue(new HSSFRichTextString("YTD"));
			        	row.createCell(12).setCellValue(new HSSFRichTextString("P07"));
			        	row.createCell(13).setCellValue(new HSSFRichTextString("P08"));
			        	row.createCell(14).setCellValue(new HSSFRichTextString("P09"));
			        	row.createCell(15).setCellValue(new HSSFRichTextString("Q2"));
			        	row.createCell(16).setCellValue(new HSSFRichTextString("Q3"));
			        	row.createCell(17).setCellValue(new HSSFRichTextString("H1"));
			        	row.createCell(18).setCellValue(new HSSFRichTextString("H2"));
			        	row.createCell(19).setCellValue(new HSSFRichTextString("YTD"));
			        	
			        	row.createCell(21).setCellValue(new HSSFRichTextString("P07"));
			        	row.createCell(22).setCellValue(new HSSFRichTextString("P08"));
			        	row.createCell(23).setCellValue(new HSSFRichTextString("P09"));
			        	row.createCell(24).setCellValue(new HSSFRichTextString("Q2"));
			        	row.createCell(25).setCellValue(new HSSFRichTextString("Q3"));
			        	row.createCell(26).setCellValue(new HSSFRichTextString("H1"));
			        	row.createCell(27).setCellValue(new HSSFRichTextString("H2"));
			        	row.createCell(28).setCellValue(new HSSFRichTextString("YTD"));
			        	row.createCell(29).setCellValue(new HSSFRichTextString("신호등Q2"));
	    	        	row.createCell(30).setCellValue(new HSSFRichTextString("신호등Q3"));
			        	row.createCell(31).setCellValue(new HSSFRichTextString("신호등H1"));
			        	row.createCell(32).setCellValue(new HSSFRichTextString("신호등H2"));
			        	row.createCell(33).setCellValue(new HSSFRichTextString("신호등YTD"));
			        	
			        	row.createCell(35).setCellValue(new HSSFRichTextString("P07"));
			        	row.createCell(36).setCellValue(new HSSFRichTextString("P08"));
			        	row.createCell(37).setCellValue(new HSSFRichTextString("P09"));
			        	row.createCell(38).setCellValue(new HSSFRichTextString("Q2"));
			        	row.createCell(39).setCellValue(new HSSFRichTextString("Q3"));
			        	row.createCell(40).setCellValue(new HSSFRichTextString("H1"));
			        	row.createCell(41).setCellValue(new HSSFRichTextString("H2"));
			        	row.createCell(42).setCellValue(new HSSFRichTextString("YTD"));
			        	row.createCell(43).setCellValue(new HSSFRichTextString("신호등Q2"));
	    	        	row.createCell(44).setCellValue(new HSSFRichTextString("신호등Q3"));
			        	row.createCell(45).setCellValue(new HSSFRichTextString("신호등H1"));
			        	row.createCell(46).setCellValue(new HSSFRichTextString("신호등H2"));
			        	row.createCell(47).setCellValue(new HSSFRichTextString("신호등YTD"));
			        	
		        	}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
		        		row.createCell(4).setCellValue(new HSSFRichTextString("P10"));
			        	row.createCell(5).setCellValue(new HSSFRichTextString("P11"));
			        	row.createCell(6).setCellValue(new HSSFRichTextString("P12"));
			        	row.createCell(7).setCellValue(new HSSFRichTextString("Q3"));
			        	row.createCell(8).setCellValue(new HSSFRichTextString("Q4"));
			        	row.createCell(9).setCellValue(new HSSFRichTextString("H1"));
			        	row.createCell(10).setCellValue(new HSSFRichTextString("H2"));
			        	row.createCell(11).setCellValue(new HSSFRichTextString("YTD"));
			        	row.createCell(12).setCellValue(new HSSFRichTextString("P10"));
			        	row.createCell(13).setCellValue(new HSSFRichTextString("P11"));
			        	row.createCell(14).setCellValue(new HSSFRichTextString("P12"));
			        	row.createCell(15).setCellValue(new HSSFRichTextString("Q3"));
			        	row.createCell(16).setCellValue(new HSSFRichTextString("Q4"));
			        	row.createCell(17).setCellValue(new HSSFRichTextString("H1"));
			        	row.createCell(18).setCellValue(new HSSFRichTextString("H2"));
			        	row.createCell(19).setCellValue(new HSSFRichTextString("YTD"));
			        	
			        	row.createCell(21).setCellValue(new HSSFRichTextString("P10"));
			        	row.createCell(22).setCellValue(new HSSFRichTextString("P11"));
			        	row.createCell(23).setCellValue(new HSSFRichTextString("P12"));
			        	row.createCell(24).setCellValue(new HSSFRichTextString("Q3"));
			        	row.createCell(25).setCellValue(new HSSFRichTextString("Q4"));
			        	row.createCell(26).setCellValue(new HSSFRichTextString("H1"));
			        	row.createCell(27).setCellValue(new HSSFRichTextString("H2"));
			        	row.createCell(28).setCellValue(new HSSFRichTextString("YTD"));
			        	row.createCell(29).setCellValue(new HSSFRichTextString("신호등Q3"));
	    	        	row.createCell(30).setCellValue(new HSSFRichTextString("신호등Q4"));
			        	row.createCell(31).setCellValue(new HSSFRichTextString("신호등H1"));
			        	row.createCell(32).setCellValue(new HSSFRichTextString("신호등H2"));
			        	row.createCell(33).setCellValue(new HSSFRichTextString("신호등YTD"));
			        	
			        	row.createCell(35).setCellValue(new HSSFRichTextString("P10"));
			        	row.createCell(36).setCellValue(new HSSFRichTextString("P11"));
			        	row.createCell(37).setCellValue(new HSSFRichTextString("P12"));
			        	row.createCell(38).setCellValue(new HSSFRichTextString("Q3"));
			        	row.createCell(39).setCellValue(new HSSFRichTextString("Q4"));
			        	row.createCell(40).setCellValue(new HSSFRichTextString("H1"));
			        	row.createCell(41).setCellValue(new HSSFRichTextString("H2"));
			        	row.createCell(42).setCellValue(new HSSFRichTextString("YTD"));
			        	row.createCell(43).setCellValue(new HSSFRichTextString("신호등Q3"));
	    	        	row.createCell(44).setCellValue(new HSSFRichTextString("신호등Q4"));
			        	row.createCell(45).setCellValue(new HSSFRichTextString("신호등H1"));
			        	row.createCell(46).setCellValue(new HSSFRichTextString("신호등H2"));
			        	row.createCell(47).setCellValue(new HSSFRichTextString("신호등YTD"));
			        	
		        	}
		        	
		        	setColStyle(row, style25, 0, 0);
		        	setColStyle(row, style23, 1, 3);
		        	setColStyle(row, style2, 4, forecast-2);
		        	setColStyle(row, style23, forecast-1, forecast-1);
		        	setColStyle(row, style2, forecast, forecastEnd-1);
		        	setColStyle(row, style23, forecastEnd, forecastEnd);
		        	setColStyle(row, style25, outlook, outlook);
		        	setColStyle(row, style2, outlook+1, (outlookEnd+signal)-1);
		        	setColStyle(row, style23, (outlookEnd+signal), (outlookEnd+signal));
		        	setColStyle(row, style25, (som+signal), (som+signal));
		        	setColStyle(row, style2, (som+signal)+1, ((somEnd+signal)-1));
		        	setColStyle(row, style23, (somEnd+signal), (somEnd+signal));
		        	
		        	sheet.addMergedRegion(new Region(( int) rowNum+1 , ( short )0 , ( int) rowNum+2, (short )3 ));
		        	sheet.addMergedRegion(new Region(( int) rowNum+1 , ( short )4 , ( int) rowNum+1, (short )(forecast-1) ));
		        	sheet.addMergedRegion(new Region(( int) rowNum+1 , ( short )forecast , ( int) rowNum+1, (short )forecastEnd ));
		        	sheet.addMergedRegion(new Region(( int) rowNum+1 , ( short )outlook , ( int) rowNum+1, (short )(outlookEnd+signal) ));
		        	sheet.addMergedRegion(new Region(( int) rowNum+1 , ( short )(som+signal) , ( int) rowNum+1, (short )(somEnd+signal) ));
		        	
		        	row_cal6 = rowNum+3;
		        	row_cal7 = rowNum+3;
		        	rowNum = rowNum+3;
		        	
		        	String col0 = "", col1 = "";
		        	int col0Num = rowNum;
		        			
		        	for (int i=0; i < data3.size(); i++) {
		        		
		        		Map rowData = (Map)data3.get(i);
		        		
		        		if(!rowData.get("DATALV2").toString().equals("0")){ // hidden 데이터 제외
			        		
		        			row = sheet.createRow(rowNum++);
		        			
		        			if (col0.equals("")) {
		        				// Total Account Plan Volume
		        				col0 = rowData.get("DATALV1_NM").toString();
		        				row.createCell(0).setCellValue(new HSSFRichTextString(rowData.get("DATALV1_NM").toString()));
			        			row.createCell(1).setCellValue(new HSSFRichTextString(rowData.get("DATALV2_NM").toString()));
			        			setColStyle(row, style58, 0, 0);
			        			setColStyle(row, style11, 1, 3);
			    	        	setRowValue5(row, style4, rowData, "style4");
			    	        	setColStyle(row, style26, forecast-1, forecast-1);
			    	        	setColStyle(row, style30, outlook-1, outlook-1);
			    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			    	        	sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )1 , ( int) rowNum-1, (short )3 ));
			    	        	
			    	        	// Total Dependency Rate
			    	        	row = sheet.createRow(rowNum++);
		        				row.createCell(1).setCellValue(new HSSFRichTextString("Total Dependency Rate"));
		        				setColStyle(row, style58, 0, 0);
			        			setColStyle(row, style11, 1, 3);
			        			/**************************
			        			   (1) Total Accout Plan Volume / DK Depletion Forecast.Actual Volume실적  *100 --LV1 값이 LOCAL, INT`L인 경우		
			        			   (2) Total Accout Plan Volume / Shipment Forecast.Forecast.Actual Volume실적 *100  -- LV1값이 VODKA, BEER인 경우
			        			**************************/
			        			if(rowData.get("DATALV1_NM").toString().equals("LOCAL")||rowData.get("DATALV1_NM").toString().equals("INT`L")){
			        				// [Note G Target LOCAL 2번째 Rate] LOCAL의 2번째 Rate
			        				setRowValue22(row, style49, rowData, "style4", data2, "ON", "LOCAL", team_Param);
			        				
			        			}else{
			        				setRowValue19(row, style4, rowData, "style4");
			        			}
			        			
			        			setColStyle(row, style55, forecast-1, forecast-1);
			    	        	setColStyle(row, style30, outlook-1, outlook-1);
			    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			        			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )1 , ( int) rowNum-1, (short )3 ));
			        			
		        			}
		        			
		        			else if (rowData.get("DATALV1_NM").toString().equals(col0)) {
			        			
			        			// Total Note G Spending(K KRW)
			        			row.createCell(1).setCellValue(new HSSFRichTextString(rowData.get("DATALV2_NM").toString()));
			        			setColStyle(row, style58, 0, 0);
			        			setColStyle(row, style11, 1, 3);
			    	        	setRowValue5(row, style4, rowData, "style4");
			    	        	setColStyle(row, style26, forecast-1, forecast-1);
			    	        	setColStyle(row, style30, outlook-1, outlook-1);
			    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			    	        	sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )1 , ( int) rowNum-1, (short )3 ));
			    	        	
			    	        	// Total Note G Case Rate
			    	        	row = sheet.createRow(rowNum++);
			    	        	row.createCell(1).setCellValue(new HSSFRichTextString("Total Note G Case Rate"));
			    	        	setColStyle(row, style58, 0, 0);
			        			setColStyle(row, style33, 1, 3);
			        			/**************************
			        			   (1) Total Note G Spending(K KRW) / DK Depletion Forecast.Actual Volume실적   -- LV1값이 LPB, GPB인 경우						
	   							   (2) Total Note G Spending(K KRW) / Shipment Forecast.Forecast.Actual Volume실적   -- VL1값이 Vodka, Beer인 경우	
			        			**************************/
			        			if(rowData.get("DATALV1_NM").toString().equals("LOCAL")||rowData.get("DATALV1_NM").toString().equals("INT`L")){
			        				// [Note G Target LOCAL, INT`L Rate] 
			        				// setRowValue17(row, style4, rowData, "style4");
			        				if(rowData.get("DATALV1_NM").toString().equals("LOCAL")){
	
			        					// LOCAL 4번째 Rate
			        					setRowValue22(row, style62, rowData, "style4",data2,"ON","LOCAL", team_Param);
	
			        				}else if(rowData.get("DATALV1_NM").toString().equals("INT`L")){
			        					
			        					// INT`L 4번째 Rate
			        					setRowValue22(row, style62, rowData, "style4",data2,"ON","INT`L", team_Param);
			        				}
			        				setColStyle(row, style63, forecast-1, forecast-1);
			        			}else{
			        				// setRowValue19(row, style4, rowData, "style4");
			        				// [Note G Target VODKA, BEER의 4번째 Rate 생성]
			        				
			        				if(rowData.get("DATALV1_NM").toString().equals("VODKA")){
			        					
			        					// [Note G Target] Vodka에 4번째줄 Rate
			        					setRowValue23(row, style62, rowData, "style4",data3,"0","VODKA", team_Param);
			        					
			        				}else if(rowData.get("DATALV1_NM").toString().equals("BEER")){
			        					
			        					// [Note G ForeCast] BEER에 4번째줄 Rate
			        					setRowValue23(row, style62, rowData, "style4",data3,"0","BEER", team_Param);
			        				}
			        				setColStyle(row, style63, forecast-1, forecast-1);
			        			}
			    	        	setColStyle(row, style30, outlook-1, outlook-1);
			    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			        			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )1 , ( int) rowNum-1, (short )3 ));
			    	        	
			    	        	// 모든 값 셋팅하고 마지막 값일 때 타이틀 합병
		        				if(i == (data3.size()-1)){
		        					sheet.addMergedRegion(new Region(( int) col0Num , ( short )0 , ( int) rowNum-1, (short )0 ));
		        				}
			        			
		        			}
		        			
		        			else if (!rowData.get("DATALV1_NM").toString().equals(col0)) { // Local->Int`l,Vodka,Beer
			        			
		        				sheet.addMergedRegion(new Region(( int) col0Num , ( short )0 , ( int) rowNum-2, (short )0 ));  // 타이틀 합병
			        			
			        			// 뒤에 새로 나오는 부분 값 셋팅
		        				// Total Account Plan Volume
			        			row.createCell(0).setCellValue(new HSSFRichTextString(rowData.get("DATALV1_NM").toString()));
			    	        	row.createCell(1).setCellValue(new HSSFRichTextString(rowData.get("DATALV2_NM").toString()));
			    	        	setColStyle(row, style58, 0, 0);
			        			setColStyle(row, style11, 1, 3);
			    	        	setRowValue5(row, style4, rowData, "style4");
			    	        	setColStyle(row, style26, forecast-1, forecast-1);
			    	        	setColStyle(row, style30, outlook-1, outlook-1);
			    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			    	        	sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )1 , ( int) rowNum-1, (short )3 ));
			    	        	
			    	        	col0 = rowData.get("DATALV1_NM").toString();
			        			col0Num = rowNum-1;
			        			
			    	        	// Total Dependency Rate
			    	        	row = sheet.createRow(rowNum++);
		        				row.createCell(1).setCellValue(new HSSFRichTextString("Total Dependency Rate"));
		        				setColStyle(row, style58, 0, 0);
			        			setColStyle(row, style11, 1, 3);
			        			/**************************
			        			  (1) Total Accout Plan Volume / DK Depletion Forecast.Actual Volume실적  *100 --LV1 값이 LOCAL, INT`L인 경우		
			        			  (2) Total Accout Plan Volume / Shipment Forecast.Forecast.Actual Volume실적 *100  -- LV1값이 VODKA, BEER인 경우
			        			**************************/
			        			if(rowData.get("DATALV1_NM").toString().equals("LOCAL")||rowData.get("DATALV1_NM").toString().equals("INT`L")){
			        				// NoteG Target Int'L 2번째 Rate
			        				setRowValue22(row, style49, rowData, "style4", data2, "ON", "INT`L", team_Param);
			        				
			        			}else{
			        				// NoteG Target Vodka, Beer 두번째 Rate
			        				
			        				if(rowData.get("DATALV1_NM").toString().equals("VODKA")){
			        					
			        					// [Note G ForeCast] Vodka에 2번째줄 Rate
			        					setRowValue23(row, style49, rowData, "style4",data3,"0","VODKA", team_Param);
			        					
			        				}else if(rowData.get("DATALV1_NM").toString().equals("BEER")){
			        				
			        					// [Note G ForeCast] BEER에 2번째줄 Rate
			        					setRowValue23(row, style49, rowData, "style4",data3,"0","BEER", team_Param);
			        					
			        				}
			        				
			        			}
			        			
			        			setColStyle(row, style55, forecast-1, forecast-1);
			    	        	setColStyle(row, style30, outlook-1, outlook-1);
			    	        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
			        			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )1 , ( int) rowNum-1, (short )3 ));
	
		        			}
			        		
		        		}
		        		
		        	}
		        	
		        	// Total Dependency Rate 합계
		        	row = sheet.createRow(rowNum++);
		        	row.createCell(0).setCellValue(new HSSFRichTextString("Total Dependency Rate"));
		        	setColStyle(row, style9, 0, 3);
	    			setRowSumValue5(row, style15, data3, "DATALV2", "10", "", "", "style10",style53);
	    			setColStyle(row, style32, forecast-1, forecast-1);
	    			setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )0 , ( int) rowNum-1, (short )3 ));
		        	
	    			row = sheet.createRow(rowNum++);
	    			
	    			// Total Note G Spending 합계
	    			row = sheet.createRow(rowNum++);
		        	row.createCell(0).setCellValue(new HSSFRichTextString("Total Note G Spending"));
		        	setColStyle(row, style9, 0, 3);
	    			setRowSumValue5(row, style10, data3, "DATALV2", "30", "", "", "style10", style4);
	    			setColStyle(row, style29, forecast-1, forecast-1);
	    			setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )0 , ( int) rowNum-1, (short )3 ));
	    			
	    			row = sheet.createRow(rowNum++);
	    			
	    			// Whisky Note G Spending 합계
		        	row = sheet.createRow(rowNum++);
		        	row.createCell(0).setCellValue(new HSSFRichTextString("Whisky Note G Spending"));
		        	setColStyle(row, style9, 0, 3);
	    			setRowSumValue5(row, style10, data3, "DATALV2", "30", "DATALV1_NM", "", "style10", style4);
	    			setColStyle(row, style29, forecast-1, forecast-1);
	    			setColStyle(row, style30, outlook-1, outlook-1);
		        	setColStyle(row, style30, outlookEnd+1, outlookEnd+1);
	    			sheet.addMergedRegion(new Region(( int) rowNum-1 , ( short )0 , ( int) rowNum-1, (short )3 ));
	 
	    			// NOTE G Forecast Calc1 =  Growth Rate
	    			// [ Calc = (F15 Forecast - F14 Actual) - 1 ] 
	    			List data_Dep_NOTAG_Calc1 = (List) Dep_NOTAG_Calc1(noteG);
	    			
	    			for(int i=0; i<data_Dep_NOTAG_Calc1.size(); i++){
	    				
	    				seq = 0;
	    				
	    				Map rowData_Dep_NOTAG_Calc1 = (Map)data_Dep_NOTAG_Calc1.get(i);
	    				row = sheet.getRow(row_cal5++);
	    				if(rowData_Dep_NOTAG_Calc1.get("TOTAL").toString().equals("TOTAL")){
	    					row = sheet.getRow(row_cal5++);
	    				}
	    				
	    				if(rowData_Dep_NOTAG_Calc1.get("STYLE").equals("style4")){
	    					if(rowData_Dep_NOTAG_Calc1.get("DATALV2_NM").equals("Total Note G Spending(K KRW)")){
	    						if(rowData_Dep_NOTAG_Calc1.get("DATALV2").equals("KRW")){
	    							setRowValue10(row, style12, rowData_Dep_NOTAG_Calc1);
	    							setRowValue14(row, style4, rowData_Dep_NOTAG_Calc1);
	    							
	    							// 신호등 처리
	    	    					if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q01_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style50, "NOTAG_CALC1_Q01_SN");
	    	    					}else if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q01_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style51, "NOTAG_CALC1_Q01_SN");
	    	    					}else{
	    	    						signalStyle2(row, style52, "NOTAG_CALC1_Q01_SN");
	    	    					}
	    	    					
	    	    					
	    	    					if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q02_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style50, "NOTAG_CALC1_Q02_SN");
	    	    					}else if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q02_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style51, "NOTAG_CALC1_Q02_SN");
	    	    					}else{
	    	    						signalStyle2(row, style52, "NOTAG_CALC1_Q02_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q03_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style50, "NOTAG_CALC1_Q03_SN");
	    	    					}else if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q03_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style51, "NOTAG_CALC1_Q03_SN");
	    	    					}else{
	    	    						signalStyle2(row, style52, "NOTAG_CALC1_Q03_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q04_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style50, "NOTAG_CALC1_Q04_SN");
	    	    					}else if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q04_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style51, "NOTAG_CALC1_Q04_SN");
	    	    					}else{
	    	    						signalStyle2(row, style52, "NOTAG_CALC1_Q04_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_H01_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style50, "NOTAG_CALC1_H01_SN");
	    	    					}else if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_H01_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style51, "NOTAG_CALC1_H01_SN");
	    	    					}else{
	    	    						signalStyle2(row, style52, "NOTAG_CALC1_H01_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_H02_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style50, "NOTAG_CALC1_H02_SN");
	    	    					}else if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_H02_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style51, "NOTAG_CALC1_H02_SN");
	    	    					}else{
	    	    						signalStyle2(row, style52, "NOTAG_CALC1_H02_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_YTD_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style50, "NOTAG_CALC1_YTD_SN");
	    	    					}else if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_YTD_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style51, "NOTAG_CALC1_YTD_SN");
	    	    					}else{
	    	    						signalStyle2(row, style52, "NOTAG_CALC1_YTD_SN");
	    	    					}
	    							
	    						}else{
	    							setRowValue10(row, style62, rowData_Dep_NOTAG_Calc1);
	    							setRowValue14(row, style62, rowData_Dep_NOTAG_Calc1);
	    							
	    							// 신호등 처리
	    	    					if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q01_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style64, "NOTAG_CALC1_Q01_SN");
	    	    					}else if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q01_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style65, "NOTAG_CALC1_Q01_SN");
	    	    					}else{
	    	    						signalStyle2(row, style66, "NOTAG_CALC1_Q01_SN");
	    	    					}
	    	    					
	    	    					
	    	    					if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q02_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style64, "NOTAG_CALC1_Q02_SN");
	    	    					}else if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q02_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style65, "NOTAG_CALC1_Q02_SN");
	    	    					}else{
	    	    						signalStyle2(row, style66, "NOTAG_CALC1_Q02_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q03_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style64, "NOTAG_CALC1_Q03_SN");
	    	    					}else if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q03_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style65, "NOTAG_CALC1_Q03_SN");
	    	    					}else{
	    	    						signalStyle2(row, style66, "NOTAG_CALC1_Q03_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q04_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style64, "NOTAG_CALC1_Q04_SN");
	    	    					}else if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q04_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style65, "NOTAG_CALC1_Q04_SN");
	    	    					}else{
	    	    						signalStyle2(row, style66, "NOTAG_CALC1_Q04_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_H01_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style64, "NOTAG_CALC1_H01_SN");
	    	    					}else if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_H01_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style65, "NOTAG_CALC1_H01_SN");
	    	    					}else{
	    	    						signalStyle2(row, style66, "NOTAG_CALC1_H01_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_H02_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style64, "NOTAG_CALC1_H02_SN");
	    	    					}else if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_H02_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style65, "NOTAG_CALC1_H02_SN");
	    	    					}else{
	    	    						signalStyle2(row, style66, "NOTAG_CALC1_H02_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_YTD_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style64, "NOTAG_CALC1_YTD_SN");
	    	    					}else if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_YTD_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style65, "NOTAG_CALC1_YTD_SN");
	    	    					}else{
	    	    						signalStyle2(row, style66, "NOTAG_CALC1_YTD_SN");
	    	    					}
	    							
	    						}
	    					}else{
	    						setRowValueHide(row, style12, rowData_Dep_NOTAG_Calc1);
	    						setRowValue14(row, style4, rowData_Dep_NOTAG_Calc1);
	    					}
	    					
	    					setColStyle(row, style30, outlook-1, outlook-1);
	    					setColStyle(row, style31, outlookEnd+signal+1, outlookEnd+signal+1);
	    					
	    				}else if(rowData_Dep_NOTAG_Calc1.get("STYLE").equals("style10")){
	    					if(rowData_Dep_NOTAG_Calc1.get("TOTAL").equals("TOTAL")){
	    						setRowValue10(row, style15, rowData_Dep_NOTAG_Calc1);
	    						// 신호등 처리
		    					if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q01_SN").toString().equals("GREEN")){
		    						signalStyle2(row, style46, "NOTAG_CALC1_Q01_SN");
		    					}else if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q01_SN").toString().equals("YELLOW")){
		    						signalStyle2(row, style47, "NOTAG_CALC1_Q01_SN");
		    					}else{
		    						signalStyle2(row, style48, "NOTAG_CALC1_Q01_SN");
		    					}
		    					
		    					
		    					if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q02_SN").toString().equals("GREEN")){
		    						signalStyle2(row, style46, "NOTAG_CALC1_Q02_SN");
		    					}else if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q02_SN").toString().equals("YELLOW")){
		    						signalStyle2(row, style47, "NOTAG_CALC1_Q02_SN");
		    					}else{
		    						signalStyle2(row, style48, "NOTAG_CALC1_Q02_SN");
		    					}
		    					
		    					if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q03_SN").toString().equals("GREEN")){
		    						signalStyle2(row, style46, "NOTAG_CALC1_Q03_SN");
		    					}else if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q03_SN").toString().equals("YELLOW")){
		    						signalStyle2(row, style47, "NOTAG_CALC1_Q03_SN");
		    					}else{
		    						signalStyle2(row, style48, "NOTAG_CALC1_Q03_SN");
		    					}
		    					
		    					if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q04_SN").toString().equals("GREEN")){
		    						signalStyle2(row, style46, "NOTAG_CALC1_Q04_SN");
		    					}else if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_Q04_SN").toString().equals("YELLOW")){
		    						signalStyle2(row, style47, "NOTAG_CALC1_Q04_SN");
		    					}else{
		    						signalStyle2(row, style48, "NOTAG_CALC1_Q04_SN");
		    					}
		    					
		    					if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_H01_SN").toString().equals("GREEN")){
		    						signalStyle2(row, style46, "NOTAG_CALC1_H01_SN");
		    					}else if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_H01_SN").toString().equals("YELLOW")){
		    						signalStyle2(row, style47, "NOTAG_CALC1_H01_SN");
		    					}else{
		    						signalStyle2(row, style48, "NOTAG_CALC1_H01_SN");
		    					}
		    					
		    					if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_H02_SN").toString().equals("GREEN")){
		    						signalStyle2(row, style46, "NOTAG_CALC1_H02_SN");
		    					}else if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_H02_SN").toString().equals("YELLOW")){
		    						signalStyle2(row, style47, "NOTAG_CALC1_H02_SN");
		    					}else{
		    						signalStyle2(row, style48, "NOTAG_CALC1_H02_SN");
		    					}
		    					
		    					if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_YTD_SN").toString().equals("GREEN")){
		    						signalStyle2(row, style46, "NOTAG_CALC1_YTD_SN");
		    					}else if(rowData_Dep_NOTAG_Calc1.get("NOTAG_CALC1_YTD_SN").toString().equals("YELLOW")){
		    						signalStyle2(row, style47, "NOTAG_CALC1_YTD_SN");
		    					}else{
		    						signalStyle2(row, style48, "NOTAG_CALC1_YTD_SN");
		    					}
		    					
		    					setColStyle(row, style30, outlook-1, outlook-1);
		    					setColStyle(row, style31, outlookEnd+signal+1, outlookEnd+signal+1);
	    					}else{
	    						setRowValueHide(row, style53, rowData_Dep_NOTAG_Calc1);
	    						signalStyle2(row, style53, "NOTAG_CALC1_Q01_SN");
	    						signalStyle2(row, style53, "NOTAG_CALC1_Q02_SN");
	    						signalStyle2(row, style53, "NOTAG_CALC1_Q03_SN");
	    						signalStyle2(row, style53, "NOTAG_CALC1_Q04_SN");
	    						signalStyle2(row, style53, "NOTAG_CALC1_H01_SN");
	    						signalStyle2(row, style53, "NOTAG_CALC1_H02_SN");
	    						signalStyle2(row, style54, "NOTAG_CALC1_YTD_SN");
	    					}
	    				}
	    			}
	    			
	    			// Note G Target Calc1 = Achievement% vs. Target
	    			// Outlook / Target
	    			List data_Dep_NOTGT_Calc1 = (List) Dep_NOTGT_Calc1(noteG);
	    			
	    			for(int i=0; i<data_Dep_NOTGT_Calc1.size(); i++){
	    				
	    				seq = 0;
	    				
	    				Map rowData_Dep_NOTGT_Calc1 = (Map)data_Dep_NOTGT_Calc1.get(i);
	    				row = sheet.getRow(row_cal6++);
	    				
	    				if(rowData_Dep_NOTGT_Calc1.get("TOTAL").toString().equals("TOTAL")){
	    					row = sheet.getRow(row_cal6++);
	    				}
	    				
	    				if(rowData_Dep_NOTGT_Calc1.get("STYLE").equals("style4")){
	    					if(rowData_Dep_NOTGT_Calc1.get("DATALV2_NM").equals("Total Note G Spending(K KRW)")){
	    						if(rowData_Dep_NOTGT_Calc1.get("DATALV2").equals("KRW")){
	    							setRowValue11(row, style12, rowData_Dep_NOTGT_Calc1);
	    	    					setRowValue14(row, style4, rowData_Dep_NOTGT_Calc1);
	    	    					
	    	    					// 신호등 처리
	    	    					if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q01_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style50, "NOTAG_CALC1_Q01_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q01_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style51, "NOTAG_CALC1_Q01_SN");
	    	    					}else{
	    	    						signalStyle2(row, style52, "NOTAG_CALC1_Q01_SN");
	    	    					}
	    	    					
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q02_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style50, "NOTAG_CALC1_Q02_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q02_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style51, "NOTAG_CALC1_Q02_SN");
	    	    					}else{
	    	    						signalStyle2(row, style52, "NOTAG_CALC1_Q02_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q03_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style50, "NOTAG_CALC1_Q03_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q03_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style51, "NOTAG_CALC1_Q03_SN");
	    	    					}else{
	    	    						signalStyle2(row, style52, "NOTAG_CALC1_Q03_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q04_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style50, "NOTAG_CALC1_Q04_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q04_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style51, "NOTAG_CALC1_Q04_SN");
	    	    					}else{
	    	    						signalStyle2(row, style52, "NOTAG_CALC1_Q04_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_H01_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style50, "NOTAG_CALC1_H01_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_H01_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style51, "NOTAG_CALC1_H01_SN");
	    	    					}else{
	    	    						signalStyle2(row, style52, "NOTAG_CALC1_H01_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_H02_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style50, "NOTAG_CALC1_H02_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_H02_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style51, "NOTAG_CALC1_H02_SN");
	    	    					}else{
	    	    						signalStyle2(row, style52, "NOTAG_CALC1_H02_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_YTD_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style50, "NOTAG_CALC1_YTD_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_YTD_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style51, "NOTAG_CALC1_YTD_SN");
	    	    					}else{
	    	    						signalStyle2(row, style52, "NOTAG_CALC1_YTD_SN");
	    	    					}
	    	    					
	    						}else{
	    							
	    							setRowValue11(row, style62, rowData_Dep_NOTGT_Calc1);
	    	    					setRowValue14(row, style62, rowData_Dep_NOTGT_Calc1);
	    	    					
	    	    					// 신호등 처리
	    	    					if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q01_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style64, "NOTAG_CALC1_Q01_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q01_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style65, "NOTAG_CALC1_Q01_SN");
	    	    					}else{
	    	    						signalStyle2(row, style66, "NOTAG_CALC1_Q01_SN");
	    	    					}
	    	    					
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q02_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style64, "NOTAG_CALC1_Q02_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q02_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style65, "NOTAG_CALC1_Q02_SN");
	    	    					}else{
	    	    						signalStyle2(row, style66, "NOTAG_CALC1_Q02_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q03_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style64, "NOTAG_CALC1_Q03_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q03_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style65, "NOTAG_CALC1_Q03_SN");
	    	    					}else{
	    	    						signalStyle2(row, style66, "NOTAG_CALC1_Q03_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q04_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style64, "NOTAG_CALC1_Q04_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q04_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style65, "NOTAG_CALC1_Q04_SN");
	    	    					}else{
	    	    						signalStyle2(row, style66, "NOTAG_CALC1_Q04_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_H01_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style64, "NOTAG_CALC1_H01_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_H01_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style65, "NOTAG_CALC1_H01_SN");
	    	    					}else{
	    	    						signalStyle2(row, style66, "NOTAG_CALC1_H01_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_H02_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style64, "NOTAG_CALC1_H02_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_H02_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style65, "NOTAG_CALC1_H02_SN");
	    	    					}else{
	    	    						signalStyle2(row, style66, "NOTAG_CALC1_H02_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_YTD_SN").toString().equals("GREEN")){
	    	    						signalStyle2(row, style64, "NOTAG_CALC1_YTD_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_YTD_SN").toString().equals("YELLOW")){
	    	    						signalStyle2(row, style65, "NOTAG_CALC1_YTD_SN");
	    	    					}else{
	    	    						signalStyle2(row, style66, "NOTAG_CALC1_YTD_SN");
	    	    					}
	    	    					
	    						}
	    					}else{
	    						setRowValueHide(row, style12, rowData_Dep_NOTGT_Calc1);
	    						setRowValue14(row, style4, rowData_Dep_NOTGT_Calc1);
	    					}
	    					
	    						
	    					
	    					setColStyle(row, style30, outlook-1, outlook-1);
	    					setColStyle(row, style31, outlookEnd+signal+1, outlookEnd+signal+1);
	    					
	    				}else if(rowData_Dep_NOTGT_Calc1.get("STYLE").equals("style10")){
	    					if(rowData_Dep_NOTGT_Calc1.get("TOTAL").equals("TOTAL")){
	    						setRowValue11(row, style15, rowData_Dep_NOTGT_Calc1);
	    						
	    						// 신호등 처리
		    					if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q01_SN").toString().equals("GREEN")){
		    						signalStyle2(row, style46, "NOTAG_CALC1_Q01_SN");
		    					}else if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q01_SN").toString().equals("YELLOW")){
		    						signalStyle2(row, style47, "NOTAG_CALC1_Q01_SN");
		    					}else{
		    						signalStyle2(row, style48, "NOTAG_CALC1_Q01_SN");
		    					}
		    					
		    					
		    					if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q02_SN").toString().equals("GREEN")){
		    						signalStyle2(row, style46, "NOTAG_CALC1_Q02_SN");
		    					}else if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q02_SN").toString().equals("YELLOW")){
		    						signalStyle2(row, style47, "NOTAG_CALC1_Q02_SN");
		    					}else{
		    						signalStyle2(row, style48, "NOTAG_CALC1_Q02_SN");
		    					}
		    					
		    					if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q03_SN").toString().equals("GREEN")){
		    						signalStyle2(row, style46, "NOTAG_CALC1_Q03_SN");
		    					}else if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q03_SN").toString().equals("YELLOW")){
		    						signalStyle2(row, style47, "NOTAG_CALC1_Q03_SN");
		    					}else{
		    						signalStyle2(row, style48, "NOTAG_CALC1_Q03_SN");
		    					}
		    					
		    					if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q04_SN").toString().equals("GREEN")){
		    						signalStyle2(row, style46, "NOTAG_CALC1_Q04_SN");
		    					}else if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_Q04_SN").toString().equals("YELLOW")){
		    						signalStyle2(row, style47, "NOTAG_CALC1_Q04_SN");
		    					}else{
		    						signalStyle2(row, style48, "NOTAG_CALC1_Q04_SN");
		    					}
		    					
		    					if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_H01_SN").toString().equals("GREEN")){
		    						signalStyle2(row, style46, "NOTAG_CALC1_H01_SN");
		    					}else if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_H01_SN").toString().equals("YELLOW")){
		    						signalStyle2(row, style47, "NOTAG_CALC1_H01_SN");
		    					}else{
		    						signalStyle2(row, style48, "NOTAG_CALC1_H01_SN");
		    					}
		    					
		    					if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_H02_SN").toString().equals("GREEN")){
		    						signalStyle2(row, style46, "NOTAG_CALC1_H02_SN");
		    					}else if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_H02_SN").toString().equals("YELLOW")){
		    						signalStyle2(row, style47, "NOTAG_CALC1_H02_SN");
		    					}else{
		    						signalStyle2(row, style48, "NOTAG_CALC1_H02_SN");
		    					}
		    					
		    					if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_YTD_SN").toString().equals("GREEN")){
		    						signalStyle2(row, style46, "NOTAG_CALC1_YTD_SN");
		    					}else if(rowData_Dep_NOTGT_Calc1.get("NOTAG_CALC1_YTD_SN").toString().equals("YELLOW")){
		    						signalStyle2(row, style47, "NOTAG_CALC1_YTD_SN");
		    					}else{
		    						signalStyle2(row, style48, "NOTAG_CALC1_YTD_SN");
		    					}
		    					
		    					setColStyle(row, style30, outlook-1, outlook-1);
		    					setColStyle(row, style31, outlookEnd+signal+1, outlookEnd+signal+1);
	    						
	    					}else{
	    						setRowValueHide(row, style53, rowData_Dep_NOTGT_Calc1);
	    						
	    						signalStyle2(row, style53, "NOTAG_CALC1_Q01_SN");
	    						signalStyle2(row, style53, "NOTAG_CALC1_Q02_SN");
	    						signalStyle2(row, style53, "NOTAG_CALC1_Q03_SN");
	    						signalStyle2(row, style53, "NOTAG_CALC1_Q04_SN");
	    						signalStyle2(row, style53, "NOTAG_CALC1_H01_SN");
	    						signalStyle2(row, style53, "NOTAG_CALC1_H02_SN");
	    						signalStyle2(row, style54, "NOTAG_CALC1_YTD_SN");

	    					}
	    					
	    					
	    					
	    				}
	    				
	    			}
	    			
	    			// Note G Target
	    			// Outlook / Target
	    			List data_Dep_NOTGT_Calc2 = (List) Dep_NOTGT_Calc2(noteG);
	    			
	    			for(int i=0; i<data_Dep_NOTGT_Calc2.size(); i++){
	    				
	    				seq = 0;
	    				
	    				Map rowData_Dep_NOTGT_Calc2 = (Map)data_Dep_NOTGT_Calc2.get(i);
	    				
	    				row = sheet.getRow(row_cal7++);
	    				if(rowData_Dep_NOTGT_Calc2.get("TOTAL").toString().equals("TOTAL")){
	    					row = sheet.getRow(row_cal7++);
	    				}
	    				
	    				if(rowData_Dep_NOTGT_Calc2.get("STYLE").equals("style4")){
	    					if(rowData_Dep_NOTGT_Calc2.get("DATALV2_NM").equals("Total Note G Spending(K KRW)")){
	    						if(rowData_Dep_NOTGT_Calc2.get("DATALV2").equals("KRW")){
	    							
	    							setRowValue12(row, style12, rowData_Dep_NOTGT_Calc2);
	    	    					setRowValue15(row, style4, rowData_Dep_NOTGT_Calc2);
	    	    					
	    	    					// 신호등 처리
	    	    					if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q01_SN").toString().equals("GREEN")){
	    	    						signalStyle3(row, style50, "NOTAG_CALC1_Q01_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q01_SN").toString().equals("YELLOW")){
	    	    						signalStyle3(row, style51, "NOTAG_CALC1_Q01_SN");
	    	    					}else{
	    	    						signalStyle3(row, style52, "NOTAG_CALC1_Q01_SN");
	    	    					}
	    	    					
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q02_SN").toString().equals("GREEN")){
	    	    						signalStyle3(row, style50, "NOTAG_CALC1_Q02_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q02_SN").toString().equals("YELLOW")){
	    	    						signalStyle3(row, style51, "NOTAG_CALC1_Q02_SN");
	    	    					}else{
	    	    						signalStyle3(row, style52, "NOTAG_CALC1_Q02_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q03_SN").toString().equals("GREEN")){
	    	    						signalStyle3(row, style50, "NOTAG_CALC1_Q03_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q03_SN").toString().equals("YELLOW")){
	    	    						signalStyle3(row, style51, "NOTAG_CALC1_Q03_SN");
	    	    					}else{
	    	    						signalStyle3(row, style52, "NOTAG_CALC1_Q03_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q04_SN").toString().equals("GREEN")){
	    	    						signalStyle3(row, style50, "NOTAG_CALC1_Q04_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q04_SN").toString().equals("YELLOW")){
	    	    						signalStyle3(row, style51, "NOTAG_CALC1_Q04_SN");
	    	    					}else{
	    	    						signalStyle3(row, style52, "NOTAG_CALC1_Q04_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_H01_SN").toString().equals("GREEN")){
	    	    						signalStyle3(row, style50, "NOTAG_CALC1_H01_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_H01_SN").toString().equals("YELLOW")){
	    	    						signalStyle3(row, style51, "NOTAG_CALC1_H01_SN");
	    	    					}else{
	    	    						signalStyle3(row, style52, "NOTAG_CALC1_H01_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_H02_SN").toString().equals("GREEN")){
	    	    						signalStyle3(row, style50, "NOTAG_CALC1_H02_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_H02_SN").toString().equals("YELLOW")){
	    	    						signalStyle3(row, style51, "NOTAG_CALC1_H02_SN");
	    	    					}else{
	    	    						signalStyle3(row, style52, "NOTAG_CALC1_H02_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_YTD_SN").toString().equals("GREEN")){
	    	    						signalStyle3(row, style50, "NOTAG_CALC1_YTD_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_YTD_SN").toString().equals("YELLOW")){
	    	    						signalStyle3(row, style51, "NOTAG_CALC1_YTD_SN");
	    	    					}else{
	    	    						signalStyle3(row, style52, "NOTAG_CALC1_YTD_SN");
	    	    					}
	    	    					
	    						}else{
	    							setRowValue12(row, style67, rowData_Dep_NOTGT_Calc2);
	    	    					setRowValue15(row, style62, rowData_Dep_NOTGT_Calc2);
	    	    					
	    	    					// 신호등 처리
	    	    					if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q01_SN").toString().equals("GREEN")){
	    	    						signalStyle3(row, style64, "NOTAG_CALC1_Q01_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q01_SN").toString().equals("YELLOW")){
	    	    						signalStyle3(row, style65, "NOTAG_CALC1_Q01_SN");
	    	    					}else{
	    	    						signalStyle3(row, style66, "NOTAG_CALC1_Q01_SN");
	    	    					}
	    	    					
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q02_SN").toString().equals("GREEN")){
	    	    						signalStyle3(row, style64, "NOTAG_CALC1_Q02_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q02_SN").toString().equals("YELLOW")){
	    	    						signalStyle3(row, style65, "NOTAG_CALC1_Q02_SN");
	    	    					}else{
	    	    						signalStyle3(row, style66, "NOTAG_CALC1_Q02_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q03_SN").toString().equals("GREEN")){
	    	    						signalStyle3(row, style64, "NOTAG_CALC1_Q03_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q03_SN").toString().equals("YELLOW")){
	    	    						signalStyle3(row, style65, "NOTAG_CALC1_Q03_SN");
	    	    					}else{
	    	    						signalStyle3(row, style66, "NOTAG_CALC1_Q03_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q04_SN").toString().equals("GREEN")){
	    	    						signalStyle3(row, style64, "NOTAG_CALC1_Q04_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q04_SN").toString().equals("YELLOW")){
	    	    						signalStyle3(row, style65, "NOTAG_CALC1_Q04_SN");
	    	    					}else{
	    	    						signalStyle3(row, style66, "NOTAG_CALC1_Q04_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_H01_SN").toString().equals("GREEN")){
	    	    						signalStyle3(row, style64, "NOTAG_CALC1_H01_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_H01_SN").toString().equals("YELLOW")){
	    	    						signalStyle3(row, style65, "NOTAG_CALC1_H01_SN");
	    	    					}else{
	    	    						signalStyle3(row, style66, "NOTAG_CALC1_H01_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_H02_SN").toString().equals("GREEN")){
	    	    						signalStyle3(row, style64, "NOTAG_CALC1_H02_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_H02_SN").toString().equals("YELLOW")){
	    	    						signalStyle3(row, style65, "NOTAG_CALC1_H02_SN");
	    	    					}else{
	    	    						signalStyle3(row, style66, "NOTAG_CALC1_H02_SN");
	    	    					}
	    	    					
	    	    					if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_YTD_SN").toString().equals("GREEN")){
	    	    						signalStyle3(row, style64, "NOTAG_CALC1_YTD_SN");
	    	    					}else if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_YTD_SN").toString().equals("YELLOW")){
	    	    						signalStyle3(row, style65, "NOTAG_CALC1_YTD_SN");
	    	    					}else{
	    	    						signalStyle3(row, style66, "NOTAG_CALC1_YTD_SN");
	    	    					}
	    	    					
	    						}
	    						
	    					}else{
	    						
	    						setRowValueHide2(row, style4, rowData_Dep_NOTGT_Calc2);
		    					setRowValue15(row, style4, rowData_Dep_NOTGT_Calc2);
		    					
	    					}
	    					
	    					setColStyle(row, style30, outlookEnd+signal+1, outlookEnd+signal+1);
	    					setColStyle(row, style31, somEnd+signal+1, somEnd+signal+1);
	    					
	    				}else if(rowData_Dep_NOTGT_Calc2.get("STYLE").equals("style10")){
	    					
	    					if(rowData_Dep_NOTGT_Calc2.get("TOTAL").equals("TOTAL")){
	    						setRowValue12(row, style15, rowData_Dep_NOTGT_Calc2);
	    						
	    						// 신호등 처리
		    					if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q01_SN").toString().equals("GREEN")){
		    						signalStyle3(row, style46, "NOTAG_CALC1_Q01_SN");
		    					}else if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q01_SN").toString().equals("YELLOW")){
		    						signalStyle3(row, style47, "NOTAG_CALC1_Q01_SN");
		    					}else{
		    						signalStyle3(row, style48, "NOTAG_CALC1_Q01_SN");
		    					}
		    					
		    					
		    					if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q02_SN").toString().equals("GREEN")){
		    						signalStyle3(row, style46, "NOTAG_CALC1_Q02_SN");
		    					}else if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q02_SN").toString().equals("YELLOW")){
		    						signalStyle3(row, style47, "NOTAG_CALC1_Q02_SN");
		    					}else{
		    						signalStyle3(row, style48, "NOTAG_CALC1_Q02_SN");
		    					}
		    					
		    					if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q03_SN").toString().equals("GREEN")){
		    						signalStyle3(row, style46, "NOTAG_CALC1_Q03_SN");
		    					}else if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q03_SN").toString().equals("YELLOW")){
		    						signalStyle3(row, style47, "NOTAG_CALC1_Q03_SN");
		    					}else{
		    						signalStyle3(row, style48, "NOTAG_CALC1_Q03_SN");
		    					}
		    					
		    					if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q04_SN").toString().equals("GREEN")){
		    						signalStyle3(row, style46, "NOTAG_CALC1_Q04_SN");
		    					}else if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_Q04_SN").toString().equals("YELLOW")){
		    						signalStyle3(row, style47, "NOTAG_CALC1_Q04_SN");
		    					}else{
		    						signalStyle3(row, style48, "NOTAG_CALC1_Q04_SN");
		    					}
		    					
		    					if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_H01_SN").toString().equals("GREEN")){
		    						signalStyle3(row, style46, "NOTAG_CALC1_H01_SN");
		    					}else if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_H01_SN").toString().equals("YELLOW")){
		    						signalStyle3(row, style47, "NOTAG_CALC1_H01_SN");
		    					}else{
		    						signalStyle3(row, style48, "NOTAG_CALC1_H01_SN");
		    					}
		    					
		    					if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_H02_SN").toString().equals("GREEN")){
		    						signalStyle3(row, style46, "NOTAG_CALC1_H02_SN");
		    					}else if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_H02_SN").toString().equals("YELLOW")){
		    						signalStyle3(row, style47, "NOTAG_CALC1_H02_SN");
		    					}else{
		    						signalStyle3(row, style48, "NOTAG_CALC1_H02_SN");
		    					}
		    					
		    					if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_YTD_SN").toString().equals("GREEN")){
		    						signalStyle3(row, style46, "NOTAG_CALC1_YTD_SN");
		    					}else if(rowData_Dep_NOTGT_Calc2.get("NOTAG_CALC1_YTD_SN").toString().equals("YELLOW")){
		    						signalStyle3(row, style47, "NOTAG_CALC1_YTD_SN");
		    					}else{
		    						signalStyle3(row, style48, "NOTAG_CALC1_YTD_SN");
		    					}
		    					
		    					setColStyle(row, style30, outlookEnd+signal+1, outlookEnd+signal+1);
		    					setColStyle(row, style31, somEnd+signal+1, somEnd+signal+1);
	    						
	    					}else{
	    						
	    						setRowValueHide2(row, style53, rowData_Dep_NOTGT_Calc2);
	    						signalStyle3(row, style53, "NOTAG_CALC1_Q01_SN");
	    						signalStyle3(row, style53, "NOTAG_CALC1_Q02_SN");
	    						signalStyle3(row, style53, "NOTAG_CALC1_Q03_SN");
	    						signalStyle3(row, style53, "NOTAG_CALC1_Q04_SN");
	    						signalStyle3(row, style53, "NOTAG_CALC1_H01_SN");
	    						signalStyle3(row, style53, "NOTAG_CALC1_H02_SN");
	    						signalStyle3(row, style54, "NOTAG_CALC1_YTD_SN");
	    						
	    						setColStyle(row, style30, outlookEnd+signal+1, outlookEnd+signal+1);
		    					setColStyle(row, style31, somEnd+signal+1, somEnd+signal+1);
	    						
	    					}	
	    				}
	    				
	    			}
	    			
				}
			}
			
			String periodTxt = (String)param.get("period2"); 
			
			String fileTxtName ="ESLT_Depletion";
			
			fileTxtName += "_"+fy_Param;
			
			if(periodChk_Param.equals("Y")){
				fileTxtName += "_ALL";
			}else if(!periodTxt.equals("")){
				fileTxtName += "_"+periodTxt;
			}
			
			fileTxtName += "_"+ytd_Param;
			
			if(!channel_Param.equals("")){
				fileTxtName += "_"+channel_Param;
			}
			
			if(!region_Param.equals("")){
				if(channel_Param.equals("")){
					fileTxtName += "_ALL";
				}
				fileTxtName += "_"+region_Param;
			}
			
			if(!team_Param.equals("")){
				
				if(region_Param.equals("")){
					
					if(channel_Param.equals("")){
						fileTxtName += "_ALL";
					}
					
					fileTxtName += "_ALL";
				}
				fileTxtName += "_"+team_Param;
			}
			
			fileTxtName += ".xls";
			
			//파일 임시 저장소 (c:/deploy/diageo/WEB-INF/temp/)
			File dir = new File(createTempFilePath);
			try {
				if(!dir.isDirectory()) dir.mkdirs();
			}
			catch(Exception e) {
				dir.mkdirs();
			}
			
			FileOutputStream out = new FileOutputStream(new File(createTempFilePath+fileTxtName));
			
			wb.write(out); 
			out.close();
			//wb.close();
			
			rm.setCode(rm.RESULT_SUCCESS);
			rm.setParameters(fileTxtName);
			rm.setMessage(getMessageSourceAccessor().getMessage("success.save"));
			
		}
		
	    catch(Exception e)
	    {
	    	if (logger.isDebugEnabled()) {
				logger.debug(e.toString());
				e.printStackTrace();
			}
			
			rm.setCode(rm.RESULT_ERROR);
			rm.setMessage(getMessageSourceAccessor().getMessage("failure.completeAccre"));
			rm.setSystemMessage(e.toString());
	    }
		
		
		ModelAndView mv = new ModelAndView("resultView");
		mv.addObject("resultMsg", rm);

		return mv;
		
	}
	
	/*
	 * Description: 그룹핑할 컬럼에 따른 지정된 컬럼의 합계를 계산
	 */
	public Double getSum(List dataSource, String colIdx, String grpTxt, String colSumIdx, String onIdx, String onTxt){
		Double colSum = 0.0;
		for (int i=0; i < dataSource.size(); i++) {
			
			if (grpTxt.equals("")) {
				if (!onTxt.equals("")) {
					if (((Map)dataSource.get(i)).get(onIdx).toString().equals(onTxt)) {
						colSum = colSum + Double.parseDouble(((Map)dataSource.get(i)).get(colSumIdx).toString());
					}
				}else{
					colSum = colSum + Double.parseDouble(((Map)dataSource.get(i)).get(colSumIdx).toString());
				}
			}else if(onTxt.equals("")) {
				if (((Map)dataSource.get(i)).get(colIdx).toString().equals(grpTxt)) {
					colSum = colSum + Double.parseDouble(((Map)dataSource.get(i)).get(colSumIdx).toString());
				}
			}else if (((Map)dataSource.get(i)).get(onIdx).toString().equals(onTxt) && ((Map)dataSource.get(i)).get(colIdx).toString().equals(grpTxt)) {
				colSum = colSum + Double.parseDouble(((Map)dataSource.get(i)).get(colSumIdx).toString());
			}
		}
		return colSum;
	}
	
	/*
	 * Description: Industry Depletion Forecast 4~61번째 컬럼의 입력값을 셀에 입력
	 */
	public void setRowValue(HSSFRow row, CellStyle style, Map rowData, String styleTxt) throws Exception {
		
		if(periodChk_Param.equals("Y")){
			
			for(int i=4; i<62; i++){
				if(i==42){
					continue;
				}else{
					row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
					row.getCell(i).setCellStyle(style);
				}
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("IND_AC_P01").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("IND_AC_P02").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("IND_AC_P03").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("IND_AC_P04").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("IND_AC_P05").toString()));
	    	row.getCell(9).setCellValue(Double.parseDouble(rowData.get("IND_AC_P06").toString()));
	    	row.getCell(10).setCellValue(Double.parseDouble(rowData.get("IND_AC_P07").toString()));
	    	row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_P08").toString()));
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("IND_AC_P09").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("IND_AC_P10").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("IND_AC_P11").toString()));
	    	row.getCell(15).setCellValue(Double.parseDouble(rowData.get("IND_AC_P12").toString()));
	    	row.getCell(16).setCellValue(Double.parseDouble(rowData.get("IND_AC_Q01").toString()));
	    	row.getCell(17).setCellValue(Double.parseDouble(rowData.get("IND_AC_Q02").toString()));
	    	row.getCell(18).setCellValue(Double.parseDouble(rowData.get("IND_AC_Q03").toString()));
	    	row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_AC_Q04").toString()));
	    	row.getCell(20).setCellValue(Double.parseDouble(rowData.get("IND_AC_H01").toString()));
	    	row.getCell(21).setCellValue(Double.parseDouble(rowData.get("IND_AC_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD12").toString()));
			}else{
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD12").toString()));
			}
	    	row.getCell(23).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P01").toString()));
	    	row.getCell(24).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P02").toString()));
	    	row.getCell(25).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P03").toString()));
	    	row.getCell(26).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P04").toString()));
	    	row.getCell(27).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P05").toString()));
	    	row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P06").toString()));
	    	row.getCell(29).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P07").toString()));
	    	row.getCell(30).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P08").toString()));
	    	row.getCell(31).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P09").toString()));
	    	row.getCell(32).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P10").toString()));
	    	row.getCell(33).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P11").toString()));
	    	row.getCell(34).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P12").toString()));
	    	row.getCell(35).setCellValue(Double.parseDouble(rowData.get("IND_FOR_Q01").toString()));
	    	row.getCell(36).setCellValue(Double.parseDouble(rowData.get("IND_FOR_Q02").toString()));
	    	row.getCell(37).setCellValue(Double.parseDouble(rowData.get("IND_FOR_Q03").toString()));
	    	row.getCell(38).setCellValue(Double.parseDouble(rowData.get("IND_FOR_Q04").toString()));
	    	row.getCell(39).setCellValue(Double.parseDouble(rowData.get("IND_FOR_H01").toString()));
	    	row.getCell(40).setCellValue(Double.parseDouble(rowData.get("IND_FOR_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD12").toString()));
			}else{
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD12").toString()));
			}
	    	
	    	row.getCell(43).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P01").toString()));
	    	row.getCell(44).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P02").toString()));
	    	row.getCell(45).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P03").toString()));
	    	row.getCell(46).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P04").toString()));
	    	row.getCell(47).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P05").toString()));
	    	row.getCell(48).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P06").toString()));
	    	row.getCell(49).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P07").toString()));
	    	row.getCell(50).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P08").toString()));
	    	row.getCell(51).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P09").toString()));
	    	row.getCell(52).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P10").toString()));
	    	row.getCell(53).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P11").toString()));
	    	row.getCell(54).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P12").toString()));
	    	row.getCell(55).setCellValue(Double.parseDouble(rowData.get("IND_OUT_Q01").toString()));
	    	row.getCell(56).setCellValue(Double.parseDouble(rowData.get("IND_OUT_Q02").toString()));
	    	row.getCell(57).setCellValue(Double.parseDouble(rowData.get("IND_OUT_Q03").toString()));
	    	row.getCell(58).setCellValue(Double.parseDouble(rowData.get("IND_OUT_Q04").toString()));
	    	row.getCell(59).setCellValue(Double.parseDouble(rowData.get("IND_OUT_H01").toString()));
	    	row.getCell(60).setCellValue(Double.parseDouble(rowData.get("IND_OUT_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(61).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(61).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(61).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(61).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(61).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(61).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(61).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(61).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(61).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(61).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(61).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(61).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD12").toString()));
			}else{
				row.getCell(61).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD12").toString()));
			}
	    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=4; i<23; i++){
				if(i==16){
					continue;
				}else{
					row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
					row.getCell(i).setCellStyle(style);
				}
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("IND_AC_P01").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("IND_AC_P02").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("IND_AC_P03").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("IND_AC_Q01").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("IND_AC_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD12").toString()));
			}else{
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD12").toString()));
			}
	    	row.getCell(10).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P01").toString()));
	    	row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P02").toString()));
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P03").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("IND_FOR_Q01").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("IND_FOR_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD12").toString()));
			}else{
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD12").toString()));
			}
	    	
	    	row.getCell(17).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P01").toString()));
	    	row.getCell(18).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P02").toString()));
	    	row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P03").toString()));
	    	row.getCell(20).setCellValue(Double.parseDouble(rowData.get("IND_OUT_Q01").toString()));
	    	row.getCell(21).setCellValue(Double.parseDouble(rowData.get("IND_OUT_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD12").toString()));
			}else{
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD12").toString()));
			}
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=4; i<26; i++){
				if(i==18){
					continue;
				}else{
					row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
					row.getCell(i).setCellStyle(style);
				}
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("IND_AC_P04").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("IND_AC_P05").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("IND_AC_P06").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("IND_AC_Q01").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("IND_AC_Q02").toString()));
	    	row.getCell(9).setCellValue(Double.parseDouble(rowData.get("IND_AC_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD12").toString()));
			}else{
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD12").toString()));
			}
	    	row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P04").toString()));
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P05").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P06").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("IND_FOR_Q01").toString()));
	    	row.getCell(15).setCellValue(Double.parseDouble(rowData.get("IND_FOR_Q02").toString()));
	    	row.getCell(16).setCellValue(Double.parseDouble(rowData.get("IND_FOR_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD12").toString()));
			}else{
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD12").toString()));
			}
	    	
	    	row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P04").toString()));
	    	row.getCell(20).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P05").toString()));
	    	row.getCell(21).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P06").toString()));
	    	row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_OUT_Q01").toString()));
	    	row.getCell(23).setCellValue(Double.parseDouble(rowData.get("IND_OUT_Q02").toString()));
	    	row.getCell(24).setCellValue(Double.parseDouble(rowData.get("IND_OUT_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(25).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(25).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(25).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(25).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(25).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(25).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(25).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(25).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(25).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(25).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(25).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(25).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD12").toString()));
			}else{
				row.getCell(25).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD12").toString()));
			}
	    	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=4; i<29; i++){
				if(i==20){
					continue;
				}else{
					row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
					row.getCell(i).setCellStyle(style);
				}
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("IND_AC_P07").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("IND_AC_P08").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("IND_AC_P09").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("IND_AC_Q02").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("IND_AC_Q03").toString()));
	    	row.getCell(9).setCellValue(Double.parseDouble(rowData.get("IND_AC_H01").toString()));
	    	row.getCell(10).setCellValue(Double.parseDouble(rowData.get("IND_AC_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD12").toString()));
			}else{
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD12").toString()));
			}
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P07").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P08").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P09").toString()));
	    	row.getCell(15).setCellValue(Double.parseDouble(rowData.get("IND_FOR_Q02").toString()));
	    	row.getCell(16).setCellValue(Double.parseDouble(rowData.get("IND_FOR_Q03").toString()));
	    	row.getCell(17).setCellValue(Double.parseDouble(rowData.get("IND_FOR_H01").toString()));
	    	row.getCell(18).setCellValue(Double.parseDouble(rowData.get("IND_FOR_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD12").toString()));
			}else{
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD12").toString()));
			}
	    	
	    	row.getCell(21).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P07").toString()));
	    	row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P08").toString()));
	    	row.getCell(23).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P09").toString()));
	    	row.getCell(24).setCellValue(Double.parseDouble(rowData.get("IND_OUT_Q02").toString()));
	    	row.getCell(25).setCellValue(Double.parseDouble(rowData.get("IND_OUT_Q03").toString()));
	    	row.getCell(26).setCellValue(Double.parseDouble(rowData.get("IND_OUT_H01").toString()));
	    	row.getCell(27).setCellValue(Double.parseDouble(rowData.get("IND_OUT_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD12").toString()));
			}else{
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD12").toString()));
			}
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=4; i<29; i++){
				if(i==20){
					continue;
				}else{
					row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
					row.getCell(i).setCellStyle(style);
				}
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("IND_AC_P10").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("IND_AC_P11").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("IND_AC_P12").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("IND_AC_Q03").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("IND_AC_Q04").toString()));
	    	row.getCell(9).setCellValue(Double.parseDouble(rowData.get("IND_AC_H01").toString()));
	    	row.getCell(10).setCellValue(Double.parseDouble(rowData.get("IND_AC_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD12").toString()));
			}else{
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("IND_AC_YTD12").toString()));
			}
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P10").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P11").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("IND_FOR_P12").toString()));
	    	row.getCell(15).setCellValue(Double.parseDouble(rowData.get("IND_FOR_Q03").toString()));
	    	row.getCell(16).setCellValue(Double.parseDouble(rowData.get("IND_FOR_Q04").toString()));
	    	row.getCell(17).setCellValue(Double.parseDouble(rowData.get("IND_FOR_H01").toString()));
	    	row.getCell(18).setCellValue(Double.parseDouble(rowData.get("IND_FOR_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD12").toString()));
			}else{
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("IND_FOR_YTD12").toString()));
			}
	    	
			row.getCell(21).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P10").toString()));
	    	row.getCell(22).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P11").toString()));
	    	row.getCell(23).setCellValue(Double.parseDouble(rowData.get("IND_OUT_P12").toString()));
	    	row.getCell(24).setCellValue(Double.parseDouble(rowData.get("IND_OUT_Q03").toString()));
	    	row.getCell(25).setCellValue(Double.parseDouble(rowData.get("IND_OUT_Q04").toString()));
	    	row.getCell(26).setCellValue(Double.parseDouble(rowData.get("IND_OUT_H01").toString()));
	    	row.getCell(27).setCellValue(Double.parseDouble(rowData.get("IND_OUT_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD12").toString()));
			}else{
				row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_OUT_YTD12").toString()));
			}
	    	
		}
		
    	// 계산식을 위해 리스트에 값을 담아준다.
    	indDeplMap = new HashMap();
    	
    	indDeplMap.put("STYLETXT", styleTxt);
    	indDeplMap.put("IND_AC_P01", Double.parseDouble(rowData.get("IND_AC_P01").toString()));
		indDeplMap.put("IND_AC_P02", Double.parseDouble(rowData.get("IND_AC_P02").toString()));
		indDeplMap.put("IND_AC_P03", Double.parseDouble(rowData.get("IND_AC_P03").toString()));
		indDeplMap.put("IND_AC_P04", Double.parseDouble(rowData.get("IND_AC_P04").toString()));
		indDeplMap.put("IND_AC_P05", Double.parseDouble(rowData.get("IND_AC_P05").toString()));
		indDeplMap.put("IND_AC_P06", Double.parseDouble(rowData.get("IND_AC_P06").toString()));
		indDeplMap.put("IND_AC_P07", Double.parseDouble(rowData.get("IND_AC_P07").toString()));
		indDeplMap.put("IND_AC_P08", Double.parseDouble(rowData.get("IND_AC_P08").toString()));
		indDeplMap.put("IND_AC_P09", Double.parseDouble(rowData.get("IND_AC_P09").toString()));
		indDeplMap.put("IND_AC_P10", Double.parseDouble(rowData.get("IND_AC_P10").toString()));
		indDeplMap.put("IND_AC_P11", Double.parseDouble(rowData.get("IND_AC_P11").toString()));
		indDeplMap.put("IND_AC_P12", Double.parseDouble(rowData.get("IND_AC_P12").toString()));
		indDeplMap.put("IND_AC_Q01", Double.parseDouble(rowData.get("IND_AC_Q01").toString()));
		indDeplMap.put("IND_AC_Q02", Double.parseDouble(rowData.get("IND_AC_Q02").toString()));
		indDeplMap.put("IND_AC_Q03", Double.parseDouble(rowData.get("IND_AC_Q03").toString()));
		indDeplMap.put("IND_AC_Q04", Double.parseDouble(rowData.get("IND_AC_Q04").toString()));
		indDeplMap.put("IND_AC_H01", Double.parseDouble(rowData.get("IND_AC_H01").toString()));
		indDeplMap.put("IND_AC_H02", Double.parseDouble(rowData.get("IND_AC_H02").toString()));
		if(ytd_Param.equals("P01")){
			indDeplMap.put("IND_AC_YTD", Double.parseDouble(rowData.get("IND_AC_YTD01").toString()));
		}else if(ytd_Param.equals("P02")){
			indDeplMap.put("IND_AC_YTD", Double.parseDouble(rowData.get("IND_AC_YTD02").toString()));
		}else if(ytd_Param.equals("P03")){
			indDeplMap.put("IND_AC_YTD", Double.parseDouble(rowData.get("IND_AC_YTD03").toString()));
		}else if(ytd_Param.equals("P04")){
			indDeplMap.put("IND_AC_YTD", Double.parseDouble(rowData.get("IND_AC_YTD04").toString()));
		}else if(ytd_Param.equals("P05")){
			indDeplMap.put("IND_AC_YTD", Double.parseDouble(rowData.get("IND_AC_YTD05").toString()));
		}else if(ytd_Param.equals("P06")){
			indDeplMap.put("IND_AC_YTD", Double.parseDouble(rowData.get("IND_AC_YTD06").toString()));
		}else if(ytd_Param.equals("P07")){
			indDeplMap.put("IND_AC_YTD", Double.parseDouble(rowData.get("IND_AC_YTD07").toString()));
		}else if(ytd_Param.equals("P08")){
			indDeplMap.put("IND_AC_YTD", Double.parseDouble(rowData.get("IND_AC_YTD08").toString()));
		}else if(ytd_Param.equals("P09")){
			indDeplMap.put("IND_AC_YTD", Double.parseDouble(rowData.get("IND_AC_YTD09").toString()));
		}else if(ytd_Param.equals("P10")){
			indDeplMap.put("IND_AC_YTD", Double.parseDouble(rowData.get("IND_AC_YTD10").toString()));
		}else if(ytd_Param.equals("P11")){
			indDeplMap.put("IND_AC_YTD", Double.parseDouble(rowData.get("IND_AC_YTD11").toString()));
		}else if(ytd_Param.equals("P12")){
			indDeplMap.put("IND_AC_YTD", Double.parseDouble(rowData.get("IND_AC_YTD12").toString()));
		}else{
			indDeplMap.put("IND_AC_YTD", Double.parseDouble(rowData.get("IND_AC_YTD12").toString()));
		}
		
		indDeplMap.put("IND_FOR_P01", Double.parseDouble(rowData.get("IND_FOR_P01").toString()));
		indDeplMap.put("IND_FOR_P02", Double.parseDouble(rowData.get("IND_FOR_P02").toString()));
		indDeplMap.put("IND_FOR_P03", Double.parseDouble(rowData.get("IND_FOR_P03").toString()));
		indDeplMap.put("IND_FOR_P04", Double.parseDouble(rowData.get("IND_FOR_P04").toString()));
		indDeplMap.put("IND_FOR_P05", Double.parseDouble(rowData.get("IND_FOR_P05").toString()));
		indDeplMap.put("IND_FOR_P06", Double.parseDouble(rowData.get("IND_FOR_P06").toString()));
		indDeplMap.put("IND_FOR_P07", Double.parseDouble(rowData.get("IND_FOR_P07").toString()));
		indDeplMap.put("IND_FOR_P08", Double.parseDouble(rowData.get("IND_FOR_P08").toString()));
		indDeplMap.put("IND_FOR_P09", Double.parseDouble(rowData.get("IND_FOR_P09").toString()));
		indDeplMap.put("IND_FOR_P10", Double.parseDouble(rowData.get("IND_FOR_P10").toString()));
		indDeplMap.put("IND_FOR_P11", Double.parseDouble(rowData.get("IND_FOR_P11").toString()));
		indDeplMap.put("IND_FOR_P12", Double.parseDouble(rowData.get("IND_FOR_P12").toString()));
		indDeplMap.put("IND_FOR_Q01", Double.parseDouble(rowData.get("IND_FOR_Q01").toString()));
		indDeplMap.put("IND_FOR_Q02", Double.parseDouble(rowData.get("IND_FOR_Q02").toString()));
		indDeplMap.put("IND_FOR_Q03", Double.parseDouble(rowData.get("IND_FOR_Q03").toString()));
		indDeplMap.put("IND_FOR_Q04", Double.parseDouble(rowData.get("IND_FOR_Q04").toString()));
		indDeplMap.put("IND_FOR_H01", Double.parseDouble(rowData.get("IND_FOR_H01").toString()));
		indDeplMap.put("IND_FOR_H02", Double.parseDouble(rowData.get("IND_FOR_H02").toString()));
		if(ytd_Param.equals("P01")){
			indDeplMap.put("IND_FOR_YTD", Double.parseDouble(rowData.get("IND_FOR_YTD01").toString()));
		}else if(ytd_Param.equals("P02")){
			indDeplMap.put("IND_FOR_YTD", Double.parseDouble(rowData.get("IND_FOR_YTD02").toString()));
		}else if(ytd_Param.equals("P03")){
			indDeplMap.put("IND_FOR_YTD", Double.parseDouble(rowData.get("IND_FOR_YTD03").toString()));
		}else if(ytd_Param.equals("P04")){
			indDeplMap.put("IND_FOR_YTD", Double.parseDouble(rowData.get("IND_FOR_YTD04").toString()));
		}else if(ytd_Param.equals("P05")){
			indDeplMap.put("IND_FOR_YTD", Double.parseDouble(rowData.get("IND_FOR_YTD05").toString()));
		}else if(ytd_Param.equals("P06")){
			indDeplMap.put("IND_FOR_YTD", Double.parseDouble(rowData.get("IND_FOR_YTD06").toString()));
		}else if(ytd_Param.equals("P07")){
			indDeplMap.put("IND_FOR_YTD", Double.parseDouble(rowData.get("IND_FOR_YTD07").toString()));
		}else if(ytd_Param.equals("P08")){
			indDeplMap.put("IND_FOR_YTD", Double.parseDouble(rowData.get("IND_FOR_YTD08").toString()));
		}else if(ytd_Param.equals("P09")){
			indDeplMap.put("IND_FOR_YTD", Double.parseDouble(rowData.get("IND_FOR_YTD09").toString()));
		}else if(ytd_Param.equals("P10")){
			indDeplMap.put("IND_FOR_YTD", Double.parseDouble(rowData.get("IND_FOR_YTD10").toString()));
		}else if(ytd_Param.equals("P11")){
			indDeplMap.put("IND_FOR_YTD", Double.parseDouble(rowData.get("IND_FOR_YTD11").toString()));
		}else if(ytd_Param.equals("P12")){
			indDeplMap.put("IND_FOR_YTD", Double.parseDouble(rowData.get("IND_FOR_YTD12").toString()));
		}else{
			indDeplMap.put("IND_FOR_YTD", Double.parseDouble(rowData.get("IND_FOR_YTD12").toString()));
		}
		
		indDeplMap.put("IND_OUT_P01", Double.parseDouble(rowData.get("IND_OUT_P01").toString()));
		indDeplMap.put("IND_OUT_P02", Double.parseDouble(rowData.get("IND_OUT_P02").toString()));
		indDeplMap.put("IND_OUT_P03", Double.parseDouble(rowData.get("IND_OUT_P03").toString()));
		indDeplMap.put("IND_OUT_P04", Double.parseDouble(rowData.get("IND_OUT_P04").toString()));
		indDeplMap.put("IND_OUT_P05", Double.parseDouble(rowData.get("IND_OUT_P05").toString()));
		indDeplMap.put("IND_OUT_P06", Double.parseDouble(rowData.get("IND_OUT_P06").toString()));
		indDeplMap.put("IND_OUT_P07", Double.parseDouble(rowData.get("IND_OUT_P07").toString()));
		indDeplMap.put("IND_OUT_P08", Double.parseDouble(rowData.get("IND_OUT_P08").toString()));
		indDeplMap.put("IND_OUT_P09", Double.parseDouble(rowData.get("IND_OUT_P09").toString()));
		indDeplMap.put("IND_OUT_P10", Double.parseDouble(rowData.get("IND_OUT_P10").toString()));
		indDeplMap.put("IND_OUT_P11", Double.parseDouble(rowData.get("IND_OUT_P11").toString()));
		indDeplMap.put("IND_OUT_P12", Double.parseDouble(rowData.get("IND_OUT_P12").toString()));
		indDeplMap.put("IND_OUT_Q01", Double.parseDouble(rowData.get("IND_OUT_Q01").toString()));
		indDeplMap.put("IND_OUT_Q02", Double.parseDouble(rowData.get("IND_OUT_Q02").toString()));
		indDeplMap.put("IND_OUT_Q03", Double.parseDouble(rowData.get("IND_OUT_Q03").toString()));
		indDeplMap.put("IND_OUT_Q04", Double.parseDouble(rowData.get("IND_OUT_Q04").toString()));
		indDeplMap.put("IND_OUT_H01", Double.parseDouble(rowData.get("IND_OUT_H01").toString()));
		indDeplMap.put("IND_OUT_H02", Double.parseDouble(rowData.get("IND_OUT_H02").toString()));
		if(ytd_Param.equals("P01")){
			indDeplMap.put("IND_OUT_YTD", Double.parseDouble(rowData.get("IND_OUT_YTD01").toString()));
		}else if(ytd_Param.equals("P02")){
			indDeplMap.put("IND_OUT_YTD", Double.parseDouble(rowData.get("IND_OUT_YTD02").toString()));
		}else if(ytd_Param.equals("P03")){
			indDeplMap.put("IND_OUT_YTD", Double.parseDouble(rowData.get("IND_OUT_YTD03").toString()));
		}else if(ytd_Param.equals("P04")){
			indDeplMap.put("IND_OUT_YTD", Double.parseDouble(rowData.get("IND_OUT_YTD04").toString()));
		}else if(ytd_Param.equals("P05")){
			indDeplMap.put("IND_OUT_YTD", Double.parseDouble(rowData.get("IND_OUT_YTD05").toString()));
		}else if(ytd_Param.equals("P06")){
			indDeplMap.put("IND_OUT_YTD", Double.parseDouble(rowData.get("IND_OUT_YTD06").toString()));
		}else if(ytd_Param.equals("P07")){
			indDeplMap.put("IND_OUT_YTD", Double.parseDouble(rowData.get("IND_OUT_YTD07").toString()));
		}else if(ytd_Param.equals("P08")){
			indDeplMap.put("IND_OUT_YTD", Double.parseDouble(rowData.get("IND_OUT_YTD08").toString()));
		}else if(ytd_Param.equals("P09")){
			indDeplMap.put("IND_OUT_YTD", Double.parseDouble(rowData.get("IND_OUT_YTD09").toString()));
		}else if(ytd_Param.equals("P10")){
			indDeplMap.put("IND_OUT_YTD", Double.parseDouble(rowData.get("IND_OUT_YTD10").toString()));
		}else if(ytd_Param.equals("P11")){
			indDeplMap.put("IND_OUT_YTD", Double.parseDouble(rowData.get("IND_OUT_YTD11").toString()));
		}else if(ytd_Param.equals("P12")){
			indDeplMap.put("IND_OUT_YTD", Double.parseDouble(rowData.get("IND_OUT_YTD12").toString()));
		}else{
			indDeplMap.put("IND_OUT_YTD", Double.parseDouble(rowData.get("IND_OUT_YTD12").toString()));
		}
		
		indDeplMap.put("IND_TG_P01", Double.parseDouble(rowData.get("IND_TG_P01").toString()));
		indDeplMap.put("IND_TG_P02", Double.parseDouble(rowData.get("IND_TG_P02").toString()));
		indDeplMap.put("IND_TG_P03", Double.parseDouble(rowData.get("IND_TG_P03").toString()));
		indDeplMap.put("IND_TG_P04", Double.parseDouble(rowData.get("IND_TG_P04").toString()));
		indDeplMap.put("IND_TG_P05", Double.parseDouble(rowData.get("IND_TG_P05").toString()));
		indDeplMap.put("IND_TG_P06", Double.parseDouble(rowData.get("IND_TG_P06").toString()));
		indDeplMap.put("IND_TG_P07", Double.parseDouble(rowData.get("IND_TG_P07").toString()));
		indDeplMap.put("IND_TG_P08", Double.parseDouble(rowData.get("IND_TG_P08").toString()));
		indDeplMap.put("IND_TG_P09", Double.parseDouble(rowData.get("IND_TG_P09").toString()));
		indDeplMap.put("IND_TG_P10", Double.parseDouble(rowData.get("IND_TG_P10").toString()));
		indDeplMap.put("IND_TG_P11", Double.parseDouble(rowData.get("IND_TG_P11").toString()));
		indDeplMap.put("IND_TG_P12", Double.parseDouble(rowData.get("IND_TG_P12").toString()));
		indDeplMap.put("IND_TG_Q01", Double.parseDouble(rowData.get("IND_TG_Q01").toString()));
		indDeplMap.put("IND_TG_Q02", Double.parseDouble(rowData.get("IND_TG_Q02").toString()));
		indDeplMap.put("IND_TG_Q03", Double.parseDouble(rowData.get("IND_TG_Q03").toString()));
		indDeplMap.put("IND_TG_Q04", Double.parseDouble(rowData.get("IND_TG_Q04").toString()));
		indDeplMap.put("IND_TG_H01", Double.parseDouble(rowData.get("IND_TG_H01").toString()));
		indDeplMap.put("IND_TG_H02", Double.parseDouble(rowData.get("IND_TG_H02").toString()));
		if(ytd_Param.equals("P01")){
			indDeplMap.put("IND_TG_YTD", Double.parseDouble(rowData.get("IND_TG_YTD01").toString()));
		}else if(ytd_Param.equals("P02")){
			indDeplMap.put("IND_TG_YTD", Double.parseDouble(rowData.get("IND_TG_YTD02").toString()));
		}else if(ytd_Param.equals("P03")){
			indDeplMap.put("IND_TG_YTD", Double.parseDouble(rowData.get("IND_TG_YTD03").toString()));
		}else if(ytd_Param.equals("P04")){
			indDeplMap.put("IND_TG_YTD", Double.parseDouble(rowData.get("IND_TG_YTD04").toString()));
		}else if(ytd_Param.equals("P05")){
			indDeplMap.put("IND_TG_YTD", Double.parseDouble(rowData.get("IND_TG_YTD05").toString()));
		}else if(ytd_Param.equals("P06")){
			indDeplMap.put("IND_TG_YTD", Double.parseDouble(rowData.get("IND_TG_YTD06").toString()));
		}else if(ytd_Param.equals("P07")){
			indDeplMap.put("IND_TG_YTD", Double.parseDouble(rowData.get("IND_TG_YTD07").toString()));
		}else if(ytd_Param.equals("P08")){
			indDeplMap.put("IND_TG_YTD", Double.parseDouble(rowData.get("IND_TG_YTD08").toString()));
		}else if(ytd_Param.equals("P09")){
			indDeplMap.put("IND_TG_YTD", Double.parseDouble(rowData.get("IND_TG_YTD09").toString()));
		}else if(ytd_Param.equals("P10")){
			indDeplMap.put("IND_TG_YTD", Double.parseDouble(rowData.get("IND_TG_YTD10").toString()));
		}else if(ytd_Param.equals("P11")){
			indDeplMap.put("IND_TG_YTD", Double.parseDouble(rowData.get("IND_TG_YTD11").toString()));
		}else if(ytd_Param.equals("P12")){
			indDeplMap.put("IND_TG_YTD", Double.parseDouble(rowData.get("IND_TG_YTD12").toString()));
		}else{
			indDeplMap.put("IND_TG_YTD", Double.parseDouble(rowData.get("IND_TG_YTD12").toString()));
		}
		
		indDepl.add(indDeplMap);
		
	}
	
	/*
	 * Description: Industry Depletion Forecast 4~61번째 컬럼의 소계, 합계를 자동 계산하여 셀에 입력
	 */
	public void setRowSumValue(HSSFRow row, CellStyle style, List data, String colIdx, String grpTxt, String onIdx, String onTxt, String styleTxt) {
		
		// Whisky Off Local합계, Int`l합계
		if(onTxt.equals("OFF") && colIdx.equals("DATALV3_NM")){
			
			indDepFcAcP01 = getSum(data, colIdx, grpTxt, "IND_AC_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P01", "DATALV2_NM", "OFF");
			indDepFcAcP02 = getSum(data, colIdx, grpTxt, "IND_AC_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P02", "DATALV2_NM", "OFF");
			indDepFcAcP03 = getSum(data, colIdx, grpTxt, "IND_AC_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P03", "DATALV2_NM", "OFF");
			indDepFcAcP04 = getSum(data, colIdx, grpTxt, "IND_AC_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P04", "DATALV2_NM", "OFF");
			indDepFcAcP05 = getSum(data, colIdx, grpTxt, "IND_AC_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P05", "DATALV2_NM", "OFF");
			indDepFcAcP06 = getSum(data, colIdx, grpTxt, "IND_AC_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P06", "DATALV2_NM", "OFF");
			indDepFcAcP07 = getSum(data, colIdx, grpTxt, "IND_AC_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P07", "DATALV2_NM", "OFF");
			indDepFcAcP08 = getSum(data, colIdx, grpTxt, "IND_AC_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P08", "DATALV2_NM", "OFF");
			indDepFcAcP09 = getSum(data, colIdx, grpTxt, "IND_AC_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P09", "DATALV2_NM", "OFF");
			indDepFcAcP10 = getSum(data, colIdx, grpTxt, "IND_AC_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P10", "DATALV2_NM", "OFF");
			indDepFcAcP11 = getSum(data, colIdx, grpTxt, "IND_AC_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P11", "DATALV2_NM", "OFF");
			indDepFcAcP12 = getSum(data, colIdx, grpTxt, "IND_AC_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P12", "DATALV2_NM", "OFF");
			indDepFcAcQ01 = getSum(data, colIdx, grpTxt, "IND_AC_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_Q01", "DATALV2_NM", "OFF");
			indDepFcAcQ02 = getSum(data, colIdx, grpTxt, "IND_AC_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_Q02", "DATALV2_NM", "OFF");
			indDepFcAcQ03 = getSum(data, colIdx, grpTxt, "IND_AC_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_Q03", "DATALV2_NM", "OFF");
			indDepFcAcQ04 = getSum(data, colIdx, grpTxt, "IND_AC_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_Q04", "DATALV2_NM", "OFF");
			indDepFcAcH01 = getSum(data, colIdx, grpTxt, "IND_AC_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_H01", "DATALV2_NM", "OFF");
			indDepFcAcH02 = getSum(data, colIdx, grpTxt, "IND_AC_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_H02", "DATALV2_NM", "OFF");
			if(ytd_Param.equals("P01")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD01", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P02")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD02", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P03")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD03", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P04")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD04", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P05")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD05", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P06")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD06", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P07")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD07", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P08")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD08", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P09")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD09", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P10")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD10", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P11")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD11", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P12")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD12", "DATALV2_NM", "OFF");
			}else{
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD12", "DATALV2_NM", "OFF");
			}
			
			indDepFcForP01 = getSum(data, colIdx, grpTxt, "IND_FOR_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P01", "DATALV2_NM", "OFF");
			indDepFcForP02 = getSum(data, colIdx, grpTxt, "IND_FOR_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P02", "DATALV2_NM", "OFF");
			indDepFcForP03 = getSum(data, colIdx, grpTxt, "IND_FOR_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P03", "DATALV2_NM", "OFF");
			indDepFcForP04 = getSum(data, colIdx, grpTxt, "IND_FOR_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P04", "DATALV2_NM", "OFF");
			indDepFcForP05 = getSum(data, colIdx, grpTxt, "IND_FOR_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P05", "DATALV2_NM", "OFF");
			indDepFcForP06 = getSum(data, colIdx, grpTxt, "IND_FOR_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P06", "DATALV2_NM", "OFF");
			indDepFcForP07 = getSum(data, colIdx, grpTxt, "IND_FOR_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P07", "DATALV2_NM", "OFF");
			indDepFcForP08 = getSum(data, colIdx, grpTxt, "IND_FOR_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P08", "DATALV2_NM", "OFF");
			indDepFcForP09 = getSum(data, colIdx, grpTxt, "IND_FOR_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P09", "DATALV2_NM", "OFF");
			indDepFcForP10 = getSum(data, colIdx, grpTxt, "IND_FOR_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P10", "DATALV2_NM", "OFF");
			indDepFcForP11 = getSum(data, colIdx, grpTxt, "IND_FOR_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P11", "DATALV2_NM", "OFF");
			indDepFcForP12 = getSum(data, colIdx, grpTxt, "IND_FOR_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P12", "DATALV2_NM", "OFF");
			indDepFcForQ01 = getSum(data, colIdx, grpTxt, "IND_FOR_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_Q01", "DATALV2_NM", "OFF");
			indDepFcForQ02 = getSum(data, colIdx, grpTxt, "IND_FOR_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_Q02", "DATALV2_NM", "OFF");
			indDepFcForQ03 = getSum(data, colIdx, grpTxt, "IND_FOR_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_Q03", "DATALV2_NM", "OFF");
			indDepFcForQ04 = getSum(data, colIdx, grpTxt, "IND_FOR_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_Q04", "DATALV2_NM", "OFF");
			indDepFcForH01 = getSum(data, colIdx, grpTxt, "IND_FOR_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_H01", "DATALV2_NM", "OFF");
			indDepFcForH02 = getSum(data, colIdx, grpTxt, "IND_FOR_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_H02", "DATALV2_NM", "OFF");
			if(ytd_Param.equals("P01")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD01", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P02")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD02", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P03")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD03", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P04")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD04", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P05")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD05", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P06")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD06", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P07")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD07", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P08")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD08", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P09")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD09", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P10")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD10", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P11")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD11", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P12")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD12", "DATALV2_NM", "OFF");
			}else{
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD12", "DATALV2_NM", "OFF");
			}
		
			indDepFcOutP01 = getSum(data, colIdx, grpTxt, "IND_OUT_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P01", "DATALV2_NM", "OFF");
			indDepFcOutP02 = getSum(data, colIdx, grpTxt, "IND_OUT_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P02", "DATALV2_NM", "OFF");
			indDepFcOutP03 = getSum(data, colIdx, grpTxt, "IND_OUT_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P03", "DATALV2_NM", "OFF");
			indDepFcOutP04 = getSum(data, colIdx, grpTxt, "IND_OUT_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P04", "DATALV2_NM", "OFF");
			indDepFcOutP05 = getSum(data, colIdx, grpTxt, "IND_OUT_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P05", "DATALV2_NM", "OFF");
			indDepFcOutP06 = getSum(data, colIdx, grpTxt, "IND_OUT_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P06", "DATALV2_NM", "OFF");
			indDepFcOutP07 = getSum(data, colIdx, grpTxt, "IND_OUT_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P07", "DATALV2_NM", "OFF");
			indDepFcOutP08 = getSum(data, colIdx, grpTxt, "IND_OUT_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P08", "DATALV2_NM", "OFF");
			indDepFcOutP09 = getSum(data, colIdx, grpTxt, "IND_OUT_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P09", "DATALV2_NM", "OFF");
			indDepFcOutP10 = getSum(data, colIdx, grpTxt, "IND_OUT_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P10", "DATALV2_NM", "OFF");
			indDepFcOutP11 = getSum(data, colIdx, grpTxt, "IND_OUT_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P11", "DATALV2_NM", "OFF");
			indDepFcOutP12 = getSum(data, colIdx, grpTxt, "IND_OUT_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P12", "DATALV2_NM", "OFF");
			indDepFcOutQ01 = getSum(data, colIdx, grpTxt, "IND_OUT_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_Q01", "DATALV2_NM", "OFF");
			indDepFcOutQ02 = getSum(data, colIdx, grpTxt, "IND_OUT_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_Q02", "DATALV2_NM", "OFF");
			indDepFcOutQ03 = getSum(data, colIdx, grpTxt, "IND_OUT_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_Q03", "DATALV2_NM", "OFF");
			indDepFcOutQ04 = getSum(data, colIdx, grpTxt, "IND_OUT_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_Q04", "DATALV2_NM", "OFF");
			indDepFcOutH01 = getSum(data, colIdx, grpTxt, "IND_OUT_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_H01", "DATALV2_NM", "OFF");
			indDepFcOutH02 = getSum(data, colIdx, grpTxt, "IND_OUT_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_H02", "DATALV2_NM", "OFF");
			if(ytd_Param.equals("P01")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD01", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P02")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD02", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P03")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD03", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P04")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD04", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P05")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD05", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P06")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD06", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P07")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD07", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P08")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD08", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P09")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD09", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P10")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD10", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P11")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD11", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P12")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD12", "DATALV2_NM", "OFF");
			}else{
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD12", "DATALV2_NM", "OFF");
			}
		
			indDepFcTgP01 = getSum(data, colIdx, grpTxt, "IND_TG_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P01", "DATALV2_NM", "OFF");
			indDepFcTgP02 = getSum(data, colIdx, grpTxt, "IND_TG_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P02", "DATALV2_NM", "OFF");
			indDepFcTgP03 = getSum(data, colIdx, grpTxt, "IND_TG_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P03", "DATALV2_NM", "OFF");
			indDepFcTgP04 = getSum(data, colIdx, grpTxt, "IND_TG_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P04", "DATALV2_NM", "OFF");
			indDepFcTgP05 = getSum(data, colIdx, grpTxt, "IND_TG_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P05", "DATALV2_NM", "OFF");
			indDepFcTgP06 = getSum(data, colIdx, grpTxt, "IND_TG_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P06", "DATALV2_NM", "OFF");
			indDepFcTgP07 = getSum(data, colIdx, grpTxt, "IND_TG_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P07", "DATALV2_NM", "OFF");
			indDepFcTgP08 = getSum(data, colIdx, grpTxt, "IND_TG_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P08", "DATALV2_NM", "OFF");
			indDepFcTgP09 = getSum(data, colIdx, grpTxt, "IND_TG_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P09", "DATALV2_NM", "OFF");
			indDepFcTgP10 = getSum(data, colIdx, grpTxt, "IND_TG_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P10", "DATALV2_NM", "OFF");
			indDepFcTgP11 = getSum(data, colIdx, grpTxt, "IND_TG_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P11", "DATALV2_NM", "OFF");
			indDepFcTgP12 = getSum(data, colIdx, grpTxt, "IND_TG_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P12", "DATALV2_NM", "OFF");
			indDepFcTgQ01 = getSum(data, colIdx, grpTxt, "IND_TG_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_Q01", "DATALV2_NM", "OFF");
			indDepFcTgQ02 = getSum(data, colIdx, grpTxt, "IND_TG_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_Q02", "DATALV2_NM", "OFF");
			indDepFcTgQ03 = getSum(data, colIdx, grpTxt, "IND_TG_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_Q03", "DATALV2_NM", "OFF");
			indDepFcTgQ04 = getSum(data, colIdx, grpTxt, "IND_TG_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_Q04", "DATALV2_NM", "OFF");
			indDepFcTgH01 = getSum(data, colIdx, grpTxt, "IND_TG_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_H01", "DATALV2_NM", "OFF");
			indDepFcTgH02 = getSum(data, colIdx, grpTxt, "IND_TG_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_H02", "DATALV2_NM", "OFF");
			if(ytd_Param.equals("P01")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD01", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P02")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD02", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P03")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD03", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P04")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD04", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P05")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD05", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P06")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD06", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P07")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD07", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P08")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD08", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P09")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD09", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P10")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD10", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P11")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD11", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P12")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD12", "DATALV2_NM", "OFF");
			}else{
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD12", "DATALV2_NM", "OFF");
			}
			
		// Whisky Off Total (excl Military)
		}else if(onTxt.equals("OFF") && colIdx.equals("")){
			
			indDepFcAcP01 = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_P01", "DATALV2_NM", "OFF");
			indDepFcAcP02 = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_P02", "DATALV2_NM", "OFF");
			indDepFcAcP03 = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_P03", "DATALV2_NM", "OFF");
			indDepFcAcP04 = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_P04", "DATALV2_NM", "OFF");
			indDepFcAcP05 = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_P05", "DATALV2_NM", "OFF");
			indDepFcAcP06 = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_P06", "DATALV2_NM", "OFF");
			indDepFcAcP07 = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_P07", "DATALV2_NM", "OFF");
			indDepFcAcP08 = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_P08", "DATALV2_NM", "OFF");
			indDepFcAcP09 = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_P09", "DATALV2_NM", "OFF");
			indDepFcAcP10 = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_P10", "DATALV2_NM", "OFF");
			indDepFcAcP11 = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_P11", "DATALV2_NM", "OFF");
			indDepFcAcP12 = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_P12", "DATALV2_NM", "OFF");
			indDepFcAcQ01 = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_Q01", "DATALV2_NM", "OFF");
			indDepFcAcQ02 = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_Q02", "DATALV2_NM", "OFF");
			indDepFcAcQ03 = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_Q03", "DATALV2_NM", "OFF");
			indDepFcAcQ04 = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_Q04", "DATALV2_NM", "OFF");
			indDepFcAcH01 = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_H01", "DATALV2_NM", "OFF");
			indDepFcAcH02 = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_H02", "DATALV2_NM", "OFF");
			if(ytd_Param.equals("P01")){
				indDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_YTD01", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P02")){
				indDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_YTD02", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P03")){
				indDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_YTD03", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P04")){
				indDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_YTD04", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P05")){
				indDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_YTD05", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P06")){
				indDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_YTD06", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P07")){
				indDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_YTD07", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P08")){
				indDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_YTD08", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P09")){
				indDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_YTD09", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P10")){
				indDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_YTD10", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P11")){
				indDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_YTD11", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P12")){
				indDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_YTD12", "DATALV2_NM", "OFF");
			}else{
				indDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_AC_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_AC_YTD12", "DATALV2_NM", "OFF");
			} 		
			indDepFcForP01 = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_P01", "DATALV2_NM", "OFF");
			indDepFcForP02 = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_P02", "DATALV2_NM", "OFF");
			indDepFcForP03 = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_P03", "DATALV2_NM", "OFF");
			indDepFcForP04 = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_P04", "DATALV2_NM", "OFF");
			indDepFcForP05 = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_P05", "DATALV2_NM", "OFF");
			indDepFcForP06 = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_P06", "DATALV2_NM", "OFF");
			indDepFcForP07 = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_P07", "DATALV2_NM", "OFF");
			indDepFcForP08 = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_P08", "DATALV2_NM", "OFF");
			indDepFcForP09 = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_P09", "DATALV2_NM", "OFF");
			indDepFcForP10 = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_P10", "DATALV2_NM", "OFF");
			indDepFcForP11 = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_P11", "DATALV2_NM", "OFF");
			indDepFcForP12 = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_P12", "DATALV2_NM", "OFF");
			indDepFcForQ01 = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_Q01", "DATALV2_NM", "OFF");
			indDepFcForQ02 = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_Q02", "DATALV2_NM", "OFF");
			indDepFcForQ03 = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_Q03", "DATALV2_NM", "OFF");
			indDepFcForQ04 = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_Q04", "DATALV2_NM", "OFF");
			indDepFcForH01 = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_H01", "DATALV2_NM", "OFF");
			indDepFcForH02 = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_H02", "DATALV2_NM", "OFF");
			if(ytd_Param.equals("P01")){
				indDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_YTD01", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P02")){
				indDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_YTD02", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P03")){
				indDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_YTD03", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P04")){
				indDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_YTD04", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P05")){
				indDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_YTD05", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P06")){
				indDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_YTD06", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P07")){
				indDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_YTD07", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P08")){
				indDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_YTD08", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P09")){
				indDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_YTD09", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P10")){
				indDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_YTD10", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P11")){
				indDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_YTD11", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P12")){
				indDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_YTD12", "DATALV2_NM", "OFF");
			}else{
				indDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_FOR_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_FOR_YTD12", "DATALV2_NM", "OFF");
			}
			
			indDepFcOutP01 = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_P01", "DATALV2_NM", "OFF");
			indDepFcOutP02 = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_P02", "DATALV2_NM", "OFF");
			indDepFcOutP03 = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_P03", "DATALV2_NM", "OFF");
			indDepFcOutP04 = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_P04", "DATALV2_NM", "OFF");
			indDepFcOutP05 = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_P05", "DATALV2_NM", "OFF");
			indDepFcOutP06 = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_P06", "DATALV2_NM", "OFF");
			indDepFcOutP07 = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_P07", "DATALV2_NM", "OFF");
			indDepFcOutP08 = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_P08", "DATALV2_NM", "OFF");
			indDepFcOutP09 = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_P09", "DATALV2_NM", "OFF");
			indDepFcOutP10 = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_P10", "DATALV2_NM", "OFF");
			indDepFcOutP11 = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_P11", "DATALV2_NM", "OFF");
			indDepFcOutP12 = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_P12", "DATALV2_NM", "OFF");
			indDepFcOutQ01 = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_Q01", "DATALV2_NM", "OFF");
			indDepFcOutQ02 = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_Q02", "DATALV2_NM", "OFF");
			indDepFcOutQ03 = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_Q03", "DATALV2_NM", "OFF");
			indDepFcOutQ04 = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_Q04", "DATALV2_NM", "OFF");
			indDepFcOutH01 = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_H01", "DATALV2_NM", "OFF");
			indDepFcOutH02 = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_H02", "DATALV2_NM", "OFF");
			if(ytd_Param.equals("P01")){
				indDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_YTD01", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P02")){
				indDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_YTD02", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P03")){
				indDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_YTD03", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P04")){
				indDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_YTD04", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P05")){
				indDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_YTD05", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P06")){
				indDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_YTD06", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P07")){
				indDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_YTD07", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P08")){
				indDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_YTD08", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P09")){
				indDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_YTD09", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P10")){
				indDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_YTD10", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P11")){
				indDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_YTD11", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P12")){
				indDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_YTD12", "DATALV2_NM", "OFF");
			}else{
				indDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_OUT_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_OUT_YTD12", "DATALV2_NM", "OFF");
			}
		
			indDepFcTgP01 = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_P01", "DATALV2_NM", "OFF");
			indDepFcTgP02 = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_P02", "DATALV2_NM", "OFF");
			indDepFcTgP03 = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_P03", "DATALV2_NM", "OFF");
			indDepFcTgP04 = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_P04", "DATALV2_NM", "OFF");
			indDepFcTgP05 = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_P05", "DATALV2_NM", "OFF");
			indDepFcTgP06 = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_P06", "DATALV2_NM", "OFF");
			indDepFcTgP07 = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_P07", "DATALV2_NM", "OFF");
			indDepFcTgP08 = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_P08", "DATALV2_NM", "OFF");
			indDepFcTgP09 = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_P09", "DATALV2_NM", "OFF");
			indDepFcTgP10 = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_P10", "DATALV2_NM", "OFF");
			indDepFcTgP11 = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_P11", "DATALV2_NM", "OFF");
			indDepFcTgP12 = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_P12", "DATALV2_NM", "OFF");
			indDepFcTgQ01 = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_Q01", "DATALV2_NM", "OFF");
			indDepFcTgQ02 = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_Q02", "DATALV2_NM", "OFF");
			indDepFcTgQ03 = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_Q03", "DATALV2_NM", "OFF");
			indDepFcTgQ04 = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_Q04", "DATALV2_NM", "OFF");
			indDepFcTgH01 = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_H01", "DATALV2_NM", "OFF");
			indDepFcTgH02 = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_H02", "DATALV2_NM", "OFF");
			if(ytd_Param.equals("P01")){
				indDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_YTD01", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P02")){
				indDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_YTD02", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P03")){
				indDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_YTD03", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P04")){
				indDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_YTD04", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P05")){
				indDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_YTD05", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P06")){
				indDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_YTD06", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P07")){
				indDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_YTD07", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P08")){
				indDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_YTD08", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P09")){
				indDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_YTD09", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P10")){
				indDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_YTD10", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P11")){
				indDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_YTD11", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P12")){
				indDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_YTD12", "DATALV2_NM", "OFF");
			}else{
				indDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "IND_TG_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "IND_TG_YTD12", "DATALV2_NM", "OFF");
			}
			
		// Whisky Total (Whisky ON + Whisky Off Total (excl Military))
		}else if(onTxt.equals("") && grpTxt.equals("Whisky")){
			
			indDepFcAcP01 = getSum(data, colIdx, grpTxt, "IND_AC_P01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P01", "DATALV2_NM", "OFF"));
			indDepFcAcP02 = getSum(data, colIdx, grpTxt, "IND_AC_P02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P02", "DATALV2_NM", "OFF"));
			indDepFcAcP03 = getSum(data, colIdx, grpTxt, "IND_AC_P03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P03", "DATALV2_NM", "OFF"));
			indDepFcAcP04 = getSum(data, colIdx, grpTxt, "IND_AC_P04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P04", "DATALV2_NM", "OFF"));
			indDepFcAcP05 = getSum(data, colIdx, grpTxt, "IND_AC_P05", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P05", "DATALV2_NM", "OFF"));
			indDepFcAcP06 = getSum(data, colIdx, grpTxt, "IND_AC_P06", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P06", "DATALV2_NM", "OFF"));
			indDepFcAcP07 = getSum(data, colIdx, grpTxt, "IND_AC_P07", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P07", "DATALV2_NM", "OFF"));
			indDepFcAcP08 = getSum(data, colIdx, grpTxt, "IND_AC_P08", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P08", "DATALV2_NM", "OFF"));
			indDepFcAcP09 = getSum(data, colIdx, grpTxt, "IND_AC_P09", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P09", "DATALV2_NM", "OFF"));
			indDepFcAcP10 = getSum(data, colIdx, grpTxt, "IND_AC_P10", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P10", "DATALV2_NM", "OFF"));
			indDepFcAcP11 = getSum(data, colIdx, grpTxt, "IND_AC_P11", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P11", "DATALV2_NM", "OFF"));
			indDepFcAcP12 = getSum(data, colIdx, grpTxt, "IND_AC_P12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_P12", "DATALV2_NM", "OFF"));
			indDepFcAcQ01 = getSum(data, colIdx, grpTxt, "IND_AC_Q01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_Q01", "DATALV2_NM", "OFF"));
			indDepFcAcQ02 = getSum(data, colIdx, grpTxt, "IND_AC_Q02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_Q02", "DATALV2_NM", "OFF"));
			indDepFcAcQ03 = getSum(data, colIdx, grpTxt, "IND_AC_Q03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_Q03", "DATALV2_NM", "OFF"));
			indDepFcAcQ04 = getSum(data, colIdx, grpTxt, "IND_AC_Q04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_Q04", "DATALV2_NM", "OFF"));
			indDepFcAcH01 = getSum(data, colIdx, grpTxt, "IND_AC_H01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_H01", "DATALV2_NM", "OFF"));
			indDepFcAcH02 = getSum(data, colIdx, grpTxt, "IND_AC_H02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_H02", "DATALV2_NM", "OFF"));
			if(ytd_Param.equals("P01")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD01", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P02")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD02", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P03")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD03", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P04")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD04", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P05")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD05", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD05", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P06")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD06", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD06", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P07")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD07", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD07", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P08")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD08", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD08", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P09")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD09", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD09", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P10")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD10", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD10", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P11")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD11", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD11", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P12")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD12", "DATALV2_NM", "OFF"));
			}else{
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_AC_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_AC_YTD12", "DATALV2_NM", "OFF"));
			}
				
			indDepFcForP01 = getSum(data, colIdx, grpTxt, "IND_FOR_P01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P01", "DATALV2_NM", "OFF"));
			indDepFcForP02 = getSum(data, colIdx, grpTxt, "IND_FOR_P02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P02", "DATALV2_NM", "OFF"));
			indDepFcForP03 = getSum(data, colIdx, grpTxt, "IND_FOR_P03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P03", "DATALV2_NM", "OFF"));
			indDepFcForP04 = getSum(data, colIdx, grpTxt, "IND_FOR_P04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P04", "DATALV2_NM", "OFF"));
			indDepFcForP05 = getSum(data, colIdx, grpTxt, "IND_FOR_P05", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P05", "DATALV2_NM", "OFF"));
			indDepFcForP06 = getSum(data, colIdx, grpTxt, "IND_FOR_P06", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P06", "DATALV2_NM", "OFF"));
			indDepFcForP07 = getSum(data, colIdx, grpTxt, "IND_FOR_P07", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P07", "DATALV2_NM", "OFF"));
			indDepFcForP08 = getSum(data, colIdx, grpTxt, "IND_FOR_P08", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P08", "DATALV2_NM", "OFF"));
			indDepFcForP09 = getSum(data, colIdx, grpTxt, "IND_FOR_P09", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P09", "DATALV2_NM", "OFF"));
			indDepFcForP10 = getSum(data, colIdx, grpTxt, "IND_FOR_P10", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P10", "DATALV2_NM", "OFF"));
			indDepFcForP11 = getSum(data, colIdx, grpTxt, "IND_FOR_P11", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P11", "DATALV2_NM", "OFF"));
			indDepFcForP12 = getSum(data, colIdx, grpTxt, "IND_FOR_P12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_P12", "DATALV2_NM", "OFF"));
			indDepFcForQ01 = getSum(data, colIdx, grpTxt, "IND_FOR_Q01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_Q01", "DATALV2_NM", "OFF"));
			indDepFcForQ02 = getSum(data, colIdx, grpTxt, "IND_FOR_Q02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_Q02", "DATALV2_NM", "OFF"));
			indDepFcForQ03 = getSum(data, colIdx, grpTxt, "IND_FOR_Q03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_Q03", "DATALV2_NM", "OFF"));
			indDepFcForQ04 = getSum(data, colIdx, grpTxt, "IND_FOR_Q04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_Q04", "DATALV2_NM", "OFF"));
			indDepFcForH01 = getSum(data, colIdx, grpTxt, "IND_FOR_H01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_H01", "DATALV2_NM", "OFF"));
			indDepFcForH02 = getSum(data, colIdx, grpTxt, "IND_FOR_H02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_H02", "DATALV2_NM", "OFF"));
			if(ytd_Param.equals("P01")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD01", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P02")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD02", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P03")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD03", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P04")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD04", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P05")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD05", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD05", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P06")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD06", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD06", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P07")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD07", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD07", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P08")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD08", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD08", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P09")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD09", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD09", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P10")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD10", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD10", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P11")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD11", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD11", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P12")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD12", "DATALV2_NM", "OFF"));
			}else{
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_FOR_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_FOR_YTD12", "DATALV2_NM", "OFF"));
			}	
			
			indDepFcOutP01 = getSum(data, colIdx, grpTxt, "IND_OUT_P01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P01", "DATALV2_NM", "OFF"));
			indDepFcOutP02 = getSum(data, colIdx, grpTxt, "IND_OUT_P02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P02", "DATALV2_NM", "OFF"));
			indDepFcOutP03 = getSum(data, colIdx, grpTxt, "IND_OUT_P03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P03", "DATALV2_NM", "OFF"));
			indDepFcOutP04 = getSum(data, colIdx, grpTxt, "IND_OUT_P04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P04", "DATALV2_NM", "OFF"));
			indDepFcOutP05 = getSum(data, colIdx, grpTxt, "IND_OUT_P05", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P05", "DATALV2_NM", "OFF"));
			indDepFcOutP06 = getSum(data, colIdx, grpTxt, "IND_OUT_P06", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P06", "DATALV2_NM", "OFF"));
			indDepFcOutP07 = getSum(data, colIdx, grpTxt, "IND_OUT_P07", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P07", "DATALV2_NM", "OFF"));
			indDepFcOutP08 = getSum(data, colIdx, grpTxt, "IND_OUT_P08", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P08", "DATALV2_NM", "OFF"));
			indDepFcOutP09 = getSum(data, colIdx, grpTxt, "IND_OUT_P09", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P09", "DATALV2_NM", "OFF"));
			indDepFcOutP10 = getSum(data, colIdx, grpTxt, "IND_OUT_P10", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P10", "DATALV2_NM", "OFF"));
			indDepFcOutP11 = getSum(data, colIdx, grpTxt, "IND_OUT_P11", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P11", "DATALV2_NM", "OFF"));
			indDepFcOutP12 = getSum(data, colIdx, grpTxt, "IND_OUT_P12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_P12", "DATALV2_NM", "OFF"));
			indDepFcOutQ01 = getSum(data, colIdx, grpTxt, "IND_OUT_Q01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_Q01", "DATALV2_NM", "OFF"));
			indDepFcOutQ02 = getSum(data, colIdx, grpTxt, "IND_OUT_Q02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_Q02", "DATALV2_NM", "OFF"));
			indDepFcOutQ03 = getSum(data, colIdx, grpTxt, "IND_OUT_Q03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_Q03", "DATALV2_NM", "OFF"));
			indDepFcOutQ04 = getSum(data, colIdx, grpTxt, "IND_OUT_Q04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_Q04", "DATALV2_NM", "OFF"));
			indDepFcOutH01 = getSum(data, colIdx, grpTxt, "IND_OUT_H01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_H01", "DATALV2_NM", "OFF"));
			indDepFcOutH02 = getSum(data, colIdx, grpTxt, "IND_OUT_H02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_H02", "DATALV2_NM", "OFF"));
			if(ytd_Param.equals("P01")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD01", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P02")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD02", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P03")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD03", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P04")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD04", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P05")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD05", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD05", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P06")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD06", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD06", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P07")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD07", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD07", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P08")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD08", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD08", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P09")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD09", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD09", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P10")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD10", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD10", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P11")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD11", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD11", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P12")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD12", "DATALV2_NM", "OFF"));
			}else{
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_OUT_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_OUT_YTD12", "DATALV2_NM", "OFF"));
			}
				
			indDepFcTgP01 = getSum(data, colIdx, grpTxt, "IND_TG_P01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P01", "DATALV2_NM", "OFF"));
			indDepFcTgP02 = getSum(data, colIdx, grpTxt, "IND_TG_P02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P02", "DATALV2_NM", "OFF"));
			indDepFcTgP03 = getSum(data, colIdx, grpTxt, "IND_TG_P03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P03", "DATALV2_NM", "OFF"));
			indDepFcTgP04 = getSum(data, colIdx, grpTxt, "IND_TG_P04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P04", "DATALV2_NM", "OFF"));
			indDepFcTgP05 = getSum(data, colIdx, grpTxt, "IND_TG_P05", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P05", "DATALV2_NM", "OFF"));
			indDepFcTgP06 = getSum(data, colIdx, grpTxt, "IND_TG_P06", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P06", "DATALV2_NM", "OFF"));
			indDepFcTgP07 = getSum(data, colIdx, grpTxt, "IND_TG_P07", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P07", "DATALV2_NM", "OFF"));
			indDepFcTgP08 = getSum(data, colIdx, grpTxt, "IND_TG_P08", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P08", "DATALV2_NM", "OFF"));
			indDepFcTgP09 = getSum(data, colIdx, grpTxt, "IND_TG_P09", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P09", "DATALV2_NM", "OFF"));
			indDepFcTgP10 = getSum(data, colIdx, grpTxt, "IND_TG_P10", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P10", "DATALV2_NM", "OFF"));
			indDepFcTgP11 = getSum(data, colIdx, grpTxt, "IND_TG_P11", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P11", "DATALV2_NM", "OFF"));
			indDepFcTgP12 = getSum(data, colIdx, grpTxt, "IND_TG_P12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_P12", "DATALV2_NM", "OFF"));
			indDepFcTgQ01 = getSum(data, colIdx, grpTxt, "IND_TG_Q01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_Q01", "DATALV2_NM", "OFF"));
			indDepFcTgQ02 = getSum(data, colIdx, grpTxt, "IND_TG_Q02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_Q02", "DATALV2_NM", "OFF"));
			indDepFcTgQ03 = getSum(data, colIdx, grpTxt, "IND_TG_Q03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_Q03", "DATALV2_NM", "OFF"));
			indDepFcTgQ04 = getSum(data, colIdx, grpTxt, "IND_TG_Q04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_Q04", "DATALV2_NM", "OFF"));
			indDepFcTgH01 = getSum(data, colIdx, grpTxt, "IND_TG_H01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_H01", "DATALV2_NM", "OFF"));
			indDepFcTgH02 = getSum(data, colIdx, grpTxt, "IND_TG_H02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_H02", "DATALV2_NM", "OFF"));
			if(ytd_Param.equals("P01")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD01", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P02")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD02", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P03")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD03", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P04")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD04", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P05")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD05", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD05", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P06")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD06", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD06", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P07")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD07", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD07", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P08")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD08", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD08", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P09")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD09", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD09", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P10")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD10", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD10", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P11")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD11", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD11", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P12")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD12", "DATALV2_NM", "OFF"));
			}else{
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "IND_TG_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "IND_TG_YTD12", "DATALV2_NM", "OFF"));
			}
			
		}else{
			
			indDepFcAcP01 = getSum(data, colIdx, grpTxt, "IND_AC_P01", onIdx, onTxt);
			indDepFcAcP02 = getSum(data, colIdx, grpTxt, "IND_AC_P02", onIdx, onTxt);
			indDepFcAcP03 = getSum(data, colIdx, grpTxt, "IND_AC_P03", onIdx, onTxt);
			indDepFcAcP04 = getSum(data, colIdx, grpTxt, "IND_AC_P04", onIdx, onTxt);
			indDepFcAcP05 = getSum(data, colIdx, grpTxt, "IND_AC_P05", onIdx, onTxt);
			indDepFcAcP06 = getSum(data, colIdx, grpTxt, "IND_AC_P06", onIdx, onTxt);
			indDepFcAcP07 = getSum(data, colIdx, grpTxt, "IND_AC_P07", onIdx, onTxt);
			indDepFcAcP08 = getSum(data, colIdx, grpTxt, "IND_AC_P08", onIdx, onTxt);
			indDepFcAcP09 = getSum(data, colIdx, grpTxt, "IND_AC_P09", onIdx, onTxt);
			indDepFcAcP10 = getSum(data, colIdx, grpTxt, "IND_AC_P10", onIdx, onTxt);
			indDepFcAcP11 = getSum(data, colIdx, grpTxt, "IND_AC_P11", onIdx, onTxt);
			indDepFcAcP12 = getSum(data, colIdx, grpTxt, "IND_AC_P12", onIdx, onTxt);
			indDepFcAcQ01 = getSum(data, colIdx, grpTxt, "IND_AC_Q01", onIdx, onTxt);
			indDepFcAcQ02 = getSum(data, colIdx, grpTxt, "IND_AC_Q02", onIdx, onTxt);
			indDepFcAcQ03 = getSum(data, colIdx, grpTxt, "IND_AC_Q03", onIdx, onTxt);
			indDepFcAcQ04 = getSum(data, colIdx, grpTxt, "IND_AC_Q04", onIdx, onTxt);
			indDepFcAcH01 = getSum(data, colIdx, grpTxt, "IND_AC_H01", onIdx, onTxt);
			indDepFcAcH02 = getSum(data, colIdx, grpTxt, "IND_AC_H02", onIdx, onTxt);
			if(ytd_Param.equals("P01")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD01", onIdx, onTxt);
			}else if(ytd_Param.equals("P02")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD02", onIdx, onTxt);
			}else if(ytd_Param.equals("P03")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD03", onIdx, onTxt);
			}else if(ytd_Param.equals("P04")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD04", onIdx, onTxt);
			}else if(ytd_Param.equals("P05")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD05", onIdx, onTxt);
			}else if(ytd_Param.equals("P06")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD06", onIdx, onTxt);
			}else if(ytd_Param.equals("P07")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD07", onIdx, onTxt);
			}else if(ytd_Param.equals("P08")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD08", onIdx, onTxt);
			}else if(ytd_Param.equals("P09")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD09", onIdx, onTxt);
			}else if(ytd_Param.equals("P10")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD10", onIdx, onTxt);
			}else if(ytd_Param.equals("P11")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD11", onIdx, onTxt);
			}else if(ytd_Param.equals("P12")){
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD12", onIdx, onTxt);
			}else{
				indDepFcAcYTD = getSum(data, colIdx, grpTxt, "IND_AC_YTD12", onIdx, onTxt);
			}

			indDepFcForP01 = getSum(data, colIdx, grpTxt, "IND_FOR_P01", onIdx, onTxt);
			indDepFcForP02 = getSum(data, colIdx, grpTxt, "IND_FOR_P02", onIdx, onTxt);
			indDepFcForP03 = getSum(data, colIdx, grpTxt, "IND_FOR_P03", onIdx, onTxt);
			indDepFcForP04 = getSum(data, colIdx, grpTxt, "IND_FOR_P04", onIdx, onTxt);
			indDepFcForP05 = getSum(data, colIdx, grpTxt, "IND_FOR_P05", onIdx, onTxt);
			indDepFcForP06 = getSum(data, colIdx, grpTxt, "IND_FOR_P06", onIdx, onTxt);
			indDepFcForP07 = getSum(data, colIdx, grpTxt, "IND_FOR_P07", onIdx, onTxt);
			indDepFcForP08 = getSum(data, colIdx, grpTxt, "IND_FOR_P08", onIdx, onTxt);
			indDepFcForP09 = getSum(data, colIdx, grpTxt, "IND_FOR_P09", onIdx, onTxt);
			indDepFcForP10 = getSum(data, colIdx, grpTxt, "IND_FOR_P10", onIdx, onTxt);
			indDepFcForP11 = getSum(data, colIdx, grpTxt, "IND_FOR_P11", onIdx, onTxt);
			indDepFcForP12 = getSum(data, colIdx, grpTxt, "IND_FOR_P12", onIdx, onTxt);
			indDepFcForQ01 = getSum(data, colIdx, grpTxt, "IND_FOR_Q01", onIdx, onTxt);
			indDepFcForQ02 = getSum(data, colIdx, grpTxt, "IND_FOR_Q02", onIdx, onTxt);
			indDepFcForQ03 = getSum(data, colIdx, grpTxt, "IND_FOR_Q03", onIdx, onTxt);
			indDepFcForQ04 = getSum(data, colIdx, grpTxt, "IND_FOR_Q04", onIdx, onTxt);
			indDepFcForH01 = getSum(data, colIdx, grpTxt, "IND_FOR_H01", onIdx, onTxt);
			indDepFcForH02 = getSum(data, colIdx, grpTxt, "IND_FOR_H02", onIdx, onTxt);
			if(ytd_Param.equals("P01")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD01", onIdx, onTxt);
			}else if(ytd_Param.equals("P02")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD02", onIdx, onTxt);
			}else if(ytd_Param.equals("P03")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD03", onIdx, onTxt);
			}else if(ytd_Param.equals("P04")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD04", onIdx, onTxt);
			}else if(ytd_Param.equals("P05")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD05", onIdx, onTxt);
			}else if(ytd_Param.equals("P06")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD06", onIdx, onTxt);
			}else if(ytd_Param.equals("P07")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD07", onIdx, onTxt);
			}else if(ytd_Param.equals("P08")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD08", onIdx, onTxt);
			}else if(ytd_Param.equals("P09")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD09", onIdx, onTxt);
			}else if(ytd_Param.equals("P10")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD10", onIdx, onTxt);
			}else if(ytd_Param.equals("P11")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD11", onIdx, onTxt);
			}else if(ytd_Param.equals("P12")){
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD12", onIdx, onTxt);
			}else{
				indDepFcForYTD = getSum(data, colIdx, grpTxt, "IND_FOR_YTD12", onIdx, onTxt);
			}
			
			indDepFcOutP01 = getSum(data, colIdx, grpTxt, "IND_OUT_P01", onIdx, onTxt);
			indDepFcOutP02 = getSum(data, colIdx, grpTxt, "IND_OUT_P02", onIdx, onTxt);
			indDepFcOutP03 = getSum(data, colIdx, grpTxt, "IND_OUT_P03", onIdx, onTxt);
			indDepFcOutP04 = getSum(data, colIdx, grpTxt, "IND_OUT_P04", onIdx, onTxt);
			indDepFcOutP05 = getSum(data, colIdx, grpTxt, "IND_OUT_P05", onIdx, onTxt);
			indDepFcOutP06 = getSum(data, colIdx, grpTxt, "IND_OUT_P06", onIdx, onTxt);
			indDepFcOutP07 = getSum(data, colIdx, grpTxt, "IND_OUT_P07", onIdx, onTxt);
			indDepFcOutP08 = getSum(data, colIdx, grpTxt, "IND_OUT_P08", onIdx, onTxt);
			indDepFcOutP09 = getSum(data, colIdx, grpTxt, "IND_OUT_P09", onIdx, onTxt);
			indDepFcOutP10 = getSum(data, colIdx, grpTxt, "IND_OUT_P10", onIdx, onTxt);
			indDepFcOutP11 = getSum(data, colIdx, grpTxt, "IND_OUT_P11", onIdx, onTxt);
			indDepFcOutP12 = getSum(data, colIdx, grpTxt, "IND_OUT_P12", onIdx, onTxt);
			indDepFcOutQ01 = getSum(data, colIdx, grpTxt, "IND_OUT_Q01", onIdx, onTxt);
			indDepFcOutQ02 = getSum(data, colIdx, grpTxt, "IND_OUT_Q02", onIdx, onTxt);
			indDepFcOutQ03 = getSum(data, colIdx, grpTxt, "IND_OUT_Q03", onIdx, onTxt);
			indDepFcOutQ04 = getSum(data, colIdx, grpTxt, "IND_OUT_Q04", onIdx, onTxt);
			indDepFcOutH01 = getSum(data, colIdx, grpTxt, "IND_OUT_H01", onIdx, onTxt);
			indDepFcOutH02 = getSum(data, colIdx, grpTxt, "IND_OUT_H02", onIdx, onTxt);
			if(ytd_Param.equals("P01")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD01", onIdx, onTxt);
			}else if(ytd_Param.equals("P02")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD02", onIdx, onTxt);
			}else if(ytd_Param.equals("P03")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD03", onIdx, onTxt);
			}else if(ytd_Param.equals("P04")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD04", onIdx, onTxt);
			}else if(ytd_Param.equals("P05")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD05", onIdx, onTxt);
			}else if(ytd_Param.equals("P06")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD06", onIdx, onTxt);
			}else if(ytd_Param.equals("P07")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD07", onIdx, onTxt);
			}else if(ytd_Param.equals("P08")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD08", onIdx, onTxt);
			}else if(ytd_Param.equals("P09")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD09", onIdx, onTxt);
			}else if(ytd_Param.equals("P10")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD10", onIdx, onTxt);
			}else if(ytd_Param.equals("P11")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD11", onIdx, onTxt);
			}else if(ytd_Param.equals("P12")){
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD12", onIdx, onTxt);
			}else{
				indDepFcOutYTD = getSum(data, colIdx, grpTxt, "IND_OUT_YTD12", onIdx, onTxt);
			}
			
			indDepFcTgP01 = getSum(data, colIdx, grpTxt, "IND_TG_P01", onIdx, onTxt);
			indDepFcTgP02 = getSum(data, colIdx, grpTxt, "IND_TG_P02", onIdx, onTxt);
			indDepFcTgP03 = getSum(data, colIdx, grpTxt, "IND_TG_P03", onIdx, onTxt);
			indDepFcTgP04 = getSum(data, colIdx, grpTxt, "IND_TG_P04", onIdx, onTxt);
			indDepFcTgP05 = getSum(data, colIdx, grpTxt, "IND_TG_P05", onIdx, onTxt);
			indDepFcTgP06 = getSum(data, colIdx, grpTxt, "IND_TG_P06", onIdx, onTxt);
			indDepFcTgP07 = getSum(data, colIdx, grpTxt, "IND_TG_P07", onIdx, onTxt);
			indDepFcTgP08 = getSum(data, colIdx, grpTxt, "IND_TG_P08", onIdx, onTxt);
			indDepFcTgP09 = getSum(data, colIdx, grpTxt, "IND_TG_P09", onIdx, onTxt);
			indDepFcTgP10 = getSum(data, colIdx, grpTxt, "IND_TG_P10", onIdx, onTxt);
			indDepFcTgP11 = getSum(data, colIdx, grpTxt, "IND_TG_P11", onIdx, onTxt);
			indDepFcTgP12 = getSum(data, colIdx, grpTxt, "IND_TG_P12", onIdx, onTxt);
			indDepFcTgQ01 = getSum(data, colIdx, grpTxt, "IND_TG_Q01", onIdx, onTxt);
			indDepFcTgQ02 = getSum(data, colIdx, grpTxt, "IND_TG_Q02", onIdx, onTxt);
			indDepFcTgQ03 = getSum(data, colIdx, grpTxt, "IND_TG_Q03", onIdx, onTxt);
			indDepFcTgQ04 = getSum(data, colIdx, grpTxt, "IND_TG_Q04", onIdx, onTxt);
			indDepFcTgH01 = getSum(data, colIdx, grpTxt, "IND_TG_H01", onIdx, onTxt);
			indDepFcTgH02 = getSum(data, colIdx, grpTxt, "IND_TG_H02", onIdx, onTxt);
			if(ytd_Param.equals("P01")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD01", onIdx, onTxt);
			}else if(ytd_Param.equals("P02")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD02", onIdx, onTxt);
			}else if(ytd_Param.equals("P03")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD03", onIdx, onTxt);
			}else if(ytd_Param.equals("P04")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD04", onIdx, onTxt);
			}else if(ytd_Param.equals("P05")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD05", onIdx, onTxt);
			}else if(ytd_Param.equals("P06")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD06", onIdx, onTxt);
			}else if(ytd_Param.equals("P07")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD07", onIdx, onTxt);
			}else if(ytd_Param.equals("P08")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD08", onIdx, onTxt);
			}else if(ytd_Param.equals("P09")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD09", onIdx, onTxt);
			}else if(ytd_Param.equals("P10")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD10", onIdx, onTxt);
			}else if(ytd_Param.equals("P11")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD11", onIdx, onTxt);
			}else if(ytd_Param.equals("P12")){
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD12", onIdx, onTxt);
			}else{
				indDepFcTgYTD = getSum(data, colIdx, grpTxt, "IND_TG_YTD12", onIdx, onTxt);
			}
			
		}
		
		if(periodChk_Param.equals("Y")){
			
			for(int i=4; i<62; i++){
				if(i==42){
					continue;
				}else{
					row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
					row.getCell(i).setCellStyle(style);
				}
			}
			
			row.getCell(4).setCellValue(indDepFcAcP01);
			row.getCell(5).setCellValue(indDepFcAcP02);
			row.getCell(6).setCellValue(indDepFcAcP03);
			row.getCell(7).setCellValue(indDepFcAcP04);
			row.getCell(8).setCellValue(indDepFcAcP05);
			row.getCell(9).setCellValue(indDepFcAcP06);
			row.getCell(10).setCellValue(indDepFcAcP07);
			row.getCell(11).setCellValue(indDepFcAcP08);
	    	row.getCell(12).setCellValue(indDepFcAcP09);
	    	row.getCell(13).setCellValue(indDepFcAcP10);
	    	row.getCell(14).setCellValue(indDepFcAcP11);
	    	row.getCell(15).setCellValue(indDepFcAcP12);
	    	row.getCell(16).setCellValue(indDepFcAcQ01);
	    	row.getCell(17).setCellValue(indDepFcAcQ02);
	    	row.getCell(18).setCellValue(indDepFcAcQ03);
	    	row.getCell(19).setCellValue(indDepFcAcQ04);
	    	row.getCell(20).setCellValue(indDepFcAcH01);
	    	row.getCell(21).setCellValue(indDepFcAcH02);
			row.getCell(22).setCellValue(indDepFcAcYTD);
			row.getCell(23).setCellValue(indDepFcForP01);
			row.getCell(24).setCellValue(indDepFcForP02);
			row.getCell(25).setCellValue(indDepFcForP03);
			row.getCell(26).setCellValue(indDepFcForP04);
			row.getCell(27).setCellValue(indDepFcForP05);
			row.getCell(28).setCellValue(indDepFcForP06);
			row.getCell(29).setCellValue(indDepFcForP07);
			row.getCell(30).setCellValue(indDepFcForP08);
	    	row.getCell(31).setCellValue(indDepFcForP09);
	    	row.getCell(32).setCellValue(indDepFcForP10);
	    	row.getCell(33).setCellValue(indDepFcForP11);
	    	row.getCell(34).setCellValue(indDepFcForP12);
	    	row.getCell(35).setCellValue(indDepFcForQ01);
	    	row.getCell(36).setCellValue(indDepFcForQ02);
	    	row.getCell(37).setCellValue(indDepFcForQ03);
	    	row.getCell(38).setCellValue(indDepFcForQ04);
	    	row.getCell(39).setCellValue(indDepFcForH01);
	    	row.getCell(40).setCellValue(indDepFcForH02);
			row.getCell(41).setCellValue(indDepFcForYTD);
	    	
			row.getCell(43).setCellValue(indDepFcOutP01);
			row.getCell(44).setCellValue(indDepFcOutP02);
			row.getCell(45).setCellValue(indDepFcOutP03);
			row.getCell(46).setCellValue(indDepFcOutP04);
			row.getCell(47).setCellValue(indDepFcOutP05);
			row.getCell(48).setCellValue(indDepFcOutP06);
			row.getCell(49).setCellValue(indDepFcOutP07);
			row.getCell(50).setCellValue(indDepFcOutP08);
	    	row.getCell(51).setCellValue(indDepFcOutP09);
	    	row.getCell(52).setCellValue(indDepFcOutP10);
	    	row.getCell(53).setCellValue(indDepFcOutP11);
	    	row.getCell(54).setCellValue(indDepFcOutP12);
	    	row.getCell(55).setCellValue(indDepFcOutQ01);
	    	row.getCell(56).setCellValue(indDepFcOutQ02);
	    	row.getCell(57).setCellValue(indDepFcOutQ03);
	    	row.getCell(58).setCellValue(indDepFcOutQ04);
	    	row.getCell(59).setCellValue(indDepFcOutH01);
	    	row.getCell(60).setCellValue(indDepFcOutH02);
			row.getCell(61).setCellValue(indDepFcOutYTD);
	    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){

			for(int i=4; i<23; i++){
				if(i==16){
					continue;
				}else{
					row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
					row.getCell(i).setCellStyle(style);
				}
			}
			
			row.getCell(4).setCellValue(indDepFcAcP01);
			row.getCell(5).setCellValue(indDepFcAcP02);
			row.getCell(6).setCellValue(indDepFcAcP03);
	    	row.getCell(7).setCellValue(indDepFcAcQ01);
	    	row.getCell(8).setCellValue(indDepFcAcH01);
			row.getCell(9).setCellValue(indDepFcAcYTD);
	    	row.getCell(10).setCellValue(indDepFcForP01);
	    	row.getCell(11).setCellValue(indDepFcForP02);
	    	row.getCell(12).setCellValue(indDepFcForP03);
	    	row.getCell(13).setCellValue(indDepFcForQ01);
	    	row.getCell(14).setCellValue(indDepFcForH01);
			row.getCell(15).setCellValue(indDepFcForYTD);
	    	
	    	row.getCell(17).setCellValue(indDepFcOutP01);
	    	row.getCell(18).setCellValue(indDepFcOutP02);
	    	row.getCell(19).setCellValue(indDepFcOutP03);
	    	row.getCell(20).setCellValue(indDepFcOutQ01);
	    	row.getCell(21).setCellValue(indDepFcOutH01);
			row.getCell(22).setCellValue(indDepFcOutYTD);
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=4; i<26; i++){
				if(i==18){
					continue;
				}else{
					row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
					row.getCell(i).setCellStyle(style);
				}
			}
			
			row.getCell(4).setCellValue(indDepFcAcP04);
			row.getCell(5).setCellValue(indDepFcAcP05);
			row.getCell(6).setCellValue(indDepFcAcP06);
	    	row.getCell(7).setCellValue(indDepFcAcQ01);
	    	row.getCell(8).setCellValue(indDepFcAcQ02);
	    	row.getCell(9).setCellValue(indDepFcAcH01);
			row.getCell(10).setCellValue(indDepFcAcYTD);
	    	row.getCell(11).setCellValue(indDepFcForP04);
	    	row.getCell(12).setCellValue(indDepFcForP05);
	    	row.getCell(13).setCellValue(indDepFcForP06);
	    	row.getCell(14).setCellValue(indDepFcForQ01);
	    	row.getCell(15).setCellValue(indDepFcForQ02);
	    	row.getCell(16).setCellValue(indDepFcForH01);
			row.getCell(17).setCellValue(indDepFcForYTD);
	    	
	    	row.getCell(19).setCellValue(indDepFcOutP04);
	    	row.getCell(20).setCellValue(indDepFcOutP05);
	    	row.getCell(21).setCellValue(indDepFcOutP06);
	    	row.getCell(22).setCellValue(indDepFcOutQ01);
	    	row.getCell(23).setCellValue(indDepFcOutQ02);
	    	row.getCell(24).setCellValue(indDepFcOutH01);
			row.getCell(25).setCellValue(indDepFcOutYTD);
	    	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=4; i<29; i++){
				if(i==20){
					continue;
				}else{
					row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
					row.getCell(i).setCellStyle(style);
				}
			}
			
			row.getCell(4).setCellValue(indDepFcAcP07);
			row.getCell(5).setCellValue(indDepFcAcP08);
			row.getCell(6).setCellValue(indDepFcAcP09);
	    	row.getCell(7).setCellValue(indDepFcAcQ02);
	    	row.getCell(8).setCellValue(indDepFcAcQ03);
	    	row.getCell(9).setCellValue(indDepFcAcH01);
	    	row.getCell(10).setCellValue(indDepFcAcH02);
			row.getCell(11).setCellValue(indDepFcAcYTD);
	    	row.getCell(12).setCellValue(indDepFcForP07);
	    	row.getCell(13).setCellValue(indDepFcForP08);
	    	row.getCell(14).setCellValue(indDepFcForP09);
	    	row.getCell(15).setCellValue(indDepFcForQ02);
	    	row.getCell(16).setCellValue(indDepFcForQ03);
	    	row.getCell(17).setCellValue(indDepFcForH01);
	    	row.getCell(18).setCellValue(indDepFcForH02);
			row.getCell(19).setCellValue(indDepFcForYTD);
	    	
	    	row.getCell(21).setCellValue(indDepFcOutP07);
	    	row.getCell(22).setCellValue(indDepFcOutP08);
	    	row.getCell(23).setCellValue(indDepFcOutP09);
	    	row.getCell(24).setCellValue(indDepFcOutQ02);
	    	row.getCell(25).setCellValue(indDepFcOutQ03);
	    	row.getCell(26).setCellValue(indDepFcOutH01);
	    	row.getCell(27).setCellValue(indDepFcOutH02);
			row.getCell(28).setCellValue(indDepFcOutYTD);
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=4; i<29; i++){
				if(i==20){
					continue;
				}else{
					row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
					row.getCell(i).setCellStyle(style);
				}
			}
			
			row.getCell(4).setCellValue(indDepFcAcP10);
			row.getCell(5).setCellValue(indDepFcAcP11);
			row.getCell(6).setCellValue(indDepFcAcP12);
	    	row.getCell(7).setCellValue(indDepFcAcQ03);
	    	row.getCell(8).setCellValue(indDepFcAcQ04);
	    	row.getCell(9).setCellValue(indDepFcAcH01);
	    	row.getCell(10).setCellValue(indDepFcAcH02);
			row.getCell(11).setCellValue(indDepFcAcYTD);
	    	row.getCell(12).setCellValue(indDepFcForP10);
	    	row.getCell(13).setCellValue(indDepFcForP11);
	    	row.getCell(14).setCellValue(indDepFcForP12);
	    	row.getCell(15).setCellValue(indDepFcForQ03);
	    	row.getCell(16).setCellValue(indDepFcForQ04);
	    	row.getCell(17).setCellValue(indDepFcForH01);
	    	row.getCell(18).setCellValue(indDepFcForH02);
			row.getCell(19).setCellValue(indDepFcForYTD);
	    	
	    	row.getCell(21).setCellValue(indDepFcOutP10);
	    	row.getCell(22).setCellValue(indDepFcOutP11);
	    	row.getCell(23).setCellValue(indDepFcOutP12);
	    	row.getCell(24).setCellValue(indDepFcOutQ03);
	    	row.getCell(25).setCellValue(indDepFcOutQ04);
	    	row.getCell(26).setCellValue(indDepFcOutH01);
	    	row.getCell(27).setCellValue(indDepFcOutH02);
			row.getCell(28).setCellValue(indDepFcOutYTD);
	    	
		}

    	// 계산식을 위해 리스트에 값을 담아준다.
    	indDeplMap = new HashMap();
    	
    	indDeplMap.put("STYLETXT", styleTxt);
    	indDeplMap.put("IND_AC_P01", indDepFcAcP01);
		indDeplMap.put("IND_AC_P02", indDepFcAcP02);
		indDeplMap.put("IND_AC_P03", indDepFcAcP03);
		indDeplMap.put("IND_AC_P04", indDepFcAcP04);
		indDeplMap.put("IND_AC_P05", indDepFcAcP05);
		indDeplMap.put("IND_AC_P06", indDepFcAcP06);
		indDeplMap.put("IND_AC_P07", indDepFcAcP07);
		indDeplMap.put("IND_AC_P08", indDepFcAcP08);
		indDeplMap.put("IND_AC_P09", indDepFcAcP09);
		indDeplMap.put("IND_AC_P10", indDepFcAcP10);
		indDeplMap.put("IND_AC_P11", indDepFcAcP11);
		indDeplMap.put("IND_AC_P12", indDepFcAcP12);
		indDeplMap.put("IND_AC_Q01", indDepFcAcQ01);
		indDeplMap.put("IND_AC_Q02", indDepFcAcQ02);
		indDeplMap.put("IND_AC_Q03", indDepFcAcQ03);
		indDeplMap.put("IND_AC_Q04", indDepFcAcQ04);
		indDeplMap.put("IND_AC_H01", indDepFcAcH01);
		indDeplMap.put("IND_AC_H02", indDepFcAcH02);
		indDeplMap.put("IND_AC_YTD", indDepFcAcYTD);
		
    	indDeplMap.put("IND_FOR_P01", indDepFcForP01);
		indDeplMap.put("IND_FOR_P02", indDepFcForP02);
		indDeplMap.put("IND_FOR_P03", indDepFcForP03);
		indDeplMap.put("IND_FOR_P04", indDepFcForP04);
		indDeplMap.put("IND_FOR_P05", indDepFcForP05);
		indDeplMap.put("IND_FOR_P06", indDepFcForP06);
		indDeplMap.put("IND_FOR_P07", indDepFcForP07);
		indDeplMap.put("IND_FOR_P08", indDepFcForP08);
		indDeplMap.put("IND_FOR_P09", indDepFcForP09);
		indDeplMap.put("IND_FOR_P10", indDepFcForP10);
		indDeplMap.put("IND_FOR_P11", indDepFcForP11);
		indDeplMap.put("IND_FOR_P12", indDepFcForP12);
		indDeplMap.put("IND_FOR_Q01", indDepFcForQ01);
		indDeplMap.put("IND_FOR_Q02", indDepFcForQ02);
		indDeplMap.put("IND_FOR_Q03", indDepFcForQ03);
		indDeplMap.put("IND_FOR_Q04", indDepFcForQ04);
		indDeplMap.put("IND_FOR_H01", indDepFcForH01);
		indDeplMap.put("IND_FOR_H02", indDepFcForH02);
		indDeplMap.put("IND_FOR_YTD", indDepFcForYTD);
		
		indDeplMap.put("IND_OUT_P01", indDepFcOutP01);
		indDeplMap.put("IND_OUT_P02", indDepFcOutP02);
		indDeplMap.put("IND_OUT_P03", indDepFcOutP03);
		indDeplMap.put("IND_OUT_P04", indDepFcOutP04);
		indDeplMap.put("IND_OUT_P05", indDepFcOutP05);
		indDeplMap.put("IND_OUT_P06", indDepFcOutP06);
		indDeplMap.put("IND_OUT_P07", indDepFcOutP07);
		indDeplMap.put("IND_OUT_P08", indDepFcOutP08);
		indDeplMap.put("IND_OUT_P09", indDepFcOutP09);
		indDeplMap.put("IND_OUT_P10", indDepFcOutP10);
		indDeplMap.put("IND_OUT_P11", indDepFcOutP11);
		indDeplMap.put("IND_OUT_P12", indDepFcOutP12);
		indDeplMap.put("IND_OUT_Q01", indDepFcOutQ01);
		indDeplMap.put("IND_OUT_Q02", indDepFcOutQ02);
		indDeplMap.put("IND_OUT_Q03", indDepFcOutQ03);
		indDeplMap.put("IND_OUT_Q04", indDepFcOutQ04);
		indDeplMap.put("IND_OUT_H01", indDepFcOutH01);
		indDeplMap.put("IND_OUT_H02", indDepFcOutH02);
		indDeplMap.put("IND_OUT_YTD", indDepFcOutYTD);
		
		indDeplMap.put("IND_TG_P01", indDepFcTgP01);
		indDeplMap.put("IND_TG_P02", indDepFcTgP02);
		indDeplMap.put("IND_TG_P03", indDepFcTgP03);
		indDeplMap.put("IND_TG_P04", indDepFcTgP04);
		indDeplMap.put("IND_TG_P05", indDepFcTgP05);
		indDeplMap.put("IND_TG_P06", indDepFcTgP06);
		indDeplMap.put("IND_TG_P07", indDepFcTgP07);
		indDeplMap.put("IND_TG_P08", indDepFcTgP08);
		indDeplMap.put("IND_TG_P09", indDepFcTgP09);
		indDeplMap.put("IND_TG_P10", indDepFcTgP10);
		indDeplMap.put("IND_TG_P11", indDepFcTgP11);
		indDeplMap.put("IND_TG_P12", indDepFcTgP12);
		indDeplMap.put("IND_TG_Q01", indDepFcTgQ01);
		indDeplMap.put("IND_TG_Q02", indDepFcTgQ02);
		indDeplMap.put("IND_TG_Q03", indDepFcTgQ03);
		indDeplMap.put("IND_TG_Q04", indDepFcTgQ04);
		indDeplMap.put("IND_TG_H01", indDepFcTgH01);
		indDeplMap.put("IND_TG_H02", indDepFcTgH02);
		indDeplMap.put("IND_TG_YTD", indDepFcTgYTD);
		
		indDepl.add(indDeplMap);
		
	}
	
	/*
	 * Description: DK Depletion Forecast 4~41번째 컬럼의 입력값을 셀에 입력
	 */
	public void setRowValue2(HSSFRow row, CellStyle style, Map rowData, String styleTxt) {
		
		if(periodChk_Param.equals("Y")){
			
			for(int i=4; i<42; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("DK_AC_P01").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("DK_AC_P02").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("DK_AC_P03").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("DK_AC_P04").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("DK_AC_P05").toString()));
	    	row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_AC_P06").toString()));
	    	row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_AC_P07").toString()));
	    	row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_P08").toString()));
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("DK_AC_P09").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("DK_AC_P10").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("DK_AC_P11").toString()));
	    	row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_AC_P12").toString()));
	    	row.getCell(16).setCellValue(Double.parseDouble(rowData.get("DK_AC_Q01").toString()));
	    	row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_AC_Q02").toString()));
	    	row.getCell(18).setCellValue(Double.parseDouble(rowData.get("DK_AC_Q03").toString()));
	    	row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_AC_Q04").toString()));
	    	row.getCell(20).setCellValue(Double.parseDouble(rowData.get("DK_AC_H01").toString()));
	    	row.getCell(21).setCellValue(Double.parseDouble(rowData.get("DK_AC_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD12").toString()));
			}else{
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD12").toString()));
			}
	    	row.getCell(23).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P01").toString()));
	    	row.getCell(24).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P02").toString()));
	    	row.getCell(25).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P03").toString()));
	    	row.getCell(26).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P04").toString()));
	    	row.getCell(27).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P05").toString()));
	    	row.getCell(28).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P06").toString()));
	    	row.getCell(29).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P07").toString()));
	    	row.getCell(30).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P08").toString()));
	    	row.getCell(31).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P09").toString()));
	    	row.getCell(32).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P10").toString()));
	    	row.getCell(33).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P11").toString()));
	    	row.getCell(34).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P12").toString()));
	    	row.getCell(35).setCellValue(Double.parseDouble(rowData.get("DK_FOR_Q01").toString()));
	    	row.getCell(36).setCellValue(Double.parseDouble(rowData.get("DK_FOR_Q02").toString()));
	    	row.getCell(37).setCellValue(Double.parseDouble(rowData.get("DK_FOR_Q03").toString()));
	    	row.getCell(38).setCellValue(Double.parseDouble(rowData.get("DK_FOR_Q04").toString()));
	    	row.getCell(39).setCellValue(Double.parseDouble(rowData.get("DK_FOR_H01").toString()));
	    	row.getCell(40).setCellValue(Double.parseDouble(rowData.get("DK_FOR_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD12").toString()));
			}else{
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD12").toString()));
			}
    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=4; i<16; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("DK_AC_P01").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("DK_AC_P02").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("DK_AC_P03").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("DK_AC_Q01").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("DK_AC_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD12").toString()));
			}else{
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD12").toString()));
			}
	    	row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P01").toString()));
	    	row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P02").toString()));
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P03").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("DK_FOR_Q01").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("DK_FOR_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD12").toString()));
			}else{
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD12").toString()));
			}
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=4; i<18; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("DK_AC_P04").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("DK_AC_P05").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("DK_AC_P06").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("DK_AC_Q01").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("DK_AC_Q02").toString()));
	    	row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_AC_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD12").toString()));
			}else{
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD12").toString()));
			}
	    	row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P04").toString()));
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P05").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P06").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("DK_FOR_Q01").toString()));
	    	row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_FOR_Q02").toString()));
	    	row.getCell(16).setCellValue(Double.parseDouble(rowData.get("DK_FOR_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD12").toString()));
			}else{
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD12").toString()));
			}
	    	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("DK_AC_P07").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("DK_AC_P08").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("DK_AC_P09").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("DK_AC_Q02").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("DK_AC_Q03").toString()));
	    	row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_AC_H01").toString()));
	    	row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_AC_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD12").toString()));
			}else{
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD12").toString()));
			}
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P07").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P08").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P09").toString()));
	    	row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_FOR_Q02").toString()));
	    	row.getCell(16).setCellValue(Double.parseDouble(rowData.get("DK_FOR_Q03").toString()));
	    	row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_FOR_H01").toString()));
	    	row.getCell(18).setCellValue(Double.parseDouble(rowData.get("DK_FOR_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD12").toString()));
			}else{
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD12").toString()));
			}
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("DK_AC_P10").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("DK_AC_P11").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("DK_AC_P12").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("DK_AC_Q03").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("DK_AC_Q04").toString()));
	    	row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_AC_H01").toString()));
	    	row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_AC_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD12").toString()));
			}else{
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_AC_YTD12").toString()));
			}
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P10").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P11").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("DK_FOR_P12").toString()));
	    	row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_FOR_Q03").toString()));
	    	row.getCell(16).setCellValue(Double.parseDouble(rowData.get("DK_FOR_Q04").toString()));
	    	row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_FOR_H01").toString()));
	    	row.getCell(18).setCellValue(Double.parseDouble(rowData.get("DK_FOR_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD12").toString()));
			}else{
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_FOR_YTD12").toString()));
			}
	    	
		}
    	
    	// F15 SOM 계산식을 위해 리스트에 값을 담아준다.
		if(rowData.get("DATALV1_NM").toString().equals("Whisky")){
			dkDeplMap = new HashMap();
	    	
	    	dkDeplMap.put("STYLETXT", styleTxt);
	    	dkDeplMap.put("TOTAL", "");
	    	
	    	dkDeplMap.put("DK_AC_P01", Double.parseDouble(rowData.get("DK_AC_P01").toString()));
			dkDeplMap.put("DK_AC_P02", Double.parseDouble(rowData.get("DK_AC_P02").toString()));
			dkDeplMap.put("DK_AC_P03", Double.parseDouble(rowData.get("DK_AC_P03").toString()));
			dkDeplMap.put("DK_AC_P04", Double.parseDouble(rowData.get("DK_AC_P04").toString()));
			dkDeplMap.put("DK_AC_P05", Double.parseDouble(rowData.get("DK_AC_P05").toString()));
			dkDeplMap.put("DK_AC_P06", Double.parseDouble(rowData.get("DK_AC_P06").toString()));
			dkDeplMap.put("DK_AC_P07", Double.parseDouble(rowData.get("DK_AC_P07").toString()));
			dkDeplMap.put("DK_AC_P08", Double.parseDouble(rowData.get("DK_AC_P08").toString()));
			dkDeplMap.put("DK_AC_P09", Double.parseDouble(rowData.get("DK_AC_P09").toString()));
			dkDeplMap.put("DK_AC_P10", Double.parseDouble(rowData.get("DK_AC_P10").toString()));
			dkDeplMap.put("DK_AC_P11", Double.parseDouble(rowData.get("DK_AC_P11").toString()));
			dkDeplMap.put("DK_AC_P12", Double.parseDouble(rowData.get("DK_AC_P12").toString()));
			dkDeplMap.put("DK_AC_Q01", Double.parseDouble(rowData.get("DK_AC_Q01").toString()));
			dkDeplMap.put("DK_AC_Q02", Double.parseDouble(rowData.get("DK_AC_Q02").toString()));
			dkDeplMap.put("DK_AC_Q03", Double.parseDouble(rowData.get("DK_AC_Q03").toString()));
			dkDeplMap.put("DK_AC_Q04", Double.parseDouble(rowData.get("DK_AC_Q04").toString()));
			dkDeplMap.put("DK_AC_H01", Double.parseDouble(rowData.get("DK_AC_H01").toString()));
			dkDeplMap.put("DK_AC_H02", Double.parseDouble(rowData.get("DK_AC_H02").toString()));
			if(ytd_Param.equals("P01")){
				dkDeplMap.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				dkDeplMap.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				dkDeplMap.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				dkDeplMap.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				dkDeplMap.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				dkDeplMap.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				dkDeplMap.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				dkDeplMap.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				dkDeplMap.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				dkDeplMap.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				dkDeplMap.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				dkDeplMap.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD12").toString()));
			}
			
			dkDeplMap.put("DK_FOR_P01", Double.parseDouble(rowData.get("DK_FOR_P01").toString()));
			dkDeplMap.put("DK_FOR_P02", Double.parseDouble(rowData.get("DK_FOR_P02").toString()));
			dkDeplMap.put("DK_FOR_P03", Double.parseDouble(rowData.get("DK_FOR_P03").toString()));
			dkDeplMap.put("DK_FOR_P04", Double.parseDouble(rowData.get("DK_FOR_P04").toString()));
			dkDeplMap.put("DK_FOR_P05", Double.parseDouble(rowData.get("DK_FOR_P05").toString()));
			dkDeplMap.put("DK_FOR_P06", Double.parseDouble(rowData.get("DK_FOR_P06").toString()));
			dkDeplMap.put("DK_FOR_P07", Double.parseDouble(rowData.get("DK_FOR_P07").toString()));
			dkDeplMap.put("DK_FOR_P08", Double.parseDouble(rowData.get("DK_FOR_P08").toString()));
			dkDeplMap.put("DK_FOR_P09", Double.parseDouble(rowData.get("DK_FOR_P09").toString()));
			dkDeplMap.put("DK_FOR_P10", Double.parseDouble(rowData.get("DK_FOR_P10").toString()));
			dkDeplMap.put("DK_FOR_P11", Double.parseDouble(rowData.get("DK_FOR_P11").toString()));
			dkDeplMap.put("DK_FOR_P12", Double.parseDouble(rowData.get("DK_FOR_P12").toString()));
			dkDeplMap.put("DK_FOR_Q01", Double.parseDouble(rowData.get("DK_FOR_Q01").toString()));
			dkDeplMap.put("DK_FOR_Q02", Double.parseDouble(rowData.get("DK_FOR_Q02").toString()));
			dkDeplMap.put("DK_FOR_Q03", Double.parseDouble(rowData.get("DK_FOR_Q03").toString()));
			dkDeplMap.put("DK_FOR_Q04", Double.parseDouble(rowData.get("DK_FOR_Q04").toString()));
			dkDeplMap.put("DK_FOR_H01", Double.parseDouble(rowData.get("DK_FOR_H01").toString()));
			dkDeplMap.put("DK_FOR_H02", Double.parseDouble(rowData.get("DK_FOR_H02").toString()));
			if(ytd_Param.equals("P01")){
				dkDeplMap.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				dkDeplMap.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				dkDeplMap.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				dkDeplMap.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				dkDeplMap.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				dkDeplMap.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				dkDeplMap.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				dkDeplMap.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				dkDeplMap.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				dkDeplMap.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				dkDeplMap.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				dkDeplMap.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD12").toString()));
			}
			
			dkDeplMap.put("DK_OUT_P01", Double.parseDouble(rowData.get("DK_OUT_P01").toString()));
			dkDeplMap.put("DK_OUT_P02", Double.parseDouble(rowData.get("DK_OUT_P02").toString()));
			dkDeplMap.put("DK_OUT_P03", Double.parseDouble(rowData.get("DK_OUT_P03").toString()));
			dkDeplMap.put("DK_OUT_P04", Double.parseDouble(rowData.get("DK_OUT_P04").toString()));
			dkDeplMap.put("DK_OUT_P05", Double.parseDouble(rowData.get("DK_OUT_P05").toString()));
			dkDeplMap.put("DK_OUT_P06", Double.parseDouble(rowData.get("DK_OUT_P06").toString()));
			dkDeplMap.put("DK_OUT_P07", Double.parseDouble(rowData.get("DK_OUT_P07").toString()));
			dkDeplMap.put("DK_OUT_P08", Double.parseDouble(rowData.get("DK_OUT_P08").toString()));
			dkDeplMap.put("DK_OUT_P09", Double.parseDouble(rowData.get("DK_OUT_P09").toString()));
			dkDeplMap.put("DK_OUT_P10", Double.parseDouble(rowData.get("DK_OUT_P10").toString()));
			dkDeplMap.put("DK_OUT_P11", Double.parseDouble(rowData.get("DK_OUT_P11").toString()));
			dkDeplMap.put("DK_OUT_P12", Double.parseDouble(rowData.get("DK_OUT_P12").toString()));
			dkDeplMap.put("DK_OUT_Q01", Double.parseDouble(rowData.get("DK_OUT_Q01").toString()));
			dkDeplMap.put("DK_OUT_Q02", Double.parseDouble(rowData.get("DK_OUT_Q02").toString()));
			dkDeplMap.put("DK_OUT_Q03", Double.parseDouble(rowData.get("DK_OUT_Q03").toString()));
			dkDeplMap.put("DK_OUT_Q04", Double.parseDouble(rowData.get("DK_OUT_Q04").toString()));
			dkDeplMap.put("DK_OUT_H01", Double.parseDouble(rowData.get("DK_OUT_H01").toString()));
			dkDeplMap.put("DK_OUT_H02", Double.parseDouble(rowData.get("DK_OUT_H02").toString()));
			if(ytd_Param.equals("P01")){
				dkDeplMap.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				dkDeplMap.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				dkDeplMap.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				dkDeplMap.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				dkDeplMap.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				dkDeplMap.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				dkDeplMap.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				dkDeplMap.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				dkDeplMap.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				dkDeplMap.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				dkDeplMap.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				dkDeplMap.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD12").toString()));
			}
			
			dkDeplMap.put("DK_TG_P01", Double.parseDouble(rowData.get("DK_TG_P01").toString()));
			dkDeplMap.put("DK_TG_P02", Double.parseDouble(rowData.get("DK_TG_P02").toString()));
			dkDeplMap.put("DK_TG_P03", Double.parseDouble(rowData.get("DK_TG_P03").toString()));
			dkDeplMap.put("DK_TG_P04", Double.parseDouble(rowData.get("DK_TG_P04").toString()));
			dkDeplMap.put("DK_TG_P05", Double.parseDouble(rowData.get("DK_TG_P05").toString()));
			dkDeplMap.put("DK_TG_P06", Double.parseDouble(rowData.get("DK_TG_P06").toString()));
			dkDeplMap.put("DK_TG_P07", Double.parseDouble(rowData.get("DK_TG_P07").toString()));
			dkDeplMap.put("DK_TG_P08", Double.parseDouble(rowData.get("DK_TG_P08").toString()));
			dkDeplMap.put("DK_TG_P09", Double.parseDouble(rowData.get("DK_TG_P09").toString()));
			dkDeplMap.put("DK_TG_P10", Double.parseDouble(rowData.get("DK_TG_P10").toString()));
			dkDeplMap.put("DK_TG_P11", Double.parseDouble(rowData.get("DK_TG_P11").toString()));
			dkDeplMap.put("DK_TG_P12", Double.parseDouble(rowData.get("DK_TG_P12").toString()));
			dkDeplMap.put("DK_TG_Q01", Double.parseDouble(rowData.get("DK_TG_Q01").toString()));
			dkDeplMap.put("DK_TG_Q02", Double.parseDouble(rowData.get("DK_TG_Q02").toString()));
			dkDeplMap.put("DK_TG_Q03", Double.parseDouble(rowData.get("DK_TG_Q03").toString()));
			dkDeplMap.put("DK_TG_Q04", Double.parseDouble(rowData.get("DK_TG_Q04").toString()));
			dkDeplMap.put("DK_TG_H01", Double.parseDouble(rowData.get("DK_TG_H01").toString()));
			dkDeplMap.put("DK_TG_H02", Double.parseDouble(rowData.get("DK_TG_H02").toString()));
			if(ytd_Param.equals("P01")){
				dkDeplMap.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				dkDeplMap.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				dkDeplMap.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				dkDeplMap.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				dkDeplMap.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				dkDeplMap.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				dkDeplMap.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				dkDeplMap.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				dkDeplMap.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				dkDeplMap.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				dkDeplMap.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				dkDeplMap.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD12").toString()));
			}
			
			dkDepl.add(dkDeplMap);
		}
		
		// 나머지 계산식을 위해 리스트에 값을 담아준다.
		dkDeplMap2 = new HashMap();
    	
    	dkDeplMap2.put("STYLETXT", styleTxt);
    	dkDeplMap2.put("TOTAL", "");
    	
    	dkDeplMap2.put("DK_AC_P01", Double.parseDouble(rowData.get("DK_AC_P01").toString()));
		dkDeplMap2.put("DK_AC_P02", Double.parseDouble(rowData.get("DK_AC_P02").toString()));
		dkDeplMap2.put("DK_AC_P03", Double.parseDouble(rowData.get("DK_AC_P03").toString()));
		dkDeplMap2.put("DK_AC_P04", Double.parseDouble(rowData.get("DK_AC_P04").toString()));
		dkDeplMap2.put("DK_AC_P05", Double.parseDouble(rowData.get("DK_AC_P05").toString()));
		dkDeplMap2.put("DK_AC_P06", Double.parseDouble(rowData.get("DK_AC_P06").toString()));
		dkDeplMap2.put("DK_AC_P07", Double.parseDouble(rowData.get("DK_AC_P07").toString()));
		dkDeplMap2.put("DK_AC_P08", Double.parseDouble(rowData.get("DK_AC_P08").toString()));
		dkDeplMap2.put("DK_AC_P09", Double.parseDouble(rowData.get("DK_AC_P09").toString()));
		dkDeplMap2.put("DK_AC_P10", Double.parseDouble(rowData.get("DK_AC_P10").toString()));
		dkDeplMap2.put("DK_AC_P11", Double.parseDouble(rowData.get("DK_AC_P11").toString()));
		dkDeplMap2.put("DK_AC_P12", Double.parseDouble(rowData.get("DK_AC_P12").toString()));
		dkDeplMap2.put("DK_AC_Q01", Double.parseDouble(rowData.get("DK_AC_Q01").toString()));
		dkDeplMap2.put("DK_AC_Q02", Double.parseDouble(rowData.get("DK_AC_Q02").toString()));
		dkDeplMap2.put("DK_AC_Q03", Double.parseDouble(rowData.get("DK_AC_Q03").toString()));
		dkDeplMap2.put("DK_AC_Q04", Double.parseDouble(rowData.get("DK_AC_Q04").toString()));
		dkDeplMap2.put("DK_AC_H01", Double.parseDouble(rowData.get("DK_AC_H01").toString()));
		dkDeplMap2.put("DK_AC_H02", Double.parseDouble(rowData.get("DK_AC_H02").toString()));
		if(ytd_Param.equals("P01")){
			dkDeplMap2.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD01").toString()));
		}else if(ytd_Param.equals("P02")){
			dkDeplMap2.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD02").toString()));
		}else if(ytd_Param.equals("P03")){
			dkDeplMap2.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD03").toString()));
		}else if(ytd_Param.equals("P04")){
			dkDeplMap2.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD04").toString()));
		}else if(ytd_Param.equals("P05")){
			dkDeplMap2.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD05").toString()));
		}else if(ytd_Param.equals("P06")){
			dkDeplMap2.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD06").toString()));
		}else if(ytd_Param.equals("P07")){
			dkDeplMap2.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD07").toString()));
		}else if(ytd_Param.equals("P08")){
			dkDeplMap2.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD08").toString()));
		}else if(ytd_Param.equals("P09")){
			dkDeplMap2.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD09").toString()));
		}else if(ytd_Param.equals("P10")){
			dkDeplMap2.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD10").toString()));
		}else if(ytd_Param.equals("P11")){
			dkDeplMap2.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD11").toString()));
		}else if(ytd_Param.equals("P12")){
			dkDeplMap2.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD12").toString()));
		}else{
			dkDeplMap2.put("DK_AC_YTD", Double.parseDouble(rowData.get("DK_AC_YTD12").toString()));
		}
		
		dkDeplMap2.put("DK_FOR_P01", Double.parseDouble(rowData.get("DK_FOR_P01").toString()));
		dkDeplMap2.put("DK_FOR_P02", Double.parseDouble(rowData.get("DK_FOR_P02").toString()));
		dkDeplMap2.put("DK_FOR_P03", Double.parseDouble(rowData.get("DK_FOR_P03").toString()));
		dkDeplMap2.put("DK_FOR_P04", Double.parseDouble(rowData.get("DK_FOR_P04").toString()));
		dkDeplMap2.put("DK_FOR_P05", Double.parseDouble(rowData.get("DK_FOR_P05").toString()));
		dkDeplMap2.put("DK_FOR_P06", Double.parseDouble(rowData.get("DK_FOR_P06").toString()));
		dkDeplMap2.put("DK_FOR_P07", Double.parseDouble(rowData.get("DK_FOR_P07").toString()));
		dkDeplMap2.put("DK_FOR_P08", Double.parseDouble(rowData.get("DK_FOR_P08").toString()));
		dkDeplMap2.put("DK_FOR_P09", Double.parseDouble(rowData.get("DK_FOR_P09").toString()));
		dkDeplMap2.put("DK_FOR_P10", Double.parseDouble(rowData.get("DK_FOR_P10").toString()));
		dkDeplMap2.put("DK_FOR_P11", Double.parseDouble(rowData.get("DK_FOR_P11").toString()));
		dkDeplMap2.put("DK_FOR_P12", Double.parseDouble(rowData.get("DK_FOR_P12").toString()));
		dkDeplMap2.put("DK_FOR_Q01", Double.parseDouble(rowData.get("DK_FOR_Q01").toString()));
		dkDeplMap2.put("DK_FOR_Q02", Double.parseDouble(rowData.get("DK_FOR_Q02").toString()));
		dkDeplMap2.put("DK_FOR_Q03", Double.parseDouble(rowData.get("DK_FOR_Q03").toString()));
		dkDeplMap2.put("DK_FOR_Q04", Double.parseDouble(rowData.get("DK_FOR_Q04").toString()));
		dkDeplMap2.put("DK_FOR_H01", Double.parseDouble(rowData.get("DK_FOR_H01").toString()));
		dkDeplMap2.put("DK_FOR_H02", Double.parseDouble(rowData.get("DK_FOR_H02").toString()));
		if(ytd_Param.equals("P01")){
			dkDeplMap2.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD01").toString()));
		}else if(ytd_Param.equals("P02")){
			dkDeplMap2.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD02").toString()));
		}else if(ytd_Param.equals("P03")){
			dkDeplMap2.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD03").toString()));
		}else if(ytd_Param.equals("P04")){
			dkDeplMap2.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD04").toString()));
		}else if(ytd_Param.equals("P05")){
			dkDeplMap2.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD05").toString()));
		}else if(ytd_Param.equals("P06")){
			dkDeplMap2.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD06").toString()));
		}else if(ytd_Param.equals("P07")){
			dkDeplMap2.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD07").toString()));
		}else if(ytd_Param.equals("P08")){
			dkDeplMap2.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD08").toString()));
		}else if(ytd_Param.equals("P09")){
			dkDeplMap2.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD09").toString()));
		}else if(ytd_Param.equals("P10")){
			dkDeplMap2.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD10").toString()));
		}else if(ytd_Param.equals("P11")){
			dkDeplMap2.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD11").toString()));
		}else if(ytd_Param.equals("P12")){
			dkDeplMap2.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD12").toString()));
		}else{
			dkDeplMap2.put("DK_FOR_YTD", Double.parseDouble(rowData.get("DK_FOR_YTD12").toString()));
		}
		
		dkDeplMap2.put("DK_OUT_P01", Double.parseDouble(rowData.get("DK_OUT_P01").toString()));
		dkDeplMap2.put("DK_OUT_P02", Double.parseDouble(rowData.get("DK_OUT_P02").toString()));
		dkDeplMap2.put("DK_OUT_P03", Double.parseDouble(rowData.get("DK_OUT_P03").toString()));
		dkDeplMap2.put("DK_OUT_P04", Double.parseDouble(rowData.get("DK_OUT_P04").toString()));
		dkDeplMap2.put("DK_OUT_P05", Double.parseDouble(rowData.get("DK_OUT_P05").toString()));
		dkDeplMap2.put("DK_OUT_P06", Double.parseDouble(rowData.get("DK_OUT_P06").toString()));
		dkDeplMap2.put("DK_OUT_P07", Double.parseDouble(rowData.get("DK_OUT_P07").toString()));
		dkDeplMap2.put("DK_OUT_P08", Double.parseDouble(rowData.get("DK_OUT_P08").toString()));
		dkDeplMap2.put("DK_OUT_P09", Double.parseDouble(rowData.get("DK_OUT_P09").toString()));
		dkDeplMap2.put("DK_OUT_P10", Double.parseDouble(rowData.get("DK_OUT_P10").toString()));
		dkDeplMap2.put("DK_OUT_P11", Double.parseDouble(rowData.get("DK_OUT_P11").toString()));
		dkDeplMap2.put("DK_OUT_P12", Double.parseDouble(rowData.get("DK_OUT_P12").toString()));
		dkDeplMap2.put("DK_OUT_Q01", Double.parseDouble(rowData.get("DK_OUT_Q01").toString()));
		dkDeplMap2.put("DK_OUT_Q02", Double.parseDouble(rowData.get("DK_OUT_Q02").toString()));
		dkDeplMap2.put("DK_OUT_Q03", Double.parseDouble(rowData.get("DK_OUT_Q03").toString()));
		dkDeplMap2.put("DK_OUT_Q04", Double.parseDouble(rowData.get("DK_OUT_Q04").toString()));
		dkDeplMap2.put("DK_OUT_H01", Double.parseDouble(rowData.get("DK_OUT_H01").toString()));
		dkDeplMap2.put("DK_OUT_H02", Double.parseDouble(rowData.get("DK_OUT_H02").toString()));
		if(ytd_Param.equals("P01")){
			dkDeplMap2.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD01").toString()));
		}else if(ytd_Param.equals("P02")){
			dkDeplMap2.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD02").toString()));
		}else if(ytd_Param.equals("P03")){
			dkDeplMap2.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD03").toString()));
		}else if(ytd_Param.equals("P04")){
			dkDeplMap2.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD04").toString()));
		}else if(ytd_Param.equals("P05")){
			dkDeplMap2.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD05").toString()));
		}else if(ytd_Param.equals("P06")){
			dkDeplMap2.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD06").toString()));
		}else if(ytd_Param.equals("P07")){
			dkDeplMap2.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD07").toString()));
		}else if(ytd_Param.equals("P08")){
			dkDeplMap2.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD08").toString()));
		}else if(ytd_Param.equals("P09")){
			dkDeplMap2.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD09").toString()));
		}else if(ytd_Param.equals("P10")){
			dkDeplMap2.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD10").toString()));
		}else if(ytd_Param.equals("P11")){
			dkDeplMap2.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD11").toString()));
		}else if(ytd_Param.equals("P12")){
			dkDeplMap2.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD12").toString()));
		}else{
			dkDeplMap2.put("DK_OUT_YTD", Double.parseDouble(rowData.get("DK_OUT_YTD12").toString()));
		}
		
		dkDeplMap2.put("DK_TG_P01", Double.parseDouble(rowData.get("DK_TG_P01").toString()));
		dkDeplMap2.put("DK_TG_P02", Double.parseDouble(rowData.get("DK_TG_P02").toString()));
		dkDeplMap2.put("DK_TG_P03", Double.parseDouble(rowData.get("DK_TG_P03").toString()));
		dkDeplMap2.put("DK_TG_P04", Double.parseDouble(rowData.get("DK_TG_P04").toString()));
		dkDeplMap2.put("DK_TG_P05", Double.parseDouble(rowData.get("DK_TG_P05").toString()));
		dkDeplMap2.put("DK_TG_P06", Double.parseDouble(rowData.get("DK_TG_P06").toString()));
		dkDeplMap2.put("DK_TG_P07", Double.parseDouble(rowData.get("DK_TG_P07").toString()));
		dkDeplMap2.put("DK_TG_P08", Double.parseDouble(rowData.get("DK_TG_P08").toString()));
		dkDeplMap2.put("DK_TG_P09", Double.parseDouble(rowData.get("DK_TG_P09").toString()));
		dkDeplMap2.put("DK_TG_P10", Double.parseDouble(rowData.get("DK_TG_P10").toString()));
		dkDeplMap2.put("DK_TG_P11", Double.parseDouble(rowData.get("DK_TG_P11").toString()));
		dkDeplMap2.put("DK_TG_P12", Double.parseDouble(rowData.get("DK_TG_P12").toString()));
		dkDeplMap2.put("DK_TG_Q01", Double.parseDouble(rowData.get("DK_TG_Q01").toString()));
		dkDeplMap2.put("DK_TG_Q02", Double.parseDouble(rowData.get("DK_TG_Q02").toString()));
		dkDeplMap2.put("DK_TG_Q03", Double.parseDouble(rowData.get("DK_TG_Q03").toString()));
		dkDeplMap2.put("DK_TG_Q04", Double.parseDouble(rowData.get("DK_TG_Q04").toString()));
		dkDeplMap2.put("DK_TG_H01", Double.parseDouble(rowData.get("DK_TG_H01").toString()));
		dkDeplMap2.put("DK_TG_H02", Double.parseDouble(rowData.get("DK_TG_H02").toString()));
		if(ytd_Param.equals("P01")){
			dkDeplMap2.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD01").toString()));
		}else if(ytd_Param.equals("P02")){
			dkDeplMap2.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD02").toString()));
		}else if(ytd_Param.equals("P03")){
			dkDeplMap2.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD03").toString()));
		}else if(ytd_Param.equals("P04")){
			dkDeplMap2.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD04").toString()));
		}else if(ytd_Param.equals("P05")){
			dkDeplMap2.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD05").toString()));
		}else if(ytd_Param.equals("P06")){
			dkDeplMap2.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD06").toString()));
		}else if(ytd_Param.equals("P07")){
			dkDeplMap2.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD07").toString()));
		}else if(ytd_Param.equals("P08")){
			dkDeplMap2.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD08").toString()));
		}else if(ytd_Param.equals("P09")){
			dkDeplMap2.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD09").toString()));
		}else if(ytd_Param.equals("P10")){
			dkDeplMap2.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD10").toString()));
		}else if(ytd_Param.equals("P11")){
			dkDeplMap2.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD11").toString()));
		}else if(ytd_Param.equals("P12")){
			dkDeplMap2.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD12").toString()));
		}else{
			dkDeplMap2.put("DK_TG_YTD", Double.parseDouble(rowData.get("DK_TG_YTD12").toString()));
		}
		
		dkDepl2.add(dkDeplMap2);
		
	}
	
	/*
	 * Description: DK Depletion Forecast 4~41번째 컬럼의 소계, 합계를 자동 계산하여 셀에 입력
	 */
	public void setRowSumValue2(HSSFRow row, CellStyle style, List data, String colIdx, String grpTxt, String onIdx, String onTxt, String styleTxt) {
		// Whisky Off Local합계, Int`l 합계
		if(onTxt.equals("OFF") && colIdx.equals("DATALV3_NM")){
			dkDepFcAcP01 = getSum(data, colIdx, grpTxt, "DK_AC_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P01", "DATALV2_NM", "OFF");
			dkDepFcAcP02 = getSum(data, colIdx, grpTxt, "DK_AC_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P02", "DATALV2_NM", "OFF");
			dkDepFcAcP03 = getSum(data, colIdx, grpTxt, "DK_AC_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P03", "DATALV2_NM", "OFF");
			dkDepFcAcP04 = getSum(data, colIdx, grpTxt, "DK_AC_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P04", "DATALV2_NM", "OFF");
			dkDepFcAcP05 = getSum(data, colIdx, grpTxt, "DK_AC_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P05", "DATALV2_NM", "OFF");
			dkDepFcAcP06 = getSum(data, colIdx, grpTxt, "DK_AC_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P06", "DATALV2_NM", "OFF");
			dkDepFcAcP07 = getSum(data, colIdx, grpTxt, "DK_AC_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P07", "DATALV2_NM", "OFF");
			dkDepFcAcP08 = getSum(data, colIdx, grpTxt, "DK_AC_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P08", "DATALV2_NM", "OFF");
			dkDepFcAcP09 = getSum(data, colIdx, grpTxt, "DK_AC_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P09", "DATALV2_NM", "OFF");
			dkDepFcAcP10 = getSum(data, colIdx, grpTxt, "DK_AC_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P10", "DATALV2_NM", "OFF");
			dkDepFcAcP11 = getSum(data, colIdx, grpTxt, "DK_AC_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P11", "DATALV2_NM", "OFF");
			dkDepFcAcP12 = getSum(data, colIdx, grpTxt, "DK_AC_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P12", "DATALV2_NM", "OFF");
			dkDepFcAcQ01 = getSum(data, colIdx, grpTxt, "DK_AC_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_Q01", "DATALV2_NM", "OFF");
			dkDepFcAcQ02 = getSum(data, colIdx, grpTxt, "DK_AC_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_Q02", "DATALV2_NM", "OFF");
			dkDepFcAcQ03 = getSum(data, colIdx, grpTxt, "DK_AC_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_Q03", "DATALV2_NM", "OFF");
			dkDepFcAcQ04 = getSum(data, colIdx, grpTxt, "DK_AC_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_Q04", "DATALV2_NM", "OFF");
			dkDepFcAcH01 = getSum(data, colIdx, grpTxt, "DK_AC_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_H01", "DATALV2_NM", "OFF");
			dkDepFcAcH02 = getSum(data, colIdx, grpTxt, "DK_AC_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_H02", "DATALV2_NM", "OFF");
			if(ytd_Param.equals("P01")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD01", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P02")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD02", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P03")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD03", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P04")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD04", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P05")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD05", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P06")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD06", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P07")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD07", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P08")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD08", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P09")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD09", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P10")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD10", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P11")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD11", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P12")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD12", "DATALV2_NM", "OFF");
			}else{
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD12", "DATALV2_NM", "OFF");
			}
			
			dkDepFcForP01 = getSum(data, colIdx, grpTxt, "DK_FOR_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P01", "DATALV2_NM", "OFF");
			dkDepFcForP02 = getSum(data, colIdx, grpTxt, "DK_FOR_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P02", "DATALV2_NM", "OFF");
			dkDepFcForP03 = getSum(data, colIdx, grpTxt, "DK_FOR_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P03", "DATALV2_NM", "OFF");
			dkDepFcForP04 = getSum(data, colIdx, grpTxt, "DK_FOR_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P04", "DATALV2_NM", "OFF");
			dkDepFcForP05 = getSum(data, colIdx, grpTxt, "DK_FOR_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P05", "DATALV2_NM", "OFF");
			dkDepFcForP06 = getSum(data, colIdx, grpTxt, "DK_FOR_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P06", "DATALV2_NM", "OFF");
			dkDepFcForP07 = getSum(data, colIdx, grpTxt, "DK_FOR_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P07", "DATALV2_NM", "OFF");
			dkDepFcForP08 = getSum(data, colIdx, grpTxt, "DK_FOR_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P08", "DATALV2_NM", "OFF");
			dkDepFcForP09 = getSum(data, colIdx, grpTxt, "DK_FOR_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P09", "DATALV2_NM", "OFF");
			dkDepFcForP10 = getSum(data, colIdx, grpTxt, "DK_FOR_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P10", "DATALV2_NM", "OFF");
			dkDepFcForP11 = getSum(data, colIdx, grpTxt, "DK_FOR_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P11", "DATALV2_NM", "OFF");
			dkDepFcForP12 = getSum(data, colIdx, grpTxt, "DK_FOR_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P12", "DATALV2_NM", "OFF");
			dkDepFcForQ01 = getSum(data, colIdx, grpTxt, "DK_FOR_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_Q01", "DATALV2_NM", "OFF");
			dkDepFcForQ02 = getSum(data, colIdx, grpTxt, "DK_FOR_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_Q02", "DATALV2_NM", "OFF");
			dkDepFcForQ03 = getSum(data, colIdx, grpTxt, "DK_FOR_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_Q03", "DATALV2_NM", "OFF");
			dkDepFcForQ04 = getSum(data, colIdx, grpTxt, "DK_FOR_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_Q04", "DATALV2_NM", "OFF");
			dkDepFcForH01 = getSum(data, colIdx, grpTxt, "DK_FOR_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_H01", "DATALV2_NM", "OFF");
			dkDepFcForH02 = getSum(data, colIdx, grpTxt, "DK_FOR_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_H02", "DATALV2_NM", "OFF");
			if(ytd_Param.equals("P01")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD01", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P02")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD02", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P03")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD03", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P04")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD04", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P05")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD05", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P06")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD06", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P07")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD07", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P08")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD08", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P09")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD09", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P10")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD10", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P11")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD11", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P12")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD12", "DATALV2_NM", "OFF");
			}else{
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD12", "DATALV2_NM", "OFF");
			}
						
			dkDepFcOutP01 = getSum(data, colIdx, grpTxt, "DK_OUT_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P01", "DATALV2_NM", "OFF");
			dkDepFcOutP02 = getSum(data, colIdx, grpTxt, "DK_OUT_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P02", "DATALV2_NM", "OFF");
			dkDepFcOutP03 = getSum(data, colIdx, grpTxt, "DK_OUT_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P03", "DATALV2_NM", "OFF");
			dkDepFcOutP04 = getSum(data, colIdx, grpTxt, "DK_OUT_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P04", "DATALV2_NM", "OFF");
			dkDepFcOutP05 = getSum(data, colIdx, grpTxt, "DK_OUT_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P05", "DATALV2_NM", "OFF");
			dkDepFcOutP06 = getSum(data, colIdx, grpTxt, "DK_OUT_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P06", "DATALV2_NM", "OFF");
			dkDepFcOutP07 = getSum(data, colIdx, grpTxt, "DK_OUT_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P07", "DATALV2_NM", "OFF");
			dkDepFcOutP08 = getSum(data, colIdx, grpTxt, "DK_OUT_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P08", "DATALV2_NM", "OFF");
			dkDepFcOutP09 = getSum(data, colIdx, grpTxt, "DK_OUT_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P09", "DATALV2_NM", "OFF");
			dkDepFcOutP10 = getSum(data, colIdx, grpTxt, "DK_OUT_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P10", "DATALV2_NM", "OFF");
			dkDepFcOutP11 = getSum(data, colIdx, grpTxt, "DK_OUT_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P11", "DATALV2_NM", "OFF");
			dkDepFcOutP12 = getSum(data, colIdx, grpTxt, "DK_OUT_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P12", "DATALV2_NM", "OFF");
			dkDepFcOutQ01 = getSum(data, colIdx, grpTxt, "DK_OUT_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_Q01", "DATALV2_NM", "OFF");
			dkDepFcOutQ02 = getSum(data, colIdx, grpTxt, "DK_OUT_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_Q02", "DATALV2_NM", "OFF");
			dkDepFcOutQ03 = getSum(data, colIdx, grpTxt, "DK_OUT_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_Q03", "DATALV2_NM", "OFF");
			dkDepFcOutQ04 = getSum(data, colIdx, grpTxt, "DK_OUT_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_Q04", "DATALV2_NM", "OFF");
			dkDepFcOutH01 = getSum(data, colIdx, grpTxt, "DK_OUT_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_H01", "DATALV2_NM", "OFF");
			dkDepFcOutH02 = getSum(data, colIdx, grpTxt, "DK_OUT_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_H02", "DATALV2_NM", "OFF");
			if(ytd_Param.equals("P01")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD01", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P02")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD02", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P03")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD03", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P04")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD04", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P05")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD05", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P06")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD06", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P07")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD07", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P08")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD08", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P09")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD09", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P10")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD10", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P11")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD11", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P12")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD12", "DATALV2_NM", "OFF");
			}else{
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD12", "DATALV2_NM", "OFF");
			}
			
			dkDepFcTgP01 = getSum(data, colIdx, grpTxt, "DK_TG_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P01", "DATALV2_NM", "OFF");
			dkDepFcTgP02 = getSum(data, colIdx, grpTxt, "DK_TG_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P02", "DATALV2_NM", "OFF");
			dkDepFcTgP03 = getSum(data, colIdx, grpTxt, "DK_TG_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P03", "DATALV2_NM", "OFF");
			dkDepFcTgP04 = getSum(data, colIdx, grpTxt, "DK_TG_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P04", "DATALV2_NM", "OFF");
			dkDepFcTgP05 = getSum(data, colIdx, grpTxt, "DK_TG_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P05", "DATALV2_NM", "OFF");
			dkDepFcTgP06 = getSum(data, colIdx, grpTxt, "DK_TG_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P06", "DATALV2_NM", "OFF");
			dkDepFcTgP07 = getSum(data, colIdx, grpTxt, "DK_TG_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P07", "DATALV2_NM", "OFF");
			dkDepFcTgP08 = getSum(data, colIdx, grpTxt, "DK_TG_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P08", "DATALV2_NM", "OFF");
			dkDepFcTgP09 = getSum(data, colIdx, grpTxt, "DK_TG_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P09", "DATALV2_NM", "OFF");
			dkDepFcTgP10 = getSum(data, colIdx, grpTxt, "DK_TG_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P10", "DATALV2_NM", "OFF");
			dkDepFcTgP11 = getSum(data, colIdx, grpTxt, "DK_TG_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P11", "DATALV2_NM", "OFF");
			dkDepFcTgP12 = getSum(data, colIdx, grpTxt, "DK_TG_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P12", "DATALV2_NM", "OFF");
			dkDepFcTgQ01 = getSum(data, colIdx, grpTxt, "DK_TG_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_Q01", "DATALV2_NM", "OFF");
			dkDepFcTgQ02 = getSum(data, colIdx, grpTxt, "DK_TG_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_Q02", "DATALV2_NM", "OFF");
			dkDepFcTgQ03 = getSum(data, colIdx, grpTxt, "DK_TG_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_Q03", "DATALV2_NM", "OFF");
			dkDepFcTgQ04 = getSum(data, colIdx, grpTxt, "DK_TG_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_Q04", "DATALV2_NM", "OFF");
			dkDepFcTgH01 = getSum(data, colIdx, grpTxt, "DK_TG_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_H01", "DATALV2_NM", "OFF");
			dkDepFcTgH02 = getSum(data, colIdx, grpTxt, "DK_TG_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_H02", "DATALV2_NM", "OFF");
			if(ytd_Param.equals("P01")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD01", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P02")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD02", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P03")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD03", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P04")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD04", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P05")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD05", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P06")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD06", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P07")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD07", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P08")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD08", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P09")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD09", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P10")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD10", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P11")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD11", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P12")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD12", "DATALV2_NM", "OFF");
			}else{
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD12", "DATALV2_NM", "OFF");
			}
					
		// Whisky Off Total (excl Military)
		}else if(onTxt.equals("OFF") && colIdx.equals("")){
			
			dkDepFcAcP01 = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_P01", "DATALV2_NM", "OFF");
			dkDepFcAcP02 = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_P02", "DATALV2_NM", "OFF");
			dkDepFcAcP03 = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_P03", "DATALV2_NM", "OFF");
			dkDepFcAcP04 = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_P04", "DATALV2_NM", "OFF");
			dkDepFcAcP05 = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_P05", "DATALV2_NM", "OFF");
			dkDepFcAcP06 = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_P06", "DATALV2_NM", "OFF");
			dkDepFcAcP07 = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_P07", "DATALV2_NM", "OFF");
			dkDepFcAcP08 = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_P08", "DATALV2_NM", "OFF");
			dkDepFcAcP09 = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_P09", "DATALV2_NM", "OFF");
			dkDepFcAcP10 = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_P10", "DATALV2_NM", "OFF");
			dkDepFcAcP11 = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_P11", "DATALV2_NM", "OFF");
			dkDepFcAcP12 = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_P12", "DATALV2_NM", "OFF");
			dkDepFcAcQ01 = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_Q01", "DATALV2_NM", "OFF");
			dkDepFcAcQ02 = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_Q02", "DATALV2_NM", "OFF");
			dkDepFcAcQ03 = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_Q03", "DATALV2_NM", "OFF");
			dkDepFcAcQ04 = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_Q04", "DATALV2_NM", "OFF");
			dkDepFcAcH01 = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_H01", "DATALV2_NM", "OFF");
			dkDepFcAcH02 = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_H02", "DATALV2_NM", "OFF");
			if(ytd_Param.equals("P01")){
				dkDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_YTD01", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P02")){
				dkDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_YTD02", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P03")){
				dkDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_YTD03", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P04")){
				dkDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_YTD04", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P05")){
				dkDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_YTD05", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P06")){
				dkDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_YTD06", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P07")){
				dkDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_YTD07", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P08")){
				dkDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_YTD08", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P09")){
				dkDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_YTD09", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P10")){
				dkDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_YTD10", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P11")){
				dkDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_YTD11", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P12")){
				dkDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_YTD12", "DATALV2_NM", "OFF");
			}else{
				dkDepFcAcYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_AC_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_AC_YTD12", "DATALV2_NM", "OFF");
			}
			
			dkDepFcForP01 = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_P01", "DATALV2_NM", "OFF");
			dkDepFcForP02 = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_P02", "DATALV2_NM", "OFF");
			dkDepFcForP03 = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_P03", "DATALV2_NM", "OFF");
			dkDepFcForP04 = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_P04", "DATALV2_NM", "OFF");
			dkDepFcForP05 = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_P05", "DATALV2_NM", "OFF");
			dkDepFcForP06 = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_P06", "DATALV2_NM", "OFF");
			dkDepFcForP07 = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_P07", "DATALV2_NM", "OFF");
			dkDepFcForP08 = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_P08", "DATALV2_NM", "OFF");
			dkDepFcForP09 = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_P09", "DATALV2_NM", "OFF");
			dkDepFcForP10 = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_P10", "DATALV2_NM", "OFF");
			dkDepFcForP11 = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_P11", "DATALV2_NM", "OFF");
			dkDepFcForP12 = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_P12", "DATALV2_NM", "OFF");
			dkDepFcForQ01 = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_Q01", "DATALV2_NM", "OFF");
			dkDepFcForQ02 = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_Q02", "DATALV2_NM", "OFF");
			dkDepFcForQ03 = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_Q03", "DATALV2_NM", "OFF");
			dkDepFcForQ04 = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_Q04", "DATALV2_NM", "OFF");
			dkDepFcForH01 = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_H01", "DATALV2_NM", "OFF");
			dkDepFcForH02 = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_H02", "DATALV2_NM", "OFF");
			if(ytd_Param.equals("P01")){
				dkDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_YTD01", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P02")){
				dkDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_YTD02", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P03")){
				dkDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_YTD03", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P04")){
				dkDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_YTD04", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P05")){
				dkDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_YTD05", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P06")){
				dkDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_YTD06", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P07")){
				dkDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_YTD07", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P08")){
				dkDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_YTD08", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P09")){
				dkDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_YTD09", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P10")){
				dkDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_YTD10", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P11")){
				dkDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_YTD11", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P12")){
				dkDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_YTD12", "DATALV2_NM", "OFF");
			}else{
				dkDepFcForYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_FOR_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_FOR_YTD12", "DATALV2_NM", "OFF");
			}
			
			dkDepFcOutP01 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P01", "DATALV2_NM", "OFF");
			dkDepFcOutP02 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P02", "DATALV2_NM", "OFF");
			dkDepFcOutP03 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P03", "DATALV2_NM", "OFF");
			dkDepFcOutP04 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P04", "DATALV2_NM", "OFF");
			dkDepFcOutP05 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P05", "DATALV2_NM", "OFF");
			dkDepFcOutP06 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P06", "DATALV2_NM", "OFF");
			dkDepFcOutP07 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P07", "DATALV2_NM", "OFF");
			dkDepFcOutP08 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P08", "DATALV2_NM", "OFF");
			dkDepFcOutP09 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P09", "DATALV2_NM", "OFF");
			dkDepFcOutP10 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P10", "DATALV2_NM", "OFF");
			dkDepFcOutP11 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P11", "DATALV2_NM", "OFF");
			dkDepFcOutP12 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P12", "DATALV2_NM", "OFF");
			dkDepFcOutQ01 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_Q01", "DATALV2_NM", "OFF");
			dkDepFcOutQ02 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_Q02", "DATALV2_NM", "OFF");
			dkDepFcOutQ03 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_Q03", "DATALV2_NM", "OFF");
			dkDepFcOutQ04 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_Q04", "DATALV2_NM", "OFF");
			dkDepFcOutH01 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_H01", "DATALV2_NM", "OFF");
			dkDepFcOutH02 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_H02", "DATALV2_NM", "OFF");
			if(ytd_Param.equals("P01")){
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD01", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P02")){                                                                              
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD02", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P03")){                                                                               
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD03", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P04")){                                                                              
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD04", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P05")){                                                                             
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD05", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P06")){                                                                               
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD06", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P07")){                                                                             
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD07", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P08")){                                                                              
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD08", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P09")){                                                                            
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD09", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P10")){                                                                              
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD10", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P11")){                                                                              
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD11", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P12")){                                                                              
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD12", "DATALV2_NM", "OFF");
			}else{                                                                                                        
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD12", "DATALV2_NM", "OFF");
			}
				
			dkDepFcTgP01 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P01", "DATALV2_NM", "OFF");
			dkDepFcTgP02 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P02", "DATALV2_NM", "OFF");
			dkDepFcTgP03 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P03", "DATALV2_NM", "OFF");
			dkDepFcTgP04 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P04", "DATALV2_NM", "OFF");
			dkDepFcTgP05 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P05", "DATALV2_NM", "OFF");
			dkDepFcTgP06 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P06", "DATALV2_NM", "OFF");
			dkDepFcTgP07 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P07", "DATALV2_NM", "OFF");
			dkDepFcTgP08 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P08", "DATALV2_NM", "OFF");
			dkDepFcTgP09 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P09", "DATALV2_NM", "OFF");
			dkDepFcTgP10 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P10", "DATALV2_NM", "OFF");
			dkDepFcTgP11 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P11", "DATALV2_NM", "OFF");
			dkDepFcTgP12 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P12", "DATALV2_NM", "OFF");
			dkDepFcTgQ01 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_Q01", "DATALV2_NM", "OFF");
			dkDepFcTgQ02 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_Q02", "DATALV2_NM", "OFF");
			dkDepFcTgQ03 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_Q03", "DATALV2_NM", "OFF");
			dkDepFcTgQ04 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_Q04", "DATALV2_NM", "OFF");
			dkDepFcTgH01 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_H01", "DATALV2_NM", "OFF");
			dkDepFcTgH02 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_H02", "DATALV2_NM", "OFF");
			if(ytd_Param.equals("P01")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD01", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P02")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD02", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P03")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD03", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P04")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD04", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P05")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD05", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P06")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD06", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P07")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD07", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P08")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD08", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P09")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD09", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P10")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD10", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P11")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD11", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P12")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD12", "DATALV2_NM", "OFF");
			}else{
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD12", "DATALV2_NM", "OFF");
			}
		
		// Whisky Total (Whisky ON + Whisky Off Total (excl Military))
		}else if(onTxt.equals("") && grpTxt.equals("Whisky")){
			
			dkDepFcAcP01 = getSum(data, colIdx, grpTxt, "DK_AC_P01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P01", "DATALV2_NM", "OFF"));
			dkDepFcAcP02 = getSum(data, colIdx, grpTxt, "DK_AC_P02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P02", "DATALV2_NM", "OFF"));
			dkDepFcAcP03 = getSum(data, colIdx, grpTxt, "DK_AC_P03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P03", "DATALV2_NM", "OFF"));
			dkDepFcAcP04 = getSum(data, colIdx, grpTxt, "DK_AC_P04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P04", "DATALV2_NM", "OFF"));
			dkDepFcAcP05 = getSum(data, colIdx, grpTxt, "DK_AC_P05", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P05", "DATALV2_NM", "OFF"));
			dkDepFcAcP06 = getSum(data, colIdx, grpTxt, "DK_AC_P06", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P06", "DATALV2_NM", "OFF"));
			dkDepFcAcP07 = getSum(data, colIdx, grpTxt, "DK_AC_P07", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P07", "DATALV2_NM", "OFF"));
			dkDepFcAcP08 = getSum(data, colIdx, grpTxt, "DK_AC_P08", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P08", "DATALV2_NM", "OFF"));
			dkDepFcAcP09 = getSum(data, colIdx, grpTxt, "DK_AC_P09", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P09", "DATALV2_NM", "OFF"));
			dkDepFcAcP10 = getSum(data, colIdx, grpTxt, "DK_AC_P10", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P10", "DATALV2_NM", "OFF"));
			dkDepFcAcP11 = getSum(data, colIdx, grpTxt, "DK_AC_P11", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P11", "DATALV2_NM", "OFF"));
			dkDepFcAcP12 = getSum(data, colIdx, grpTxt, "DK_AC_P12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_P12", "DATALV2_NM", "OFF"));
			dkDepFcAcQ01 = getSum(data, colIdx, grpTxt, "DK_AC_Q01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_Q01", "DATALV2_NM", "OFF"));
			dkDepFcAcQ02 = getSum(data, colIdx, grpTxt, "DK_AC_Q02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_Q02", "DATALV2_NM", "OFF"));
			dkDepFcAcQ03 = getSum(data, colIdx, grpTxt, "DK_AC_Q03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_Q03", "DATALV2_NM", "OFF"));
			dkDepFcAcQ04 = getSum(data, colIdx, grpTxt, "DK_AC_Q04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_Q04", "DATALV2_NM", "OFF"));
			dkDepFcAcH01 = getSum(data, colIdx, grpTxt, "DK_AC_H01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_H01", "DATALV2_NM", "OFF"));
			dkDepFcAcH02 = getSum(data, colIdx, grpTxt, "DK_AC_H02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_H02", "DATALV2_NM", "OFF"));
			if(ytd_Param.equals("P01")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD01", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P02")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD02", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P03")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD03", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P04")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD04", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P05")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD05", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD05", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P06")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD06", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD06", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P07")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD07", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD07", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P08")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD08", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD08", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P09")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD09", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD09", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P10")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD10", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD10", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P11")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD11", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD11", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P12")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD12", "DATALV2_NM", "OFF"));
			}else{
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_AC_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_AC_YTD12", "DATALV2_NM", "OFF"));
			}
				
			dkDepFcForP01 = getSum(data, colIdx, grpTxt, "DK_FOR_P01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P01", "DATALV2_NM", "OFF"));
			dkDepFcForP02 = getSum(data, colIdx, grpTxt, "DK_FOR_P02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P02", "DATALV2_NM", "OFF"));
			dkDepFcForP03 = getSum(data, colIdx, grpTxt, "DK_FOR_P03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P03", "DATALV2_NM", "OFF"));
			dkDepFcForP04 = getSum(data, colIdx, grpTxt, "DK_FOR_P04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P04", "DATALV2_NM", "OFF"));
			dkDepFcForP05 = getSum(data, colIdx, grpTxt, "DK_FOR_P05", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P05", "DATALV2_NM", "OFF"));
			dkDepFcForP06 = getSum(data, colIdx, grpTxt, "DK_FOR_P06", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P06", "DATALV2_NM", "OFF"));
			dkDepFcForP07 = getSum(data, colIdx, grpTxt, "DK_FOR_P07", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P07", "DATALV2_NM", "OFF"));
			dkDepFcForP08 = getSum(data, colIdx, grpTxt, "DK_FOR_P08", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P08", "DATALV2_NM", "OFF"));
			dkDepFcForP09 = getSum(data, colIdx, grpTxt, "DK_FOR_P09", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P09", "DATALV2_NM", "OFF"));
			dkDepFcForP10 = getSum(data, colIdx, grpTxt, "DK_FOR_P10", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P10", "DATALV2_NM", "OFF"));
			dkDepFcForP11 = getSum(data, colIdx, grpTxt, "DK_FOR_P11", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P11", "DATALV2_NM", "OFF"));
			dkDepFcForP12 = getSum(data, colIdx, grpTxt, "DK_FOR_P12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_P12", "DATALV2_NM", "OFF"));
			dkDepFcForQ01 = getSum(data, colIdx, grpTxt, "DK_FOR_Q01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_Q01", "DATALV2_NM", "OFF"));
			dkDepFcForQ02 = getSum(data, colIdx, grpTxt, "DK_FOR_Q02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_Q02", "DATALV2_NM", "OFF"));
			dkDepFcForQ03 = getSum(data, colIdx, grpTxt, "DK_FOR_Q03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_Q03", "DATALV2_NM", "OFF"));
			dkDepFcForQ04 = getSum(data, colIdx, grpTxt, "DK_FOR_Q04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_Q04", "DATALV2_NM", "OFF"));
			dkDepFcForH01 = getSum(data, colIdx, grpTxt, "DK_FOR_H01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_H01", "DATALV2_NM", "OFF"));
			dkDepFcForH02 = getSum(data, colIdx, grpTxt, "DK_FOR_H02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_H02", "DATALV2_NM", "OFF"));
			if(ytd_Param.equals("P01")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD01", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P02")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD02", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P03")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD03", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P04")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD04", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P05")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD05", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD05", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P06")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD06", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD06", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P07")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD07", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD07", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P08")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD08", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD08", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P09")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD09", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD09", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P10")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD10", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD10", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P11")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD11", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD11", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P12")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD12", "DATALV2_NM", "OFF"));
			}else{
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_FOR_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_FOR_YTD12", "DATALV2_NM", "OFF"));
			}	
			
			dkDepFcOutP01 = getSum(data, colIdx, grpTxt, "DK_OUT_P01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P01", "DATALV2_NM", "OFF"));
			dkDepFcOutP02 = getSum(data, colIdx, grpTxt, "DK_OUT_P02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P02", "DATALV2_NM", "OFF"));
			dkDepFcOutP03 = getSum(data, colIdx, grpTxt, "DK_OUT_P03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P03", "DATALV2_NM", "OFF"));
			dkDepFcOutP04 = getSum(data, colIdx, grpTxt, "DK_OUT_P04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P04", "DATALV2_NM", "OFF"));
			dkDepFcOutP05 = getSum(data, colIdx, grpTxt, "DK_OUT_P05", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P05", "DATALV2_NM", "OFF"));
			dkDepFcOutP06 = getSum(data, colIdx, grpTxt, "DK_OUT_P06", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P06", "DATALV2_NM", "OFF"));
			dkDepFcOutP07 = getSum(data, colIdx, grpTxt, "DK_OUT_P07", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P07", "DATALV2_NM", "OFF"));
			dkDepFcOutP08 = getSum(data, colIdx, grpTxt, "DK_OUT_P08", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P08", "DATALV2_NM", "OFF"));
			dkDepFcOutP09 = getSum(data, colIdx, grpTxt, "DK_OUT_P09", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P09", "DATALV2_NM", "OFF"));
			dkDepFcOutP10 = getSum(data, colIdx, grpTxt, "DK_OUT_P10", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P10", "DATALV2_NM", "OFF"));
			dkDepFcOutP11 = getSum(data, colIdx, grpTxt, "DK_OUT_P11", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P11", "DATALV2_NM", "OFF"));
			dkDepFcOutP12 = getSum(data, colIdx, grpTxt, "DK_OUT_P12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P12", "DATALV2_NM", "OFF"));
			dkDepFcOutQ01 = getSum(data, colIdx, grpTxt, "DK_OUT_Q01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_Q01", "DATALV2_NM", "OFF"));
			dkDepFcOutQ02 = getSum(data, colIdx, grpTxt, "DK_OUT_Q02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_Q02", "DATALV2_NM", "OFF"));
			dkDepFcOutQ03 = getSum(data, colIdx, grpTxt, "DK_OUT_Q03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_Q03", "DATALV2_NM", "OFF"));
			dkDepFcOutQ04 = getSum(data, colIdx, grpTxt, "DK_OUT_Q04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_Q04", "DATALV2_NM", "OFF"));
			dkDepFcOutH01 = getSum(data, colIdx, grpTxt, "DK_OUT_H01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_H01", "DATALV2_NM", "OFF"));
			dkDepFcOutH02 = getSum(data, colIdx, grpTxt, "DK_OUT_H02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_H02", "DATALV2_NM", "OFF"));
			if(ytd_Param.equals("P01")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD01", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P02")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD02", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P03")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD03", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P04")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD04", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P05")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD05", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD05", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P06")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD06", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD06", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P07")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD07", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD07", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P08")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD08", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD08", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P09")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD09", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD09", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P10")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD10", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD10", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P11")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD11", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD11", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P12")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD12", "DATALV2_NM", "OFF"));
			}else{
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD12", "DATALV2_NM", "OFF"));
			}
				
			dkDepFcTgP01 = getSum(data, colIdx, grpTxt, "DK_TG_P01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P01", "DATALV2_NM", "OFF"));
			dkDepFcTgP02 = getSum(data, colIdx, grpTxt, "DK_TG_P02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P02", "DATALV2_NM", "OFF"));
			dkDepFcTgP03 = getSum(data, colIdx, grpTxt, "DK_TG_P03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P03", "DATALV2_NM", "OFF"));
			dkDepFcTgP04 = getSum(data, colIdx, grpTxt, "DK_TG_P04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P04", "DATALV2_NM", "OFF"));
			dkDepFcTgP05 = getSum(data, colIdx, grpTxt, "DK_TG_P05", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P05", "DATALV2_NM", "OFF"));
			dkDepFcTgP06 = getSum(data, colIdx, grpTxt, "DK_TG_P06", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P06", "DATALV2_NM", "OFF"));
			dkDepFcTgP07 = getSum(data, colIdx, grpTxt, "DK_TG_P07", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P07", "DATALV2_NM", "OFF"));
			dkDepFcTgP08 = getSum(data, colIdx, grpTxt, "DK_TG_P08", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P08", "DATALV2_NM", "OFF"));
			dkDepFcTgP09 = getSum(data, colIdx, grpTxt, "DK_TG_P09", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P09", "DATALV2_NM", "OFF"));
			dkDepFcTgP10 = getSum(data, colIdx, grpTxt, "DK_TG_P10", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P10", "DATALV2_NM", "OFF"));
			dkDepFcTgP11 = getSum(data, colIdx, grpTxt, "DK_TG_P11", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P11", "DATALV2_NM", "OFF"));
			dkDepFcTgP12 = getSum(data, colIdx, grpTxt, "DK_TG_P12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P12", "DATALV2_NM", "OFF"));
			dkDepFcTgQ01 = getSum(data, colIdx, grpTxt, "DK_TG_Q01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_Q01", "DATALV2_NM", "OFF"));
			dkDepFcTgQ02 = getSum(data, colIdx, grpTxt, "DK_TG_Q02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_Q02", "DATALV2_NM", "OFF"));
			dkDepFcTgQ03 = getSum(data, colIdx, grpTxt, "DK_TG_Q03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_Q03", "DATALV2_NM", "OFF"));
			dkDepFcTgQ04 = getSum(data, colIdx, grpTxt, "DK_TG_Q04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_Q04", "DATALV2_NM", "OFF"));
			dkDepFcTgH01 = getSum(data, colIdx, grpTxt, "DK_TG_H01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_H01", "DATALV2_NM", "OFF"));
			dkDepFcTgH02 = getSum(data, colIdx, grpTxt, "DK_TG_H02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_H02", "DATALV2_NM", "OFF"));
			if(ytd_Param.equals("P01")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD01", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P02")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD02", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P03")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD03", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P04")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD04", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P05")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD05", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD05", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P06")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD06", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD06", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P07")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD07", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD07", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P08")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD08", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD08", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P09")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD09", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD09", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P10")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD10", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD10", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P11")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD11", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD11", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P12")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD12", "DATALV2_NM", "OFF"));
			}else{
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD12", "DATALV2_NM", "OFF"));
			}	
						
		}else{
			dkDepFcAcP01 = getSum(data, colIdx, grpTxt, "DK_AC_P01", onIdx, onTxt);
			dkDepFcAcP02 = getSum(data, colIdx, grpTxt, "DK_AC_P02", onIdx, onTxt);
			dkDepFcAcP03 = getSum(data, colIdx, grpTxt, "DK_AC_P03", onIdx, onTxt);
			dkDepFcAcP04 = getSum(data, colIdx, grpTxt, "DK_AC_P04", onIdx, onTxt);
			dkDepFcAcP05 = getSum(data, colIdx, grpTxt, "DK_AC_P05", onIdx, onTxt);
			dkDepFcAcP06 = getSum(data, colIdx, grpTxt, "DK_AC_P06", onIdx, onTxt);
			dkDepFcAcP07 = getSum(data, colIdx, grpTxt, "DK_AC_P07", onIdx, onTxt);
			dkDepFcAcP08 = getSum(data, colIdx, grpTxt, "DK_AC_P08", onIdx, onTxt);
			dkDepFcAcP09 = getSum(data, colIdx, grpTxt, "DK_AC_P09", onIdx, onTxt);
			dkDepFcAcP10 = getSum(data, colIdx, grpTxt, "DK_AC_P10", onIdx, onTxt);
			dkDepFcAcP11 = getSum(data, colIdx, grpTxt, "DK_AC_P11", onIdx, onTxt);
			dkDepFcAcP12 = getSum(data, colIdx, grpTxt, "DK_AC_P12", onIdx, onTxt);
			dkDepFcAcQ01 = getSum(data, colIdx, grpTxt, "DK_AC_Q01", onIdx, onTxt);
			dkDepFcAcQ02 = getSum(data, colIdx, grpTxt, "DK_AC_Q02", onIdx, onTxt);
			dkDepFcAcQ03 = getSum(data, colIdx, grpTxt, "DK_AC_Q03", onIdx, onTxt);
			dkDepFcAcQ04 = getSum(data, colIdx, grpTxt, "DK_AC_Q04", onIdx, onTxt);
			dkDepFcAcH01 = getSum(data, colIdx, grpTxt, "DK_AC_H01", onIdx, onTxt);
			dkDepFcAcH02 = getSum(data, colIdx, grpTxt, "DK_AC_H02", onIdx, onTxt);
			if(ytd_Param.equals("P01")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD01", onIdx, onTxt);
			}else if(ytd_Param.equals("P02")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD02", onIdx, onTxt);
			}else if(ytd_Param.equals("P03")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD03", onIdx, onTxt);
			}else if(ytd_Param.equals("P04")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD04", onIdx, onTxt);
			}else if(ytd_Param.equals("P05")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD05", onIdx, onTxt);
			}else if(ytd_Param.equals("P06")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD06", onIdx, onTxt);
			}else if(ytd_Param.equals("P07")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD07", onIdx, onTxt);
			}else if(ytd_Param.equals("P08")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD08", onIdx, onTxt);
			}else if(ytd_Param.equals("P09")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD09", onIdx, onTxt);
			}else if(ytd_Param.equals("P10")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD10", onIdx, onTxt);
			}else if(ytd_Param.equals("P11")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD11", onIdx, onTxt);
			}else if(ytd_Param.equals("P12")){
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD12", onIdx, onTxt);
			}else{
				dkDepFcAcYTD = getSum(data, colIdx, grpTxt, "DK_AC_YTD12", onIdx, onTxt);
			}
			
			dkDepFcForP01 = getSum(data, colIdx, grpTxt, "DK_FOR_P01", onIdx, onTxt);
			dkDepFcForP02 = getSum(data, colIdx, grpTxt, "DK_FOR_P02", onIdx, onTxt);
			dkDepFcForP03 = getSum(data, colIdx, grpTxt, "DK_FOR_P03", onIdx, onTxt);
			dkDepFcForP04 = getSum(data, colIdx, grpTxt, "DK_FOR_P04", onIdx, onTxt);
			dkDepFcForP05 = getSum(data, colIdx, grpTxt, "DK_FOR_P05", onIdx, onTxt);
			dkDepFcForP06 = getSum(data, colIdx, grpTxt, "DK_FOR_P06", onIdx, onTxt);
			dkDepFcForP07 = getSum(data, colIdx, grpTxt, "DK_FOR_P07", onIdx, onTxt);
			dkDepFcForP08 = getSum(data, colIdx, grpTxt, "DK_FOR_P08", onIdx, onTxt);
			dkDepFcForP09 = getSum(data, colIdx, grpTxt, "DK_FOR_P09", onIdx, onTxt);
			dkDepFcForP10 = getSum(data, colIdx, grpTxt, "DK_FOR_P10", onIdx, onTxt);
			dkDepFcForP11 = getSum(data, colIdx, grpTxt, "DK_FOR_P11", onIdx, onTxt);
			dkDepFcForP12 = getSum(data, colIdx, grpTxt, "DK_FOR_P12", onIdx, onTxt);
			dkDepFcForQ01 = getSum(data, colIdx, grpTxt, "DK_FOR_Q01", onIdx, onTxt);
			dkDepFcForQ02 = getSum(data, colIdx, grpTxt, "DK_FOR_Q02", onIdx, onTxt);
			dkDepFcForQ03 = getSum(data, colIdx, grpTxt, "DK_FOR_Q03", onIdx, onTxt);
			dkDepFcForQ04 = getSum(data, colIdx, grpTxt, "DK_FOR_Q04", onIdx, onTxt);
			dkDepFcForH01 = getSum(data, colIdx, grpTxt, "DK_FOR_H01", onIdx, onTxt);
			dkDepFcForH02 = getSum(data, colIdx, grpTxt, "DK_FOR_H02", onIdx, onTxt);
			if(ytd_Param.equals("P01")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD01", onIdx, onTxt);
			}else if(ytd_Param.equals("P02")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD02", onIdx, onTxt);
			}else if(ytd_Param.equals("P03")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD03", onIdx, onTxt);
			}else if(ytd_Param.equals("P04")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD04", onIdx, onTxt);
			}else if(ytd_Param.equals("P05")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD05", onIdx, onTxt);
			}else if(ytd_Param.equals("P06")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD06", onIdx, onTxt);
			}else if(ytd_Param.equals("P07")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD07", onIdx, onTxt);
			}else if(ytd_Param.equals("P08")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD08", onIdx, onTxt);
			}else if(ytd_Param.equals("P09")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD09", onIdx, onTxt);
			}else if(ytd_Param.equals("P10")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD10", onIdx, onTxt);
			}else if(ytd_Param.equals("P11")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD11", onIdx, onTxt);
			}else if(ytd_Param.equals("P12")){
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD12", onIdx, onTxt);
			}else{
				dkDepFcForYTD = getSum(data, colIdx, grpTxt, "DK_FOR_YTD12", onIdx, onTxt);
			}
	    	
			dkDepFcOutP01 = getSum(data, colIdx, grpTxt, "DK_OUT_P01", onIdx, onTxt);
			dkDepFcOutP02 = getSum(data, colIdx, grpTxt, "DK_OUT_P02", onIdx, onTxt);
			dkDepFcOutP03 = getSum(data, colIdx, grpTxt, "DK_OUT_P03", onIdx, onTxt);
			dkDepFcOutP04 = getSum(data, colIdx, grpTxt, "DK_OUT_P04", onIdx, onTxt);
			dkDepFcOutP05 = getSum(data, colIdx, grpTxt, "DK_OUT_P05", onIdx, onTxt);
			dkDepFcOutP06 = getSum(data, colIdx, grpTxt, "DK_OUT_P06", onIdx, onTxt);
			dkDepFcOutP07 = getSum(data, colIdx, grpTxt, "DK_OUT_P07", onIdx, onTxt);
			dkDepFcOutP08 = getSum(data, colIdx, grpTxt, "DK_OUT_P08", onIdx, onTxt);
			dkDepFcOutP09 = getSum(data, colIdx, grpTxt, "DK_OUT_P09", onIdx, onTxt);
			dkDepFcOutP10 = getSum(data, colIdx, grpTxt, "DK_OUT_P10", onIdx, onTxt);
			dkDepFcOutP11 = getSum(data, colIdx, grpTxt, "DK_OUT_P11", onIdx, onTxt);
			dkDepFcOutP12 = getSum(data, colIdx, grpTxt, "DK_OUT_P12", onIdx, onTxt);
			dkDepFcOutQ01 = getSum(data, colIdx, grpTxt, "DK_OUT_Q01", onIdx, onTxt);
			dkDepFcOutQ02 = getSum(data, colIdx, grpTxt, "DK_OUT_Q02", onIdx, onTxt);
			dkDepFcOutQ03 = getSum(data, colIdx, grpTxt, "DK_OUT_Q03", onIdx, onTxt);
			dkDepFcOutQ04 = getSum(data, colIdx, grpTxt, "DK_OUT_Q04", onIdx, onTxt);
			dkDepFcOutH01 = getSum(data, colIdx, grpTxt, "DK_OUT_H01", onIdx, onTxt);
			dkDepFcOutH02 = getSum(data, colIdx, grpTxt, "DK_OUT_H02", onIdx, onTxt);
			if(ytd_Param.equals("P01")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD01", onIdx, onTxt);
			}else if(ytd_Param.equals("P02")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD02", onIdx, onTxt);
			}else if(ytd_Param.equals("P03")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD03", onIdx, onTxt);
			}else if(ytd_Param.equals("P04")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD04", onIdx, onTxt);
			}else if(ytd_Param.equals("P05")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD05", onIdx, onTxt);
			}else if(ytd_Param.equals("P06")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD06", onIdx, onTxt);
			}else if(ytd_Param.equals("P07")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD07", onIdx, onTxt);
			}else if(ytd_Param.equals("P08")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD08", onIdx, onTxt);
			}else if(ytd_Param.equals("P09")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD09", onIdx, onTxt);
			}else if(ytd_Param.equals("P10")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD10", onIdx, onTxt);
			}else if(ytd_Param.equals("P11")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD11", onIdx, onTxt);
			}else if(ytd_Param.equals("P12")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD12", onIdx, onTxt);
			}else{
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD12", onIdx, onTxt);
			}
					
			dkDepFcTgP01 = getSum(data, colIdx, grpTxt, "DK_TG_P01", onIdx, onTxt);
			dkDepFcTgP02 = getSum(data, colIdx, grpTxt, "DK_TG_P02", onIdx, onTxt);
			dkDepFcTgP03 = getSum(data, colIdx, grpTxt, "DK_TG_P03", onIdx, onTxt);
			dkDepFcTgP04 = getSum(data, colIdx, grpTxt, "DK_TG_P04", onIdx, onTxt);
			dkDepFcTgP05 = getSum(data, colIdx, grpTxt, "DK_TG_P05", onIdx, onTxt);
			dkDepFcTgP06 = getSum(data, colIdx, grpTxt, "DK_TG_P06", onIdx, onTxt);
			dkDepFcTgP07 = getSum(data, colIdx, grpTxt, "DK_TG_P07", onIdx, onTxt);
			dkDepFcTgP08 = getSum(data, colIdx, grpTxt, "DK_TG_P08", onIdx, onTxt);
			dkDepFcTgP09 = getSum(data, colIdx, grpTxt, "DK_TG_P09", onIdx, onTxt);
			dkDepFcTgP10 = getSum(data, colIdx, grpTxt, "DK_TG_P10", onIdx, onTxt);
			dkDepFcTgP11 = getSum(data, colIdx, grpTxt, "DK_TG_P11", onIdx, onTxt);
			dkDepFcTgP12 = getSum(data, colIdx, grpTxt, "DK_TG_P12", onIdx, onTxt);
			dkDepFcTgQ01 = getSum(data, colIdx, grpTxt, "DK_TG_Q01", onIdx, onTxt);
			dkDepFcTgQ02 = getSum(data, colIdx, grpTxt, "DK_TG_Q02", onIdx, onTxt);
			dkDepFcTgQ03 = getSum(data, colIdx, grpTxt, "DK_TG_Q03", onIdx, onTxt);
			dkDepFcTgQ04 = getSum(data, colIdx, grpTxt, "DK_TG_Q04", onIdx, onTxt);
			dkDepFcTgH01 = getSum(data, colIdx, grpTxt, "DK_TG_H01", onIdx, onTxt);
			dkDepFcTgH02 = getSum(data, colIdx, grpTxt, "DK_TG_H02", onIdx, onTxt);
			if(ytd_Param.equals("P01")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD01", onIdx, onTxt);
			}else if(ytd_Param.equals("P02")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD02", onIdx, onTxt);
			}else if(ytd_Param.equals("P03")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD03", onIdx, onTxt);
			}else if(ytd_Param.equals("P04")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD04", onIdx, onTxt);
			}else if(ytd_Param.equals("P05")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD05", onIdx, onTxt);
			}else if(ytd_Param.equals("P06")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD06", onIdx, onTxt);
			}else if(ytd_Param.equals("P07")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD07", onIdx, onTxt);
			}else if(ytd_Param.equals("P08")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD08", onIdx, onTxt);
			}else if(ytd_Param.equals("P09")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD09", onIdx, onTxt);
			}else if(ytd_Param.equals("P10")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD10", onIdx, onTxt);
			}else if(ytd_Param.equals("P11")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD11", onIdx, onTxt);
			}else if(ytd_Param.equals("P12")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD12", onIdx, onTxt);
			}else{
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD12", onIdx, onTxt);
			}
			
		}
					
					
		if(periodChk_Param.equals("Y")){
			
			for(int i=4; i<42; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(dkDepFcAcP01);
			row.getCell(5).setCellValue(dkDepFcAcP02);
			row.getCell(6).setCellValue(dkDepFcAcP03);
			row.getCell(7).setCellValue(dkDepFcAcP04);
			row.getCell(8).setCellValue(dkDepFcAcP05);
			row.getCell(9).setCellValue(dkDepFcAcP06);
			row.getCell(10).setCellValue(dkDepFcAcP07);
			row.getCell(11).setCellValue(dkDepFcAcP08);
	    	row.getCell(12).setCellValue(dkDepFcAcP09);
	    	row.getCell(13).setCellValue(dkDepFcAcP10);
	    	row.getCell(14).setCellValue(dkDepFcAcP11);
	    	row.getCell(15).setCellValue(dkDepFcAcP12);
	    	row.getCell(16).setCellValue(dkDepFcAcQ01);
	    	row.getCell(17).setCellValue(dkDepFcAcQ02);
	    	row.getCell(18).setCellValue(dkDepFcAcQ03);
	    	row.getCell(19).setCellValue(dkDepFcAcQ04);
	    	row.getCell(20).setCellValue(dkDepFcAcH01);
	    	row.getCell(21).setCellValue(dkDepFcAcH02);
	    	row.getCell(22).setCellValue(dkDepFcAcYTD);
	    	row.getCell(23).setCellValue(dkDepFcForP01);
	    	row.getCell(24).setCellValue(dkDepFcForP02);
	    	row.getCell(25).setCellValue(dkDepFcForP03);
	    	row.getCell(26).setCellValue(dkDepFcForP04);
	    	row.getCell(27).setCellValue(dkDepFcForP05);
	    	row.getCell(28).setCellValue(dkDepFcForP06);
	    	row.getCell(29).setCellValue(dkDepFcForP07);
	    	row.getCell(30).setCellValue(dkDepFcForP08);
	    	row.getCell(31).setCellValue(dkDepFcForP09);
	    	row.getCell(32).setCellValue(dkDepFcForP10);
	    	row.getCell(33).setCellValue(dkDepFcForP11);
	    	row.getCell(34).setCellValue(dkDepFcForP12);
	    	row.getCell(35).setCellValue(dkDepFcForQ01);
	    	row.getCell(36).setCellValue(dkDepFcForQ02);
	    	row.getCell(37).setCellValue(dkDepFcForQ03);
	    	row.getCell(38).setCellValue(dkDepFcForQ04);
	    	row.getCell(39).setCellValue(dkDepFcForH01);
	    	row.getCell(40).setCellValue(dkDepFcForH02);
	    	row.getCell(41).setCellValue(dkDepFcForYTD);
    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=4; i<16; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(dkDepFcAcP01);
			row.getCell(5).setCellValue(dkDepFcAcP02);
			row.getCell(6).setCellValue(dkDepFcAcP03);
	    	row.getCell(7).setCellValue(dkDepFcAcQ01);
	    	row.getCell(8).setCellValue(dkDepFcAcH01);
	    	row.getCell(9).setCellValue(dkDepFcAcYTD);
	    	row.getCell(10).setCellValue(dkDepFcForP01);
	    	row.getCell(11).setCellValue(dkDepFcForP02);
	    	row.getCell(12).setCellValue(dkDepFcForP03);
	    	row.getCell(13).setCellValue(dkDepFcForQ01);
	    	row.getCell(14).setCellValue(dkDepFcForH01);
	    	row.getCell(15).setCellValue(dkDepFcForYTD);
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=4; i<18; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(dkDepFcAcP04);
			row.getCell(5).setCellValue(dkDepFcAcP05);
			row.getCell(6).setCellValue(dkDepFcAcP06);
	    	row.getCell(7).setCellValue(dkDepFcAcQ01);
	    	row.getCell(8).setCellValue(dkDepFcAcQ02);
	    	row.getCell(9).setCellValue(dkDepFcAcH01);
	    	row.getCell(10).setCellValue(dkDepFcAcYTD);
	    	row.getCell(11).setCellValue(dkDepFcForP04);
	    	row.getCell(12).setCellValue(dkDepFcForP05);
	    	row.getCell(13).setCellValue(dkDepFcForP06);
	    	row.getCell(14).setCellValue(dkDepFcForQ01);
	    	row.getCell(15).setCellValue(dkDepFcForQ02);
	    	row.getCell(16).setCellValue(dkDepFcForH01);
	    	row.getCell(17).setCellValue(dkDepFcForYTD);
	    	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(dkDepFcAcP07);
			row.getCell(5).setCellValue(dkDepFcAcP08);
	    	row.getCell(6).setCellValue(dkDepFcAcP09);
	    	row.getCell(7).setCellValue(dkDepFcAcQ02);
	    	row.getCell(8).setCellValue(dkDepFcAcQ03);
	    	row.getCell(9).setCellValue(dkDepFcAcH01);
	    	row.getCell(10).setCellValue(dkDepFcAcH02);
	    	row.getCell(11).setCellValue(dkDepFcAcYTD);
	    	row.getCell(12).setCellValue(dkDepFcForP07);
	    	row.getCell(13).setCellValue(dkDepFcForP08);
	    	row.getCell(14).setCellValue(dkDepFcForP09);
	    	row.getCell(15).setCellValue(dkDepFcForQ02);
	    	row.getCell(16).setCellValue(dkDepFcForQ03);
	    	row.getCell(17).setCellValue(dkDepFcForH01);
	    	row.getCell(18).setCellValue(dkDepFcForH02);
	    	row.getCell(19).setCellValue(dkDepFcForYTD);
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(dkDepFcAcP10);
			row.getCell(5).setCellValue(dkDepFcAcP11);
	    	row.getCell(6).setCellValue(dkDepFcAcP12);
	    	row.getCell(7).setCellValue(dkDepFcAcQ03);
	    	row.getCell(8).setCellValue(dkDepFcAcQ04);
	    	row.getCell(9).setCellValue(dkDepFcAcH01);
	    	row.getCell(10).setCellValue(dkDepFcAcH02);
	    	row.getCell(11).setCellValue(dkDepFcAcYTD);
	    	row.getCell(12).setCellValue(dkDepFcForP10);
	    	row.getCell(13).setCellValue(dkDepFcForP11);
	    	row.getCell(14).setCellValue(dkDepFcForP12);
	    	row.getCell(15).setCellValue(dkDepFcForQ03);
	    	row.getCell(16).setCellValue(dkDepFcForQ04);
	    	row.getCell(17).setCellValue(dkDepFcForH01);
	    	row.getCell(18).setCellValue(dkDepFcForH02);
	    	row.getCell(19).setCellValue(dkDepFcForYTD);
	    	
		}
    	
		// F15 SOM 계산식을 위해 리스트에 값을 담아준다.
		if(!grpTxt.equals("Non Whisky") || !(colIdx.equals("")&&grpTxt.equals("")&&onIdx.equals("")&&onTxt.equals(""))){
			
			dkDeplMap = new HashMap();
	    	
	    	dkDeplMap.put("STYLETXT", styleTxt);
	    	if((colIdx.equals("") && grpTxt.equals("") && onIdx.equals("") && onTxt.equals("")) || (colIdx.equals("DATALV1_NM") && grpTxt.equals("Non Whisky")&& onIdx.equals("") && onTxt.equals(""))){
	    		dkDeplMap.put("TOTAL", "TOTAL");
	    	}else{
	    		dkDeplMap.put("TOTAL", "");
	    	}
	    	
	    	dkDeplMap.put("DK_AC_P01", dkDepFcAcP01);
			dkDeplMap.put("DK_AC_P02", dkDepFcAcP02);
			dkDeplMap.put("DK_AC_P03", dkDepFcAcP03);
			dkDeplMap.put("DK_AC_P04", dkDepFcAcP04);
			dkDeplMap.put("DK_AC_P05", dkDepFcAcP05);
			dkDeplMap.put("DK_AC_P06", dkDepFcAcP06);
			dkDeplMap.put("DK_AC_P07", dkDepFcAcP07);
			dkDeplMap.put("DK_AC_P08", dkDepFcAcP08);
			dkDeplMap.put("DK_AC_P09", dkDepFcAcP09);
			dkDeplMap.put("DK_AC_P10", dkDepFcAcP10);
			dkDeplMap.put("DK_AC_P11", dkDepFcAcP11);
			dkDeplMap.put("DK_AC_P12", dkDepFcAcP12);
			dkDeplMap.put("DK_AC_Q01", dkDepFcAcQ01);
			dkDeplMap.put("DK_AC_Q02", dkDepFcAcQ02);
			dkDeplMap.put("DK_AC_Q03", dkDepFcAcQ03);
			dkDeplMap.put("DK_AC_Q04", dkDepFcAcQ04);
			dkDeplMap.put("DK_AC_H01", dkDepFcAcH01);
			dkDeplMap.put("DK_AC_H02", dkDepFcAcH02);
			dkDeplMap.put("DK_AC_YTD", dkDepFcAcYTD);
			
			dkDeplMap.put("DK_FOR_P01", dkDepFcForP01);
			dkDeplMap.put("DK_FOR_P02", dkDepFcForP02);
			dkDeplMap.put("DK_FOR_P03", dkDepFcForP03);
			dkDeplMap.put("DK_FOR_P04", dkDepFcForP04);
			dkDeplMap.put("DK_FOR_P05", dkDepFcForP05);
			dkDeplMap.put("DK_FOR_P06", dkDepFcForP06);
			dkDeplMap.put("DK_FOR_P07", dkDepFcForP07);
			dkDeplMap.put("DK_FOR_P08", dkDepFcForP08);
			dkDeplMap.put("DK_FOR_P09", dkDepFcForP09);
			dkDeplMap.put("DK_FOR_P10", dkDepFcForP10);
			dkDeplMap.put("DK_FOR_P11", dkDepFcForP11);
			dkDeplMap.put("DK_FOR_P12", dkDepFcForP12);
			dkDeplMap.put("DK_FOR_Q01", dkDepFcForQ01);
			dkDeplMap.put("DK_FOR_Q02", dkDepFcForQ02);
			dkDeplMap.put("DK_FOR_Q03", dkDepFcForQ03);
			dkDeplMap.put("DK_FOR_Q04", dkDepFcForQ04);
			dkDeplMap.put("DK_FOR_H01", dkDepFcForH01);
			dkDeplMap.put("DK_FOR_H02", dkDepFcForH02);
			dkDeplMap.put("DK_FOR_YTD", dkDepFcForYTD);
			
			dkDeplMap.put("DK_OUT_P01", dkDepFcOutP01);
			dkDeplMap.put("DK_OUT_P02", dkDepFcOutP02);
			dkDeplMap.put("DK_OUT_P03", dkDepFcOutP03);
			dkDeplMap.put("DK_OUT_P04", dkDepFcOutP04);
			dkDeplMap.put("DK_OUT_P05", dkDepFcOutP05);
			dkDeplMap.put("DK_OUT_P06", dkDepFcOutP06);
			dkDeplMap.put("DK_OUT_P07", dkDepFcOutP07);
			dkDeplMap.put("DK_OUT_P08", dkDepFcOutP08);
			dkDeplMap.put("DK_OUT_P09", dkDepFcOutP09);
			dkDeplMap.put("DK_OUT_P10", dkDepFcOutP10);
			dkDeplMap.put("DK_OUT_P11", dkDepFcOutP11);
			dkDeplMap.put("DK_OUT_P12", dkDepFcOutP12);
			dkDeplMap.put("DK_OUT_Q01", dkDepFcOutQ01);
			dkDeplMap.put("DK_OUT_Q02", dkDepFcOutQ02);
			dkDeplMap.put("DK_OUT_Q03", dkDepFcOutQ03);
			dkDeplMap.put("DK_OUT_Q04", dkDepFcOutQ04);
			dkDeplMap.put("DK_OUT_H01", dkDepFcOutH01);
			dkDeplMap.put("DK_OUT_H02", dkDepFcOutH02);
			dkDeplMap.put("DK_OUT_YTD", dkDepFcOutYTD);
			dkDeplMap.put("DK_TG_P01", dkDepFcTgP01);
			dkDeplMap.put("DK_TG_P02", dkDepFcTgP02);
			dkDeplMap.put("DK_TG_P03", dkDepFcTgP03);
			dkDeplMap.put("DK_TG_P04", dkDepFcTgP04);
			dkDeplMap.put("DK_TG_P05", dkDepFcTgP05);
			dkDeplMap.put("DK_TG_P06", dkDepFcTgP06);
			dkDeplMap.put("DK_TG_P07", dkDepFcTgP07);
			dkDeplMap.put("DK_TG_P08", dkDepFcTgP08);
			dkDeplMap.put("DK_TG_P09", dkDepFcTgP09);
			dkDeplMap.put("DK_TG_P10", dkDepFcTgP10);
			dkDeplMap.put("DK_TG_P11", dkDepFcTgP11);
			dkDeplMap.put("DK_TG_P12", dkDepFcTgP12);
			dkDeplMap.put("DK_TG_Q01", dkDepFcTgQ01);
			dkDeplMap.put("DK_TG_Q02", dkDepFcTgQ02);
			dkDeplMap.put("DK_TG_Q03", dkDepFcTgQ03);
			dkDeplMap.put("DK_TG_Q04", dkDepFcTgQ04);
			dkDeplMap.put("DK_TG_H01", dkDepFcTgH01);
			dkDeplMap.put("DK_TG_H02", dkDepFcTgH02);
			dkDeplMap.put("DK_TG_YTD", dkDepFcTgYTD);
			
			dkDepl.add(dkDeplMap);
			
		}
		
		
		// 나머지 계산식을 위해 리스트에 값을 담아준다.
		dkDeplMap2 = new HashMap();
    	
    	dkDeplMap2.put("STYLETXT", styleTxt);
    	if((colIdx.equals("") && grpTxt.equals("") && onIdx.equals("") && onTxt.equals("")) || (colIdx.equals("DATALV1_NM") && grpTxt.equals("Non Whisky")&& onIdx.equals("") && onTxt.equals(""))){
    		dkDeplMap2.put("TOTAL", "TOTAL");
    	}else{
    		dkDeplMap2.put("TOTAL", "");
    	}
    	
    	dkDeplMap2.put("DK_AC_P01", dkDepFcAcP01);
		dkDeplMap2.put("DK_AC_P02", dkDepFcAcP02);
		dkDeplMap2.put("DK_AC_P03", dkDepFcAcP03);
		dkDeplMap2.put("DK_AC_P04", dkDepFcAcP04);
		dkDeplMap2.put("DK_AC_P05", dkDepFcAcP05);
		dkDeplMap2.put("DK_AC_P06", dkDepFcAcP06);
		dkDeplMap2.put("DK_AC_P07", dkDepFcAcP07);
		dkDeplMap2.put("DK_AC_P08", dkDepFcAcP08);
		dkDeplMap2.put("DK_AC_P09", dkDepFcAcP09);
		dkDeplMap2.put("DK_AC_P10", dkDepFcAcP10);
		dkDeplMap2.put("DK_AC_P11", dkDepFcAcP11);
		dkDeplMap2.put("DK_AC_P12", dkDepFcAcP12);
		dkDeplMap2.put("DK_AC_Q01", dkDepFcAcQ01);
		dkDeplMap2.put("DK_AC_Q02", dkDepFcAcQ02);
		dkDeplMap2.put("DK_AC_Q03", dkDepFcAcQ03);
		dkDeplMap2.put("DK_AC_Q04", dkDepFcAcQ04);
		dkDeplMap2.put("DK_AC_H01", dkDepFcAcH01);
		dkDeplMap2.put("DK_AC_H02", dkDepFcAcH02);
		dkDeplMap2.put("DK_AC_YTD", dkDepFcAcYTD);
		
		dkDeplMap2.put("DK_FOR_P01", dkDepFcForP01);
		dkDeplMap2.put("DK_FOR_P02", dkDepFcForP02);
		dkDeplMap2.put("DK_FOR_P03", dkDepFcForP03);
		dkDeplMap2.put("DK_FOR_P04", dkDepFcForP04);
		dkDeplMap2.put("DK_FOR_P05", dkDepFcForP05);
		dkDeplMap2.put("DK_FOR_P06", dkDepFcForP06);
		dkDeplMap2.put("DK_FOR_P07", dkDepFcForP07);
		dkDeplMap2.put("DK_FOR_P08", dkDepFcForP08);
		dkDeplMap2.put("DK_FOR_P09", dkDepFcForP09);
		dkDeplMap2.put("DK_FOR_P10", dkDepFcForP10);
		dkDeplMap2.put("DK_FOR_P11", dkDepFcForP11);
		dkDeplMap2.put("DK_FOR_P12", dkDepFcForP12);
		dkDeplMap2.put("DK_FOR_Q01", dkDepFcForQ01);
		dkDeplMap2.put("DK_FOR_Q02", dkDepFcForQ02);
		dkDeplMap2.put("DK_FOR_Q03", dkDepFcForQ03);
		dkDeplMap2.put("DK_FOR_Q04", dkDepFcForQ04);
		dkDeplMap2.put("DK_FOR_H01", dkDepFcForH01);
		dkDeplMap2.put("DK_FOR_H02", dkDepFcForH02);
		dkDeplMap2.put("DK_FOR_YTD", dkDepFcForYTD);
		
		dkDeplMap2.put("DK_OUT_P01", dkDepFcOutP01);
		dkDeplMap2.put("DK_OUT_P02", dkDepFcOutP02);
		dkDeplMap2.put("DK_OUT_P03", dkDepFcOutP03);
		dkDeplMap2.put("DK_OUT_P04", dkDepFcOutP04);
		dkDeplMap2.put("DK_OUT_P05", dkDepFcOutP05);
		dkDeplMap2.put("DK_OUT_P06", dkDepFcOutP06);
		dkDeplMap2.put("DK_OUT_P07", dkDepFcOutP07);
		dkDeplMap2.put("DK_OUT_P08", dkDepFcOutP08);
		dkDeplMap2.put("DK_OUT_P09", dkDepFcOutP09);
		dkDeplMap2.put("DK_OUT_P10", dkDepFcOutP10);
		dkDeplMap2.put("DK_OUT_P11", dkDepFcOutP11);
		dkDeplMap2.put("DK_OUT_P12", dkDepFcOutP12);
		dkDeplMap2.put("DK_OUT_Q01", dkDepFcOutQ01);
		dkDeplMap2.put("DK_OUT_Q02", dkDepFcOutQ02);
		dkDeplMap2.put("DK_OUT_Q03", dkDepFcOutQ03);
		dkDeplMap2.put("DK_OUT_Q04", dkDepFcOutQ04);
		dkDeplMap2.put("DK_OUT_H01", dkDepFcOutH01);
		dkDeplMap2.put("DK_OUT_H02", dkDepFcOutH02);
		dkDeplMap2.put("DK_OUT_YTD", dkDepFcOutYTD);
		
		dkDeplMap2.put("DK_TG_P01", dkDepFcTgP01);
		dkDeplMap2.put("DK_TG_P02", dkDepFcTgP02);
		dkDeplMap2.put("DK_TG_P03", dkDepFcTgP03);
		dkDeplMap2.put("DK_TG_P04", dkDepFcTgP04);
		dkDeplMap2.put("DK_TG_P05", dkDepFcTgP05);
		dkDeplMap2.put("DK_TG_P06", dkDepFcTgP06);
		dkDeplMap2.put("DK_TG_P07", dkDepFcTgP07);
		dkDeplMap2.put("DK_TG_P08", dkDepFcTgP08);
		dkDeplMap2.put("DK_TG_P09", dkDepFcTgP09);
		dkDeplMap2.put("DK_TG_P10", dkDepFcTgP10);
		dkDeplMap2.put("DK_TG_P11", dkDepFcTgP11);
		dkDeplMap2.put("DK_TG_P12", dkDepFcTgP12);
		dkDeplMap2.put("DK_TG_Q01", dkDepFcTgQ01);
		dkDeplMap2.put("DK_TG_Q02", dkDepFcTgQ02);
		dkDeplMap2.put("DK_TG_Q03", dkDepFcTgQ03);
		dkDeplMap2.put("DK_TG_Q04", dkDepFcTgQ04);
		dkDeplMap2.put("DK_TG_H01", dkDepFcTgH01);
		dkDeplMap2.put("DK_TG_H02", dkDepFcTgH02);
		dkDeplMap2.put("DK_TG_YTD", dkDepFcTgYTD);
		
		dkDepl2.add(dkDeplMap2);
		
	}
	
	
	/*
	 * Description: DK Depletion Target 4~41번째 컬럼의 입력값을 셀에 입력
	 */
	public void setRowValue3(HSSFRow row, CellStyle style, Map rowData, String styleTxt) {
		
		if(periodChk_Param.equals("Y")){
			
			for(int i=4; i<42; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P01").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P02").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P03").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P04").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P05").toString()));
	    	row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P06").toString()));
	    	row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P07").toString()));
	    	row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P08").toString()));
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P09").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P10").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P11").toString()));
	    	row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P12").toString()));
	    	row.getCell(16).setCellValue(Double.parseDouble(rowData.get("DK_OUT_Q01").toString()));
	    	row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_OUT_Q02").toString()));
	    	row.getCell(18).setCellValue(Double.parseDouble(rowData.get("DK_OUT_Q03").toString()));
	    	row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_OUT_Q04").toString()));
	    	row.getCell(20).setCellValue(Double.parseDouble(rowData.get("DK_OUT_H01").toString()));
	    	row.getCell(21).setCellValue(Double.parseDouble(rowData.get("DK_OUT_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD12").toString()));
			}else{
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD12").toString()));
			}
	    	row.getCell(23).setCellValue(Double.parseDouble(rowData.get("DK_TG_P01").toString()));
	    	row.getCell(24).setCellValue(Double.parseDouble(rowData.get("DK_TG_P02").toString()));
	    	row.getCell(25).setCellValue(Double.parseDouble(rowData.get("DK_TG_P03").toString()));
	    	row.getCell(26).setCellValue(Double.parseDouble(rowData.get("DK_TG_P04").toString()));
	    	row.getCell(27).setCellValue(Double.parseDouble(rowData.get("DK_TG_P05").toString()));
	    	row.getCell(28).setCellValue(Double.parseDouble(rowData.get("DK_TG_P06").toString()));
	    	row.getCell(29).setCellValue(Double.parseDouble(rowData.get("DK_TG_P07").toString()));
	    	row.getCell(30).setCellValue(Double.parseDouble(rowData.get("DK_TG_P08").toString()));
	    	row.getCell(31).setCellValue(Double.parseDouble(rowData.get("DK_TG_P09").toString()));
	    	row.getCell(32).setCellValue(Double.parseDouble(rowData.get("DK_TG_P10").toString()));
	    	row.getCell(33).setCellValue(Double.parseDouble(rowData.get("DK_TG_P11").toString()));
	    	row.getCell(34).setCellValue(Double.parseDouble(rowData.get("DK_TG_P12").toString()));
	    	row.getCell(35).setCellValue(Double.parseDouble(rowData.get("DK_TG_Q01").toString()));
	    	row.getCell(36).setCellValue(Double.parseDouble(rowData.get("DK_TG_Q02").toString()));
	    	row.getCell(37).setCellValue(Double.parseDouble(rowData.get("DK_TG_Q03").toString()));
	    	row.getCell(38).setCellValue(Double.parseDouble(rowData.get("DK_TG_Q04").toString()));
	    	row.getCell(39).setCellValue(Double.parseDouble(rowData.get("DK_TG_H01").toString()));
	    	row.getCell(40).setCellValue(Double.parseDouble(rowData.get("DK_TG_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD12").toString()));
			}else{
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD12").toString()));
			}
    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=4; i<16; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P01").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P02").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P03").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("DK_OUT_Q01").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("DK_OUT_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD12").toString()));
			}else{
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD12").toString()));
			}
	    	row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_TG_P01").toString()));
	    	row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_TG_P02").toString()));
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("DK_TG_P03").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("DK_TG_Q01").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("DK_TG_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD12").toString()));
			}else{
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD12").toString()));
			}
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=4; i<18; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P04").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P05").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P06").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("DK_OUT_Q01").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("DK_OUT_Q02").toString()));
	    	row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_OUT_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD12").toString()));
			}else{
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD12").toString()));
			}
	    	row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_TG_P04").toString()));
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("DK_TG_P05").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("DK_TG_P06").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("DK_TG_Q01").toString()));
	    	row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_TG_Q02").toString()));
	    	row.getCell(16).setCellValue(Double.parseDouble(rowData.get("DK_TG_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD12").toString()));
			}else{
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD12").toString()));
			}
	    	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P07").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P08").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P09").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("DK_OUT_Q02").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("DK_OUT_Q03").toString()));
	    	row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_OUT_H01").toString()));
	    	row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_OUT_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD12").toString()));
			}else{
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD12").toString()));
			}
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("DK_TG_P07").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("DK_TG_P08").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("DK_TG_P09").toString()));
	    	row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_TG_Q02").toString()));
	    	row.getCell(16).setCellValue(Double.parseDouble(rowData.get("DK_TG_Q03").toString()));
	    	row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_TG_H01").toString()));
	    	row.getCell(18).setCellValue(Double.parseDouble(rowData.get("DK_TG_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD12").toString()));
			}else{
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD12").toString()));
			}
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P10").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P11").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("DK_OUT_P12").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("DK_OUT_Q03").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("DK_OUT_Q04").toString()));
	    	row.getCell(9).setCellValue(Double.parseDouble(rowData.get("DK_OUT_H01").toString()));
	    	row.getCell(10).setCellValue(Double.parseDouble(rowData.get("DK_OUT_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD12").toString()));
			}else{
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("DK_OUT_YTD12").toString()));
			}
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("DK_TG_P10").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("DK_TG_P11").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("DK_TG_P12").toString()));
	    	row.getCell(15).setCellValue(Double.parseDouble(rowData.get("DK_TG_Q03").toString()));
	    	row.getCell(16).setCellValue(Double.parseDouble(rowData.get("DK_TG_Q04").toString()));
	    	row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DK_TG_H01").toString()));
	    	row.getCell(18).setCellValue(Double.parseDouble(rowData.get("DK_TG_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD12").toString()));
			}else{
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DK_TG_YTD12").toString()));
			}
	    	
		}
	}
	
	/*
	 * Description: DK Depletion Target 4~41번째 컬럼의 소계, 합계를 자동 계산하여 셀에 입력
	 */
	public void setRowSumValue3(HSSFRow row, CellStyle style, List data, String colIdx, String grpTxt, String onIdx, String onTxt, String styleTxt) {
		
		// Whisky Off Local합계, Int`l 합계
		if(onTxt.equals("OFF") && colIdx.equals("DATALV3_NM")){
			
			dkDepFcOutP01 = getSum(data, colIdx, grpTxt, "DK_OUT_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P01", "DATALV2_NM", "OFF");
			dkDepFcOutP02 = getSum(data, colIdx, grpTxt, "DK_OUT_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P02", "DATALV2_NM", "OFF");
			dkDepFcOutP03 = getSum(data, colIdx, grpTxt, "DK_OUT_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P03", "DATALV2_NM", "OFF");
			dkDepFcOutP04 = getSum(data, colIdx, grpTxt, "DK_OUT_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P04", "DATALV2_NM", "OFF");
			dkDepFcOutP05 = getSum(data, colIdx, grpTxt, "DK_OUT_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P05", "DATALV2_NM", "OFF");
			dkDepFcOutP06 = getSum(data, colIdx, grpTxt, "DK_OUT_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P06", "DATALV2_NM", "OFF");
			dkDepFcOutP07 = getSum(data, colIdx, grpTxt, "DK_OUT_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P07", "DATALV2_NM", "OFF");
			dkDepFcOutP08 = getSum(data, colIdx, grpTxt, "DK_OUT_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P08", "DATALV2_NM", "OFF");
			dkDepFcOutP09 = getSum(data, colIdx, grpTxt, "DK_OUT_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P09", "DATALV2_NM", "OFF");
			dkDepFcOutP10 = getSum(data, colIdx, grpTxt, "DK_OUT_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P10", "DATALV2_NM", "OFF");
			dkDepFcOutP11 = getSum(data, colIdx, grpTxt, "DK_OUT_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P11", "DATALV2_NM", "OFF");
			dkDepFcOutP12 = getSum(data, colIdx, grpTxt, "DK_OUT_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P12", "DATALV2_NM", "OFF");
			dkDepFcOutQ01 = getSum(data, colIdx, grpTxt, "DK_OUT_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_Q01", "DATALV2_NM", "OFF");
			dkDepFcOutQ02 = getSum(data, colIdx, grpTxt, "DK_OUT_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_Q02", "DATALV2_NM", "OFF");
			dkDepFcOutQ03 = getSum(data, colIdx, grpTxt, "DK_OUT_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_Q03", "DATALV2_NM", "OFF");
			dkDepFcOutQ04 = getSum(data, colIdx, grpTxt, "DK_OUT_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_Q04", "DATALV2_NM", "OFF");
			dkDepFcOutH01 = getSum(data, colIdx, grpTxt, "DK_OUT_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_H01", "DATALV2_NM", "OFF");
			dkDepFcOutH02 = getSum(data, colIdx, grpTxt, "DK_OUT_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_H02", "DATALV2_NM", "OFF");
			if(ytd_Param.equals("P01")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD01", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P02")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD02", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P03")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD03", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P04")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD04", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P05")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD05", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P06")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD06", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P07")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD07", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P08")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD08", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P09")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD09", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P10")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD10", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P11")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD11", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P12")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD12", "DATALV2_NM", "OFF");
			}else{
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD12", "DATALV2_NM", "OFF");
			}
			
			dkDepFcTgP01 = getSum(data, colIdx, grpTxt, "DK_TG_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P01", "DATALV2_NM", "OFF");
			dkDepFcTgP02 = getSum(data, colIdx, grpTxt, "DK_TG_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P02", "DATALV2_NM", "OFF");
			dkDepFcTgP03 = getSum(data, colIdx, grpTxt, "DK_TG_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P03", "DATALV2_NM", "OFF");
			dkDepFcTgP04 = getSum(data, colIdx, grpTxt, "DK_TG_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P04", "DATALV2_NM", "OFF");
			dkDepFcTgP05 = getSum(data, colIdx, grpTxt, "DK_TG_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P05", "DATALV2_NM", "OFF");
			dkDepFcTgP06 = getSum(data, colIdx, grpTxt, "DK_TG_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P06", "DATALV2_NM", "OFF");
			dkDepFcTgP07 = getSum(data, colIdx, grpTxt, "DK_TG_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P07", "DATALV2_NM", "OFF");
			dkDepFcTgP08 = getSum(data, colIdx, grpTxt, "DK_TG_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P08", "DATALV2_NM", "OFF");
			dkDepFcTgP09 = getSum(data, colIdx, grpTxt, "DK_TG_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P09", "DATALV2_NM", "OFF");
			dkDepFcTgP10 = getSum(data, colIdx, grpTxt, "DK_TG_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P10", "DATALV2_NM", "OFF");
			dkDepFcTgP11 = getSum(data, colIdx, grpTxt, "DK_TG_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P11", "DATALV2_NM", "OFF");
			dkDepFcTgP12 = getSum(data, colIdx, grpTxt, "DK_TG_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P12", "DATALV2_NM", "OFF");
			dkDepFcTgQ01 = getSum(data, colIdx, grpTxt, "DK_TG_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_Q01", "DATALV2_NM", "OFF");
			dkDepFcTgQ02 = getSum(data, colIdx, grpTxt, "DK_TG_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_Q02", "DATALV2_NM", "OFF");
			dkDepFcTgQ03 = getSum(data, colIdx, grpTxt, "DK_TG_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_Q03", "DATALV2_NM", "OFF");
			dkDepFcTgQ04 = getSum(data, colIdx, grpTxt, "DK_TG_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_Q04", "DATALV2_NM", "OFF");
			dkDepFcTgH01 = getSum(data, colIdx, grpTxt, "DK_TG_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_H01", "DATALV2_NM", "OFF");
			dkDepFcTgH02 = getSum(data, colIdx, grpTxt, "DK_TG_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_H02", "DATALV2_NM", "OFF");
			if(ytd_Param.equals("P01")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD01", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P02")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD02", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P03")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD03", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P04")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD04", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P05")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD05", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P06")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD06", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P07")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD07", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P08")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD08", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P09")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD09", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P10")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD10", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P11")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD11", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P12")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD12", "DATALV2_NM", "OFF");
			}else{
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD12", "DATALV2_NM", "OFF");
			}
		
		// Whisky Off Total (excl Military)
		}else if(onTxt.equals("OFF") && colIdx.equals("")){
			
			dkDepFcOutP01 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P01", "DATALV2_NM", "OFF");
			dkDepFcOutP02 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P02", "DATALV2_NM", "OFF");
			dkDepFcOutP03 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P03", "DATALV2_NM", "OFF");
			dkDepFcOutP04 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P04", "DATALV2_NM", "OFF");
			dkDepFcOutP05 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P05", "DATALV2_NM", "OFF");
			dkDepFcOutP06 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P06", "DATALV2_NM", "OFF");
			dkDepFcOutP07 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P07", "DATALV2_NM", "OFF");
			dkDepFcOutP08 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P08", "DATALV2_NM", "OFF");
			dkDepFcOutP09 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P09", "DATALV2_NM", "OFF");
			dkDepFcOutP10 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P10", "DATALV2_NM", "OFF");
			dkDepFcOutP11 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P11", "DATALV2_NM", "OFF");
			dkDepFcOutP12 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_P12", "DATALV2_NM", "OFF");
			dkDepFcOutQ01 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_Q01", "DATALV2_NM", "OFF");
			dkDepFcOutQ02 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_Q02", "DATALV2_NM", "OFF");
			dkDepFcOutQ03 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_Q03", "DATALV2_NM", "OFF");
			dkDepFcOutQ04 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_Q04", "DATALV2_NM", "OFF");
			dkDepFcOutH01 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_H01", "DATALV2_NM", "OFF");
			dkDepFcOutH02 = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_H02", "DATALV2_NM", "OFF");
			if(ytd_Param.equals("P01")){
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD01", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P02")){
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD02", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P03")){
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD03", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P04")){
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD04", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P05")){
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD05", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P06")){
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD06", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P07")){
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD07", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P08")){
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD08", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P09")){
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD09", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P10")){
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD10", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P11")){
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD11", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P12")){
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD12", "DATALV2_NM", "OFF");
			}else{
				dkDepFcOutYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_OUT_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_OUT_YTD12", "DATALV2_NM", "OFF");
			}
				
			dkDepFcTgP01 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P01", "DATALV2_NM", "OFF");
			dkDepFcTgP02 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P02", "DATALV2_NM", "OFF");
			dkDepFcTgP03 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P03", "DATALV2_NM", "OFF");
			dkDepFcTgP04 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P04", "DATALV2_NM", "OFF");
			dkDepFcTgP05 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P05", "DATALV2_NM", "OFF");
			dkDepFcTgP06 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P06", "DATALV2_NM", "OFF");
			dkDepFcTgP07 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P07", "DATALV2_NM", "OFF");
			dkDepFcTgP08 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P08", "DATALV2_NM", "OFF");
			dkDepFcTgP09 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P09", "DATALV2_NM", "OFF");
			dkDepFcTgP10 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P10", "DATALV2_NM", "OFF");
			dkDepFcTgP11 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P11", "DATALV2_NM", "OFF");
			dkDepFcTgP12 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_P12", "DATALV2_NM", "OFF");
			dkDepFcTgQ01 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_Q01", "DATALV2_NM", "OFF");
			dkDepFcTgQ02 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_Q02", "DATALV2_NM", "OFF");
			dkDepFcTgQ03 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_Q03", "DATALV2_NM", "OFF");
			dkDepFcTgQ04 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_Q04", "DATALV2_NM", "OFF");
			dkDepFcTgH01 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_H01", "DATALV2_NM", "OFF");
			dkDepFcTgH02 = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_H02", "DATALV2_NM", "OFF");
			if(ytd_Param.equals("P01")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD01", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P02")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD02", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P03")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD03", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P04")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD04", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P05")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD05", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P06")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD06", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P07")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD07", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P08")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD08", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P09")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD09", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P10")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD10", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P11")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD11", "DATALV2_NM", "OFF");
			}else if(ytd_Param.equals("P12")){
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD12", "DATALV2_NM", "OFF");
			}else{
				dkDepFcTgYTD = getSum(data, "DATALV1_NM", "Whisky", "DK_TG_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV3_NM", "MILITARY", "DK_TG_YTD12", "DATALV2_NM", "OFF");
			}
		
		// Whisky Total (Whisky ON + Whisky Off Total (excl Military))
		}else if(onTxt.equals("") && grpTxt.equals("Whisky")){
						
			dkDepFcOutP01 = getSum(data, colIdx, grpTxt, "DK_OUT_P01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P01", "DATALV2_NM", "OFF"));
			dkDepFcOutP02 = getSum(data, colIdx, grpTxt, "DK_OUT_P02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P02", "DATALV2_NM", "OFF"));
			dkDepFcOutP03 = getSum(data, colIdx, grpTxt, "DK_OUT_P03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P03", "DATALV2_NM", "OFF"));
			dkDepFcOutP04 = getSum(data, colIdx, grpTxt, "DK_OUT_P04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P04", "DATALV2_NM", "OFF"));
			dkDepFcOutP05 = getSum(data, colIdx, grpTxt, "DK_OUT_P05", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P05", "DATALV2_NM", "OFF"));
			dkDepFcOutP06 = getSum(data, colIdx, grpTxt, "DK_OUT_P06", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P06", "DATALV2_NM", "OFF"));
			dkDepFcOutP07 = getSum(data, colIdx, grpTxt, "DK_OUT_P07", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P07", "DATALV2_NM", "OFF"));
			dkDepFcOutP08 = getSum(data, colIdx, grpTxt, "DK_OUT_P08", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P08", "DATALV2_NM", "OFF"));
			dkDepFcOutP09 = getSum(data, colIdx, grpTxt, "DK_OUT_P09", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P09", "DATALV2_NM", "OFF"));
			dkDepFcOutP10 = getSum(data, colIdx, grpTxt, "DK_OUT_P10", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P10", "DATALV2_NM", "OFF"));
			dkDepFcOutP11 = getSum(data, colIdx, grpTxt, "DK_OUT_P11", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P11", "DATALV2_NM", "OFF"));
			dkDepFcOutP12 = getSum(data, colIdx, grpTxt, "DK_OUT_P12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_P12", "DATALV2_NM", "OFF"));
			dkDepFcOutQ01 = getSum(data, colIdx, grpTxt, "DK_OUT_Q01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_Q01", "DATALV2_NM", "OFF"));
			dkDepFcOutQ02 = getSum(data, colIdx, grpTxt, "DK_OUT_Q02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_Q02", "DATALV2_NM", "OFF"));
			dkDepFcOutQ03 = getSum(data, colIdx, grpTxt, "DK_OUT_Q03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_Q03", "DATALV2_NM", "OFF"));
			dkDepFcOutQ04 = getSum(data, colIdx, grpTxt, "DK_OUT_Q04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_Q04", "DATALV2_NM", "OFF"));
			dkDepFcOutH01 = getSum(data, colIdx, grpTxt, "DK_OUT_H01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_H01", "DATALV2_NM", "OFF"));
			dkDepFcOutH02 = getSum(data, colIdx, grpTxt, "DK_OUT_H02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_H02", "DATALV2_NM", "OFF"));
			if(ytd_Param.equals("P01")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD01", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P02")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD02", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P03")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD03", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P04")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD04", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P05")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD05", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD05", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P06")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD06", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD06", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P07")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD07", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD07", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P08")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD08", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD08", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P09")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD09", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD09", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P10")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD10", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD10", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P11")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD11", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD11", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P12")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD12", "DATALV2_NM", "OFF"));
			}else{
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_OUT_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_OUT_YTD12", "DATALV2_NM", "OFF"));
			}
				
			dkDepFcTgP01 = getSum(data, colIdx, grpTxt, "DK_TG_P01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P01", "DATALV2_NM", "OFF"));
			dkDepFcTgP02 = getSum(data, colIdx, grpTxt, "DK_TG_P02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P02", "DATALV2_NM", "OFF"));
			dkDepFcTgP03 = getSum(data, colIdx, grpTxt, "DK_TG_P03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P03", "DATALV2_NM", "OFF"));
			dkDepFcTgP04 = getSum(data, colIdx, grpTxt, "DK_TG_P04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P04", "DATALV2_NM", "OFF"));
			dkDepFcTgP05 = getSum(data, colIdx, grpTxt, "DK_TG_P05", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P05", "DATALV2_NM", "OFF"));
			dkDepFcTgP06 = getSum(data, colIdx, grpTxt, "DK_TG_P06", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P06", "DATALV2_NM", "OFF"));
			dkDepFcTgP07 = getSum(data, colIdx, grpTxt, "DK_TG_P07", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P07", "DATALV2_NM", "OFF"));
			dkDepFcTgP08 = getSum(data, colIdx, grpTxt, "DK_TG_P08", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P08", "DATALV2_NM", "OFF"));
			dkDepFcTgP09 = getSum(data, colIdx, grpTxt, "DK_TG_P09", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P09", "DATALV2_NM", "OFF"));
			dkDepFcTgP10 = getSum(data, colIdx, grpTxt, "DK_TG_P10", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P10", "DATALV2_NM", "OFF"));
			dkDepFcTgP11 = getSum(data, colIdx, grpTxt, "DK_TG_P11", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P11", "DATALV2_NM", "OFF"));
			dkDepFcTgP12 = getSum(data, colIdx, grpTxt, "DK_TG_P12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_P12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_P12", "DATALV2_NM", "OFF"));
			dkDepFcTgQ01 = getSum(data, colIdx, grpTxt, "DK_TG_Q01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_Q01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_Q01", "DATALV2_NM", "OFF"));
			dkDepFcTgQ02 = getSum(data, colIdx, grpTxt, "DK_TG_Q02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_Q02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_Q02", "DATALV2_NM", "OFF"));
			dkDepFcTgQ03 = getSum(data, colIdx, grpTxt, "DK_TG_Q03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_Q03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_Q03", "DATALV2_NM", "OFF"));
			dkDepFcTgQ04 = getSum(data, colIdx, grpTxt, "DK_TG_Q04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_Q04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_Q04", "DATALV2_NM", "OFF"));
			dkDepFcTgH01 = getSum(data, colIdx, grpTxt, "DK_TG_H01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_H01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_H01", "DATALV2_NM", "OFF"));
			dkDepFcTgH02 = getSum(data, colIdx, grpTxt, "DK_TG_H02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_H02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_H02", "DATALV2_NM", "OFF"));
			if(ytd_Param.equals("P01")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD01", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD01", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD01", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P02")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD02", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD02", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD02", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P03")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD03", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD03", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD03", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P04")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD04", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD04", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD04", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P05")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD05", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD05", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD05", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P06")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD06", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD06", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD06", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P07")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD07", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD07", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD07", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P08")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD08", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD08", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD08", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P09")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD09", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD09", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD09", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P10")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD10", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD10", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD10", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P11")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD11", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD11", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD11", "DATALV2_NM", "OFF"));
			}else if(ytd_Param.equals("P12")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD12", "DATALV2_NM", "OFF"));
			}else{
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD12", "DATALV2_NM", "ON")+(getSum(data, colIdx, grpTxt, "DK_TG_YTD12", "DATALV2_NM", "OFF")-getSum(data, "DATALV4_NM", "Military", "DK_TG_YTD12", "DATALV2_NM", "OFF"));
			}	
					
						
		}else{
			
			dkDepFcOutP01 = getSum(data, colIdx, grpTxt, "DK_OUT_P01", onIdx, onTxt);
			dkDepFcOutP02 = getSum(data, colIdx, grpTxt, "DK_OUT_P02", onIdx, onTxt);
			dkDepFcOutP03 = getSum(data, colIdx, grpTxt, "DK_OUT_P03", onIdx, onTxt);
			dkDepFcOutP04 = getSum(data, colIdx, grpTxt, "DK_OUT_P04", onIdx, onTxt);
			dkDepFcOutP05 = getSum(data, colIdx, grpTxt, "DK_OUT_P05", onIdx, onTxt);
			dkDepFcOutP06 = getSum(data, colIdx, grpTxt, "DK_OUT_P06", onIdx, onTxt);
			dkDepFcOutP07 = getSum(data, colIdx, grpTxt, "DK_OUT_P07", onIdx, onTxt);
			dkDepFcOutP08 = getSum(data, colIdx, grpTxt, "DK_OUT_P08", onIdx, onTxt);
			dkDepFcOutP09 = getSum(data, colIdx, grpTxt, "DK_OUT_P09", onIdx, onTxt);
			dkDepFcOutP10 = getSum(data, colIdx, grpTxt, "DK_OUT_P10", onIdx, onTxt);
			dkDepFcOutP11 = getSum(data, colIdx, grpTxt, "DK_OUT_P11", onIdx, onTxt);
			dkDepFcOutP12 = getSum(data, colIdx, grpTxt, "DK_OUT_P12", onIdx, onTxt);
			dkDepFcOutQ01 = getSum(data, colIdx, grpTxt, "DK_OUT_Q01", onIdx, onTxt);
			dkDepFcOutQ02 = getSum(data, colIdx, grpTxt, "DK_OUT_Q02", onIdx, onTxt);
			dkDepFcOutQ03 = getSum(data, colIdx, grpTxt, "DK_OUT_Q03", onIdx, onTxt);
			dkDepFcOutQ04 = getSum(data, colIdx, grpTxt, "DK_OUT_Q04", onIdx, onTxt);
			dkDepFcOutH01 = getSum(data, colIdx, grpTxt, "DK_OUT_H01", onIdx, onTxt);
			dkDepFcOutH02 = getSum(data, colIdx, grpTxt, "DK_OUT_H02", onIdx, onTxt);
			if(ytd_Param.equals("P01")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD01", onIdx, onTxt);
			}else if(ytd_Param.equals("P02")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD02", onIdx, onTxt);
			}else if(ytd_Param.equals("P03")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD03", onIdx, onTxt);
			}else if(ytd_Param.equals("P04")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD04", onIdx, onTxt);
			}else if(ytd_Param.equals("P05")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD05", onIdx, onTxt);
			}else if(ytd_Param.equals("P06")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD06", onIdx, onTxt);
			}else if(ytd_Param.equals("P07")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD07", onIdx, onTxt);
			}else if(ytd_Param.equals("P08")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD08", onIdx, onTxt);
			}else if(ytd_Param.equals("P09")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD09", onIdx, onTxt);
			}else if(ytd_Param.equals("P10")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD10", onIdx, onTxt);
			}else if(ytd_Param.equals("P11")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD11", onIdx, onTxt);
			}else if(ytd_Param.equals("P12")){
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD12", onIdx, onTxt);
			}else{
				dkDepFcOutYTD = getSum(data, colIdx, grpTxt, "DK_OUT_YTD12", onIdx, onTxt);
			}
					
			dkDepFcTgP01 = getSum(data, colIdx, grpTxt, "DK_TG_P01", onIdx, onTxt);
			dkDepFcTgP02 = getSum(data, colIdx, grpTxt, "DK_TG_P02", onIdx, onTxt);
			dkDepFcTgP03 = getSum(data, colIdx, grpTxt, "DK_TG_P03", onIdx, onTxt);
			dkDepFcTgP04 = getSum(data, colIdx, grpTxt, "DK_TG_P04", onIdx, onTxt);
			dkDepFcTgP05 = getSum(data, colIdx, grpTxt, "DK_TG_P05", onIdx, onTxt);
			dkDepFcTgP06 = getSum(data, colIdx, grpTxt, "DK_TG_P06", onIdx, onTxt);
			dkDepFcTgP07 = getSum(data, colIdx, grpTxt, "DK_TG_P07", onIdx, onTxt);
			dkDepFcTgP08 = getSum(data, colIdx, grpTxt, "DK_TG_P08", onIdx, onTxt);
			dkDepFcTgP09 = getSum(data, colIdx, grpTxt, "DK_TG_P09", onIdx, onTxt);
			dkDepFcTgP10 = getSum(data, colIdx, grpTxt, "DK_TG_P10", onIdx, onTxt);
			dkDepFcTgP11 = getSum(data, colIdx, grpTxt, "DK_TG_P11", onIdx, onTxt);
			dkDepFcTgP12 = getSum(data, colIdx, grpTxt, "DK_TG_P12", onIdx, onTxt);
			dkDepFcTgQ01 = getSum(data, colIdx, grpTxt, "DK_TG_Q01", onIdx, onTxt);
			dkDepFcTgQ02 = getSum(data, colIdx, grpTxt, "DK_TG_Q02", onIdx, onTxt);
			dkDepFcTgQ03 = getSum(data, colIdx, grpTxt, "DK_TG_Q03", onIdx, onTxt);
			dkDepFcTgQ04 = getSum(data, colIdx, grpTxt, "DK_TG_Q04", onIdx, onTxt);
			dkDepFcTgH01 = getSum(data, colIdx, grpTxt, "DK_TG_H01", onIdx, onTxt);
			dkDepFcTgH02 = getSum(data, colIdx, grpTxt, "DK_TG_H02", onIdx, onTxt);
			if(ytd_Param.equals("P01")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD01", onIdx, onTxt);
			}else if(ytd_Param.equals("P02")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD02", onIdx, onTxt);
			}else if(ytd_Param.equals("P03")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD03", onIdx, onTxt);
			}else if(ytd_Param.equals("P04")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD04", onIdx, onTxt);
			}else if(ytd_Param.equals("P05")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD05", onIdx, onTxt);
			}else if(ytd_Param.equals("P06")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD06", onIdx, onTxt);
			}else if(ytd_Param.equals("P07")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD07", onIdx, onTxt);
			}else if(ytd_Param.equals("P08")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD08", onIdx, onTxt);
			}else if(ytd_Param.equals("P09")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD09", onIdx, onTxt);
			}else if(ytd_Param.equals("P10")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD10", onIdx, onTxt);
			}else if(ytd_Param.equals("P11")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD11", onIdx, onTxt);
			}else if(ytd_Param.equals("P12")){
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD12", onIdx, onTxt);
			}else{
				dkDepFcTgYTD = getSum(data, colIdx, grpTxt, "DK_TG_YTD12", onIdx, onTxt);
			}
			
		}
					
					
		if(periodChk_Param.equals("Y")){
			
			for(int i=4; i<42; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(dkDepFcOutP01);
			row.getCell(5).setCellValue(dkDepFcOutP02);
			row.getCell(6).setCellValue(dkDepFcOutP03);
			row.getCell(7).setCellValue(dkDepFcOutP04);
			row.getCell(8).setCellValue(dkDepFcOutP05);
			row.getCell(9).setCellValue(dkDepFcOutP06);
			row.getCell(10).setCellValue(dkDepFcOutP07);
			row.getCell(11).setCellValue(dkDepFcOutP08);
	    	row.getCell(12).setCellValue(dkDepFcOutP09);
	    	row.getCell(13).setCellValue(dkDepFcOutP10);
	    	row.getCell(14).setCellValue(dkDepFcOutP11);
	    	row.getCell(15).setCellValue(dkDepFcOutP12);
	    	row.getCell(16).setCellValue(dkDepFcOutQ01);
	    	row.getCell(17).setCellValue(dkDepFcOutQ02);
	    	row.getCell(18).setCellValue(dkDepFcOutQ03);
	    	row.getCell(19).setCellValue(dkDepFcOutQ04);
	    	row.getCell(20).setCellValue(dkDepFcOutH01);
	    	row.getCell(21).setCellValue(dkDepFcOutH02);
	    	row.getCell(22).setCellValue(dkDepFcOutYTD);
	    	row.getCell(23).setCellValue(dkDepFcTgP01);
	    	row.getCell(24).setCellValue(dkDepFcTgP02);
	    	row.getCell(25).setCellValue(dkDepFcTgP03);
	    	row.getCell(26).setCellValue(dkDepFcTgP04);
	    	row.getCell(27).setCellValue(dkDepFcTgP05);
	    	row.getCell(28).setCellValue(dkDepFcTgP06);
	    	row.getCell(29).setCellValue(dkDepFcTgP07);
	    	row.getCell(30).setCellValue(dkDepFcTgP08);
	    	row.getCell(31).setCellValue(dkDepFcTgP09);
	    	row.getCell(32).setCellValue(dkDepFcTgP10);
	    	row.getCell(33).setCellValue(dkDepFcTgP11);
	    	row.getCell(34).setCellValue(dkDepFcTgP12);
	    	row.getCell(35).setCellValue(dkDepFcTgQ01);
	    	row.getCell(36).setCellValue(dkDepFcTgQ02);
	    	row.getCell(37).setCellValue(dkDepFcTgQ03);
	    	row.getCell(38).setCellValue(dkDepFcTgQ04);
	    	row.getCell(39).setCellValue(dkDepFcTgH01);
	    	row.getCell(40).setCellValue(dkDepFcTgH02);
	    	row.getCell(41).setCellValue(dkDepFcTgYTD);
    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=4; i<16; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(dkDepFcOutP01);
			row.getCell(5).setCellValue(dkDepFcOutP02);
			row.getCell(6).setCellValue(dkDepFcOutP03);
	    	row.getCell(7).setCellValue(dkDepFcOutQ01);
	    	row.getCell(8).setCellValue(dkDepFcOutH01);
	    	row.getCell(9).setCellValue(dkDepFcOutYTD);
	    	row.getCell(10).setCellValue(dkDepFcTgP01);
	    	row.getCell(11).setCellValue(dkDepFcTgP02);
	    	row.getCell(12).setCellValue(dkDepFcTgP03);
	    	row.getCell(13).setCellValue(dkDepFcTgQ01);
	    	row.getCell(14).setCellValue(dkDepFcTgH01);
	    	row.getCell(15).setCellValue(dkDepFcTgYTD);
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=4; i<18; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(dkDepFcOutP04);
			row.getCell(5).setCellValue(dkDepFcOutP05);
			row.getCell(6).setCellValue(dkDepFcOutP06);
	    	row.getCell(7).setCellValue(dkDepFcOutQ01);
	    	row.getCell(8).setCellValue(dkDepFcOutQ02);
	    	row.getCell(9).setCellValue(dkDepFcOutH01);
	    	row.getCell(10).setCellValue(dkDepFcOutYTD);
	    	row.getCell(11).setCellValue(dkDepFcTgP04);
	    	row.getCell(12).setCellValue(dkDepFcTgP05);
	    	row.getCell(13).setCellValue(dkDepFcTgP06);
	    	row.getCell(14).setCellValue(dkDepFcTgQ01);
	    	row.getCell(15).setCellValue(dkDepFcTgQ02);
	    	row.getCell(16).setCellValue(dkDepFcTgH01);
	    	row.getCell(17).setCellValue(dkDepFcTgYTD);
	    	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(dkDepFcOutP07);
			row.getCell(5).setCellValue(dkDepFcOutP08);
	    	row.getCell(6).setCellValue(dkDepFcOutP09);
	    	row.getCell(7).setCellValue(dkDepFcOutQ02);
	    	row.getCell(8).setCellValue(dkDepFcOutQ03);
	    	row.getCell(9).setCellValue(dkDepFcOutH01);
	    	row.getCell(10).setCellValue(dkDepFcOutH02);
	    	row.getCell(11).setCellValue(dkDepFcOutYTD);
	    	row.getCell(12).setCellValue(dkDepFcTgP07);
	    	row.getCell(13).setCellValue(dkDepFcTgP08);
	    	row.getCell(14).setCellValue(dkDepFcTgP09);
	    	row.getCell(15).setCellValue(dkDepFcTgQ02);
	    	row.getCell(16).setCellValue(dkDepFcTgQ03);
	    	row.getCell(17).setCellValue(dkDepFcTgH01);
	    	row.getCell(18).setCellValue(dkDepFcTgH02);
	    	row.getCell(19).setCellValue(dkDepFcTgYTD);
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(dkDepFcOutP10);
			row.getCell(5).setCellValue(dkDepFcOutP11);
	    	row.getCell(6).setCellValue(dkDepFcOutP12);
	    	row.getCell(7).setCellValue(dkDepFcOutQ03);
	    	row.getCell(8).setCellValue(dkDepFcOutQ04);
	    	row.getCell(9).setCellValue(dkDepFcOutH01);
	    	row.getCell(10).setCellValue(dkDepFcOutH02);
	    	row.getCell(11).setCellValue(dkDepFcOutYTD);
	    	row.getCell(12).setCellValue(dkDepFcTgP10);
	    	row.getCell(13).setCellValue(dkDepFcTgP11);
	    	row.getCell(14).setCellValue(dkDepFcTgP12);
	    	row.getCell(15).setCellValue(dkDepFcTgQ03);
	    	row.getCell(16).setCellValue(dkDepFcTgQ04);
	    	row.getCell(17).setCellValue(dkDepFcTgH01);
	    	row.getCell(18).setCellValue(dkDepFcTgH02);
	    	row.getCell(19).setCellValue(dkDepFcTgYTD);
	    	
		}

	}
	
	
	/*
	 * Description: Note G Forecast (ON channel) 4~41번째 컬럼의 입력값을 셀에 입력
	 */
	public void setRowValue4(HSSFRow row, CellStyle style, Map rowData, String styleTxt) {
		
		if(periodChk_Param.equals("Y")){
			
			for(int i=4; i<42; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P01").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P02").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P03").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P04").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P05").toString()));
	    	row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P06").toString()));
	    	row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P07").toString()));
	    	row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P08").toString()));
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P09").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P10").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P11").toString()));
	    	row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P12").toString()));
	    	row.getCell(16).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_Q01").toString()));
	    	row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_Q02").toString()));
	    	row.getCell(18).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_Q03").toString()));
	    	row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_Q04").toString()));
	    	row.getCell(20).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_H01").toString()));
	    	row.getCell(21).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString()));
			}else{
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString()));
			}
	    	row.getCell(23).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P01").toString()));
	    	row.getCell(24).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P02").toString()));
	    	row.getCell(25).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P03").toString()));
	    	row.getCell(26).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P04").toString()));
	    	row.getCell(27).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P05").toString()));
	    	row.getCell(28).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P06").toString()));
	    	row.getCell(29).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P07").toString()));
	    	row.getCell(30).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P08").toString()));
	    	row.getCell(31).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P09").toString()));
	    	row.getCell(32).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P10").toString()));
	    	row.getCell(33).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P11").toString()));
	    	row.getCell(34).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P12").toString()));
	    	row.getCell(35).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_Q01").toString()));
	    	row.getCell(36).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_Q02").toString()));
	    	row.getCell(37).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_Q03").toString()));
	    	row.getCell(38).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_Q04").toString()));
	    	row.getCell(39).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_H01").toString()));
	    	row.getCell(40).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString()));
			}else{
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString()));
			}
    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=4; i<16; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P01").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P02").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P03").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_Q01").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString()));
			}else{
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString()));
			}
	    	row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P01").toString()));
	    	row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P02").toString()));
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P03").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_Q01").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString()));
			}else{
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString()));
			}
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=4; i<18; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P04").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P05").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P06").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_Q01").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_Q02").toString()));
	    	row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString()));
			}else{
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString()));
			}
	    	row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P04").toString()));
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P05").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P06").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_Q01").toString()));
	    	row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_Q02").toString()));
	    	row.getCell(16).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString()));
			}else{
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString()));
			}
	    	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P07").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P08").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P09").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_Q02").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_Q03").toString()));
	    	row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_H01").toString()));
	    	row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString()));
			}else{
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString()));
			}
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P07").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P08").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P09").toString()));
	    	row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_Q02").toString()));
	    	row.getCell(16).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_Q03").toString()));
	    	row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_H01").toString()));
	    	row.getCell(18).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString()));
			}else{
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString()));
			}
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P10").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P11").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_P12").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_Q03").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_Q04").toString()));
	    	row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_H01").toString()));
	    	row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString()));
			}else{
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString()));
			}
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P10").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P11").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_P12").toString()));
	    	row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_Q03").toString()));
	    	row.getCell(16).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_Q04").toString()));
	    	row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_H01").toString()));
	    	row.getCell(18).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString()));
			}else{
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString()));
			}
	    	
		}
    	
    	// 계산식을 위해 리스트에 값을 담아준다.
    	noteGMap = new HashMap();
    	
    	noteGMap.put("STYLETXT", styleTxt);
    	noteGMap.put("TOTAL", "");
    	noteGMap.put("DATALV2_NM", rowData.get("DATALV2_NM").toString());
    	noteGMap.put("NOTAG_AC_P01", Double.parseDouble(rowData.get("NOTAG_AC_P01").toString()));
		noteGMap.put("NOTAG_AC_P02", Double.parseDouble(rowData.get("NOTAG_AC_P02").toString()));
		noteGMap.put("NOTAG_AC_P03", Double.parseDouble(rowData.get("NOTAG_AC_P03").toString()));
		noteGMap.put("NOTAG_AC_P04", Double.parseDouble(rowData.get("NOTAG_AC_P04").toString()));
		noteGMap.put("NOTAG_AC_P05", Double.parseDouble(rowData.get("NOTAG_AC_P05").toString()));
		noteGMap.put("NOTAG_AC_P06", Double.parseDouble(rowData.get("NOTAG_AC_P06").toString()));
		noteGMap.put("NOTAG_AC_P07", Double.parseDouble(rowData.get("NOTAG_AC_P07").toString()));
		noteGMap.put("NOTAG_AC_P08", Double.parseDouble(rowData.get("NOTAG_AC_P08").toString()));
		noteGMap.put("NOTAG_AC_P09", Double.parseDouble(rowData.get("NOTAG_AC_P09").toString()));
		noteGMap.put("NOTAG_AC_P10", Double.parseDouble(rowData.get("NOTAG_AC_P10").toString()));
		noteGMap.put("NOTAG_AC_P11", Double.parseDouble(rowData.get("NOTAG_AC_P11").toString()));
		noteGMap.put("NOTAG_AC_P12", Double.parseDouble(rowData.get("NOTAG_AC_P12").toString()));
		noteGMap.put("NOTAG_AC_Q01", Double.parseDouble(rowData.get("NOTAG_AC_Q01").toString()));
		noteGMap.put("NOTAG_AC_Q02", Double.parseDouble(rowData.get("NOTAG_AC_Q02").toString()));
		noteGMap.put("NOTAG_AC_Q03", Double.parseDouble(rowData.get("NOTAG_AC_Q03").toString()));
		noteGMap.put("NOTAG_AC_Q04", Double.parseDouble(rowData.get("NOTAG_AC_Q04").toString()));
		noteGMap.put("NOTAG_AC_H01", Double.parseDouble(rowData.get("NOTAG_AC_H01").toString()));
		noteGMap.put("NOTAG_AC_H02", Double.parseDouble(rowData.get("NOTAG_AC_H02").toString()));
		if(ytd_Param.equals("P01")){
			noteGMap.put("NOTAG_AC_YTD", Double.parseDouble(rowData.get("NOTAG_AC_YTD01").toString()));
		}else if(ytd_Param.equals("P02")){
			noteGMap.put("NOTAG_AC_YTD", Double.parseDouble(rowData.get("NOTAG_AC_YTD02").toString()));
		}else if(ytd_Param.equals("P03")){
			noteGMap.put("NOTAG_AC_YTD", Double.parseDouble(rowData.get("NOTAG_AC_YTD03").toString()));
		}else if(ytd_Param.equals("P04")){
			noteGMap.put("NOTAG_AC_YTD", Double.parseDouble(rowData.get("NOTAG_AC_YTD04").toString()));
		}else if(ytd_Param.equals("P05")){
			noteGMap.put("NOTAG_AC_YTD", Double.parseDouble(rowData.get("NOTAG_AC_YTD05").toString()));
		}else if(ytd_Param.equals("P06")){
			noteGMap.put("NOTAG_AC_YTD", Double.parseDouble(rowData.get("NOTAG_AC_YTD06").toString()));
		}else if(ytd_Param.equals("P07")){
			noteGMap.put("NOTAG_AC_YTD", Double.parseDouble(rowData.get("NOTAG_AC_YTD07").toString()));
		}else if(ytd_Param.equals("P08")){
			noteGMap.put("NOTAG_AC_YTD", Double.parseDouble(rowData.get("NOTAG_AC_YTD08").toString()));
		}else if(ytd_Param.equals("P09")){
			noteGMap.put("NOTAG_AC_YTD", Double.parseDouble(rowData.get("NOTAG_AC_YTD09").toString()));
		}else if(ytd_Param.equals("P10")){
			noteGMap.put("NOTAG_AC_YTD", Double.parseDouble(rowData.get("NOTAG_AC_YTD10").toString()));
		}else if(ytd_Param.equals("P11")){
			noteGMap.put("NOTAG_AC_YTD", Double.parseDouble(rowData.get("NOTAG_AC_YTD11").toString()));
		}else if(ytd_Param.equals("P12")){
			noteGMap.put("NOTAG_AC_YTD", Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString()));
		}else{
			noteGMap.put("NOTAG_AC_YTD", Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString()));
		}
		
		noteGMap.put("NOTAG_FOR_P01", Double.parseDouble(rowData.get("NOTAG_FOR_P01").toString()));
		noteGMap.put("NOTAG_FOR_P02", Double.parseDouble(rowData.get("NOTAG_FOR_P02").toString()));
		noteGMap.put("NOTAG_FOR_P03", Double.parseDouble(rowData.get("NOTAG_FOR_P03").toString()));
		noteGMap.put("NOTAG_FOR_P04", Double.parseDouble(rowData.get("NOTAG_FOR_P04").toString()));
		noteGMap.put("NOTAG_FOR_P05", Double.parseDouble(rowData.get("NOTAG_FOR_P05").toString()));
		noteGMap.put("NOTAG_FOR_P06", Double.parseDouble(rowData.get("NOTAG_FOR_P06").toString()));
		noteGMap.put("NOTAG_FOR_P07", Double.parseDouble(rowData.get("NOTAG_FOR_P07").toString()));
		noteGMap.put("NOTAG_FOR_P08", Double.parseDouble(rowData.get("NOTAG_FOR_P08").toString()));
		noteGMap.put("NOTAG_FOR_P09", Double.parseDouble(rowData.get("NOTAG_FOR_P09").toString()));
		noteGMap.put("NOTAG_FOR_P10", Double.parseDouble(rowData.get("NOTAG_FOR_P10").toString()));
		noteGMap.put("NOTAG_FOR_P11", Double.parseDouble(rowData.get("NOTAG_FOR_P11").toString()));
		noteGMap.put("NOTAG_FOR_P12", Double.parseDouble(rowData.get("NOTAG_FOR_P12").toString()));
		noteGMap.put("NOTAG_FOR_Q01", Double.parseDouble(rowData.get("NOTAG_FOR_Q01").toString()));
		noteGMap.put("NOTAG_FOR_Q02", Double.parseDouble(rowData.get("NOTAG_FOR_Q02").toString()));
		noteGMap.put("NOTAG_FOR_Q03", Double.parseDouble(rowData.get("NOTAG_FOR_Q03").toString()));
		noteGMap.put("NOTAG_FOR_Q04", Double.parseDouble(rowData.get("NOTAG_FOR_Q04").toString()));
		noteGMap.put("NOTAG_FOR_H01", Double.parseDouble(rowData.get("NOTAG_FOR_H01").toString()));
		noteGMap.put("NOTAG_FOR_H02", Double.parseDouble(rowData.get("NOTAG_FOR_H02").toString()));
		if(ytd_Param.equals("P01")){
			noteGMap.put("NOTAG_FOR_YTD", Double.parseDouble(rowData.get("NOTAG_FOR_YTD01").toString()));
		}else if(ytd_Param.equals("P02")){
			noteGMap.put("NOTAG_FOR_YTD", Double.parseDouble(rowData.get("NOTAG_FOR_YTD02").toString()));
		}else if(ytd_Param.equals("P03")){
			noteGMap.put("NOTAG_FOR_YTD", Double.parseDouble(rowData.get("NOTAG_FOR_YTD03").toString()));
		}else if(ytd_Param.equals("P04")){
			noteGMap.put("NOTAG_FOR_YTD", Double.parseDouble(rowData.get("NOTAG_FOR_YTD04").toString()));
		}else if(ytd_Param.equals("P05")){
			noteGMap.put("NOTAG_FOR_YTD", Double.parseDouble(rowData.get("NOTAG_FOR_YTD05").toString()));
		}else if(ytd_Param.equals("P06")){
			noteGMap.put("NOTAG_FOR_YTD", Double.parseDouble(rowData.get("NOTAG_FOR_YTD06").toString()));
		}else if(ytd_Param.equals("P07")){
			noteGMap.put("NOTAG_FOR_YTD", Double.parseDouble(rowData.get("NOTAG_FOR_YTD07").toString()));
		}else if(ytd_Param.equals("P08")){
			noteGMap.put("NOTAG_FOR_YTD", Double.parseDouble(rowData.get("NOTAG_FOR_YTD08").toString()));
		}else if(ytd_Param.equals("P09")){
			noteGMap.put("NOTAG_FOR_YTD", Double.parseDouble(rowData.get("NOTAG_FOR_YTD09").toString()));
		}else if(ytd_Param.equals("P10")){
			noteGMap.put("NOTAG_FOR_YTD", Double.parseDouble(rowData.get("NOTAG_FOR_YTD10").toString()));
		}else if(ytd_Param.equals("P11")){
			noteGMap.put("NOTAG_FOR_YTD", Double.parseDouble(rowData.get("NOTAG_FOR_YTD11").toString()));
		}else if(ytd_Param.equals("P12")){
			noteGMap.put("NOTAG_FOR_YTD", Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString()));
		}else{
			noteGMap.put("NOTAG_FOR_YTD", Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString()));
		}
		
		noteGMap.put("NOTAG_OUT_P01", Double.parseDouble(rowData.get("NOTAG_OUT_P01").toString()));
		noteGMap.put("NOTAG_OUT_P02", Double.parseDouble(rowData.get("NOTAG_OUT_P02").toString()));
		noteGMap.put("NOTAG_OUT_P03", Double.parseDouble(rowData.get("NOTAG_OUT_P03").toString()));
		noteGMap.put("NOTAG_OUT_P04", Double.parseDouble(rowData.get("NOTAG_OUT_P04").toString()));
		noteGMap.put("NOTAG_OUT_P05", Double.parseDouble(rowData.get("NOTAG_OUT_P05").toString()));
		noteGMap.put("NOTAG_OUT_P06", Double.parseDouble(rowData.get("NOTAG_OUT_P06").toString()));
		noteGMap.put("NOTAG_OUT_P07", Double.parseDouble(rowData.get("NOTAG_OUT_P07").toString()));
		noteGMap.put("NOTAG_OUT_P08", Double.parseDouble(rowData.get("NOTAG_OUT_P08").toString()));
		noteGMap.put("NOTAG_OUT_P09", Double.parseDouble(rowData.get("NOTAG_OUT_P09").toString()));
		noteGMap.put("NOTAG_OUT_P10", Double.parseDouble(rowData.get("NOTAG_OUT_P10").toString()));
		noteGMap.put("NOTAG_OUT_P11", Double.parseDouble(rowData.get("NOTAG_OUT_P11").toString()));
		noteGMap.put("NOTAG_OUT_P12", Double.parseDouble(rowData.get("NOTAG_OUT_P12").toString()));
		noteGMap.put("NOTAG_OUT_Q01", Double.parseDouble(rowData.get("NOTAG_OUT_Q01").toString()));
		noteGMap.put("NOTAG_OUT_Q02", Double.parseDouble(rowData.get("NOTAG_OUT_Q02").toString()));
		noteGMap.put("NOTAG_OUT_Q03", Double.parseDouble(rowData.get("NOTAG_OUT_Q03").toString()));
		noteGMap.put("NOTAG_OUT_Q04", Double.parseDouble(rowData.get("NOTAG_OUT_Q04").toString()));
		noteGMap.put("NOTAG_OUT_H01", Double.parseDouble(rowData.get("NOTAG_OUT_H01").toString()));
		noteGMap.put("NOTAG_OUT_H02", Double.parseDouble(rowData.get("NOTAG_OUT_H02").toString()));
		if(ytd_Param.equals("P01")){
			noteGMap.put("NOTAG_OUT_YTD", Double.parseDouble(rowData.get("NOTAG_OUT_YTD01").toString()));
		}else if(ytd_Param.equals("P02")){
			noteGMap.put("NOTAG_OUT_YTD", Double.parseDouble(rowData.get("NOTAG_OUT_YTD02").toString()));
		}else if(ytd_Param.equals("P03")){
			noteGMap.put("NOTAG_OUT_YTD", Double.parseDouble(rowData.get("NOTAG_OUT_YTD03").toString()));
		}else if(ytd_Param.equals("P04")){
			noteGMap.put("NOTAG_OUT_YTD", Double.parseDouble(rowData.get("NOTAG_OUT_YTD04").toString()));
		}else if(ytd_Param.equals("P05")){
			noteGMap.put("NOTAG_OUT_YTD", Double.parseDouble(rowData.get("NOTAG_OUT_YTD05").toString()));
		}else if(ytd_Param.equals("P06")){
			noteGMap.put("NOTAG_OUT_YTD", Double.parseDouble(rowData.get("NOTAG_OUT_YTD06").toString()));
		}else if(ytd_Param.equals("P07")){
			noteGMap.put("NOTAG_OUT_YTD", Double.parseDouble(rowData.get("NOTAG_OUT_YTD07").toString()));
		}else if(ytd_Param.equals("P08")){
			noteGMap.put("NOTAG_OUT_YTD", Double.parseDouble(rowData.get("NOTAG_OUT_YTD08").toString()));
		}else if(ytd_Param.equals("P09")){
			noteGMap.put("NOTAG_OUT_YTD", Double.parseDouble(rowData.get("NOTAG_OUT_YTD09").toString()));
		}else if(ytd_Param.equals("P10")){
			noteGMap.put("NOTAG_OUT_YTD", Double.parseDouble(rowData.get("NOTAG_OUT_YTD10").toString()));
		}else if(ytd_Param.equals("P11")){
			noteGMap.put("NOTAG_OUT_YTD", Double.parseDouble(rowData.get("NOTAG_OUT_YTD11").toString()));
		}else if(ytd_Param.equals("P12")){
			noteGMap.put("NOTAG_OUT_YTD", Double.parseDouble(rowData.get("NOTAG_OUT_YTD12").toString()));
		}else{
			noteGMap.put("NOTAG_OUT_YTD", Double.parseDouble(rowData.get("NOTAG_OUT_YTD12").toString()));
		}
		
		noteGMap.put("NOTAG_TG_P01", Double.parseDouble(rowData.get("NOTAG_TG_P01").toString()));
		noteGMap.put("NOTAG_TG_P02", Double.parseDouble(rowData.get("NOTAG_TG_P02").toString()));
		noteGMap.put("NOTAG_TG_P03", Double.parseDouble(rowData.get("NOTAG_TG_P03").toString()));
		noteGMap.put("NOTAG_TG_P04", Double.parseDouble(rowData.get("NOTAG_TG_P04").toString()));
		noteGMap.put("NOTAG_TG_P05", Double.parseDouble(rowData.get("NOTAG_TG_P05").toString()));
		noteGMap.put("NOTAG_TG_P06", Double.parseDouble(rowData.get("NOTAG_TG_P06").toString()));
		noteGMap.put("NOTAG_TG_P07", Double.parseDouble(rowData.get("NOTAG_TG_P07").toString()));
		noteGMap.put("NOTAG_TG_P08", Double.parseDouble(rowData.get("NOTAG_TG_P08").toString()));
		noteGMap.put("NOTAG_TG_P09", Double.parseDouble(rowData.get("NOTAG_TG_P09").toString()));
		noteGMap.put("NOTAG_TG_P10", Double.parseDouble(rowData.get("NOTAG_TG_P10").toString()));
		noteGMap.put("NOTAG_TG_P11", Double.parseDouble(rowData.get("NOTAG_TG_P11").toString()));
		noteGMap.put("NOTAG_TG_P12", Double.parseDouble(rowData.get("NOTAG_TG_P12").toString()));
		noteGMap.put("NOTAG_TG_Q01", Double.parseDouble(rowData.get("NOTAG_TG_Q01").toString()));
		noteGMap.put("NOTAG_TG_Q02", Double.parseDouble(rowData.get("NOTAG_TG_Q02").toString()));
		noteGMap.put("NOTAG_TG_Q03", Double.parseDouble(rowData.get("NOTAG_TG_Q03").toString()));
		noteGMap.put("NOTAG_TG_Q04", Double.parseDouble(rowData.get("NOTAG_TG_Q04").toString()));
		noteGMap.put("NOTAG_TG_H01", Double.parseDouble(rowData.get("NOTAG_TG_H01").toString()));
		noteGMap.put("NOTAG_TG_H02", Double.parseDouble(rowData.get("NOTAG_TG_H02").toString()));
		if(ytd_Param.equals("P01")){
			noteGMap.put("NOTAG_TG_YTD", Double.parseDouble(rowData.get("NOTAG_TG_YTD01").toString()));
		}else if(ytd_Param.equals("P02")){
			noteGMap.put("NOTAG_TG_YTD", Double.parseDouble(rowData.get("NOTAG_TG_YTD02").toString()));
		}else if(ytd_Param.equals("P03")){
			noteGMap.put("NOTAG_TG_YTD", Double.parseDouble(rowData.get("NOTAG_TG_YTD03").toString()));
		}else if(ytd_Param.equals("P04")){
			noteGMap.put("NOTAG_TG_YTD", Double.parseDouble(rowData.get("NOTAG_TG_YTD04").toString()));
		}else if(ytd_Param.equals("P05")){
			noteGMap.put("NOTAG_TG_YTD", Double.parseDouble(rowData.get("NOTAG_TG_YTD05").toString()));
		}else if(ytd_Param.equals("P06")){
			noteGMap.put("NOTAG_TG_YTD", Double.parseDouble(rowData.get("NOTAG_TG_YTD06").toString()));
		}else if(ytd_Param.equals("P07")){
			noteGMap.put("NOTAG_TG_YTD", Double.parseDouble(rowData.get("NOTAG_TG_YTD07").toString()));
		}else if(ytd_Param.equals("P08")){
			noteGMap.put("NOTAG_TG_YTD", Double.parseDouble(rowData.get("NOTAG_TG_YTD08").toString()));
		}else if(ytd_Param.equals("P09")){
			noteGMap.put("NOTAG_TG_YTD", Double.parseDouble(rowData.get("NOTAG_TG_YTD09").toString()));
		}else if(ytd_Param.equals("P10")){
			noteGMap.put("NOTAG_TG_YTD", Double.parseDouble(rowData.get("NOTAG_TG_YTD10").toString()));
		}else if(ytd_Param.equals("P11")){
			noteGMap.put("NOTAG_TG_YTD", Double.parseDouble(rowData.get("NOTAG_TG_YTD11").toString()));
		}else if(ytd_Param.equals("P12")){
			noteGMap.put("NOTAG_TG_YTD", Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString()));
		}else{
			noteGMap.put("NOTAG_TG_YTD", Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString()));
		}
		
		noteG.add(noteGMap);
		
	}
	
	/*
	 * Description: Note G Forecast (ON channel) 4~41번째 컬럼의 소계, 합계를 자동 계산하여 셀에 입력
	 */
	public void setRowSumValue4(HSSFRow row, CellStyle style, List data, String colIdx, String grpTxt, String onIdx, String onTxt, String styleTxt) {
		
		// Total Dependency Rate 합계
		if(grpTxt.equals("10")){
			
        	Double totAccPlanVolAcP01 = 0.0;
        	Double totAccPlanVolAcP02 = 0.0;
        	Double totAccPlanVolAcP03 = 0.0;
        	Double totAccPlanVolAcP04 = 0.0;
        	Double totAccPlanVolAcP05 = 0.0;
        	Double totAccPlanVolAcP06 = 0.0;
        	Double totAccPlanVolAcP07 = 0.0;
        	Double totAccPlanVolAcP08 = 0.0;
        	Double totAccPlanVolAcP09 = 0.0;
        	Double totAccPlanVolAcP10 = 0.0;
        	Double totAccPlanVolAcP11 = 0.0;
        	Double totAccPlanVolAcP12 = 0.0;
        	Double totAccPlanVolAcQ01 = 0.0;
        	Double totAccPlanVolAcQ02 = 0.0;
        	Double totAccPlanVolAcQ03 = 0.0;
        	Double totAccPlanVolAcQ04 = 0.0;
        	Double totAccPlanVolAcH01 = 0.0;
        	Double totAccPlanVolAcH02 = 0.0;
        	Double totAccPlanVolAcYTD = 0.0;
        	
        	Double totAccPlanVolForP01 = 0.0;
        	Double totAccPlanVolForP02 = 0.0;
        	Double totAccPlanVolForP03 = 0.0;
        	Double totAccPlanVolForP04 = 0.0;
        	Double totAccPlanVolForP05 = 0.0;
        	Double totAccPlanVolForP06 = 0.0;
        	Double totAccPlanVolForP07 = 0.0;
        	Double totAccPlanVolForP08 = 0.0;
        	Double totAccPlanVolForP09 = 0.0;
        	Double totAccPlanVolForP10 = 0.0;
        	Double totAccPlanVolForP11 = 0.0;
        	Double totAccPlanVolForP12 = 0.0;
        	Double totAccPlanVolForQ01 = 0.0;
        	Double totAccPlanVolForQ02 = 0.0;
        	Double totAccPlanVolForQ03 = 0.0;
        	Double totAccPlanVolForQ04 = 0.0;
        	Double totAccPlanVolForH01 = 0.0;
        	Double totAccPlanVolForH02 = 0.0;
        	Double totAccPlanVolForYTD = 0.0;
        	
        	Double totAccPlanVolOutP01 = 0.0;
        	Double totAccPlanVolOutP02 = 0.0;
        	Double totAccPlanVolOutP03 = 0.0;
        	Double totAccPlanVolOutP04 = 0.0;
        	Double totAccPlanVolOutP05 = 0.0;
        	Double totAccPlanVolOutP06 = 0.0;
        	Double totAccPlanVolOutP07 = 0.0;
        	Double totAccPlanVolOutP08 = 0.0;
        	Double totAccPlanVolOutP09 = 0.0;
        	Double totAccPlanVolOutP10 = 0.0;
        	Double totAccPlanVolOutP11 = 0.0;
        	Double totAccPlanVolOutP12 = 0.0;
        	Double totAccPlanVolOutQ01 = 0.0;
        	Double totAccPlanVolOutQ02 = 0.0;
        	Double totAccPlanVolOutQ03 = 0.0;
        	Double totAccPlanVolOutQ04 = 0.0;
        	Double totAccPlanVolOutH01 = 0.0;
        	Double totAccPlanVolOutH02 = 0.0;
        	Double totAccPlanVolOutYTD = 0.0;
        	
        	Double totAccPlanVolTgP01 = 0.0;
        	Double totAccPlanVolTgP02 = 0.0;
        	Double totAccPlanVolTgP03 = 0.0;
        	Double totAccPlanVolTgP04 = 0.0;
        	Double totAccPlanVolTgP05 = 0.0;
        	Double totAccPlanVolTgP06 = 0.0;
        	Double totAccPlanVolTgP07 = 0.0;
        	Double totAccPlanVolTgP08 = 0.0;
        	Double totAccPlanVolTgP09 = 0.0;
        	Double totAccPlanVolTgP10 = 0.0;
        	Double totAccPlanVolTgP11 = 0.0;
        	Double totAccPlanVolTgP12 = 0.0;
        	Double totAccPlanVolTgQ01 = 0.0;
        	Double totAccPlanVolTgQ02 = 0.0;
        	Double totAccPlanVolTgQ03 = 0.0;
        	Double totAccPlanVolTgQ04 = 0.0;
        	Double totAccPlanVolTgH01 = 0.0;
        	Double totAccPlanVolTgH02 = 0.0;
        	Double totAccPlanVolTgYTD = 0.0;
        	
        	
        	if(dkDeplFcAcP01 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_P01", "", "")) != 0){
        		totAccPlanVolAcP01=((getSum(data, colIdx, grpTxt, "NOTAG_AC_P01", "", "")/dkDeplFcAcP01));
        	};
        	if(dkDeplFcAcP02 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_P02", "", "")) != 0){
        		totAccPlanVolAcP02=((getSum(data, colIdx, grpTxt, "NOTAG_AC_P02", "", "")/dkDeplFcAcP02));
        	};
        	if(dkDeplFcAcP03 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_P03", "", "")) != 0){
        		totAccPlanVolAcP03=((getSum(data, colIdx, grpTxt, "NOTAG_AC_P03", "", "")/dkDeplFcAcP03));
        	};
        	if(dkDeplFcAcP04 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_P04", "", "")) != 0){
        		totAccPlanVolAcP04=((getSum(data, colIdx, grpTxt, "NOTAG_AC_P04", "", "")/dkDeplFcAcP04));
        	};
        	if(dkDeplFcAcP05 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_P05", "", "")) != 0){
        		totAccPlanVolAcP05=((getSum(data, colIdx, grpTxt, "NOTAG_AC_P05", "", "")/dkDeplFcAcP05));
        	};
        	if(dkDeplFcAcP06 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_P06", "", "")) != 0){
        		totAccPlanVolAcP06=((getSum(data, colIdx, grpTxt, "NOTAG_AC_P06", "", "")/dkDeplFcAcP06));
        	};
        	if(dkDeplFcAcP07 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_P07", "", "")) != 0){
        		totAccPlanVolAcP07=((getSum(data, colIdx, grpTxt, "NOTAG_AC_P07", "", "")/dkDeplFcAcP07));
        	};
        	if(dkDeplFcAcP08 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_P08", "", "")) != 0){
        		totAccPlanVolAcP08=((getSum(data, colIdx, grpTxt, "NOTAG_AC_P08", "", "")/dkDeplFcAcP08));
        	};
        	if(dkDeplFcAcP09 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_P09", "", "")) != 0){
        		totAccPlanVolAcP09=((getSum(data, colIdx, grpTxt, "NOTAG_AC_P09", "", "")/dkDeplFcAcP09));
        	};
        	if(dkDeplFcAcP10 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_P10", "", "")) != 0){
        		totAccPlanVolAcP10=((getSum(data, colIdx, grpTxt, "NOTAG_AC_P10", "", "")/dkDeplFcAcP10));
        	};
        	if(dkDeplFcAcP11 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_P11", "", "")) != 0){
        		totAccPlanVolAcP11=((getSum(data, colIdx, grpTxt, "NOTAG_AC_P11", "", "")/dkDeplFcAcP11));
        	};
        	if(dkDeplFcAcP12 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_P12", "", "")) != 0){
        		totAccPlanVolAcP12=((getSum(data, colIdx, grpTxt, "NOTAG_AC_P12", "", "")/dkDeplFcAcP12));
        	};
        	if(dkDeplFcAcQ01 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_Q01", "", "")) != 0){
        		totAccPlanVolAcQ01=((getSum(data, colIdx, grpTxt, "NOTAG_AC_Q01", "", "")/dkDeplFcAcQ01));
        	};
        	if(dkDeplFcAcQ02 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_Q02", "", "")) != 0){
        		totAccPlanVolAcQ02=((getSum(data, colIdx, grpTxt, "NOTAG_AC_Q02", "", "")/dkDeplFcAcQ02));
        	};
        	if(dkDeplFcAcQ03 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_Q03", "", "")) != 0){
        		totAccPlanVolAcQ03=((getSum(data, colIdx, grpTxt, "NOTAG_AC_Q03", "", "")/dkDeplFcAcQ03));
        	};
        	if(dkDeplFcAcQ04 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_Q04", "", "")) != 0){
        		totAccPlanVolAcQ04=((getSum(data, colIdx, grpTxt, "NOTAG_AC_Q04", "", "")/dkDeplFcAcQ04));
        	};
        	if(dkDeplFcAcH01 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_H01", "", "")) != 0){
        		totAccPlanVolAcH01=((getSum(data, colIdx, grpTxt, "NOTAG_AC_H01", "", "")/dkDeplFcAcH01));
        	};
        	if(dkDeplFcAcH02 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_H02", "", "")) != 0){
        		totAccPlanVolAcH02=((getSum(data, colIdx, grpTxt, "NOTAG_AC_H02", "", "")/dkDeplFcAcH02));
        	};
        	if(ytd_Param.equals("P01")){
        		if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD01", "", "")) != 0){
            		totAccPlanVolAcYTD=((getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD01", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P02")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD02", "", "")) != 0){
            		totAccPlanVolAcYTD=((getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD02", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P03")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD03", "", "")) != 0){
            		totAccPlanVolAcYTD=((getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD03", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P04")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD04", "", "")) != 0){
            		totAccPlanVolAcYTD=((getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD04", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P05")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD05", "", "")) != 0){
            		totAccPlanVolAcYTD=((getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD05", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P06")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD06", "", "")) != 0){
            		totAccPlanVolAcYTD=((getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD06", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P07")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD07", "", "")) != 0){
            		totAccPlanVolAcYTD=((getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD07", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P08")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD08", "", "")) != 0){
            		totAccPlanVolAcYTD=((getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD08", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P09")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD09", "", "")) != 0){
            		totAccPlanVolAcYTD=((getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD09", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P10")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD10", "", "")) != 0){
            		totAccPlanVolAcYTD=((getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD10", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P11")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD11", "", "")) != 0){
            		totAccPlanVolAcYTD=((getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD11", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P12")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD12", "", "")) != 0){
            		totAccPlanVolAcYTD=((getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD12", "", "")/dkDeplFcAcYTD));
            	};
			}else{
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD12", "", "")) != 0){
            		totAccPlanVolAcYTD=((getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD12", "", "")/dkDeplFcAcYTD));
            	};
			}
        	
        	
        	if(dkDeplFcAcP01 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P01", "", "")) != 0){
        		totAccPlanVolForP01=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_P01", "", "")/dkDeplFcAcP01));
        	};
        	if(dkDeplFcAcP02 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P02", "", "")) != 0){
        		totAccPlanVolForP02=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_P02", "", "")/dkDeplFcAcP02));
        	};
        	if(dkDeplFcAcP03 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P03", "", "")) != 0){
        		totAccPlanVolForP03=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_P03", "", "")/dkDeplFcAcP03));
        	};
        	if(dkDeplFcAcP04 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P04", "", "")) != 0){
        		totAccPlanVolForP04=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_P04", "", "")/dkDeplFcAcP04));
        	};
        	if(dkDeplFcAcP05 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P05", "", "")) != 0){
        		totAccPlanVolForP05=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_P05", "", "")/dkDeplFcAcP05));
        	};
        	if(dkDeplFcAcP06 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P06", "", "")) != 0){
        		totAccPlanVolForP06=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_P06", "", "")/dkDeplFcAcP06));
        	};
        	if(dkDeplFcAcP07 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P07", "", "")) != 0){
        		totAccPlanVolForP07=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_P07", "", "")/dkDeplFcAcP07));
        	};
        	if(dkDeplFcAcP08 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P08", "", "")) != 0){
        		totAccPlanVolForP08=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_P08", "", "")/dkDeplFcAcP08));
        	};
        	if(dkDeplFcAcP09 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P09", "", "")) != 0){
        		totAccPlanVolForP09=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_P09", "", "")/dkDeplFcAcP09));
        	};
        	if(dkDeplFcAcP10 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P10", "", "")) != 0){
        		totAccPlanVolForP10=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_P10", "", "")/dkDeplFcAcP10));
        	};
        	if(dkDeplFcAcP11 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P11", "", "")) != 0){
        		totAccPlanVolForP11=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_P11", "", "")/dkDeplFcAcP11));
        	};
        	if(dkDeplFcAcP12 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P12", "", "")) != 0){
        		totAccPlanVolForP12=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_P12", "", "")/dkDeplFcAcP12));
        	};
        	if(dkDeplFcAcQ01 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q01", "", "")) != 0){
        		totAccPlanVolForQ01=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q01", "", "")/dkDeplFcAcQ01));
        	};
        	if(dkDeplFcAcQ02 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q02", "", "")) != 0){
        		totAccPlanVolForQ02=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q02", "", "")/dkDeplFcAcQ02));
        	};
        	if(dkDeplFcAcQ03 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q03", "", "")) != 0){
        		totAccPlanVolForQ03=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q03", "", "")/dkDeplFcAcQ03));
        	};
        	if(dkDeplFcAcQ04 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q04", "", "")) != 0){
        		totAccPlanVolForQ04=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q04", "", "")/dkDeplFcAcQ04));
        	};
        	if(dkDeplFcAcH01 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_H01", "", "")) != 0){
        		totAccPlanVolForH01=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_H01", "", "")/dkDeplFcAcH01));
        	};
        	if(dkDeplFcAcH02 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_H02", "", "")) != 0){
        		totAccPlanVolForH02=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_H02", "", "")/dkDeplFcAcH02));
        	};
        	if(ytd_Param.equals("P01")){
        		if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD01", "", "")) != 0){
            		totAccPlanVolForYTD=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD01", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P02")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD02", "", "")) != 0){
            		totAccPlanVolForYTD=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD02", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P03")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD03", "", "")) != 0){
            		totAccPlanVolForYTD=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD03", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P04")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD04", "", "")) != 0){
            		totAccPlanVolForYTD=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD04", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P05")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD05", "", "")) != 0){
            		totAccPlanVolForYTD=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD05", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P06")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD06", "", "")) != 0){
            		totAccPlanVolForYTD=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD06", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P07")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD07", "", "")) != 0){
            		totAccPlanVolForYTD=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD07", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P08")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD08", "", "")) != 0){
            		totAccPlanVolForYTD=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD08", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P09")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD09", "", "")) != 0){
            		totAccPlanVolForYTD=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD09", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P10")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD10", "", "")) != 0){
            		totAccPlanVolForYTD=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD10", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P11")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD11", "", "")) != 0){
            		totAccPlanVolForYTD=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD11", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P12")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD12", "", "")) != 0){
            		totAccPlanVolForYTD=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD12", "", "")/dkDeplFcAcYTD));
            	};
			}else{
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD12", "", "")) != 0){
            		totAccPlanVolForYTD=((getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD12", "", "")/dkDeplFcAcYTD));
            	};
			}
        	
        	
        	if(dkDeplFcAcP01 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P01", "", "")) != 0){
        		totAccPlanVolOutP01=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P01", "", "")/dkDeplFcAcP01)*100);
        	};
        	if(dkDeplFcAcP02 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P02", "", "")) != 0){
        		totAccPlanVolOutP02=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P02", "", "")/dkDeplFcAcP02)*100);
        	};
        	if(dkDeplFcAcP03 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P03", "", "")) != 0){
        		totAccPlanVolOutP03=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P03", "", "")/dkDeplFcAcP03)*100);
        	};
        	if(dkDeplFcAcP04 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P04", "", "")) != 0){
        		totAccPlanVolOutP04=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P04", "", "")/dkDeplFcAcP04)*100);
        	};
        	if(dkDeplFcAcP05 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P05", "", "")) != 0){
        		totAccPlanVolOutP05=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P05", "", "")/dkDeplFcAcP05)*100);
        	};
        	if(dkDeplFcAcP06 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P06", "", "")) != 0){
        		totAccPlanVolOutP06=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P06", "", "")/dkDeplFcAcP06)*100);
        	};
        	if(dkDeplFcAcP07 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P07", "", "")) != 0){
        		totAccPlanVolOutP07=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P07", "", "")/dkDeplFcAcP07)*100);
        	};
        	if(dkDeplFcAcP08 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P08", "", "")) != 0){
        		totAccPlanVolOutP08=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P08", "", "")/dkDeplFcAcP08)*100);
        	};
        	if(dkDeplFcAcP09 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P09", "", "")) != 0){
        		totAccPlanVolOutP09=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P09", "", "")/dkDeplFcAcP09)*100);
        	};
        	if(dkDeplFcAcP10 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P10", "", "")) != 0){
        		totAccPlanVolOutP10=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P10", "", "")/dkDeplFcAcP10)*100);
        	};
        	if(dkDeplFcAcP11 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P11", "", "")) != 0){
        		totAccPlanVolOutP11=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P11", "", "")/dkDeplFcAcP11)*100);
        	};
        	if(dkDeplFcAcP12 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P12", "", "")) != 0){
        		totAccPlanVolOutP12=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P12", "", "")/dkDeplFcAcP12)*100);
        	};
        	if(dkDeplFcAcQ01 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q01", "", "")) != 0){
        		totAccPlanVolOutQ01=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q01", "", "")/dkDeplFcAcQ01)*100);
        	};
        	if(dkDeplFcAcQ02 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q02", "", "")) != 0){
        		totAccPlanVolOutQ02=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q02", "", "")/dkDeplFcAcQ02)*100);
        	};
        	if(dkDeplFcAcQ03 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q03", "", "")) != 0){
        		totAccPlanVolOutQ03=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q03", "", "")/dkDeplFcAcQ03)*100);
        	};
        	if(dkDeplFcAcQ04 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q04", "", "")) != 0){
        		totAccPlanVolOutQ04=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q04", "", "")/dkDeplFcAcQ04)*100);
        	};
        	if(dkDeplFcAcH01 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_H01", "", "")) != 0){
        		totAccPlanVolOutH01=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_H01", "", "")/dkDeplFcAcH01)*100);
        	};
        	if(dkDeplFcAcH02 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_H02", "", "")) != 0){
        		totAccPlanVolOutH02=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_H02", "", "")/dkDeplFcAcH02)*100);
        	};
        	if(ytd_Param.equals("P01")){
        		if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD01", "", "")) != 0){
            		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD01", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P02")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD02", "", "")) != 0){
            		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD02", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P03")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD03", "", "")) != 0){
            		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD03", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P04")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD04", "", "")) != 0){
            		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD04", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P05")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD05", "", "")) != 0){
            		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD05", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P06")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD06", "", "")) != 0){
            		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD06", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P07")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD07", "", "")) != 0){
            		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD07", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P08")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD08", "", "")) != 0){
            		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD08", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P09")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD09", "", "")) != 0){
            		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD09", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P10")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD10", "", "")) != 0){
            		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD10", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P11")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD11", "", "")) != 0){
            		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD11", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P12")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", "", "")) != 0){
            		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else{
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", "", "")) != 0){
            		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", "", "")/dkDeplFcAcYTD)*100);
            	};
			}
        	
        	
        	if(dkDeplFcAcP01 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P01", "", "")) != 0){
        		totAccPlanVolTgP01=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P01", "", "")/dkDeplFcAcP01)*100);
        	};
        	if(dkDeplFcAcP02 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P02", "", "")) != 0){
        		totAccPlanVolTgP02=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P02", "", "")/dkDeplFcAcP02)*100);
        	};
        	if(dkDeplFcAcP03 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P03", "", "")) != 0){
        		totAccPlanVolTgP03=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P03", "", "")/dkDeplFcAcP03)*100);
        	};
        	if(dkDeplFcAcP04 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P04", "", "")) != 0){
        		totAccPlanVolTgP04=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P04", "", "")/dkDeplFcAcP04)*100);
        	};
        	if(dkDeplFcAcP05 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P05", "", "")) != 0){
        		totAccPlanVolTgP05=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P05", "", "")/dkDeplFcAcP05)*100);
        	};
        	if(dkDeplFcAcP06 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P06", "", "")) != 0){
        		totAccPlanVolTgP06=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P06", "", "")/dkDeplFcAcP06)*100);
        	};
        	if(dkDeplFcAcP07 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P07", "", "")) != 0){
        		totAccPlanVolTgP07=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P07", "", "")/dkDeplFcAcP07)*100);
        	};
        	if(dkDeplFcAcP08 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P08", "", "")) != 0){
        		totAccPlanVolTgP08=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P08", "", "")/dkDeplFcAcP08)*100);
        	};
        	if(dkDeplFcAcP09 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P09", "", "")) != 0){
        		totAccPlanVolTgP09=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P09", "", "")/dkDeplFcAcP09)*100);
        	};
        	if(dkDeplFcAcP10 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P10", "", "")) != 0){
        		totAccPlanVolTgP10=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P10", "", "")/dkDeplFcAcP10)*100);
        	};
        	if(dkDeplFcAcP11 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P11", "", "")) != 0){
        		totAccPlanVolTgP11=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P11", "", "")/dkDeplFcAcP11)*100);
        	};
        	if(dkDeplFcAcP12 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P12", "", "")) != 0){
        		totAccPlanVolTgP12=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P12", "", "")/dkDeplFcAcP12)*100);
        	};
        	if(dkDeplFcAcQ01 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_Q01", "", "")) != 0){
        		totAccPlanVolTgQ01=((getSum(data, colIdx, grpTxt, "NOTAG_TG_Q01", "", "")/dkDeplFcAcQ01)*100);
        	};
        	if(dkDeplFcAcQ02 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_Q02", "", "")) != 0){
        		totAccPlanVolTgQ02=((getSum(data, colIdx, grpTxt, "NOTAG_TG_Q02", "", "")/dkDeplFcAcQ02)*100);
        	};
        	if(dkDeplFcAcQ03 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_Q03", "", "")) != 0){
        		totAccPlanVolTgQ03=((getSum(data, colIdx, grpTxt, "NOTAG_TG_Q03", "", "")/dkDeplFcAcQ03)*100);
        	};
        	if(dkDeplFcAcQ04 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_Q04", "", "")) != 0){
        		totAccPlanVolTgQ04=((getSum(data, colIdx, grpTxt, "NOTAG_TG_Q04", "", "")/dkDeplFcAcQ04)*100);
        	};
        	if(dkDeplFcAcH01 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_H01", "", "")) != 0){
        		totAccPlanVolTgH01=((getSum(data, colIdx, grpTxt, "NOTAG_TG_H01", "", "")/dkDeplFcAcH01)*100);
        	};
        	if(dkDeplFcAcH02 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_H02", "", "")) != 0){
        		totAccPlanVolTgH02=((getSum(data, colIdx, grpTxt, "NOTAG_TG_H02", "", "")/dkDeplFcAcH02)*100);
        	};
        	if(ytd_Param.equals("P01")){
        		if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD01", "", "")) != 0){
            		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD01", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P02")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD02", "", "")) != 0){
            		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD02", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P03")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD03", "", "")) != 0){
            		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD03", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P04")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD04", "", "")) != 0){
            		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD04", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P05")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD05", "", "")) != 0){
            		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD05", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P06")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD06", "", "")) != 0){
            		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD06", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P07")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD07", "", "")) != 0){
            		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD07", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P08")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD08", "", "")) != 0){
            		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD08", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P09")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD09", "", "")) != 0){
            		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD09", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P10")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD10", "", "")) != 0){
            		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD10", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P11")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD11", "", "")) != 0){
            		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD11", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else if(ytd_Param.equals("P12")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", "", "")) != 0){
            		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", "", "")/dkDeplFcAcYTD)*100);
            	};
			}else{
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", "", "")) != 0){
            		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", "", "")/dkDeplFcAcYTD)*100);
            	};
			}
        	
        	if(periodChk_Param.equals("Y")){
        		
        		for(int i=4; i<42; i++){
    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
    				row.getCell(i).setCellStyle(style);
    			}
        		
        		row.getCell(4).setCellValue(totAccPlanVolAcP01);
        		row.getCell(5).setCellValue(totAccPlanVolAcP02);
        		row.getCell(6).setCellValue(totAccPlanVolAcP03);
        		row.getCell(7).setCellValue(totAccPlanVolAcP04);
        		row.getCell(8).setCellValue(totAccPlanVolAcP05);
        		row.getCell(9).setCellValue(totAccPlanVolAcP06);
        		row.getCell(10).setCellValue(totAccPlanVolAcP07);
        		row.getCell(11).setCellValue(totAccPlanVolAcP08);
        		row.getCell(12).setCellValue(totAccPlanVolAcP09);
        		row.getCell(13).setCellValue(totAccPlanVolAcP10);
        		row.getCell(14).setCellValue(totAccPlanVolAcP11);
        		row.getCell(15).setCellValue(totAccPlanVolAcP12);
        		row.getCell(16).setCellValue(totAccPlanVolAcQ01);
        		row.getCell(17).setCellValue(totAccPlanVolAcQ02);
        		row.getCell(18).setCellValue(totAccPlanVolAcQ03);
        		row.getCell(19).setCellValue(totAccPlanVolAcQ04);
            	row.getCell(20).setCellValue(totAccPlanVolAcH01);
            	row.getCell(21).setCellValue(totAccPlanVolAcH02);
            	row.getCell(22).setCellValue(totAccPlanVolAcYTD);
        		row.getCell(23).setCellValue(totAccPlanVolForP01);
        		row.getCell(24).setCellValue(totAccPlanVolForP02);
        		row.getCell(25).setCellValue(totAccPlanVolForP03);
        		row.getCell(26).setCellValue(totAccPlanVolForP04);
        		row.getCell(27).setCellValue(totAccPlanVolForP05);
        		row.getCell(28).setCellValue(totAccPlanVolForP06);
        		row.getCell(29).setCellValue(totAccPlanVolForP07);
        		row.getCell(30).setCellValue(totAccPlanVolForP08);
        		row.getCell(31).setCellValue(totAccPlanVolForP09);
        		row.getCell(32).setCellValue(totAccPlanVolForP10);
        		row.getCell(33).setCellValue(totAccPlanVolForP11);
        		row.getCell(34).setCellValue(totAccPlanVolForP12);
        		row.getCell(35).setCellValue(totAccPlanVolForQ01);
        		row.getCell(36).setCellValue(totAccPlanVolForQ02);
        		row.getCell(37).setCellValue(totAccPlanVolForQ03);
        		row.getCell(38).setCellValue(totAccPlanVolForQ04);
            	row.getCell(39).setCellValue(totAccPlanVolForH01);
            	row.getCell(40).setCellValue(totAccPlanVolForH02);
            	row.getCell(41).setCellValue(totAccPlanVolForYTD);
        	
    		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
    			
    			for(int i=4; i<16; i++){
    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
    				row.getCell(i).setCellStyle(style);
    			}
    			
    			row.getCell(4).setCellValue(totAccPlanVolAcP01);
    			row.getCell(5).setCellValue(totAccPlanVolAcP02);
    			row.getCell(6).setCellValue(totAccPlanVolAcP03);
    	    	row.getCell(7).setCellValue(totAccPlanVolAcQ01);
    	    	row.getCell(8).setCellValue(totAccPlanVolAcH01);
    	    	row.getCell(9).setCellValue(totAccPlanVolAcYTD);
    	    	row.getCell(10).setCellValue(totAccPlanVolForP01);
    	    	row.getCell(11).setCellValue(totAccPlanVolForP02);
    	    	row.getCell(12).setCellValue(totAccPlanVolForP03);
    	    	row.getCell(13).setCellValue(totAccPlanVolForQ01);
    	    	row.getCell(14).setCellValue(totAccPlanVolForH01);
    	    	row.getCell(15).setCellValue(totAccPlanVolForYTD);
    	    	
    		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
    			
    			for(int i=4; i<18; i++){
    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
    				row.getCell(i).setCellStyle(style);
    			}
    			
    			row.getCell(4).setCellValue(totAccPlanVolAcP04);
    			row.getCell(5).setCellValue(totAccPlanVolAcP05);
    			row.getCell(6).setCellValue(totAccPlanVolAcP06);
    	    	row.getCell(7).setCellValue(totAccPlanVolAcQ01);
    	    	row.getCell(8).setCellValue(totAccPlanVolAcQ02);
    	    	row.getCell(9).setCellValue(totAccPlanVolAcH01);
    	    	row.getCell(10).setCellValue(totAccPlanVolAcYTD);
    	    	row.getCell(11).setCellValue(totAccPlanVolForP04);
    	    	row.getCell(12).setCellValue(totAccPlanVolForP05);
    	    	row.getCell(13).setCellValue(totAccPlanVolForP06);
    	    	row.getCell(14).setCellValue(totAccPlanVolForQ01);
    	    	row.getCell(15).setCellValue(totAccPlanVolForQ02);
    	    	row.getCell(16).setCellValue(totAccPlanVolForH01);
    	    	row.getCell(17).setCellValue(totAccPlanVolForYTD);
    	    	
    		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
    			
    			for(int i=4; i<20; i++){
    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
    				row.getCell(i).setCellStyle(style);
    			}
    			
    			row.getCell(4).setCellValue(totAccPlanVolAcP07);
    			row.getCell(5).setCellValue(totAccPlanVolAcP08);
    			row.getCell(6).setCellValue(totAccPlanVolAcP09);
    	    	row.getCell(7).setCellValue(totAccPlanVolAcQ02);
    	    	row.getCell(8).setCellValue(totAccPlanVolAcQ03);
    	    	row.getCell(9).setCellValue(totAccPlanVolAcH01);
    	    	row.getCell(10).setCellValue(totAccPlanVolAcH02);
    	    	row.getCell(11).setCellValue(totAccPlanVolAcYTD);
    	    	row.getCell(12).setCellValue(totAccPlanVolForP07);
    	    	row.getCell(13).setCellValue(totAccPlanVolForP08);
    	    	row.getCell(14).setCellValue(totAccPlanVolForP09);
    	    	row.getCell(15).setCellValue(totAccPlanVolForQ02);
    	    	row.getCell(16).setCellValue(totAccPlanVolForQ03);
    	    	row.getCell(17).setCellValue(totAccPlanVolForH01);
    	    	row.getCell(18).setCellValue(totAccPlanVolForH02);
    	    	row.getCell(19).setCellValue(totAccPlanVolForYTD);
    	    	
    		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
    			
    			for(int i=4; i<20; i++){
    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
    				row.getCell(i).setCellStyle(style);
    			}
    			
    			row.getCell(4).setCellValue(totAccPlanVolAcP10);
    			row.getCell(5).setCellValue(totAccPlanVolAcP11);
    			row.getCell(6).setCellValue(totAccPlanVolAcP12);
    	    	row.getCell(7).setCellValue(totAccPlanVolAcQ03);
    	    	row.getCell(8).setCellValue(totAccPlanVolAcQ04);
    	    	row.getCell(9).setCellValue(totAccPlanVolAcH01);
    	    	row.getCell(10).setCellValue(totAccPlanVolAcH02);
    	    	row.getCell(11).setCellValue(totAccPlanVolAcYTD);
    	    	row.getCell(12).setCellValue(totAccPlanVolForP10);
    	    	row.getCell(13).setCellValue(totAccPlanVolForP11);
    	    	row.getCell(14).setCellValue(totAccPlanVolForP12);
    	    	row.getCell(15).setCellValue(totAccPlanVolForQ03);
    	    	row.getCell(16).setCellValue(totAccPlanVolForQ04);
    	    	row.getCell(17).setCellValue(totAccPlanVolForH01);
    	    	row.getCell(18).setCellValue(totAccPlanVolForH02);
    	    	row.getCell(19).setCellValue(totAccPlanVolForYTD);
    	    	
    		}
        	
        	// 계산식을 위해 리스트에 값을 담아준다.
	    	noteGMap = new HashMap();
	    	
	    	noteGMap.put("STYLETXT", styleTxt);
	    	noteGMap.put("TOTAL", "");
	    	noteGMap.put("NOTAG_AC_P01", totAccPlanVolAcP01);
			noteGMap.put("NOTAG_AC_P02", totAccPlanVolAcP02);
			noteGMap.put("NOTAG_AC_P03", totAccPlanVolAcP03);
			noteGMap.put("NOTAG_AC_P04", totAccPlanVolAcP04);
			noteGMap.put("NOTAG_AC_P05", totAccPlanVolAcP05);
			noteGMap.put("NOTAG_AC_P06", totAccPlanVolAcP06);
			noteGMap.put("NOTAG_AC_P07", totAccPlanVolAcP07);
			noteGMap.put("NOTAG_AC_P08", totAccPlanVolAcP08);
			noteGMap.put("NOTAG_AC_P09", totAccPlanVolAcP09);
			noteGMap.put("NOTAG_AC_P10", totAccPlanVolAcP10);
			noteGMap.put("NOTAG_AC_P11", totAccPlanVolAcP11);
			noteGMap.put("NOTAG_AC_P12", totAccPlanVolAcP12);
			noteGMap.put("NOTAG_AC_Q01", totAccPlanVolAcQ01);
			noteGMap.put("NOTAG_AC_Q02", totAccPlanVolAcQ02);
			noteGMap.put("NOTAG_AC_Q03", totAccPlanVolAcQ03);
			noteGMap.put("NOTAG_AC_Q04", totAccPlanVolAcQ04);
			noteGMap.put("NOTAG_AC_H01", totAccPlanVolAcH01);
			noteGMap.put("NOTAG_AC_H02", totAccPlanVolAcH02);
			noteGMap.put("NOTAG_AC_YTD", totAccPlanVolAcYTD);
			
			noteGMap.put("NOTAG_FOR_P01", totAccPlanVolForP01);
			noteGMap.put("NOTAG_FOR_P02", totAccPlanVolForP02);
			noteGMap.put("NOTAG_FOR_P03", totAccPlanVolForP03);
			noteGMap.put("NOTAG_FOR_P04", totAccPlanVolForP04);
			noteGMap.put("NOTAG_FOR_P05", totAccPlanVolForP05);
			noteGMap.put("NOTAG_FOR_P06", totAccPlanVolForP06);
			noteGMap.put("NOTAG_FOR_P07", totAccPlanVolForP07);
			noteGMap.put("NOTAG_FOR_P08", totAccPlanVolForP08);
			noteGMap.put("NOTAG_FOR_P09", totAccPlanVolForP09);
			noteGMap.put("NOTAG_FOR_P10", totAccPlanVolForP10);
			noteGMap.put("NOTAG_FOR_P11", totAccPlanVolForP11);
			noteGMap.put("NOTAG_FOR_P12", totAccPlanVolForP12);
			noteGMap.put("NOTAG_FOR_Q01", totAccPlanVolForQ01);
			noteGMap.put("NOTAG_FOR_Q02", totAccPlanVolForQ02);
			noteGMap.put("NOTAG_FOR_Q03", totAccPlanVolForQ03);
			noteGMap.put("NOTAG_FOR_Q04", totAccPlanVolForQ04);
			noteGMap.put("NOTAG_FOR_H01", totAccPlanVolForH01);
			noteGMap.put("NOTAG_FOR_H02", totAccPlanVolForH02);
			noteGMap.put("NOTAG_FOR_YTD", totAccPlanVolForYTD);
			
			noteGMap.put("NOTAG_OUT_P01", totAccPlanVolOutP01);
			noteGMap.put("NOTAG_OUT_P02", totAccPlanVolOutP02);
			noteGMap.put("NOTAG_OUT_P03", totAccPlanVolOutP03);
			noteGMap.put("NOTAG_OUT_P04", totAccPlanVolOutP04);
			noteGMap.put("NOTAG_OUT_P05", totAccPlanVolOutP05);
			noteGMap.put("NOTAG_OUT_P06", totAccPlanVolOutP06);
			noteGMap.put("NOTAG_OUT_P07", totAccPlanVolOutP07);
			noteGMap.put("NOTAG_OUT_P08", totAccPlanVolOutP08);
			noteGMap.put("NOTAG_OUT_P09", totAccPlanVolOutP09);
			noteGMap.put("NOTAG_OUT_P10", totAccPlanVolOutP10);
			noteGMap.put("NOTAG_OUT_P11", totAccPlanVolOutP11);
			noteGMap.put("NOTAG_OUT_P12", totAccPlanVolOutP12);
			noteGMap.put("NOTAG_OUT_Q01", totAccPlanVolOutQ01);
			noteGMap.put("NOTAG_OUT_Q02", totAccPlanVolOutQ02);
			noteGMap.put("NOTAG_OUT_Q03", totAccPlanVolOutQ03);
			noteGMap.put("NOTAG_OUT_Q04", totAccPlanVolOutQ04);
			noteGMap.put("NOTAG_OUT_H01", totAccPlanVolOutH01);
			noteGMap.put("NOTAG_OUT_H02", totAccPlanVolOutH02);
			noteGMap.put("NOTAG_OUT_YTD", totAccPlanVolOutYTD);
			
			noteGMap.put("NOTAG_TG_P01", totAccPlanVolTgP01);
			noteGMap.put("NOTAG_TG_P02", totAccPlanVolTgP02);
			noteGMap.put("NOTAG_TG_P03", totAccPlanVolTgP03);
			noteGMap.put("NOTAG_TG_P04", totAccPlanVolTgP04);
			noteGMap.put("NOTAG_TG_P05", totAccPlanVolTgP05);
			noteGMap.put("NOTAG_TG_P06", totAccPlanVolTgP06);
			noteGMap.put("NOTAG_TG_P07", totAccPlanVolTgP07);
			noteGMap.put("NOTAG_TG_P08", totAccPlanVolTgP08);
			noteGMap.put("NOTAG_TG_P09", totAccPlanVolTgP09);
			noteGMap.put("NOTAG_TG_P10", totAccPlanVolTgP10);
			noteGMap.put("NOTAG_TG_P11", totAccPlanVolTgP11);
			noteGMap.put("NOTAG_TG_P12", totAccPlanVolTgP12);
			noteGMap.put("NOTAG_TG_Q01", totAccPlanVolTgQ01);
			noteGMap.put("NOTAG_TG_Q02", totAccPlanVolTgQ02);
			noteGMap.put("NOTAG_TG_Q03", totAccPlanVolTgQ03);
			noteGMap.put("NOTAG_TG_Q04", totAccPlanVolTgQ04);
			noteGMap.put("NOTAG_TG_H01", totAccPlanVolTgH01);
			noteGMap.put("NOTAG_TG_H02", totAccPlanVolTgH02);
			noteGMap.put("NOTAG_TG_YTD", totAccPlanVolTgYTD);
			
		}else{
			
			// Whisky Note G Spending 합계
			if(onIdx.equals("DATALV1_NM")){
				
	        	Double whNoteGSpendAcP01 = 0.0;
	        	Double whNoteGSpendAcP02 = 0.0;
	        	Double whNoteGSpendAcP03 = 0.0;
	        	Double whNoteGSpendAcP04 = 0.0;
	        	Double whNoteGSpendAcP05 = 0.0;
	        	Double whNoteGSpendAcP06 = 0.0;
	        	Double whNoteGSpendAcP07 = 0.0;
	        	Double whNoteGSpendAcP08 = 0.0;
	        	Double whNoteGSpendAcP09 = 0.0;
	        	Double whNoteGSpendAcP10 = 0.0;
	        	Double whNoteGSpendAcP11 = 0.0;
	        	Double whNoteGSpendAcP12 = 0.0;
	        	Double whNoteGSpendAcQ01 = 0.0;
	        	Double whNoteGSpendAcQ02 = 0.0;
	        	Double whNoteGSpendAcQ03 = 0.0;
	        	Double whNoteGSpendAcQ04 = 0.0;
	        	Double whNoteGSpendAcH01 = 0.0;
	        	Double whNoteGSpendAcH02 = 0.0;
	        	Double whNoteGSpendAcYTD = 0.0;
	        	
	        	Double whNoteGSpendForP01 = 0.0;
	        	Double whNoteGSpendForP02 = 0.0;
	        	Double whNoteGSpendForP03 = 0.0;
	        	Double whNoteGSpendForP04 = 0.0;
	        	Double whNoteGSpendForP05 = 0.0;
	        	Double whNoteGSpendForP06 = 0.0;
	        	Double whNoteGSpendForP07 = 0.0;
	        	Double whNoteGSpendForP08 = 0.0;
	        	Double whNoteGSpendForP09 = 0.0;
	        	Double whNoteGSpendForP10 = 0.0;
	        	Double whNoteGSpendForP11 = 0.0;
	        	Double whNoteGSpendForP12 = 0.0;
	        	Double whNoteGSpendForQ01 = 0.0;
	        	Double whNoteGSpendForQ02 = 0.0;
	        	Double whNoteGSpendForQ03 = 0.0;
	        	Double whNoteGSpendForQ04 = 0.0;
	        	Double whNoteGSpendForH01 = 0.0;
	        	Double whNoteGSpendForH02 = 0.0;
	        	Double whNoteGSpendForYTD = 0.0;
	        	
	        	Double whNoteGSpendOutP01 = 0.0;
	        	Double whNoteGSpendOutP02 = 0.0;
	        	Double whNoteGSpendOutP03 = 0.0;
	        	Double whNoteGSpendOutP04 = 0.0;
	        	Double whNoteGSpendOutP05 = 0.0;
	        	Double whNoteGSpendOutP06 = 0.0;
	        	Double whNoteGSpendOutP07 = 0.0;
	        	Double whNoteGSpendOutP08 = 0.0;
	        	Double whNoteGSpendOutP09 = 0.0;
	        	Double whNoteGSpendOutP10 = 0.0;
	        	Double whNoteGSpendOutP11 = 0.0;
	        	Double whNoteGSpendOutP12 = 0.0;
	        	Double whNoteGSpendOutQ01 = 0.0;
	        	Double whNoteGSpendOutQ02 = 0.0;
	        	Double whNoteGSpendOutQ03 = 0.0;
	        	Double whNoteGSpendOutQ04 = 0.0;
	        	Double whNoteGSpendOutH01 = 0.0;
	        	Double whNoteGSpendOutH02 = 0.0;
	        	Double whNoteGSpendOutYTD = 0.0;
	        	
	        	Double whNoteGSpendTgP01 = 0.0;
	        	Double whNoteGSpendTgP02 = 0.0;
	        	Double whNoteGSpendTgP03 = 0.0;
	        	Double whNoteGSpendTgP04 = 0.0;
	        	Double whNoteGSpendTgP05 = 0.0;
	        	Double whNoteGSpendTgP06 = 0.0;
	        	Double whNoteGSpendTgP07 = 0.0;
	        	Double whNoteGSpendTgP08 = 0.0;
	        	Double whNoteGSpendTgP09 = 0.0;
	        	Double whNoteGSpendTgP10 = 0.0;
	        	Double whNoteGSpendTgP11 = 0.0;
	        	Double whNoteGSpendTgP12 = 0.0;
	        	Double whNoteGSpendTgQ01 = 0.0;
	        	Double whNoteGSpendTgQ02 = 0.0;
	        	Double whNoteGSpendTgQ03 = 0.0;
	        	Double whNoteGSpendTgQ04 = 0.0;
	        	Double whNoteGSpendTgH01 = 0.0;
	        	Double whNoteGSpendTgH02 = 0.0;
	        	Double whNoteGSpendTgYTD = 0.0;
	        	
	        	whNoteGSpendAcP01 = (getSum(data, colIdx, grpTxt, "NOTAG_AC_P01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_P01", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendAcP02 = (getSum(data, colIdx, grpTxt, "NOTAG_AC_P02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_P02", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendAcP03 = (getSum(data, colIdx, grpTxt, "NOTAG_AC_P03", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_P03", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendAcP04 = (getSum(data, colIdx, grpTxt, "NOTAG_AC_P04", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_P04", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendAcP05 = (getSum(data, colIdx, grpTxt, "NOTAG_AC_P05", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_P05", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendAcP06 = (getSum(data, colIdx, grpTxt, "NOTAG_AC_P06", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_P06", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendAcP07 = (getSum(data, colIdx, grpTxt, "NOTAG_AC_P07", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_P07", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendAcP08 = (getSum(data, colIdx, grpTxt, "NOTAG_AC_P08", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_P08", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendAcP09 = (getSum(data, colIdx, grpTxt, "NOTAG_AC_P09", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_P09", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendAcP10 = (getSum(data, colIdx, grpTxt, "NOTAG_AC_P10", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_P10", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendAcP11 = (getSum(data, colIdx, grpTxt, "NOTAG_AC_P11", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_P11", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendAcP12 = (getSum(data, colIdx, grpTxt, "NOTAG_AC_P12", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_P12", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendAcQ01 = (getSum(data, colIdx, grpTxt, "NOTAG_AC_Q01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_Q01", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendAcQ02 = (getSum(data, colIdx, grpTxt, "NOTAG_AC_Q02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_Q02", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendAcQ03 = (getSum(data, colIdx, grpTxt, "NOTAG_AC_Q03", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_Q03", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendAcQ04 = (getSum(data, colIdx, grpTxt, "NOTAG_AC_Q04", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_Q04", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendAcH01 = (getSum(data, colIdx, grpTxt, "NOTAG_AC_H01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_H01", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendAcH02 = (getSum(data, colIdx, grpTxt, "NOTAG_AC_H02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_H02", "DATALV1_NM", "INT`L"));
	        	if(ytd_Param.equals("P01")){
	        		whNoteGSpendAcYTD = (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD01", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P02")){
					whNoteGSpendAcYTD = (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD02", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P03")){
					whNoteGSpendAcYTD = (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD03", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD03", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P04")){
					whNoteGSpendAcYTD = (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD04", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD04", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P05")){
					whNoteGSpendAcYTD = (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD05", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD05", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P06")){
					whNoteGSpendAcYTD = (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD06", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD06", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P07")){
					whNoteGSpendAcYTD = (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD07", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD07", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P08")){
					whNoteGSpendAcYTD = (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD08", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD08", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P09")){
					whNoteGSpendAcYTD = (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD09", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD09", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P10")){
					whNoteGSpendAcYTD = (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD10", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD10", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P11")){
					whNoteGSpendAcYTD = (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD11", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD11", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P12")){
					whNoteGSpendAcYTD = (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD12", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD12", "DATALV1_NM", "INT`L"));
				}else{
					whNoteGSpendAcYTD = (getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD12", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD12", "DATALV1_NM", "INT`L"));
				}
	        	
	        	whNoteGSpendForP01 = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_P01", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendForP02 = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_P02", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendForP03 = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P03", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_P03", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendForP04 = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P04", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_P04", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendForP05 = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P05", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_P05", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendForP06 = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P06", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_P06", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendForP07 = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P07", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_P07", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendForP08 = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P08", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_P08", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendForP09 = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P09", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_P09", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendForP10 = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P10", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_P10", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendForP11 = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P11", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_P11", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendForP12 = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_P12", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_P12", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendForQ01 = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q01", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendForQ02 = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q02", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendForQ03 = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q03", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q03", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendForQ04 = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q04", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q04", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendForH01 = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_H01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_H01", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendForH02 = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_H02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_H02", "DATALV1_NM", "INT`L"));
	        	if(ytd_Param.equals("P01")){
	        		whNoteGSpendForYTD = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD01", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P02")){
					whNoteGSpendForYTD = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD02", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P03")){
					whNoteGSpendForYTD = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD03", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD03", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P04")){
					whNoteGSpendForYTD = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD04", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD04", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P05")){
					whNoteGSpendForYTD = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD05", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD05", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P06")){
					whNoteGSpendForYTD = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD06", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD06", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P07")){
					whNoteGSpendForYTD = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD07", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD07", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P08")){
					whNoteGSpendForYTD = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD08", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD08", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P09")){
					whNoteGSpendForYTD = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD09", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD09", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P10")){
					whNoteGSpendForYTD = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD10", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD10", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P11")){
					whNoteGSpendForYTD = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD11", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD11", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P12")){
					whNoteGSpendForYTD = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD12", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD12", "DATALV1_NM", "INT`L"));
				}else{
					whNoteGSpendForYTD = (getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD12", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD12", "DATALV1_NM", "INT`L"));
				}
	        	
	        	whNoteGSpendOutP01 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P01", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP02 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P02", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP03 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P03", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P03", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP04 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P04", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P04", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP05 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P05", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P05", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP06 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P06", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P06", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP07 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P07", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P07", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP08 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P08", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P08", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP09 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P09", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P09", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP10 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P10", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P10", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP11 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P11", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P11", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP12 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P12", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P12", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutQ01 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q01", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutQ02 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q02", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutQ03 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q03", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q03", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutQ04 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q04", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q04", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutH01 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_H01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_H01", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutH02 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_H02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_H02", "DATALV1_NM", "INT`L"));
	        	if(ytd_Param.equals("P01")){
	        		whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD01", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P02")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD02", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P03")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD03", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD03", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P04")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD04", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD04", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P05")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD05", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD05", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P06")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD06", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD06", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P07")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD07", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD07", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P08")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD08", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD08", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P09")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD09", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD09", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P10")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD10", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD10", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P11")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD11", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD11", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P12")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", "DATALV1_NM", "INT`L"));
				}else{
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", "DATALV1_NM", "INT`L"));
				}
	        	
	        	whNoteGSpendTgP01 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P01", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP02 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P02", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP03 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P03", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P03", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP04 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P04", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P04", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP05 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P05", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P05", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP06 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P06", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P06", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP07 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P07", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P07", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP08 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P08", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P08", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP09 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P09", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P09", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP10 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P10", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P10", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP11 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P11", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P11", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP12 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P12", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P12", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgQ01 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_Q01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_Q01", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgQ02 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_Q02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_Q02", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgQ03 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_Q03", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_Q03", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgQ04 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_Q04", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_Q04", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgH01 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_H01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_H01", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgH02 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_H02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_H02", "DATALV1_NM", "INT`L"));
	        	if(ytd_Param.equals("P01")){
	        		whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD01", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P02")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD02", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P03")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD03", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD03", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P04")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD04", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD04", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P05")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD05", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD05", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P06")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD06", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD06", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P07")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD07", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD07", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P08")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD08", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD08", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P09")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD09", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD09", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P10")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD10", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD10", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P11")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD11", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD11", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P12")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", "DATALV1_NM", "INT`L"));
				}else{
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", "DATALV1_NM", "INT`L"));
				}
	        	
	        	if(periodChk_Param.equals("Y")){
		    		
	        		for(int i=4; i<42; i++){
	    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
	    				row.getCell(i).setCellStyle(style);
	    			}
	        		
		    		row.getCell(4).setCellValue(whNoteGSpendAcP01);
		    		row.getCell(5).setCellValue(whNoteGSpendAcP02);
		    		row.getCell(6).setCellValue(whNoteGSpendAcP03);
		    		row.getCell(7).setCellValue(whNoteGSpendAcP04);
		    		row.getCell(8).setCellValue(whNoteGSpendAcP05);
		    		row.getCell(9).setCellValue(whNoteGSpendAcP06);
		    		row.getCell(10).setCellValue(whNoteGSpendAcP07);
		    		row.getCell(11).setCellValue(whNoteGSpendAcP08);
		    		row.getCell(12).setCellValue(whNoteGSpendAcP09);
		    		row.getCell(13).setCellValue(whNoteGSpendAcP10);
		    		row.getCell(14).setCellValue(whNoteGSpendAcP11);
		    		row.getCell(15).setCellValue(whNoteGSpendAcP12);
		    		row.getCell(16).setCellValue(whNoteGSpendAcQ01);
		    		row.getCell(17).setCellValue(whNoteGSpendAcQ02);
		    		row.getCell(18).setCellValue(whNoteGSpendAcQ03);
		    		row.getCell(19).setCellValue(whNoteGSpendAcQ04);
		        	row.getCell(20).setCellValue(whNoteGSpendAcH01);
		        	row.getCell(21).setCellValue(whNoteGSpendAcH02);
		        	row.getCell(22).setCellValue(whNoteGSpendAcYTD);
		    		row.getCell(23).setCellValue(whNoteGSpendForP01);
		    		row.getCell(24).setCellValue(whNoteGSpendForP02);
		    		row.getCell(25).setCellValue(whNoteGSpendForP03);
		    		row.getCell(26).setCellValue(whNoteGSpendForP04);
		    		row.getCell(27).setCellValue(whNoteGSpendForP05);
		    		row.getCell(28).setCellValue(whNoteGSpendForP06);
		    		row.getCell(29).setCellValue(whNoteGSpendForP07);
		    		row.getCell(30).setCellValue(whNoteGSpendForP08);
		    		row.getCell(31).setCellValue(whNoteGSpendForP09);
		    		row.getCell(32).setCellValue(whNoteGSpendForP10);
		    		row.getCell(33).setCellValue(whNoteGSpendForP11);
		    		row.getCell(34).setCellValue(whNoteGSpendForP12);
		    		row.getCell(35).setCellValue(whNoteGSpendForQ01);
		    		row.getCell(36).setCellValue(whNoteGSpendForQ02);
		    		row.getCell(37).setCellValue(whNoteGSpendForQ03);
		    		row.getCell(38).setCellValue(whNoteGSpendForQ04);
		        	row.getCell(39).setCellValue(whNoteGSpendForH01);
		        	row.getCell(40).setCellValue(whNoteGSpendForH02);
		        	row.getCell(41).setCellValue(whNoteGSpendForYTD);
	        	
	    		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
	    			
	    			for(int i=4; i<16; i++){
	    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
	    				row.getCell(i).setCellStyle(style);
	    			}
	    			
	    			row.getCell(4).setCellValue(whNoteGSpendAcP01);
	    			row.getCell(5).setCellValue(whNoteGSpendAcP02);
	    			row.getCell(6).setCellValue(whNoteGSpendAcP03);
	    	    	row.getCell(7).setCellValue(whNoteGSpendAcQ01);
	    	    	row.getCell(8).setCellValue(whNoteGSpendAcH01);
	    	    	row.getCell(9).setCellValue(whNoteGSpendAcYTD);
	    	    	row.getCell(10).setCellValue(whNoteGSpendForP01);
	    	    	row.getCell(11).setCellValue(whNoteGSpendForP02);
	    	    	row.getCell(12).setCellValue(whNoteGSpendForP03);
	    	    	row.getCell(13).setCellValue(whNoteGSpendForQ01);
	    	    	row.getCell(14).setCellValue(whNoteGSpendForH01);
	    	    	row.getCell(15).setCellValue(whNoteGSpendForYTD);
	    	    	
	    		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
	    			
	    			for(int i=4; i<18; i++){
	    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
	    				row.getCell(i).setCellStyle(style);
	    			}
	    			
	    			row.getCell(4).setCellValue(whNoteGSpendAcP04);
	    			row.getCell(5).setCellValue(whNoteGSpendAcP05);
	    			row.getCell(6).setCellValue(whNoteGSpendAcP06);
	    	    	row.getCell(7).setCellValue(whNoteGSpendAcQ01);
	    	    	row.getCell(8).setCellValue(whNoteGSpendAcQ02);
	    	    	row.getCell(9).setCellValue(whNoteGSpendAcH01);
	    	    	row.getCell(10).setCellValue(whNoteGSpendAcYTD);
	    	    	row.getCell(11).setCellValue(whNoteGSpendForP04);
	    	    	row.getCell(12).setCellValue(whNoteGSpendForP05);
	    	    	row.getCell(13).setCellValue(whNoteGSpendForP06);
	    	    	row.getCell(14).setCellValue(whNoteGSpendForQ01);
	    	    	row.getCell(15).setCellValue(whNoteGSpendForQ02);
	    	    	row.getCell(16).setCellValue(whNoteGSpendForH01);
	    	    	row.getCell(17).setCellValue(whNoteGSpendForYTD);
	    	    	
	    		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
	    			
	    			for(int i=4; i<20; i++){
	    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
	    				row.getCell(i).setCellStyle(style);
	    			}
	    			
	    			row.getCell(4).setCellValue(whNoteGSpendAcP07);
	    			row.getCell(5).setCellValue(whNoteGSpendAcP08);
	    			row.getCell(6).setCellValue(whNoteGSpendAcP09);
	    	    	row.getCell(7).setCellValue(whNoteGSpendAcQ02);
	    	    	row.getCell(8).setCellValue(whNoteGSpendAcQ03);
	    	    	row.getCell(9).setCellValue(whNoteGSpendAcH01);
	    	    	row.getCell(10).setCellValue(whNoteGSpendAcH02);
	    	    	row.getCell(11).setCellValue(whNoteGSpendAcYTD);
	    	    	row.getCell(12).setCellValue(whNoteGSpendForP07);
	    	    	row.getCell(13).setCellValue(whNoteGSpendForP08);
	    	    	row.getCell(14).setCellValue(whNoteGSpendForP09);
	    	    	row.getCell(15).setCellValue(whNoteGSpendForQ02);
	    	    	row.getCell(16).setCellValue(whNoteGSpendForQ03);
	    	    	row.getCell(17).setCellValue(whNoteGSpendForH01);
	    	    	row.getCell(18).setCellValue(whNoteGSpendForH02);
	    	    	row.getCell(19).setCellValue(whNoteGSpendForYTD);
	    	    	
	    		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
	    			
	    			for(int i=4; i<20; i++){
	    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
	    				row.getCell(i).setCellStyle(style);
	    			}
	    			
	    			row.getCell(4).setCellValue(whNoteGSpendAcP10);
	    			row.getCell(5).setCellValue(whNoteGSpendAcP11);
	    			row.getCell(6).setCellValue(whNoteGSpendAcP12);
	    	    	row.getCell(7).setCellValue(whNoteGSpendAcQ03);
	    	    	row.getCell(8).setCellValue(whNoteGSpendAcQ04);
	    	    	row.getCell(9).setCellValue(whNoteGSpendAcH01);
	    	    	row.getCell(10).setCellValue(whNoteGSpendAcH02);
	    	    	row.getCell(11).setCellValue(whNoteGSpendAcYTD);
	    	    	row.getCell(12).setCellValue(whNoteGSpendForP10);
	    	    	row.getCell(13).setCellValue(whNoteGSpendForP11);
	    	    	row.getCell(14).setCellValue(whNoteGSpendForP12);
	    	    	row.getCell(15).setCellValue(whNoteGSpendForQ03);
	    	    	row.getCell(16).setCellValue(whNoteGSpendForQ04);
	    	    	row.getCell(17).setCellValue(whNoteGSpendForH01);
	    	    	row.getCell(18).setCellValue(whNoteGSpendForH02);
	    	    	row.getCell(19).setCellValue(whNoteGSpendForYTD);
	    	    	
	    		}
	    		
	        	// 계산식을 위해 리스트에 값을 담아준다.
		    	noteGMap = new HashMap();
		    	
		    	noteGMap.put("STYLETXT", styleTxt);
		    	noteGMap.put("TOTAL", "TOTAL");
		    	noteGMap.put("NOTAG_AC_P01", whNoteGSpendAcP01);
				noteGMap.put("NOTAG_AC_P02", whNoteGSpendAcP02);
				noteGMap.put("NOTAG_AC_P03", whNoteGSpendAcP03);
				noteGMap.put("NOTAG_AC_P04", whNoteGSpendAcP04);
				noteGMap.put("NOTAG_AC_P05", whNoteGSpendAcP05);
				noteGMap.put("NOTAG_AC_P06", whNoteGSpendAcP06);
				noteGMap.put("NOTAG_AC_P07", whNoteGSpendAcP07);
				noteGMap.put("NOTAG_AC_P08", whNoteGSpendAcP08);
				noteGMap.put("NOTAG_AC_P09", whNoteGSpendAcP09);
				noteGMap.put("NOTAG_AC_P10", whNoteGSpendAcP10);
				noteGMap.put("NOTAG_AC_P11", whNoteGSpendAcP11);
				noteGMap.put("NOTAG_AC_P12", whNoteGSpendAcP12);
				noteGMap.put("NOTAG_AC_Q01", whNoteGSpendAcQ01);
				noteGMap.put("NOTAG_AC_Q02", whNoteGSpendAcQ02);
				noteGMap.put("NOTAG_AC_Q03", whNoteGSpendAcQ03);
				noteGMap.put("NOTAG_AC_Q04", whNoteGSpendAcQ04);
				noteGMap.put("NOTAG_AC_H01", whNoteGSpendAcH01);
				noteGMap.put("NOTAG_AC_H02", whNoteGSpendAcH02);
				noteGMap.put("NOTAG_AC_YTD", whNoteGSpendAcYTD);
				
				noteGMap.put("NOTAG_FOR_P01", whNoteGSpendForP01);
				noteGMap.put("NOTAG_FOR_P02", whNoteGSpendForP02);
				noteGMap.put("NOTAG_FOR_P03", whNoteGSpendForP03);
				noteGMap.put("NOTAG_FOR_P04", whNoteGSpendForP04);
				noteGMap.put("NOTAG_FOR_P05", whNoteGSpendForP05);
				noteGMap.put("NOTAG_FOR_P06", whNoteGSpendForP06);
				noteGMap.put("NOTAG_FOR_P07", whNoteGSpendForP07);
				noteGMap.put("NOTAG_FOR_P08", whNoteGSpendForP08);
				noteGMap.put("NOTAG_FOR_P09", whNoteGSpendForP09);
				noteGMap.put("NOTAG_FOR_P10", whNoteGSpendForP10);
				noteGMap.put("NOTAG_FOR_P11", whNoteGSpendForP11);
				noteGMap.put("NOTAG_FOR_P12", whNoteGSpendForP12);
				noteGMap.put("NOTAG_FOR_Q01", whNoteGSpendForQ01);
				noteGMap.put("NOTAG_FOR_Q02", whNoteGSpendForQ02);
				noteGMap.put("NOTAG_FOR_Q03", whNoteGSpendForQ03);
				noteGMap.put("NOTAG_FOR_Q04", whNoteGSpendForQ04);
				noteGMap.put("NOTAG_FOR_H01", whNoteGSpendForH01);
				noteGMap.put("NOTAG_FOR_H02", whNoteGSpendForH02);
				noteGMap.put("NOTAG_FOR_YTD", whNoteGSpendForYTD);
				
				noteGMap.put("NOTAG_OUT_P01", whNoteGSpendOutP01);
				noteGMap.put("NOTAG_OUT_P02", whNoteGSpendOutP02);
				noteGMap.put("NOTAG_OUT_P03", whNoteGSpendOutP03);
				noteGMap.put("NOTAG_OUT_P04", whNoteGSpendOutP04);
				noteGMap.put("NOTAG_OUT_P05", whNoteGSpendOutP05);
				noteGMap.put("NOTAG_OUT_P06", whNoteGSpendOutP06);
				noteGMap.put("NOTAG_OUT_P07", whNoteGSpendOutP07);
				noteGMap.put("NOTAG_OUT_P08", whNoteGSpendOutP08);
				noteGMap.put("NOTAG_OUT_P09", whNoteGSpendOutP09);
				noteGMap.put("NOTAG_OUT_P10", whNoteGSpendOutP10);
				noteGMap.put("NOTAG_OUT_P11", whNoteGSpendOutP11);
				noteGMap.put("NOTAG_OUT_P12", whNoteGSpendOutP12);
				noteGMap.put("NOTAG_OUT_Q01", whNoteGSpendOutQ01);
				noteGMap.put("NOTAG_OUT_Q02", whNoteGSpendOutQ02);
				noteGMap.put("NOTAG_OUT_Q03", whNoteGSpendOutQ03);
				noteGMap.put("NOTAG_OUT_Q04", whNoteGSpendOutQ04);
				noteGMap.put("NOTAG_OUT_H01", whNoteGSpendOutH01);
				noteGMap.put("NOTAG_OUT_H02", whNoteGSpendOutH02);
				noteGMap.put("NOTAG_OUT_YTD", whNoteGSpendOutYTD);
				
				noteGMap.put("NOTAG_TG_P01", whNoteGSpendTgP01);
				noteGMap.put("NOTAG_TG_P02", whNoteGSpendTgP02);
				noteGMap.put("NOTAG_TG_P03", whNoteGSpendTgP03);
				noteGMap.put("NOTAG_TG_P04", whNoteGSpendTgP04);
				noteGMap.put("NOTAG_TG_P05", whNoteGSpendTgP05);
				noteGMap.put("NOTAG_TG_P06", whNoteGSpendTgP06);
				noteGMap.put("NOTAG_TG_P07", whNoteGSpendTgP07);
				noteGMap.put("NOTAG_TG_P08", whNoteGSpendTgP08);
				noteGMap.put("NOTAG_TG_P09", whNoteGSpendTgP09);
				noteGMap.put("NOTAG_TG_P10", whNoteGSpendTgP10);
				noteGMap.put("NOTAG_TG_P11", whNoteGSpendTgP11);
				noteGMap.put("NOTAG_TG_P12", whNoteGSpendTgP12);
				noteGMap.put("NOTAG_TG_Q01", whNoteGSpendTgQ01);
				noteGMap.put("NOTAG_TG_Q02", whNoteGSpendTgQ02);
				noteGMap.put("NOTAG_TG_Q03", whNoteGSpendTgQ03);
				noteGMap.put("NOTAG_TG_Q04", whNoteGSpendTgQ04);
				noteGMap.put("NOTAG_TG_H01", whNoteGSpendTgH01);
				noteGMap.put("NOTAG_TG_H02", whNoteGSpendTgH02);
				noteGMap.put("NOTAG_TG_YTD", whNoteGSpendTgYTD);
				
			}
			
			// Total Note G Spending 합계
			else{
				
				if(periodChk_Param.equals("Y")){
		    		
					for(int i=4; i<42; i++){
						row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
						row.getCell(i).setCellStyle(style);
					}
					
					row.getCell(4).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P01", onIdx, onTxt));
					row.getCell(5).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P02", onIdx, onTxt));
					row.getCell(6).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P03", onIdx, onTxt));
					row.getCell(7).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P04", onIdx, onTxt));
					row.getCell(8).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P05", onIdx, onTxt));
					row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P06", onIdx, onTxt));
					row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P07", onIdx, onTxt));
					row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P08", onIdx, onTxt));
			    	row.getCell(12).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P09", onIdx, onTxt));
			    	row.getCell(13).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P10", onIdx, onTxt));
			    	row.getCell(14).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P11", onIdx, onTxt));
			    	row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P12", onIdx, onTxt));
			    	row.getCell(16).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_Q01", onIdx, onTxt));
			    	row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_Q02", onIdx, onTxt));
			    	row.getCell(18).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_Q03", onIdx, onTxt));
			    	row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_Q04", onIdx, onTxt));
			    	row.getCell(20).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_H01", onIdx, onTxt));
			    	row.getCell(21).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_H02", onIdx, onTxt));
			    	if(ytd_Param.equals("P01")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD01", onIdx, onTxt));
					}else if(ytd_Param.equals("P02")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD02", onIdx, onTxt));
					}else if(ytd_Param.equals("P03")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD03", onIdx, onTxt));
					}else if(ytd_Param.equals("P04")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD04", onIdx, onTxt));
					}else if(ytd_Param.equals("P05")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD05", onIdx, onTxt));
					}else if(ytd_Param.equals("P06")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD06", onIdx, onTxt));
					}else if(ytd_Param.equals("P07")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD07", onIdx, onTxt));
					}else if(ytd_Param.equals("P08")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD08", onIdx, onTxt));
					}else if(ytd_Param.equals("P09")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD09", onIdx, onTxt));
					}else if(ytd_Param.equals("P10")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD10", onIdx, onTxt));
					}else if(ytd_Param.equals("P11")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD11", onIdx, onTxt));
					}else if(ytd_Param.equals("P12")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD12", onIdx, onTxt));
					}else{
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD12", onIdx, onTxt));
					}
			    	row.getCell(23).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P01", onIdx, onTxt));
			    	row.getCell(24).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P02", onIdx, onTxt));
			    	row.getCell(25).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P03", onIdx, onTxt));
			    	row.getCell(26).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P04", onIdx, onTxt));
			    	row.getCell(27).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P05", onIdx, onTxt));
			    	row.getCell(28).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P06", onIdx, onTxt));
			    	row.getCell(29).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P07", onIdx, onTxt));
			    	row.getCell(30).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P08", onIdx, onTxt));
			    	row.getCell(31).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P09", onIdx, onTxt));
			    	row.getCell(32).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P10", onIdx, onTxt));
			    	row.getCell(33).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P11", onIdx, onTxt));
			    	row.getCell(34).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P12", onIdx, onTxt));
			    	row.getCell(35).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q01", onIdx, onTxt));
			    	row.getCell(36).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q02", onIdx, onTxt));
			    	row.getCell(37).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q03", onIdx, onTxt));
			    	row.getCell(38).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q04", onIdx, onTxt));
			    	row.getCell(39).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_H01", onIdx, onTxt));
			    	row.getCell(40).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_H02", onIdx, onTxt));
					if(ytd_Param.equals("P01")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD01", onIdx, onTxt));
					}else if(ytd_Param.equals("P02")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD02", onIdx, onTxt));
					}else if(ytd_Param.equals("P03")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD03", onIdx, onTxt));
					}else if(ytd_Param.equals("P04")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD04", onIdx, onTxt));
					}else if(ytd_Param.equals("P05")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD05", onIdx, onTxt));
					}else if(ytd_Param.equals("P06")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD06", onIdx, onTxt));
					}else if(ytd_Param.equals("P07")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD07", onIdx, onTxt));
					}else if(ytd_Param.equals("P08")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD08", onIdx, onTxt));
					}else if(ytd_Param.equals("P09")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD09", onIdx, onTxt));
					}else if(ytd_Param.equals("P10")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD10", onIdx, onTxt));
					}else if(ytd_Param.equals("P11")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD11", onIdx, onTxt));
					}else if(ytd_Param.equals("P12")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD12", onIdx, onTxt));
					}else{
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD12", onIdx, onTxt));
					}
	        	
	    		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
					
					for(int i=4; i<16; i++){
						row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
						row.getCell(i).setCellStyle(style);
					}
					
					row.getCell(4).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P01", onIdx, onTxt));
					row.getCell(5).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P02", onIdx, onTxt));
					row.getCell(6).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P03", onIdx, onTxt));
			    	row.getCell(7).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_Q01", onIdx, onTxt));
			    	row.getCell(8).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_H01", onIdx, onTxt));
					if(ytd_Param.equals("P01")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD01", onIdx, onTxt));
					}else if(ytd_Param.equals("P02")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD02", onIdx, onTxt));
					}else if(ytd_Param.equals("P03")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD03", onIdx, onTxt));
					}else if(ytd_Param.equals("P04")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD04", onIdx, onTxt));
					}else if(ytd_Param.equals("P05")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD05", onIdx, onTxt));
					}else if(ytd_Param.equals("P06")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD06", onIdx, onTxt));
					}else if(ytd_Param.equals("P07")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD07", onIdx, onTxt));
					}else if(ytd_Param.equals("P08")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD08", onIdx, onTxt));
					}else if(ytd_Param.equals("P09")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD09", onIdx, onTxt));
					}else if(ytd_Param.equals("P10")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD10", onIdx, onTxt));
					}else if(ytd_Param.equals("P11")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD11", onIdx, onTxt));
					}else if(ytd_Param.equals("P12")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD12", onIdx, onTxt));
					}else{
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD12", onIdx, onTxt));
					}
			    	row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P01", onIdx, onTxt));
			    	row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P02", onIdx, onTxt));
			    	row.getCell(12).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P03", onIdx, onTxt));
			    	row.getCell(13).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q01", onIdx, onTxt));
			    	row.getCell(14).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_H01", onIdx, onTxt));
					if(ytd_Param.equals("P01")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD01", onIdx, onTxt));
					}else if(ytd_Param.equals("P02")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD02", onIdx, onTxt));
					}else if(ytd_Param.equals("P03")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD03", onIdx, onTxt));
					}else if(ytd_Param.equals("P04")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD04", onIdx, onTxt));
					}else if(ytd_Param.equals("P05")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD05", onIdx, onTxt));
					}else if(ytd_Param.equals("P06")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD06", onIdx, onTxt));
					}else if(ytd_Param.equals("P07")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD07", onIdx, onTxt));
					}else if(ytd_Param.equals("P08")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD08", onIdx, onTxt));
					}else if(ytd_Param.equals("P09")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD09", onIdx, onTxt));
					}else if(ytd_Param.equals("P10")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD10", onIdx, onTxt));
					}else if(ytd_Param.equals("P11")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD11", onIdx, onTxt));
					}else if(ytd_Param.equals("P12")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD12", onIdx, onTxt));
					}else{
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD12", onIdx, onTxt));
					}
			    	
				}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
					
					for(int i=4; i<18; i++){
						row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
						row.getCell(i).setCellStyle(style);
					}
					
					row.getCell(4).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P04", onIdx, onTxt));
					row.getCell(5).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P05", onIdx, onTxt));
					row.getCell(6).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P06", onIdx, onTxt));
			    	row.getCell(7).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_Q01", onIdx, onTxt));
			    	row.getCell(8).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_Q02", onIdx, onTxt));
			    	row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_H01", onIdx, onTxt));
					if(ytd_Param.equals("P01")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD01", onIdx, onTxt));
					}else if(ytd_Param.equals("P02")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD02", onIdx, onTxt));
					}else if(ytd_Param.equals("P03")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD03", onIdx, onTxt));
					}else if(ytd_Param.equals("P04")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD04", onIdx, onTxt));
					}else if(ytd_Param.equals("P05")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD05", onIdx, onTxt));
					}else if(ytd_Param.equals("P06")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD06", onIdx, onTxt));
					}else if(ytd_Param.equals("P07")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD07", onIdx, onTxt));
					}else if(ytd_Param.equals("P08")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD08", onIdx, onTxt));
					}else if(ytd_Param.equals("P09")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD09", onIdx, onTxt));
					}else if(ytd_Param.equals("P10")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD10", onIdx, onTxt));
					}else if(ytd_Param.equals("P11")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD11", onIdx, onTxt));
					}else if(ytd_Param.equals("P12")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD12", onIdx, onTxt));
					}else{
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD12", onIdx, onTxt));
					}
			    	row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P04", onIdx, onTxt));
			    	row.getCell(12).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P05", onIdx, onTxt));
			    	row.getCell(13).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P06", onIdx, onTxt));
			    	row.getCell(14).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q01", onIdx, onTxt));
			    	row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q02", onIdx, onTxt));
			    	row.getCell(16).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_H01", onIdx, onTxt));
					if(ytd_Param.equals("P01")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD01", onIdx, onTxt));
					}else if(ytd_Param.equals("P02")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD02", onIdx, onTxt));
					}else if(ytd_Param.equals("P03")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD03", onIdx, onTxt));
					}else if(ytd_Param.equals("P04")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD04", onIdx, onTxt));
					}else if(ytd_Param.equals("P05")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD05", onIdx, onTxt));
					}else if(ytd_Param.equals("P06")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD06", onIdx, onTxt));
					}else if(ytd_Param.equals("P07")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD07", onIdx, onTxt));
					}else if(ytd_Param.equals("P08")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD08", onIdx, onTxt));
					}else if(ytd_Param.equals("P09")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD09", onIdx, onTxt));
					}else if(ytd_Param.equals("P10")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD10", onIdx, onTxt));
					}else if(ytd_Param.equals("P11")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD11", onIdx, onTxt));
					}else if(ytd_Param.equals("P12")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD12", onIdx, onTxt));
					}else{
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD12", onIdx, onTxt));
					}
			    	
				}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
					
					for(int i=4; i<20; i++){
						row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
						row.getCell(i).setCellStyle(style);
					}
					
					row.getCell(4).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P07", onIdx, onTxt));
					row.getCell(5).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P08", onIdx, onTxt));
					row.getCell(6).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P09", onIdx, onTxt));
			    	row.getCell(7).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_Q02", onIdx, onTxt));
			    	row.getCell(8).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_Q03", onIdx, onTxt));
			    	row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_H01", onIdx, onTxt));
			    	row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_H02", onIdx, onTxt));
					if(ytd_Param.equals("P01")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD01", onIdx, onTxt));
					}else if(ytd_Param.equals("P02")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD02", onIdx, onTxt));
					}else if(ytd_Param.equals("P03")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD03", onIdx, onTxt));
					}else if(ytd_Param.equals("P04")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD04", onIdx, onTxt));
					}else if(ytd_Param.equals("P05")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD05", onIdx, onTxt));
					}else if(ytd_Param.equals("P06")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD06", onIdx, onTxt));
					}else if(ytd_Param.equals("P07")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD07", onIdx, onTxt));
					}else if(ytd_Param.equals("P08")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD08", onIdx, onTxt));
					}else if(ytd_Param.equals("P09")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD09", onIdx, onTxt));
					}else if(ytd_Param.equals("P10")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD10", onIdx, onTxt));
					}else if(ytd_Param.equals("P11")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD11", onIdx, onTxt));
					}else if(ytd_Param.equals("P12")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD12", onIdx, onTxt));
					}else{
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD12", onIdx, onTxt));
					}
			    	row.getCell(12).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P07", onIdx, onTxt));
			    	row.getCell(13).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P08", onIdx, onTxt));
			    	row.getCell(14).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P09", onIdx, onTxt));
			    	row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q02", onIdx, onTxt));
			    	row.getCell(16).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q03", onIdx, onTxt));
			    	row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_H01", onIdx, onTxt));
			    	row.getCell(18).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_H02", onIdx, onTxt));
					if(ytd_Param.equals("P01")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD01", onIdx, onTxt));
					}else if(ytd_Param.equals("P02")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD02", onIdx, onTxt));
					}else if(ytd_Param.equals("P03")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD03", onIdx, onTxt));
					}else if(ytd_Param.equals("P04")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD04", onIdx, onTxt));
					}else if(ytd_Param.equals("P05")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD05", onIdx, onTxt));
					}else if(ytd_Param.equals("P06")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD06", onIdx, onTxt));
					}else if(ytd_Param.equals("P07")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD07", onIdx, onTxt));
					}else if(ytd_Param.equals("P08")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD08", onIdx, onTxt));
					}else if(ytd_Param.equals("P09")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD09", onIdx, onTxt));
					}else if(ytd_Param.equals("P10")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD10", onIdx, onTxt));
					}else if(ytd_Param.equals("P11")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD11", onIdx, onTxt));
					}else if(ytd_Param.equals("P12")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD12", onIdx, onTxt));
					}else{
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD12", onIdx, onTxt));
					}
			    	
				}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
					
					for(int i=4; i<20; i++){
						row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
						row.getCell(i).setCellStyle(style);
					}
					
					row.getCell(4).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P10", onIdx, onTxt));
					row.getCell(5).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P11", onIdx, onTxt));
					row.getCell(6).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_P12", onIdx, onTxt));
			    	row.getCell(7).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_Q03", onIdx, onTxt));
			    	row.getCell(8).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_Q04", onIdx, onTxt));
			    	row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_H01", onIdx, onTxt));
			    	row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_H02", onIdx, onTxt));
					if(ytd_Param.equals("P01")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD01", onIdx, onTxt));
					}else if(ytd_Param.equals("P02")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD02", onIdx, onTxt));
					}else if(ytd_Param.equals("P03")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD03", onIdx, onTxt));
					}else if(ytd_Param.equals("P04")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD04", onIdx, onTxt));
					}else if(ytd_Param.equals("P05")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD05", onIdx, onTxt));
					}else if(ytd_Param.equals("P06")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD06", onIdx, onTxt));
					}else if(ytd_Param.equals("P07")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD07", onIdx, onTxt));
					}else if(ytd_Param.equals("P08")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD08", onIdx, onTxt));
					}else if(ytd_Param.equals("P09")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD09", onIdx, onTxt));
					}else if(ytd_Param.equals("P10")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD10", onIdx, onTxt));
					}else if(ytd_Param.equals("P11")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD11", onIdx, onTxt));
					}else if(ytd_Param.equals("P12")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD12", onIdx, onTxt));
					}else{
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD12", onIdx, onTxt));
					}
			    	row.getCell(12).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P10", onIdx, onTxt));
			    	row.getCell(13).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P11", onIdx, onTxt));
			    	row.getCell(14).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_P12", onIdx, onTxt));
			    	row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q03", onIdx, onTxt));
			    	row.getCell(16).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q04", onIdx, onTxt));
			    	row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_H01", onIdx, onTxt));
			    	row.getCell(18).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_H02", onIdx, onTxt));
					if(ytd_Param.equals("P01")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD01", onIdx, onTxt));
					}else if(ytd_Param.equals("P02")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD02", onIdx, onTxt));
					}else if(ytd_Param.equals("P03")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD03", onIdx, onTxt));
					}else if(ytd_Param.equals("P04")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD04", onIdx, onTxt));
					}else if(ytd_Param.equals("P05")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD05", onIdx, onTxt));
					}else if(ytd_Param.equals("P06")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD06", onIdx, onTxt));
					}else if(ytd_Param.equals("P07")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD07", onIdx, onTxt));
					}else if(ytd_Param.equals("P08")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD08", onIdx, onTxt));
					}else if(ytd_Param.equals("P09")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD09", onIdx, onTxt));
					}else if(ytd_Param.equals("P10")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD10", onIdx, onTxt));
					}else if(ytd_Param.equals("P11")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD11", onIdx, onTxt));
					}else if(ytd_Param.equals("P12")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD12", onIdx, onTxt));
					}else{
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD12", onIdx, onTxt));
					}
			    	
				}
	    	
		    	// 계산식을 위해 리스트에 값을 담아준다.
		    	noteGMap = new HashMap();
		    	
		    	noteGMap.put("STYLETXT", styleTxt);
		    	noteGMap.put("TOTAL", "TOTAL");
		    	noteGMap.put("NOTAG_AC_P01", getSum(data, colIdx, grpTxt, "NOTAG_AC_P01", onIdx, onTxt));
				noteGMap.put("NOTAG_AC_P02", getSum(data, colIdx, grpTxt, "NOTAG_AC_P02", onIdx, onTxt));
				noteGMap.put("NOTAG_AC_P03", getSum(data, colIdx, grpTxt, "NOTAG_AC_P03", onIdx, onTxt));
				noteGMap.put("NOTAG_AC_P04", getSum(data, colIdx, grpTxt, "NOTAG_AC_P04", onIdx, onTxt));
				noteGMap.put("NOTAG_AC_P05", getSum(data, colIdx, grpTxt, "NOTAG_AC_P05", onIdx, onTxt));
				noteGMap.put("NOTAG_AC_P06", getSum(data, colIdx, grpTxt, "NOTAG_AC_P06", onIdx, onTxt));
				noteGMap.put("NOTAG_AC_P07", getSum(data, colIdx, grpTxt, "NOTAG_AC_P07", onIdx, onTxt));
				noteGMap.put("NOTAG_AC_P08", getSum(data, colIdx, grpTxt, "NOTAG_AC_P08", onIdx, onTxt));
				noteGMap.put("NOTAG_AC_P09", getSum(data, colIdx, grpTxt, "NOTAG_AC_P09", onIdx, onTxt));
				noteGMap.put("NOTAG_AC_P10", getSum(data, colIdx, grpTxt, "NOTAG_AC_P10", onIdx, onTxt));
				noteGMap.put("NOTAG_AC_P11", getSum(data, colIdx, grpTxt, "NOTAG_AC_P11", onIdx, onTxt));
				noteGMap.put("NOTAG_AC_P12", getSum(data, colIdx, grpTxt, "NOTAG_AC_P12", onIdx, onTxt));
				noteGMap.put("NOTAG_AC_Q01", getSum(data, colIdx, grpTxt, "NOTAG_AC_Q01", onIdx, onTxt));
				noteGMap.put("NOTAG_AC_Q02", getSum(data, colIdx, grpTxt, "NOTAG_AC_Q02", onIdx, onTxt));
				noteGMap.put("NOTAG_AC_Q03", getSum(data, colIdx, grpTxt, "NOTAG_AC_Q03", onIdx, onTxt));
				noteGMap.put("NOTAG_AC_Q04", getSum(data, colIdx, grpTxt, "NOTAG_AC_Q04", onIdx, onTxt));
				noteGMap.put("NOTAG_AC_H01", getSum(data, colIdx, grpTxt, "NOTAG_AC_H01", onIdx, onTxt));
				noteGMap.put("NOTAG_AC_H02", getSum(data, colIdx, grpTxt, "NOTAG_AC_H02", onIdx, onTxt));
				if(ytd_Param.equals("P01")){
					noteGMap.put("NOTAG_AC_YTD", getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD01", onIdx, onTxt));
				}else if(ytd_Param.equals("P02")){
					noteGMap.put("NOTAG_AC_YTD", getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD02", onIdx, onTxt));
				}else if(ytd_Param.equals("P03")){
					noteGMap.put("NOTAG_AC_YTD", getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD03", onIdx, onTxt));
				}else if(ytd_Param.equals("P04")){
					noteGMap.put("NOTAG_AC_YTD", getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD04", onIdx, onTxt));
				}else if(ytd_Param.equals("P05")){
					noteGMap.put("NOTAG_AC_YTD", getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD05", onIdx, onTxt));
				}else if(ytd_Param.equals("P06")){
					noteGMap.put("NOTAG_AC_YTD", getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD06", onIdx, onTxt));
				}else if(ytd_Param.equals("P07")){
					noteGMap.put("NOTAG_AC_YTD", getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD07", onIdx, onTxt));
				}else if(ytd_Param.equals("P08")){
					noteGMap.put("NOTAG_AC_YTD", getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD08", onIdx, onTxt));
				}else if(ytd_Param.equals("P09")){
					noteGMap.put("NOTAG_AC_YTD", getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD09", onIdx, onTxt));
				}else if(ytd_Param.equals("P10")){
					noteGMap.put("NOTAG_AC_YTD", getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD10", onIdx, onTxt));
				}else if(ytd_Param.equals("P11")){
					noteGMap.put("NOTAG_AC_YTD", getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD11", onIdx, onTxt));
				}else if(ytd_Param.equals("P12")){
					noteGMap.put("NOTAG_AC_YTD", getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD12", onIdx, onTxt));
				}else{
					noteGMap.put("NOTAG_AC_YTD", getSum(data, colIdx, grpTxt, "NOTAG_AC_YTD12", onIdx, onTxt));
				}
				
				noteGMap.put("NOTAG_FOR_P01", getSum(data, colIdx, grpTxt, "NOTAG_FOR_P01", onIdx, onTxt));
				noteGMap.put("NOTAG_FOR_P02", getSum(data, colIdx, grpTxt, "NOTAG_FOR_P02", onIdx, onTxt));
				noteGMap.put("NOTAG_FOR_P03", getSum(data, colIdx, grpTxt, "NOTAG_FOR_P03", onIdx, onTxt));
				noteGMap.put("NOTAG_FOR_P04", getSum(data, colIdx, grpTxt, "NOTAG_FOR_P04", onIdx, onTxt));
				noteGMap.put("NOTAG_FOR_P05", getSum(data, colIdx, grpTxt, "NOTAG_FOR_P05", onIdx, onTxt));
				noteGMap.put("NOTAG_FOR_P06", getSum(data, colIdx, grpTxt, "NOTAG_FOR_P06", onIdx, onTxt));
				noteGMap.put("NOTAG_FOR_P07", getSum(data, colIdx, grpTxt, "NOTAG_FOR_P07", onIdx, onTxt));
				noteGMap.put("NOTAG_FOR_P08", getSum(data, colIdx, grpTxt, "NOTAG_FOR_P08", onIdx, onTxt));
				noteGMap.put("NOTAG_FOR_P09", getSum(data, colIdx, grpTxt, "NOTAG_FOR_P09", onIdx, onTxt));
				noteGMap.put("NOTAG_FOR_P10", getSum(data, colIdx, grpTxt, "NOTAG_FOR_P10", onIdx, onTxt));
				noteGMap.put("NOTAG_FOR_P11", getSum(data, colIdx, grpTxt, "NOTAG_FOR_P11", onIdx, onTxt));
				noteGMap.put("NOTAG_FOR_P12", getSum(data, colIdx, grpTxt, "NOTAG_FOR_P12", onIdx, onTxt));
				noteGMap.put("NOTAG_FOR_Q01", getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q01", onIdx, onTxt));
				noteGMap.put("NOTAG_FOR_Q02", getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q02", onIdx, onTxt));
				noteGMap.put("NOTAG_FOR_Q03", getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q03", onIdx, onTxt));
				noteGMap.put("NOTAG_FOR_Q04", getSum(data, colIdx, grpTxt, "NOTAG_FOR_Q04", onIdx, onTxt));
				noteGMap.put("NOTAG_FOR_H01", getSum(data, colIdx, grpTxt, "NOTAG_FOR_H01", onIdx, onTxt));
				noteGMap.put("NOTAG_FOR_H02", getSum(data, colIdx, grpTxt, "NOTAG_FOR_H02", onIdx, onTxt));
				if(ytd_Param.equals("P01")){
					noteGMap.put("NOTAG_FOR_YTD", getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD01", onIdx, onTxt));
				}else if(ytd_Param.equals("P02")){
					noteGMap.put("NOTAG_FOR_YTD", getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD02", onIdx, onTxt));
				}else if(ytd_Param.equals("P03")){
					noteGMap.put("NOTAG_FOR_YTD", getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD03", onIdx, onTxt));
				}else if(ytd_Param.equals("P04")){
					noteGMap.put("NOTAG_FOR_YTD", getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD04", onIdx, onTxt));
				}else if(ytd_Param.equals("P05")){
					noteGMap.put("NOTAG_FOR_YTD", getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD05", onIdx, onTxt));
				}else if(ytd_Param.equals("P06")){
					noteGMap.put("NOTAG_FOR_YTD", getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD06", onIdx, onTxt));
				}else if(ytd_Param.equals("P07")){
					noteGMap.put("NOTAG_FOR_YTD", getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD07", onIdx, onTxt));
				}else if(ytd_Param.equals("P08")){
					noteGMap.put("NOTAG_FOR_YTD", getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD08", onIdx, onTxt));
				}else if(ytd_Param.equals("P09")){
					noteGMap.put("NOTAG_FOR_YTD", getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD09", onIdx, onTxt));
				}else if(ytd_Param.equals("P10")){
					noteGMap.put("NOTAG_FOR_YTD", getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD10", onIdx, onTxt));
				}else if(ytd_Param.equals("P11")){
					noteGMap.put("NOTAG_FOR_YTD", getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD11", onIdx, onTxt));
				}else if(ytd_Param.equals("P12")){
					noteGMap.put("NOTAG_FOR_YTD", getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD12", onIdx, onTxt));
				}else{
					noteGMap.put("NOTAG_FOR_YTD", getSum(data, colIdx, grpTxt, "NOTAG_FOR_YTD12", onIdx, onTxt));
				}
				
				noteGMap.put("NOTAG_OUT_P01", getSum(data, colIdx, grpTxt, "NOTAG_OUT_P01", onIdx, onTxt));
				noteGMap.put("NOTAG_OUT_P02", getSum(data, colIdx, grpTxt, "NOTAG_OUT_P02", onIdx, onTxt));
				noteGMap.put("NOTAG_OUT_P03", getSum(data, colIdx, grpTxt, "NOTAG_OUT_P03", onIdx, onTxt));
				noteGMap.put("NOTAG_OUT_P04", getSum(data, colIdx, grpTxt, "NOTAG_OUT_P04", onIdx, onTxt));
				noteGMap.put("NOTAG_OUT_P05", getSum(data, colIdx, grpTxt, "NOTAG_OUT_P05", onIdx, onTxt));
				noteGMap.put("NOTAG_OUT_P06", getSum(data, colIdx, grpTxt, "NOTAG_OUT_P06", onIdx, onTxt));
				noteGMap.put("NOTAG_OUT_P07", getSum(data, colIdx, grpTxt, "NOTAG_OUT_P07", onIdx, onTxt));
				noteGMap.put("NOTAG_OUT_P08", getSum(data, colIdx, grpTxt, "NOTAG_OUT_P08", onIdx, onTxt));
				noteGMap.put("NOTAG_OUT_P09", getSum(data, colIdx, grpTxt, "NOTAG_OUT_P09", onIdx, onTxt));
				noteGMap.put("NOTAG_OUT_P10", getSum(data, colIdx, grpTxt, "NOTAG_OUT_P10", onIdx, onTxt));
				noteGMap.put("NOTAG_OUT_P11", getSum(data, colIdx, grpTxt, "NOTAG_OUT_P11", onIdx, onTxt));
				noteGMap.put("NOTAG_OUT_P12", getSum(data, colIdx, grpTxt, "NOTAG_OUT_P12", onIdx, onTxt));
				noteGMap.put("NOTAG_OUT_Q01", getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q01", onIdx, onTxt));
				noteGMap.put("NOTAG_OUT_Q02", getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q02", onIdx, onTxt));
				noteGMap.put("NOTAG_OUT_Q03", getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q03", onIdx, onTxt));
				noteGMap.put("NOTAG_OUT_Q04", getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q04", onIdx, onTxt));
				noteGMap.put("NOTAG_OUT_H01", getSum(data, colIdx, grpTxt, "NOTAG_OUT_H01", onIdx, onTxt));
				noteGMap.put("NOTAG_OUT_H02", getSum(data, colIdx, grpTxt, "NOTAG_OUT_H02", onIdx, onTxt));
				if(ytd_Param.equals("P01")){
					noteGMap.put("NOTAG_OUT_YTD", getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD01", onIdx, onTxt));
				}else if(ytd_Param.equals("P02")){
					noteGMap.put("NOTAG_OUT_YTD", getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD02", onIdx, onTxt));
				}else if(ytd_Param.equals("P03")){
					noteGMap.put("NOTAG_OUT_YTD", getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD03", onIdx, onTxt));
				}else if(ytd_Param.equals("P04")){
					noteGMap.put("NOTAG_OUT_YTD", getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD04", onIdx, onTxt));
				}else if(ytd_Param.equals("P05")){
					noteGMap.put("NOTAG_OUT_YTD", getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD05", onIdx, onTxt));
				}else if(ytd_Param.equals("P06")){
					noteGMap.put("NOTAG_OUT_YTD", getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD06", onIdx, onTxt));
				}else if(ytd_Param.equals("P07")){
					noteGMap.put("NOTAG_OUT_YTD", getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD07", onIdx, onTxt));
				}else if(ytd_Param.equals("P08")){
					noteGMap.put("NOTAG_OUT_YTD", getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD08", onIdx, onTxt));
				}else if(ytd_Param.equals("P09")){
					noteGMap.put("NOTAG_OUT_YTD", getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD09", onIdx, onTxt));
				}else if(ytd_Param.equals("P10")){
					noteGMap.put("NOTAG_OUT_YTD", getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD10", onIdx, onTxt));
				}else if(ytd_Param.equals("P11")){
					noteGMap.put("NOTAG_OUT_YTD", getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD11", onIdx, onTxt));
				}else if(ytd_Param.equals("P12")){
					noteGMap.put("NOTAG_OUT_YTD", getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", onIdx, onTxt));
				}else{
					noteGMap.put("NOTAG_OUT_YTD", getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", onIdx, onTxt));
				}
				
				noteGMap.put("NOTAG_TG_P01", getSum(data, colIdx, grpTxt, "NOTAG_TG_P01", onIdx, onTxt));
				noteGMap.put("NOTAG_TG_P02", getSum(data, colIdx, grpTxt, "NOTAG_TG_P02", onIdx, onTxt));
				noteGMap.put("NOTAG_TG_P03", getSum(data, colIdx, grpTxt, "NOTAG_TG_P03", onIdx, onTxt));
				noteGMap.put("NOTAG_TG_P04", getSum(data, colIdx, grpTxt, "NOTAG_TG_P04", onIdx, onTxt));
				noteGMap.put("NOTAG_TG_P05", getSum(data, colIdx, grpTxt, "NOTAG_TG_P05", onIdx, onTxt));
				noteGMap.put("NOTAG_TG_P06", getSum(data, colIdx, grpTxt, "NOTAG_TG_P06", onIdx, onTxt));
				noteGMap.put("NOTAG_TG_P07", getSum(data, colIdx, grpTxt, "NOTAG_TG_P07", onIdx, onTxt));
				noteGMap.put("NOTAG_TG_P08", getSum(data, colIdx, grpTxt, "NOTAG_TG_P08", onIdx, onTxt));
				noteGMap.put("NOTAG_TG_P09", getSum(data, colIdx, grpTxt, "NOTAG_TG_P09", onIdx, onTxt));
				noteGMap.put("NOTAG_TG_P10", getSum(data, colIdx, grpTxt, "NOTAG_TG_P10", onIdx, onTxt));
				noteGMap.put("NOTAG_TG_P11", getSum(data, colIdx, grpTxt, "NOTAG_TG_P11", onIdx, onTxt));
				noteGMap.put("NOTAG_TG_P12", getSum(data, colIdx, grpTxt, "NOTAG_TG_P12", onIdx, onTxt));
				noteGMap.put("NOTAG_TG_Q01", getSum(data, colIdx, grpTxt, "NOTAG_TG_Q01", onIdx, onTxt));
				noteGMap.put("NOTAG_TG_Q02", getSum(data, colIdx, grpTxt, "NOTAG_TG_Q02", onIdx, onTxt));
				noteGMap.put("NOTAG_TG_Q03", getSum(data, colIdx, grpTxt, "NOTAG_TG_Q03", onIdx, onTxt));
				noteGMap.put("NOTAG_TG_Q04", getSum(data, colIdx, grpTxt, "NOTAG_TG_Q04", onIdx, onTxt));
				noteGMap.put("NOTAG_TG_H01", getSum(data, colIdx, grpTxt, "NOTAG_TG_H01", onIdx, onTxt));
				noteGMap.put("NOTAG_TG_H02", getSum(data, colIdx, grpTxt, "NOTAG_TG_H02", onIdx, onTxt));
				if(ytd_Param.equals("P01")){
					noteGMap.put("NOTAG_TG_YTD", getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD01", onIdx, onTxt));
				}else if(ytd_Param.equals("P02")){
					noteGMap.put("NOTAG_TG_YTD", getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD02", onIdx, onTxt));
				}else if(ytd_Param.equals("P03")){
					noteGMap.put("NOTAG_TG_YTD", getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD03", onIdx, onTxt));
				}else if(ytd_Param.equals("P04")){
					noteGMap.put("NOTAG_TG_YTD", getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD04", onIdx, onTxt));
				}else if(ytd_Param.equals("P05")){
					noteGMap.put("NOTAG_TG_YTD", getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD05", onIdx, onTxt));
				}else if(ytd_Param.equals("P06")){
					noteGMap.put("NOTAG_TG_YTD", getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD06", onIdx, onTxt));
				}else if(ytd_Param.equals("P07")){
					noteGMap.put("NOTAG_TG_YTD", getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD07", onIdx, onTxt));
				}else if(ytd_Param.equals("P08")){
					noteGMap.put("NOTAG_TG_YTD", getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD08", onIdx, onTxt));
				}else if(ytd_Param.equals("P09")){
					noteGMap.put("NOTAG_TG_YTD", getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD09", onIdx, onTxt));
				}else if(ytd_Param.equals("P10")){
					noteGMap.put("NOTAG_TG_YTD", getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD10", onIdx, onTxt));
				}else if(ytd_Param.equals("P11")){
					noteGMap.put("NOTAG_TG_YTD", getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD11", onIdx, onTxt));
				}else if(ytd_Param.equals("P12")){
					noteGMap.put("NOTAG_TG_YTD", getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", onIdx, onTxt));
				}else{
					noteGMap.put("NOTAG_TG_YTD", getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", onIdx, onTxt));
				}
			}
		}
		
		noteG.add(noteGMap);

	}
	
	/*
	 * Description: Note G Target (ON Channel) 4~41번째 컬럼의 입력값을 셀에 입력
	 */
	public void setRowValue5(HSSFRow row, CellStyle style, Map rowData, String styleTxt) {
		
		if(periodChk_Param.equals("Y")){
			
			for(int i=4; i<42; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P01").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P02").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P03").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P04").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P05").toString()));
	    	row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P06").toString()));
	    	row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P07").toString()));
	    	row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P08").toString()));
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P09").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P10").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P11").toString()));
	    	row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P12").toString()));
	    	row.getCell(16).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_Q01").toString()));
	    	row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_Q02").toString()));
	    	row.getCell(18).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_Q03").toString()));
	    	row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_Q04").toString()));
	    	row.getCell(20).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_H01").toString()));
	    	row.getCell(21).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD12").toString()));
			}else{
				row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD12").toString()));
			}
	    	row.getCell(23).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P01").toString()));
	    	row.getCell(24).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P02").toString()));
	    	row.getCell(25).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P03").toString()));
	    	row.getCell(26).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P04").toString()));
	    	row.getCell(27).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P05").toString()));
	    	row.getCell(28).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P06").toString()));
	    	row.getCell(29).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P07").toString()));
	    	row.getCell(30).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P08").toString()));
	    	row.getCell(31).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P09").toString()));
	    	row.getCell(32).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P10").toString()));
	    	row.getCell(33).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P11").toString()));
	    	row.getCell(34).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P12").toString()));
	    	row.getCell(35).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_Q01").toString()));
	    	row.getCell(36).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_Q02").toString()));
	    	row.getCell(37).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_Q03").toString()));
	    	row.getCell(38).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_Q04").toString()));
	    	row.getCell(39).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_H01").toString()));
	    	row.getCell(40).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString()));
			}else{
				row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString()));
			}
    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=4; i<16; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P01").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P02").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P03").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_Q01").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD12").toString()));
			}else{
				row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD12").toString()));
			}
	    	row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P01").toString()));
	    	row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P02").toString()));
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P03").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_Q01").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString()));
			}else{
				row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString()));
			}
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=4; i<18; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P04").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P05").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P06").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_Q01").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_Q02").toString()));
	    	row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD12").toString()));
			}else{
				row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD12").toString()));
			}
	    	row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P04").toString()));
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P05").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P06").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_Q01").toString()));
	    	row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_Q02").toString()));
	    	row.getCell(16).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_H01").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString()));
			}else{
				row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString()));
			}
	    	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P07").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P08").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P09").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_Q02").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_Q03").toString()));
	    	row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_H01").toString()));
	    	row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD12").toString()));
			}else{
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD12").toString()));
			}
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P07").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P08").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P09").toString()));
	    	row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_Q02").toString()));
	    	row.getCell(16).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_Q03").toString()));
	    	row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_H01").toString()));
	    	row.getCell(18).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString()));
			}else{
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString()));
			}
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(4).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P10").toString()));
	    	row.getCell(5).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P11").toString()));
	    	row.getCell(6).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_P12").toString()));
	    	row.getCell(7).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_Q03").toString()));
	    	row.getCell(8).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_Q04").toString()));
	    	row.getCell(9).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_H01").toString()));
	    	row.getCell(10).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD12").toString()));
			}else{
				row.getCell(11).setCellValue(Double.parseDouble(rowData.get("NOTAG_OUT_YTD12").toString()));
			}
	    	row.getCell(12).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P10").toString()));
	    	row.getCell(13).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P11").toString()));
	    	row.getCell(14).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_P12").toString()));
	    	row.getCell(15).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_Q03").toString()));
	    	row.getCell(16).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_Q04").toString()));
	    	row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_H01").toString()));
	    	row.getCell(18).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_H02").toString()));
			if(ytd_Param.equals("P01")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD01").toString()));
			}else if(ytd_Param.equals("P02")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD02").toString()));
			}else if(ytd_Param.equals("P03")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD03").toString()));
			}else if(ytd_Param.equals("P04")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD04").toString()));
			}else if(ytd_Param.equals("P05")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD05").toString()));
			}else if(ytd_Param.equals("P06")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD06").toString()));
			}else if(ytd_Param.equals("P07")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD07").toString()));
			}else if(ytd_Param.equals("P08")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD08").toString()));
			}else if(ytd_Param.equals("P09")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD09").toString()));
			}else if(ytd_Param.equals("P10")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD10").toString()));
			}else if(ytd_Param.equals("P11")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD11").toString()));
			}else if(ytd_Param.equals("P12")){
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString()));
			}else{
				row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString()));
			}
	    	
		}

	}
	
	/*
	 * Description: Note G Forecast (ON channel) 4~41번째 컬럼의 소계, 합계를 자동 계산하여 셀에 입력
	 */
	public void setRowSumValue5(HSSFRow row, CellStyle style, List data, String colIdx, String grpTxt, String onIdx, String onTxt, String styleTxt, CellStyle style2) {
		
		// Total Dependency Rate 합계
		if(grpTxt.equals("10")){
			
			Double totAccPlanVolOutP01 = 0.0;
        	Double totAccPlanVolOutP02 = 0.0;
        	Double totAccPlanVolOutP03 = 0.0;
        	Double totAccPlanVolOutP04 = 0.0;
        	Double totAccPlanVolOutP05 = 0.0;
        	Double totAccPlanVolOutP06 = 0.0;
        	Double totAccPlanVolOutP07 = 0.0;
        	Double totAccPlanVolOutP08 = 0.0;
        	Double totAccPlanVolOutP09 = 0.0;
        	Double totAccPlanVolOutP10 = 0.0;
        	Double totAccPlanVolOutP11 = 0.0;
        	Double totAccPlanVolOutP12 = 0.0;
        	Double totAccPlanVolOutQ01 = 0.0;
        	Double totAccPlanVolOutQ02 = 0.0;
        	Double totAccPlanVolOutQ03 = 0.0;
        	Double totAccPlanVolOutQ04 = 0.0;
        	Double totAccPlanVolOutH01 = 0.0;
        	Double totAccPlanVolOutH02 = 0.0;
        	Double totAccPlanVolOutYTD = 0.0;
        	
        	Double totAccPlanVolTgP01 = 0.0;
        	Double totAccPlanVolTgP02 = 0.0;
        	Double totAccPlanVolTgP03 = 0.0;
        	Double totAccPlanVolTgP04 = 0.0;
        	Double totAccPlanVolTgP05 = 0.0;
        	Double totAccPlanVolTgP06 = 0.0;
        	Double totAccPlanVolTgP07 = 0.0;
        	Double totAccPlanVolTgP08 = 0.0;
        	Double totAccPlanVolTgP09 = 0.0;
        	Double totAccPlanVolTgP10 = 0.0;
        	Double totAccPlanVolTgP11 = 0.0;
        	Double totAccPlanVolTgP12 = 0.0;
        	Double totAccPlanVolTgQ01 = 0.0;
        	Double totAccPlanVolTgQ02 = 0.0;
        	Double totAccPlanVolTgQ03 = 0.0;
        	Double totAccPlanVolTgQ04 = 0.0;
        	Double totAccPlanVolTgH01 = 0.0;
        	Double totAccPlanVolTgH02 = 0.0;
        	Double totAccPlanVolTgYTD = 0.0;
        	
        	
        	if(dkDeplFcAcP01 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P01", "", "")) != 0){
        		totAccPlanVolOutP01=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P01", "", "")/dkDeplFcAcP01));
        	};
        	if(dkDeplFcAcP02 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P02", "", "")) != 0){
        		totAccPlanVolOutP02=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P02", "", "")/dkDeplFcAcP02));
        	};
        	if(dkDeplFcAcP03 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P03", "", "")) != 0){
        		totAccPlanVolOutP03=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P03", "", "")/dkDeplFcAcP03));
        	};
        	if(dkDeplFcAcP04 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P04", "", "")) != 0){
        		totAccPlanVolOutP04=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P04", "", "")/dkDeplFcAcP04));
        	};
        	if(dkDeplFcAcP05 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P05", "", "")) != 0){
        		totAccPlanVolOutP05=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P05", "", "")/dkDeplFcAcP05));
        	};
        	if(dkDeplFcAcP06 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P06", "", "")) != 0){
        		totAccPlanVolOutP06=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P06", "", "")/dkDeplFcAcP06));
        	};
        	if(dkDeplFcAcP07 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P07", "", "")) != 0){
        		totAccPlanVolOutP07=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P07", "", "")/dkDeplFcAcP07));
        	};
        	if(dkDeplFcAcP08 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P08", "", "")) != 0){
        		totAccPlanVolOutP08=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P08", "", "")/dkDeplFcAcP08));
        	};
        	if(dkDeplFcAcP09 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P09", "", "")) != 0){
        		totAccPlanVolOutP09=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P09", "", "")/dkDeplFcAcP09));
        	};
        	if(dkDeplFcAcP10 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P10", "", "")) != 0){
        		totAccPlanVolOutP10=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P10", "", "")/dkDeplFcAcP10));
        	};
        	if(dkDeplFcAcP11 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P11", "", "")) != 0){
        		totAccPlanVolOutP11=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P11", "", "")/dkDeplFcAcP11));
        	};
        	if(dkDeplFcAcP12 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P12", "", "")) != 0){
        		totAccPlanVolOutP12=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_P12", "", "")/dkDeplFcAcP12));
        	};
        	if(dkDeplFcAcQ01 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q01", "", "")) != 0){
        		totAccPlanVolOutQ01=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q01", "", "")/dkDeplFcAcQ01));
        	};
        	if(dkDeplFcAcQ02 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q02", "", "")) != 0){
        		totAccPlanVolOutQ02=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q02", "", "")/dkDeplFcAcQ02));
        	};
        	if(dkDeplFcAcQ03 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q03", "", "")) != 0){
        		totAccPlanVolOutQ03=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q03", "", "")/dkDeplFcAcQ03));
        	};
        	if(dkDeplFcAcQ04 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q04", "", "")) != 0){
        		totAccPlanVolOutQ04=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q04", "", "")/dkDeplFcAcQ04));
        	};
        	if(dkDeplFcAcH01 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_H01", "", "")) != 0){
        		totAccPlanVolOutH01=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_H01", "", "")/dkDeplFcAcH01));
        	};
        	if(dkDeplFcAcH02 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_H02", "", "")) != 0){
        		totAccPlanVolOutH02=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_H02", "", "")/dkDeplFcAcH02));
        	};
        	if(ytd_Param.equals("P01")){
        		if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD01", "", "")) != 0){
            		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD01", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P02")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD02", "", "")) != 0){
	        		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD02", "", "")/dkDeplFcAcYTD));
	        	};
			}else if(ytd_Param.equals("P03")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD03", "", "")) != 0){
	        		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD03", "", "")/dkDeplFcAcYTD));
	        	};
			}else if(ytd_Param.equals("P04")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD04", "", "")) != 0){
	        		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD04", "", "")/dkDeplFcAcYTD));
	        	};
			}else if(ytd_Param.equals("P05")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD05", "", "")) != 0){
	        		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD05", "", "")/dkDeplFcAcYTD));
	        	};
			}else if(ytd_Param.equals("P06")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD06", "", "")) != 0){
	        		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD06", "", "")/dkDeplFcAcYTD));
	        	};
			}else if(ytd_Param.equals("P07")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD07", "", "")) != 0){
	        		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD07", "", "")/dkDeplFcAcYTD));
	        	};
			}else if(ytd_Param.equals("P08")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD08", "", "")) != 0){
	        		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD08", "", "")/dkDeplFcAcYTD));
	        	};
			}else if(ytd_Param.equals("P09")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD09", "", "")) != 0){
	        		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD09", "", "")/dkDeplFcAcYTD));
	        	};
			}else if(ytd_Param.equals("P10")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD10", "", "")) != 0){
	        		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD10", "", "")/dkDeplFcAcYTD));
	        	};
			}else if(ytd_Param.equals("P11")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD11", "", "")) != 0){
	        		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD11", "", "")/dkDeplFcAcYTD));
	        	};
			}else if(ytd_Param.equals("P12")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", "", "")) != 0){
	        		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", "", "")/dkDeplFcAcYTD));
	        	};
			}else{
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", "", "")) != 0){
	        		totAccPlanVolOutYTD=((getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", "", "")/dkDeplFcAcYTD));
	        	};
			}
        	
        	if(dkDeplFcAcP01 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P01", "", "")) != 0){
        		totAccPlanVolTgP01=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P01", "", "")/dkDeplFcAcP01));
        	};
        	if(dkDeplFcAcP02 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P02", "", "")) != 0){
        		totAccPlanVolTgP02=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P02", "", "")/dkDeplFcAcP02));
        	};
        	if(dkDeplFcAcP03 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P03", "", "")) != 0){
        		totAccPlanVolTgP03=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P03", "", "")/dkDeplFcAcP03));
        	};
        	if(dkDeplFcAcP04 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P04", "", "")) != 0){
        		totAccPlanVolTgP04=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P04", "", "")/dkDeplFcAcP04));
        	};
        	if(dkDeplFcAcP05 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P05", "", "")) != 0){
        		totAccPlanVolTgP05=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P05", "", "")/dkDeplFcAcP05));
        	};
        	if(dkDeplFcAcP06 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P06", "", "")) != 0){
        		totAccPlanVolTgP06=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P06", "", "")/dkDeplFcAcP06));
        	};
        	if(dkDeplFcAcP07 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P07", "", "")) != 0){
        		totAccPlanVolTgP07=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P07", "", "")/dkDeplFcAcP07));
        	};
        	if(dkDeplFcAcP08 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P08", "", "")) != 0){
        		totAccPlanVolTgP08=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P08", "", "")/dkDeplFcAcP08));
        	};
        	if(dkDeplFcAcP09 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P09", "", "")) != 0){
        		totAccPlanVolTgP09=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P09", "", "")/dkDeplFcAcP09));
        	};
        	if(dkDeplFcAcP10 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P10", "", "")) != 0){
        		totAccPlanVolTgP10=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P10", "", "")/dkDeplFcAcP10));
        	};
        	if(dkDeplFcAcP11 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P11", "", "")) != 0){
        		totAccPlanVolTgP11=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P11", "", "")/dkDeplFcAcP11));
        	};
        	if(dkDeplFcAcP12 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_P12", "", "")) != 0){
        		totAccPlanVolTgP12=((getSum(data, colIdx, grpTxt, "NOTAG_TG_P12", "", "")/dkDeplFcAcP12));
        	};
        	if(dkDeplFcAcQ01 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_Q01", "", "")) != 0){
        		totAccPlanVolTgQ01=((getSum(data, colIdx, grpTxt, "NOTAG_TG_Q01", "", "")/dkDeplFcAcQ01));
        	};
        	if(dkDeplFcAcQ02 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_Q02", "", "")) != 0){
        		totAccPlanVolTgQ02=((getSum(data, colIdx, grpTxt, "NOTAG_TG_Q02", "", "")/dkDeplFcAcQ02));
        	};
        	if(dkDeplFcAcQ03 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_Q03", "", "")) != 0){
        		totAccPlanVolTgQ03=((getSum(data, colIdx, grpTxt, "NOTAG_TG_Q03", "", "")/dkDeplFcAcQ03));
        	};
        	if(dkDeplFcAcQ04 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_Q04", "", "")) != 0){
        		totAccPlanVolTgQ04=((getSum(data, colIdx, grpTxt, "NOTAG_TG_Q04", "", "")/dkDeplFcAcQ04));
        	};
        	if(dkDeplFcAcH01 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_H01", "", "")) != 0){
        		totAccPlanVolTgH01=((getSum(data, colIdx, grpTxt, "NOTAG_TG_H01", "", "")/dkDeplFcAcH01));
        	};
        	if(dkDeplFcAcH02 != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_H02", "", "")) != 0){
        		totAccPlanVolTgH02=((getSum(data, colIdx, grpTxt, "NOTAG_TG_H02", "", "")/dkDeplFcAcH02));
        	};
        	if(ytd_Param.equals("P01")){
        		if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD01", "", "")) != 0){
            		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD01", "", "")/dkDeplFcAcYTD));
            	};
			}else if(ytd_Param.equals("P02")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD02", "", "")) != 0){
	        		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD02", "", "")/dkDeplFcAcYTD));
	        	};
			}else if(ytd_Param.equals("P03")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD03", "", "")) != 0){
	        		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD03", "", "")/dkDeplFcAcYTD));
	        	};
			}else if(ytd_Param.equals("P04")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD04", "", "")) != 0){
	        		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD04", "", "")/dkDeplFcAcYTD));
	        	};
			}else if(ytd_Param.equals("P05")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD05", "", "")) != 0){
	        		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD05", "", "")/dkDeplFcAcYTD));
	        	};
			}else if(ytd_Param.equals("P06")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD06", "", "")) != 0){
	        		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD06", "", "")/dkDeplFcAcYTD));
	        	};
			}else if(ytd_Param.equals("P07")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD07", "", "")) != 0){
	        		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD07", "", "")/dkDeplFcAcYTD));
	        	};
			}else if(ytd_Param.equals("P08")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD08", "", "")) != 0){
	        		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD08", "", "")/dkDeplFcAcYTD));
	        	};
			}else if(ytd_Param.equals("P09")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD09", "", "")) != 0){
	        		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD09", "", "")/dkDeplFcAcYTD));
	        	};
			}else if(ytd_Param.equals("P10")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD10", "", "")) != 0){
	        		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD10", "", "")/dkDeplFcAcYTD));
	        	};
			}else if(ytd_Param.equals("P11")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD11", "", "")) != 0){
	        		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD11", "", "")/dkDeplFcAcYTD));
	        	};
			}else if(ytd_Param.equals("P12")){
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", "", "")) != 0){
	        		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", "", "")/dkDeplFcAcYTD));
	        	};
			}else{
				if(dkDeplFcAcYTD != 0 && (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", "", "")) != 0){
	        		totAccPlanVolTgYTD=((getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", "", "")/dkDeplFcAcYTD));
	        	};
			}
        	
        	if(periodChk_Param.equals("Y")){
        		
        		for(int i=4; i<23; i++){
    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
    				row.getCell(i).setCellStyle(style);
    			}
        		
        		for(int i=23; i<42; i++){
    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
    				row.getCell(i).setCellStyle(style2);
    			}
        		
        		row.getCell(4).setCellValue(totAccPlanVolOutP01);
        		row.getCell(5).setCellValue(totAccPlanVolOutP02);
        		row.getCell(6).setCellValue(totAccPlanVolOutP03);
        		row.getCell(7).setCellValue(totAccPlanVolOutP04);
        		row.getCell(8).setCellValue(totAccPlanVolOutP05);
        		row.getCell(9).setCellValue(totAccPlanVolOutP06);
        		row.getCell(10).setCellValue(totAccPlanVolOutP07);
        		row.getCell(11).setCellValue(totAccPlanVolOutP08);
        		row.getCell(12).setCellValue(totAccPlanVolOutP09);
        		row.getCell(13).setCellValue(totAccPlanVolOutP10);
        		row.getCell(14).setCellValue(totAccPlanVolOutP11);
        		row.getCell(15).setCellValue(totAccPlanVolOutP12);
        		row.getCell(16).setCellValue(totAccPlanVolOutQ01);
        		row.getCell(17).setCellValue(totAccPlanVolOutQ02);
        		row.getCell(18).setCellValue(totAccPlanVolOutQ03);
        		row.getCell(19).setCellValue(totAccPlanVolOutQ04);
            	row.getCell(20).setCellValue(totAccPlanVolOutH01);
            	row.getCell(21).setCellValue(totAccPlanVolOutH02);
            	row.getCell(22).setCellValue(totAccPlanVolOutYTD);
        		row.getCell(23).setCellValue("");
        		row.getCell(24).setCellValue("");
        		row.getCell(25).setCellValue("");
        		row.getCell(26).setCellValue("");
        		row.getCell(27).setCellValue("");
        		row.getCell(28).setCellValue("");
        		row.getCell(29).setCellValue("");
        		row.getCell(30).setCellValue("");
        		row.getCell(31).setCellValue("");
        		row.getCell(32).setCellValue("");
        		row.getCell(33).setCellValue("");
        		row.getCell(34).setCellValue("");
        		row.getCell(35).setCellValue("");
        		row.getCell(36).setCellValue("");
        		row.getCell(37).setCellValue("");
        		row.getCell(38).setCellValue("");
            	row.getCell(39).setCellValue("");
            	row.getCell(40).setCellValue("");
            	row.getCell(41).setCellValue("");
        	
    		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
    			
    			for(int i=4; i<10; i++){
    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
    				row.getCell(i).setCellStyle(style);
    			}
    			
    			for(int i=9; i<16; i++){
    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
    				row.getCell(i).setCellStyle(style2);
    			}
    			
    			row.getCell(4).setCellValue(totAccPlanVolOutP01);
    			row.getCell(5).setCellValue(totAccPlanVolOutP02);
    			row.getCell(6).setCellValue(totAccPlanVolOutP03);
    	    	row.getCell(7).setCellValue(totAccPlanVolOutQ01);
    	    	row.getCell(8).setCellValue(totAccPlanVolOutH01);
    	    	row.getCell(9).setCellValue(totAccPlanVolOutYTD);
    	    	row.getCell(10).setCellValue("");
    	    	row.getCell(11).setCellValue("");
    	    	row.getCell(12).setCellValue("");
    	    	row.getCell(13).setCellValue("");
    	    	row.getCell(14).setCellValue("");
    	    	row.getCell(15).setCellValue("");
    	    	
    		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
    			
    			for(int i=4; i<11; i++){
    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
    				row.getCell(i).setCellStyle(style);
    			}
    			
    			for(int i=11; i<18; i++){
    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
    				row.getCell(i).setCellStyle(style2);
    			}
    			
    			row.getCell(4).setCellValue(totAccPlanVolOutP04);
    			row.getCell(5).setCellValue(totAccPlanVolOutP05);
    			row.getCell(6).setCellValue(totAccPlanVolOutP06);
    	    	row.getCell(7).setCellValue(totAccPlanVolOutQ01);
    	    	row.getCell(8).setCellValue(totAccPlanVolOutQ02);
    	    	row.getCell(9).setCellValue(totAccPlanVolOutH01);
    	    	row.getCell(10).setCellValue(totAccPlanVolOutYTD);
    	    	row.getCell(11).setCellValue("");
    	    	row.getCell(12).setCellValue("");
    	    	row.getCell(13).setCellValue("");
    	    	row.getCell(14).setCellValue("");
    	    	row.getCell(15).setCellValue("");
    	    	row.getCell(16).setCellValue("");
    	    	row.getCell(17).setCellValue("");
    	    	
    		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
    			
    			for(int i=4; i<12; i++){
    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
    				row.getCell(i).setCellStyle(style);
    			}
    			
    			for(int i=12; i<20; i++){
    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
    				row.getCell(i).setCellStyle(style2);
    			}
    			
    			row.getCell(4).setCellValue(totAccPlanVolOutP07);
    			row.getCell(5).setCellValue(totAccPlanVolOutP08);
    			row.getCell(6).setCellValue(totAccPlanVolOutP09);
    	    	row.getCell(7).setCellValue(totAccPlanVolOutQ02);
    	    	row.getCell(8).setCellValue(totAccPlanVolOutQ03);
    	    	row.getCell(9).setCellValue(totAccPlanVolOutH01);
    	    	row.getCell(10).setCellValue(totAccPlanVolOutH02);
    	    	row.getCell(11).setCellValue(totAccPlanVolOutYTD);
    	    	row.getCell(12).setCellValue("");
    	    	row.getCell(13).setCellValue("");
    	    	row.getCell(14).setCellValue("");
    	    	row.getCell(15).setCellValue("");
    	    	row.getCell(16).setCellValue("");
    	    	row.getCell(17).setCellValue("");
    	    	row.getCell(18).setCellValue("");
    	    	row.getCell(19).setCellValue("");
    	    	
    		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
    			
    			for(int i=4; i<20; i++){
    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
    				row.getCell(i).setCellStyle(style);
    			}
    			
    			for(int i=12; i<20; i++){
    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
    				row.getCell(i).setCellStyle(style2);
    			}
    			
    			row.getCell(4).setCellValue(totAccPlanVolOutP10);
    			row.getCell(5).setCellValue(totAccPlanVolOutP11);
    			row.getCell(6).setCellValue(totAccPlanVolOutP12);
    	    	row.getCell(7).setCellValue(totAccPlanVolOutQ03);
    	    	row.getCell(8).setCellValue(totAccPlanVolOutQ04);
    	    	row.getCell(9).setCellValue(totAccPlanVolOutH01);
    	    	row.getCell(10).setCellValue(totAccPlanVolOutH02);
    	    	row.getCell(11).setCellValue(totAccPlanVolOutYTD);
    	    	row.getCell(12).setCellValue("");
    	    	row.getCell(13).setCellValue("");
    	    	row.getCell(14).setCellValue("");
    	    	row.getCell(15).setCellValue("");
    	    	row.getCell(16).setCellValue("");
    	    	row.getCell(17).setCellValue("");
    	    	row.getCell(18).setCellValue("");
    	    	row.getCell(19).setCellValue("");
    	    	
    		}
        	
		}

		else{
			
			// Whisky Note G Spending 합계
			if(onIdx.equals("DATALV1_NM")){
				
	        	Double whNoteGSpendOutP01 = 0.0;
	        	Double whNoteGSpendOutP02 = 0.0;
	        	Double whNoteGSpendOutP03 = 0.0;
	        	Double whNoteGSpendOutP04 = 0.0;
	        	Double whNoteGSpendOutP05 = 0.0;
	        	Double whNoteGSpendOutP06 = 0.0;
	        	Double whNoteGSpendOutP07 = 0.0;
	        	Double whNoteGSpendOutP08 = 0.0;
	        	Double whNoteGSpendOutP09 = 0.0;
	        	Double whNoteGSpendOutP10 = 0.0;
	        	Double whNoteGSpendOutP11 = 0.0;
	        	Double whNoteGSpendOutP12 = 0.0;
	        	Double whNoteGSpendOutQ01 = 0.0;
	        	Double whNoteGSpendOutQ02 = 0.0;
	        	Double whNoteGSpendOutQ03 = 0.0;
	        	Double whNoteGSpendOutQ04 = 0.0;
	        	Double whNoteGSpendOutH01 = 0.0;
	        	Double whNoteGSpendOutH02 = 0.0;
	        	Double whNoteGSpendOutYTD = 0.0;
	        	
	        	Double whNoteGSpendTgP01 = 0.0;
	        	Double whNoteGSpendTgP02 = 0.0;
	        	Double whNoteGSpendTgP03 = 0.0;
	        	Double whNoteGSpendTgP04 = 0.0;
	        	Double whNoteGSpendTgP05 = 0.0;
	        	Double whNoteGSpendTgP06 = 0.0;
	        	Double whNoteGSpendTgP07 = 0.0;
	        	Double whNoteGSpendTgP08 = 0.0;
	        	Double whNoteGSpendTgP09 = 0.0;
	        	Double whNoteGSpendTgP10 = 0.0;
	        	Double whNoteGSpendTgP11 = 0.0;
	        	Double whNoteGSpendTgP12 = 0.0;
	        	Double whNoteGSpendTgQ01 = 0.0;
	        	Double whNoteGSpendTgQ02 = 0.0;
	        	Double whNoteGSpendTgQ03 = 0.0;
	        	Double whNoteGSpendTgQ04 = 0.0;
	        	Double whNoteGSpendTgH01 = 0.0;
	        	Double whNoteGSpendTgH02 = 0.0;
	        	Double whNoteGSpendTgYTD = 0.0;
	        	
	        	whNoteGSpendOutP01 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P01", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP02 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P02", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP03 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P03", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P03", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP04 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P04", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P04", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP05 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P05", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P05", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP06 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P06", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P06", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP07 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P07", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P07", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP08 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P08", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P08", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP09 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P09", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P09", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP10 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P10", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P10", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP11 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P11", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P11", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutP12 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_P12", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_P12", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutQ01 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q01", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutQ02 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q02", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutQ03 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q03", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q03", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutQ04 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q04", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q04", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutH01 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_H01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_H01", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendOutH02 = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_H02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_H02", "DATALV1_NM", "INT`L"));
	        	if(ytd_Param.equals("P01")){
	        		whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD01", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P02")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD02", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P03")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD03", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD03", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P04")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD04", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD04", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P05")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD05", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD05", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P06")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD06", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD06", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P07")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD07", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD07", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P08")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD08", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD08", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P09")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD09", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD09", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P10")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD10", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD10", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P11")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD11", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD11", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P12")){
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", "DATALV1_NM", "INT`L"));
				}else{
					whNoteGSpendOutYTD = (getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", "DATALV1_NM", "INT`L"));
				}
	        	
	        	whNoteGSpendTgP01 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P01", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP02 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P02", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP03 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P03", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P03", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP04 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P04", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P04", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP05 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P05", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P05", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP06 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P06", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P06", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP07 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P07", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P07", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP08 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P08", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P08", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP09 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P09", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P09", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP10 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P10", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P10", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP11 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P11", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P11", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgP12 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_P12", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_P12", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgQ01 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_Q01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_Q01", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgQ02 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_Q02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_Q02", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgQ03 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_Q03", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_Q03", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgQ04 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_Q04", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_Q04", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgH01 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_H01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_H01", "DATALV1_NM", "INT`L"));
	        	whNoteGSpendTgH02 = (getSum(data, colIdx, grpTxt, "NOTAG_TG_H02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_H02", "DATALV1_NM", "INT`L"));
	        	if(ytd_Param.equals("P01")){
	        		whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD01", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD01", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P02")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD02", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD02", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P03")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD03", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD03", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P04")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD04", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD04", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P05")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD05", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD05", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P06")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD06", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD06", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P07")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD07", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD07", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P08")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD08", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD08", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P09")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD09", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD09", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P10")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD10", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD10", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P11")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD11", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD11", "DATALV1_NM", "INT`L"));
				}else if(ytd_Param.equals("P12")){
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", "DATALV1_NM", "INT`L"));
				}else{
					whNoteGSpendTgYTD = (getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", "DATALV1_NM", "LOCAL")+getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", "DATALV1_NM", "INT`L"));
				}
	        	
	        	if(periodChk_Param.equals("Y")){
		    		
	        		for(int i=4; i<42; i++){
	    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
	    				row.getCell(i).setCellStyle(style);
	    			}
	        		
		    		row.getCell(4).setCellValue(whNoteGSpendOutP01);
		    		row.getCell(5).setCellValue(whNoteGSpendOutP02);
		    		row.getCell(6).setCellValue(whNoteGSpendOutP03);
		    		row.getCell(7).setCellValue(whNoteGSpendOutP04);
		    		row.getCell(8).setCellValue(whNoteGSpendOutP05);
		    		row.getCell(9).setCellValue(whNoteGSpendOutP06);
		    		row.getCell(10).setCellValue(whNoteGSpendOutP07);
		    		row.getCell(11).setCellValue(whNoteGSpendOutP08);
		    		row.getCell(12).setCellValue(whNoteGSpendOutP09);
		    		row.getCell(13).setCellValue(whNoteGSpendOutP10);
		    		row.getCell(14).setCellValue(whNoteGSpendOutP11);
		    		row.getCell(15).setCellValue(whNoteGSpendOutP12);
		    		row.getCell(16).setCellValue(whNoteGSpendOutQ01);
		    		row.getCell(17).setCellValue(whNoteGSpendOutQ02);
		    		row.getCell(18).setCellValue(whNoteGSpendOutQ03);
		    		row.getCell(19).setCellValue(whNoteGSpendOutQ04);
		        	row.getCell(20).setCellValue(whNoteGSpendOutH01);
		        	row.getCell(21).setCellValue(whNoteGSpendOutH02);
		        	row.getCell(22).setCellValue(whNoteGSpendOutYTD);
		    		row.getCell(23).setCellValue(whNoteGSpendTgP01);
		    		row.getCell(24).setCellValue(whNoteGSpendTgP02);
		    		row.getCell(25).setCellValue(whNoteGSpendTgP03);
		    		row.getCell(26).setCellValue(whNoteGSpendTgP04);
		    		row.getCell(27).setCellValue(whNoteGSpendTgP05);
		    		row.getCell(28).setCellValue(whNoteGSpendTgP06);
		    		row.getCell(29).setCellValue(whNoteGSpendTgP07);
		    		row.getCell(30).setCellValue(whNoteGSpendTgP08);
		    		row.getCell(31).setCellValue(whNoteGSpendTgP09);
		    		row.getCell(32).setCellValue(whNoteGSpendTgP10);
		    		row.getCell(33).setCellValue(whNoteGSpendTgP11);
		    		row.getCell(34).setCellValue(whNoteGSpendTgP12);
		    		row.getCell(35).setCellValue(whNoteGSpendTgQ01);
		    		row.getCell(36).setCellValue(whNoteGSpendTgQ02);
		    		row.getCell(37).setCellValue(whNoteGSpendTgQ03);
		    		row.getCell(38).setCellValue(whNoteGSpendTgQ04);
		        	row.getCell(39).setCellValue(whNoteGSpendTgH01);
		        	row.getCell(40).setCellValue(whNoteGSpendTgH02);
		        	row.getCell(41).setCellValue(whNoteGSpendTgYTD);
	        	
	    		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
	    			
	    			for(int i=4; i<16; i++){
	    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
	    				row.getCell(i).setCellStyle(style);
	    			}
	    			
	    			row.getCell(4).setCellValue(whNoteGSpendOutP01);
	    			row.getCell(5).setCellValue(whNoteGSpendOutP02);
	    			row.getCell(6).setCellValue(whNoteGSpendOutP03);
	    	    	row.getCell(7).setCellValue(whNoteGSpendOutQ01);
	    	    	row.getCell(8).setCellValue(whNoteGSpendOutH01);
	    	    	row.getCell(9).setCellValue(whNoteGSpendOutYTD);
	    	    	row.getCell(10).setCellValue(whNoteGSpendTgP01);
	    	    	row.getCell(11).setCellValue(whNoteGSpendTgP02);
	    	    	row.getCell(12).setCellValue(whNoteGSpendTgP03);
	    	    	row.getCell(13).setCellValue(whNoteGSpendTgQ01);
	    	    	row.getCell(14).setCellValue(whNoteGSpendTgH01);
	    	    	row.getCell(15).setCellValue(whNoteGSpendTgYTD);
	    	    	
	    		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
	    			
	    			for(int i=4; i<18; i++){
	    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
	    				row.getCell(i).setCellStyle(style);
	    			}
	    			
	    			row.getCell(4).setCellValue(whNoteGSpendOutP04);
	    			row.getCell(5).setCellValue(whNoteGSpendOutP05);
	    			row.getCell(6).setCellValue(whNoteGSpendOutP06);
	    	    	row.getCell(7).setCellValue(whNoteGSpendOutQ01);
	    	    	row.getCell(8).setCellValue(whNoteGSpendOutQ02);
	    	    	row.getCell(9).setCellValue(whNoteGSpendOutH01);
	    	    	row.getCell(10).setCellValue(whNoteGSpendOutYTD);
	    	    	row.getCell(11).setCellValue(whNoteGSpendTgP04);
	    	    	row.getCell(12).setCellValue(whNoteGSpendTgP05);
	    	    	row.getCell(13).setCellValue(whNoteGSpendTgP06);
	    	    	row.getCell(14).setCellValue(whNoteGSpendTgQ01);
	    	    	row.getCell(15).setCellValue(whNoteGSpendTgQ02);
	    	    	row.getCell(16).setCellValue(whNoteGSpendTgH01);
	    	    	row.getCell(17).setCellValue(whNoteGSpendTgYTD);
	    	    	
	    		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
	    			
	    			for(int i=4; i<20; i++){
	    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
	    				row.getCell(i).setCellStyle(style);
	    			}
	    			
	    			row.getCell(4).setCellValue(whNoteGSpendOutP07);
	    			row.getCell(5).setCellValue(whNoteGSpendOutP08);
	    			row.getCell(6).setCellValue(whNoteGSpendOutP09);
	    	    	row.getCell(7).setCellValue(whNoteGSpendOutQ02);
	    	    	row.getCell(8).setCellValue(whNoteGSpendOutQ03);
	    	    	row.getCell(9).setCellValue(whNoteGSpendOutH01);
	    	    	row.getCell(10).setCellValue(whNoteGSpendOutH02);
	    	    	row.getCell(11).setCellValue(whNoteGSpendOutYTD);
	    	    	row.getCell(12).setCellValue(whNoteGSpendTgP07);
	    	    	row.getCell(13).setCellValue(whNoteGSpendTgP08);
	    	    	row.getCell(14).setCellValue(whNoteGSpendTgP09);
	    	    	row.getCell(15).setCellValue(whNoteGSpendTgQ02);
	    	    	row.getCell(16).setCellValue(whNoteGSpendTgQ03);
	    	    	row.getCell(17).setCellValue(whNoteGSpendTgH01);
	    	    	row.getCell(18).setCellValue(whNoteGSpendTgH02);
	    	    	row.getCell(19).setCellValue(whNoteGSpendTgYTD);
	    	    	
	    		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
	    			
	    			for(int i=4; i<20; i++){
	    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
	    				row.getCell(i).setCellStyle(style);
	    			}
	    			
	    			row.getCell(4).setCellValue(whNoteGSpendOutP10);
	    			row.getCell(5).setCellValue(whNoteGSpendOutP11);
	    			row.getCell(6).setCellValue(whNoteGSpendOutP12);
	    	    	row.getCell(7).setCellValue(whNoteGSpendOutQ03);
	    	    	row.getCell(8).setCellValue(whNoteGSpendOutQ04);
	    	    	row.getCell(9).setCellValue(whNoteGSpendOutH01);
	    	    	row.getCell(10).setCellValue(whNoteGSpendOutH02);
	    	    	row.getCell(11).setCellValue(whNoteGSpendOutYTD);
	    	    	row.getCell(12).setCellValue(whNoteGSpendTgP10);
	    	    	row.getCell(13).setCellValue(whNoteGSpendTgP11);
	    	    	row.getCell(14).setCellValue(whNoteGSpendTgP12);
	    	    	row.getCell(15).setCellValue(whNoteGSpendTgQ03);
	    	    	row.getCell(16).setCellValue(whNoteGSpendTgQ04);
	    	    	row.getCell(17).setCellValue(whNoteGSpendTgH01);
	    	    	row.getCell(18).setCellValue(whNoteGSpendTgH02);
	    	    	row.getCell(19).setCellValue(whNoteGSpendTgYTD);
	    	    	
	    		}
				
			}
			
			// Total Note G Spending 합계
			else{
				
				if(periodChk_Param.equals("Y")){
		    		
					for(int i=4; i<42; i++){
						row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
						row.getCell(i).setCellStyle(style);
					}
					
					row.getCell(4).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P01", onIdx, onTxt));
					row.getCell(5).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P02", onIdx, onTxt));
					row.getCell(6).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P03", onIdx, onTxt));
					row.getCell(7).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P04", onIdx, onTxt));
					row.getCell(8).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P05", onIdx, onTxt));
					row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P06", onIdx, onTxt));
					row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P07", onIdx, onTxt));
					row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P08", onIdx, onTxt));
			    	row.getCell(12).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P09", onIdx, onTxt));
			    	row.getCell(13).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P10", onIdx, onTxt));
			    	row.getCell(14).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P11", onIdx, onTxt));
			    	row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P12", onIdx, onTxt));
			    	row.getCell(16).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q01", onIdx, onTxt));
			    	row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q02", onIdx, onTxt));
			    	row.getCell(18).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q03", onIdx, onTxt));
			    	row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q04", onIdx, onTxt));
			    	row.getCell(20).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_H01", onIdx, onTxt));
			    	row.getCell(21).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_H02", onIdx, onTxt));
					if(ytd_Param.equals("P01")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD01", onIdx, onTxt));
					}else if(ytd_Param.equals("P02")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD02", onIdx, onTxt));
					}else if(ytd_Param.equals("P03")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD03", onIdx, onTxt));
					}else if(ytd_Param.equals("P04")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD04", onIdx, onTxt));
					}else if(ytd_Param.equals("P05")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD05", onIdx, onTxt));
					}else if(ytd_Param.equals("P06")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD06", onIdx, onTxt));
					}else if(ytd_Param.equals("P07")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD07", onIdx, onTxt));
					}else if(ytd_Param.equals("P08")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD08", onIdx, onTxt));
					}else if(ytd_Param.equals("P09")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD09", onIdx, onTxt));
					}else if(ytd_Param.equals("P10")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD10", onIdx, onTxt));
					}else if(ytd_Param.equals("P11")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD11", onIdx, onTxt));
					}else if(ytd_Param.equals("P12")){
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", onIdx, onTxt));
					}else{
						row.getCell(22).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", onIdx, onTxt));
					}
			    	row.getCell(23).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P01", onIdx, onTxt));
			    	row.getCell(24).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P02", onIdx, onTxt));
			    	row.getCell(25).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P03", onIdx, onTxt));
			    	row.getCell(26).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P04", onIdx, onTxt));
			    	row.getCell(27).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P05", onIdx, onTxt));
			    	row.getCell(28).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P06", onIdx, onTxt));
			    	row.getCell(29).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P07", onIdx, onTxt));
			    	row.getCell(30).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P08", onIdx, onTxt));
			    	row.getCell(31).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P09", onIdx, onTxt));
			    	row.getCell(32).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P10", onIdx, onTxt));
			    	row.getCell(33).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P11", onIdx, onTxt));
			    	row.getCell(34).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P12", onIdx, onTxt));
			    	row.getCell(35).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_Q01", onIdx, onTxt));
			    	row.getCell(36).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_Q02", onIdx, onTxt));
			    	row.getCell(37).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_Q03", onIdx, onTxt));
			    	row.getCell(38).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_Q04", onIdx, onTxt));
			    	row.getCell(39).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_H01", onIdx, onTxt));
			    	row.getCell(40).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_H02", onIdx, onTxt));
					if(ytd_Param.equals("P01")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD01", onIdx, onTxt));
					}else if(ytd_Param.equals("P02")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD02", onIdx, onTxt));
					}else if(ytd_Param.equals("P03")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD03", onIdx, onTxt));
					}else if(ytd_Param.equals("P04")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD04", onIdx, onTxt));
					}else if(ytd_Param.equals("P05")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD05", onIdx, onTxt));
					}else if(ytd_Param.equals("P06")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD06", onIdx, onTxt));
					}else if(ytd_Param.equals("P07")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD07", onIdx, onTxt));
					}else if(ytd_Param.equals("P08")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD08", onIdx, onTxt));
					}else if(ytd_Param.equals("P09")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD09", onIdx, onTxt));
					}else if(ytd_Param.equals("P10")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD10", onIdx, onTxt));
					}else if(ytd_Param.equals("P11")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD11", onIdx, onTxt));
					}else if(ytd_Param.equals("P12")){
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", onIdx, onTxt));
					}else{
						row.getCell(41).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", onIdx, onTxt));
					}
	        	
	    		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
					
	    			for(int i=4; i<16; i++){
	    				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
	    				row.getCell(i).setCellStyle(style);
	    			}
	    			
					row.getCell(4).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P01", onIdx, onTxt));
					row.getCell(5).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P02", onIdx, onTxt));
					row.getCell(6).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P03", onIdx, onTxt));
			    	row.getCell(7).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q01", onIdx, onTxt));
			    	row.getCell(8).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_H01", onIdx, onTxt));
					if(ytd_Param.equals("P01")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD01", onIdx, onTxt));
					}else if(ytd_Param.equals("P02")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD02", onIdx, onTxt));
					}else if(ytd_Param.equals("P03")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD03", onIdx, onTxt));
					}else if(ytd_Param.equals("P04")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD04", onIdx, onTxt));
					}else if(ytd_Param.equals("P05")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD05", onIdx, onTxt));
					}else if(ytd_Param.equals("P06")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD06", onIdx, onTxt));
					}else if(ytd_Param.equals("P07")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD07", onIdx, onTxt));
					}else if(ytd_Param.equals("P08")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD08", onIdx, onTxt));
					}else if(ytd_Param.equals("P09")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD09", onIdx, onTxt));
					}else if(ytd_Param.equals("P10")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD10", onIdx, onTxt));
					}else if(ytd_Param.equals("P11")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD11", onIdx, onTxt));
					}else if(ytd_Param.equals("P12")){
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", onIdx, onTxt));
					}else{
						row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", onIdx, onTxt));
					}
			    	row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P01", onIdx, onTxt));
			    	row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P02", onIdx, onTxt));
			    	row.getCell(12).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P03", onIdx, onTxt));
			    	row.getCell(13).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_Q01", onIdx, onTxt));
			    	row.getCell(14).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_H01", onIdx, onTxt));
					if(ytd_Param.equals("P01")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD01", onIdx, onTxt));
					}else if(ytd_Param.equals("P02")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD02", onIdx, onTxt));
					}else if(ytd_Param.equals("P03")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD03", onIdx, onTxt));
					}else if(ytd_Param.equals("P04")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD04", onIdx, onTxt));
					}else if(ytd_Param.equals("P05")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD05", onIdx, onTxt));
					}else if(ytd_Param.equals("P06")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD06", onIdx, onTxt));
					}else if(ytd_Param.equals("P07")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD07", onIdx, onTxt));
					}else if(ytd_Param.equals("P08")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD08", onIdx, onTxt));
					}else if(ytd_Param.equals("P09")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD09", onIdx, onTxt));
					}else if(ytd_Param.equals("P10")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD10", onIdx, onTxt));
					}else if(ytd_Param.equals("P11")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD11", onIdx, onTxt));
					}else if(ytd_Param.equals("P12")){
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", onIdx, onTxt));
					}else{
						row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", onIdx, onTxt));
					}
			    	
				}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
					
					for(int i=4; i<18; i++){
						row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
						row.getCell(i).setCellStyle(style);
					}
					
					row.getCell(4).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P04", onIdx, onTxt));
					row.getCell(5).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P05", onIdx, onTxt));
					row.getCell(6).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P06", onIdx, onTxt));
			    	row.getCell(7).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q01", onIdx, onTxt));
			    	row.getCell(8).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q02", onIdx, onTxt));
			    	row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_H01", onIdx, onTxt));
					if(ytd_Param.equals("P01")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD01", onIdx, onTxt));
					}else if(ytd_Param.equals("P02")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD02", onIdx, onTxt));
					}else if(ytd_Param.equals("P03")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD03", onIdx, onTxt));
					}else if(ytd_Param.equals("P04")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD04", onIdx, onTxt));
					}else if(ytd_Param.equals("P05")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD05", onIdx, onTxt));
					}else if(ytd_Param.equals("P06")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD06", onIdx, onTxt));
					}else if(ytd_Param.equals("P07")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD07", onIdx, onTxt));
					}else if(ytd_Param.equals("P08")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD08", onIdx, onTxt));
					}else if(ytd_Param.equals("P09")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD09", onIdx, onTxt));
					}else if(ytd_Param.equals("P10")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD10", onIdx, onTxt));
					}else if(ytd_Param.equals("P11")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD11", onIdx, onTxt));
					}else if(ytd_Param.equals("P12")){
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", onIdx, onTxt));
					}else{
						row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", onIdx, onTxt));
					}
			    	row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P04", onIdx, onTxt));
			    	row.getCell(12).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P05", onIdx, onTxt));
			    	row.getCell(13).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P06", onIdx, onTxt));
			    	row.getCell(14).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_Q01", onIdx, onTxt));
			    	row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_Q02", onIdx, onTxt));
			    	row.getCell(16).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_H01", onIdx, onTxt));
					if(ytd_Param.equals("P01")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD01", onIdx, onTxt));
					}else if(ytd_Param.equals("P02")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD02", onIdx, onTxt));
					}else if(ytd_Param.equals("P03")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD03", onIdx, onTxt));
					}else if(ytd_Param.equals("P04")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD04", onIdx, onTxt));
					}else if(ytd_Param.equals("P05")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD05", onIdx, onTxt));
					}else if(ytd_Param.equals("P06")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD06", onIdx, onTxt));
					}else if(ytd_Param.equals("P07")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD07", onIdx, onTxt));
					}else if(ytd_Param.equals("P08")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD08", onIdx, onTxt));
					}else if(ytd_Param.equals("P09")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD09", onIdx, onTxt));
					}else if(ytd_Param.equals("P10")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD10", onIdx, onTxt));
					}else if(ytd_Param.equals("P11")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD11", onIdx, onTxt));
					}else if(ytd_Param.equals("P12")){
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", onIdx, onTxt));
					}else{
						row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", onIdx, onTxt));
					}
			    	
				}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
					
					for(int i=4; i<20; i++){
						row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
						row.getCell(i).setCellStyle(style);
					}
					
					row.getCell(4).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P07", onIdx, onTxt));
					row.getCell(5).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P08", onIdx, onTxt));
					row.getCell(6).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P09", onIdx, onTxt));
			    	row.getCell(7).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q02", onIdx, onTxt));
			    	row.getCell(8).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q03", onIdx, onTxt));
			    	row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_H01", onIdx, onTxt));
			    	row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_H02", onIdx, onTxt));
					if(ytd_Param.equals("P01")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD01", onIdx, onTxt));
					}else if(ytd_Param.equals("P02")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD02", onIdx, onTxt));
					}else if(ytd_Param.equals("P03")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD03", onIdx, onTxt));
					}else if(ytd_Param.equals("P04")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD04", onIdx, onTxt));
					}else if(ytd_Param.equals("P05")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD05", onIdx, onTxt));
					}else if(ytd_Param.equals("P06")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD06", onIdx, onTxt));
					}else if(ytd_Param.equals("P07")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD07", onIdx, onTxt));
					}else if(ytd_Param.equals("P08")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD08", onIdx, onTxt));
					}else if(ytd_Param.equals("P09")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD09", onIdx, onTxt));
					}else if(ytd_Param.equals("P10")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD10", onIdx, onTxt));
					}else if(ytd_Param.equals("P11")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD11", onIdx, onTxt));
					}else if(ytd_Param.equals("P12")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", onIdx, onTxt));
					}else{
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", onIdx, onTxt));
					}
			    	row.getCell(12).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P07", onIdx, onTxt));
			    	row.getCell(13).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P08", onIdx, onTxt));
			    	row.getCell(14).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P09", onIdx, onTxt));
			    	row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_Q02", onIdx, onTxt));
			    	row.getCell(16).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_Q03", onIdx, onTxt));
			    	row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_H01", onIdx, onTxt));
			    	row.getCell(18).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_H02", onIdx, onTxt));
					if(ytd_Param.equals("P01")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD01", onIdx, onTxt));
					}else if(ytd_Param.equals("P02")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD02", onIdx, onTxt));
					}else if(ytd_Param.equals("P03")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD03", onIdx, onTxt));
					}else if(ytd_Param.equals("P04")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD04", onIdx, onTxt));
					}else if(ytd_Param.equals("P05")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD05", onIdx, onTxt));
					}else if(ytd_Param.equals("P06")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD06", onIdx, onTxt));
					}else if(ytd_Param.equals("P07")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD07", onIdx, onTxt));
					}else if(ytd_Param.equals("P08")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD08", onIdx, onTxt));
					}else if(ytd_Param.equals("P09")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD09", onIdx, onTxt));
					}else if(ytd_Param.equals("P10")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD10", onIdx, onTxt));
					}else if(ytd_Param.equals("P11")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD11", onIdx, onTxt));
					}else if(ytd_Param.equals("P12")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", onIdx, onTxt));
					}else{
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", onIdx, onTxt));
					}
			    	
				}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
					
					for(int i=4; i<20; i++){
						row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
						row.getCell(i).setCellStyle(style);
					}
					
					row.getCell(4).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P10", onIdx, onTxt));
					row.getCell(5).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P11", onIdx, onTxt));
					row.getCell(6).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_P12", onIdx, onTxt));
			    	row.getCell(7).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q03", onIdx, onTxt));
			    	row.getCell(8).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_Q04", onIdx, onTxt));
			    	row.getCell(9).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_H01", onIdx, onTxt));
			    	row.getCell(10).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_H02", onIdx, onTxt));
					if(ytd_Param.equals("P01")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD01", onIdx, onTxt));
					}else if(ytd_Param.equals("P02")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD02", onIdx, onTxt));
					}else if(ytd_Param.equals("P03")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD03", onIdx, onTxt));
					}else if(ytd_Param.equals("P04")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD04", onIdx, onTxt));
					}else if(ytd_Param.equals("P05")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD05", onIdx, onTxt));
					}else if(ytd_Param.equals("P06")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD06", onIdx, onTxt));
					}else if(ytd_Param.equals("P07")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD07", onIdx, onTxt));
					}else if(ytd_Param.equals("P08")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD08", onIdx, onTxt));
					}else if(ytd_Param.equals("P09")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD09", onIdx, onTxt));
					}else if(ytd_Param.equals("P10")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD10", onIdx, onTxt));
					}else if(ytd_Param.equals("P11")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD11", onIdx, onTxt));
					}else if(ytd_Param.equals("P12")){
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", onIdx, onTxt));
					}else{
						row.getCell(11).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_OUT_YTD12", onIdx, onTxt));
					}
			    	row.getCell(12).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P10", onIdx, onTxt));
			    	row.getCell(13).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P11", onIdx, onTxt));
			    	row.getCell(14).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_P12", onIdx, onTxt));
			    	row.getCell(15).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_Q03", onIdx, onTxt));
			    	row.getCell(16).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_Q04", onIdx, onTxt));
			    	row.getCell(17).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_H01", onIdx, onTxt));
			    	row.getCell(18).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_H02", onIdx, onTxt));
					if(ytd_Param.equals("P01")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD01", onIdx, onTxt));
					}else if(ytd_Param.equals("P02")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD02", onIdx, onTxt));
					}else if(ytd_Param.equals("P03")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD03", onIdx, onTxt));
					}else if(ytd_Param.equals("P04")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD04", onIdx, onTxt));
					}else if(ytd_Param.equals("P05")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD05", onIdx, onTxt));
					}else if(ytd_Param.equals("P06")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD06", onIdx, onTxt));
					}else if(ytd_Param.equals("P07")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD07", onIdx, onTxt));
					}else if(ytd_Param.equals("P08")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD08", onIdx, onTxt));
					}else if(ytd_Param.equals("P09")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD09", onIdx, onTxt));
					}else if(ytd_Param.equals("P10")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD10", onIdx, onTxt));
					}else if(ytd_Param.equals("P11")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD11", onIdx, onTxt));
					}else if(ytd_Param.equals("P12")){
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", onIdx, onTxt));
					}else{
						row.getCell(19).setCellValue(getSum(data, colIdx, grpTxt, "NOTAG_TG_YTD12", onIdx, onTxt));
					}
			    	
				}
			}
		}
	}
	
	public void setColStyle(Row row, CellStyle style, int startColIdx, int endColIdx) {
		for (int i=startColIdx; i < endColIdx+1; i++) {
			if (row.getCell(i) == null) {
				row.createCell(i).setCellStyle(style);
			}
			else {
				row.getCell(i).setCellStyle(style);
			}
		}
	}
	
	// F15 SOM
	// Industry Depletion ForeCast [ Calc = DK Depletion Target.Actual(Outlook)/ Actual(Outlook)]
	public ArrayList<Map> Dep_IDF_Calc1(ArrayList<Map> InDep, ArrayList<Map> DkDep, List dataList){
		ArrayList<Map> resultList = new ArrayList<Map>();
      
		ArrayList<Map> InDepList = InDep;
		ArrayList<Map> DkDepList = DkDep;
		
		double dkOutP01 = 0.0;
		double dkOutP02 = 0.0;
		double dkOutP03 = 0.0;
		double dkOutP04 = 0.0;
		double dkOutP05 = 0.0;
		double dkOutP06 = 0.0;
		double dkOutP07 = 0.0;
		double dkOutP08 = 0.0;
		double dkOutP09 = 0.0;
		double dkOutP10 = 0.0;
		double dkOutP11 = 0.0;
		double dkOutP12 = 0.0;
		double dkOutQ01 = 0.0;
		double dkOutQ02 = 0.0;
		double dkOutQ03 = 0.0;
		double dkOutQ04 = 0.0;
		double dkOutH01 = 0.0;
		double dkOutH02 = 0.0;
		double dkOutYTD = 0.0;
		
		double dkTgP01 = 0.0;
		double dkTgP02 = 0.0;
		double dkTgP03 = 0.0;
		double dkTgP04 = 0.0;
		double dkTgP05 = 0.0;
		double dkTgP06 = 0.0;
		double dkTgP07 = 0.0;
		double dkTgP08 = 0.0;
		double dkTgP09 = 0.0;
		double dkTgP10 = 0.0;
		double dkTgP11 = 0.0;
		double dkTgP12 = 0.0;
		double dkTgQ01 = 0.0;
		double dkTgQ02 = 0.0;
		double dkTgQ03 = 0.0;
		double dkTgQ04 = 0.0;
		double dkTgH01 = 0.0;
		double dkTgH02 = 0.0;
		double dkTgYTD = 0.0;
		
		for(int i=0; i<dataList.size(); i++){
			if(((Map)dataList.get(i)).get("DATALV1_NM").toString().equals("WHISKY") || ((Map)dataList.get(i)).get("DATALV1_NM").toString().equals("Whisky")){
				dkOutP01 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_P01")));
				dkOutP02 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_P02")));
				dkOutP03 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_P03")));
				dkOutP04 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_P04")));
				dkOutP05 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_P05")));
				dkOutP06 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_P06")));
				dkOutP07 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_P07")));
				dkOutP08 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_P08")));
				dkOutP09 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_P09")));
				dkOutP10 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_P10")));
				dkOutP11 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_P11")));
				dkOutP12 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_P12")));
				dkOutQ01 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_Q01")));
				dkOutQ02 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_Q02")));
				dkOutQ03 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_Q03")));
				dkOutQ04 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_Q04")));
				dkOutH01 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_H01")));
				dkOutH02 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_H02")));
				
				dkTgP01 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_TG_P01")));
				dkTgP02 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_TG_P02")));
				dkTgP03 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_TG_P03")));
				dkTgP04 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_TG_P04")));
				dkTgP05 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_TG_P05")));
				dkTgP06 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_TG_P06")));
				dkTgP07 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_TG_P07")));
				dkTgP08 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_TG_P08")));
				dkTgP09 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_TG_P09")));
				dkTgP10 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_TG_P10")));
				dkTgP11 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_TG_P11")));
				dkTgP12 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_TG_P12")));
				dkTgQ01 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_TG_Q01")));
				dkTgQ02 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_TG_Q02")));
				dkTgQ03 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_TG_Q03")));
				dkTgQ04 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_TG_Q04")));
				dkTgH01 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_TG_H01")));
				dkTgH02 += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_TG_H02")));
				
				if(ytd_Param.equals("P01")){
					dkOutYTD += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_YTD01")));
				}else if(ytd_Param.equals("P02")){
					dkOutYTD += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_YTD02")));
				}else if(ytd_Param.equals("P03")){
					dkOutYTD += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_YTD03")));
				}else if(ytd_Param.equals("P04")){
					dkOutYTD += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_YTD04")));
				}else if(ytd_Param.equals("P05")){
					dkOutYTD += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_YTD05")));
				}else if(ytd_Param.equals("P06")){
					dkOutYTD += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_YTD06")));
				}else if(ytd_Param.equals("P07")){
					dkOutYTD += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_YTD07")));
				}else if(ytd_Param.equals("P08")){
					dkOutYTD += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_YTD08")));
				}else if(ytd_Param.equals("P09")){
					dkOutYTD += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_YTD09")));
				}else if(ytd_Param.equals("P10")){
					dkOutYTD += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_YTD10")));
				}else if(ytd_Param.equals("P11")){
					dkOutYTD += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_YTD11")));
				}else if(ytd_Param.equals("P12")){
					dkOutYTD += Double.parseDouble(String.valueOf(((Map)dataList.get(i)).get("DK_OUT_YTD12")));
				}
			}
		}
		
		for(int i=0; i<InDep.size(); i++){
			
			Map record = new LinkedHashMap();
			record.put("STYLE", InDepList.get(i).get("STYLETXT").toString());
			
			if(channel_Param.equals("")){
				
				if(i<InDep.size()-1){
					
					for(int cell = 1; cell <= 19; cell++){
						if(cell == 1){
							
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P01").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
			
							String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P01").toString();
							Double DkOutlook = Double.parseDouble(DkOutlookValue);
			   
							Double resultData = 0.0;
							
							if(IndOutlook != 0 && DkOutlook != 0){
								try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P01", resultData);
			   
						}else if(cell == 2){
							
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P02").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
							
							String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P02").toString();
							Double DkOutlook = Double.parseDouble(DkOutlookValue);
							  
							Double resultData = 0.0;
							
							if(IndOutlook != 0 && DkOutlook != 0){
								try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P02", resultData);
			   
						}else if(cell == 3){
							
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P03").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
						
							String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P03").toString();
							Double DkOutlook = Double.parseDouble(DkOutlookValue);
						   
							Double resultData = 0.0;
						   
							if(IndOutlook != 0 && DkOutlook != 0){
								try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P03", resultData);
			   
						}else if(cell == 4){
							
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P04").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
			
							String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P04").toString();
							Double DkOutlook = Double.parseDouble(DkOutlookValue);
			   
							Double resultData = 0.0;
			   
							if(IndOutlook != 0 && DkOutlook != 0){
								try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P04", resultData);
			   
						}else if(cell == 5){
							
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P05").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
			
							String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P05").toString();
							Double DkOutlook = Double.parseDouble(DkOutlookValue);
			   
							Double resultData = 0.0;
			   
							if(IndOutlook != 0 && DkOutlook != 0){
								try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P05", resultData);
			   
						}else if(cell == 6){
			   
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P06").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
			
							String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P06").toString();
							Double DkOutlook = Double.parseDouble(DkOutlookValue);
			   
							Double resultData = 0.0;
			   
							if(IndOutlook != 0 && DkOutlook != 0){
								try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P06", resultData);
			   
						}else if(cell == 7){
			   
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P07").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
			
							String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P07").toString();
							Double DkOutlook = Double.parseDouble(DkOutlookValue);
			   
							Double resultData = 0.0;
			   
							if(IndOutlook != 0 && DkOutlook != 0){
								try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P07", resultData);
			   
						}else if(cell == 8){
							
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P08").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
			
							String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P08").toString();
							Double DkOutlook = Double.parseDouble(DkOutlookValue);
			   
							Double resultData = 0.0;
			   
							if(IndOutlook != 0 && DkOutlook != 0){
								try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P08", resultData);
			   
						}else if(cell == 9){
			   
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P09").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
			
							String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P09").toString();
							Double DkOutlook = Double.parseDouble(DkOutlookValue);
			   
							Double resultData = 0.0;
			   
							if(IndOutlook != 0 && DkOutlook != 0){
								try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P09", resultData);
			   
						}else if(cell == 10){
			   
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P10").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
			
							String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P10").toString();
							Double DkOutlook = Double.parseDouble(DkOutlookValue);
			   
							Double resultData = 0.0;
			   
							if(IndOutlook != 0 && DkOutlook != 0){
								try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P10", resultData);
			   
						}else if(cell == 11){
			   
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P11").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
			
							String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P11").toString();
							Double DkOutlook = Double.parseDouble(DkOutlookValue);
			   
							Double resultData = 0.0;
			   
							if(IndOutlook != 0 && DkOutlook != 0){
								try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P11", resultData);
			   
						}else if(cell == 12){
			   
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P12").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
			
							String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P12").toString();
							Double DkOutlook = Double.parseDouble(DkOutlookValue);
			   
							Double resultData = 0.0;
			   
							if(IndOutlook != 0 && DkOutlook != 0){
								try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P12", resultData);
			   
						}else if( cell == 13){ 
			   
							Double IndOutlookQ1 = 0.0;
							Double DkOutlookQ1 = 0.0;
							Double IndTargetQ1 = 0.0;
							Double DkTargetQ1 = 0.0;
							Double resultData = 0.0;
							Double signalData = 0.0;
			   
							for(int j=1; j <=3; j++){
								String IndOutlookKey = "IND_OUT_P0"+j;
								String IndOutlookValue = InDepList.get(i).get(IndOutlookKey).toString();
								Double IndOutlook = Double.parseDouble(IndOutlookValue);
								IndOutlookQ1 +=IndOutlook;
			
								String DkOutlookKey = "DK_OUT_P0"+j;
								String DkOutlookValue = DkDepList.get(i).get(DkOutlookKey).toString();
								Double DkOutlook = Double.parseDouble(DkOutlookValue);
								DkOutlookQ1 += DkOutlook;
								
								String IndTargetKey = "IND_TG_P0"+j;
								String IndTargetValue = InDepList.get(i).get(IndTargetKey).toString();
								Double IndTarget = Double.parseDouble(IndTargetValue);
								IndTargetQ1 +=IndTarget;
			
								String DkTargetKey = "DK_TG_P0"+j;
								String DkTargetValue = DkDepList.get(i).get(DkTargetKey).toString();
								Double DkTarget = Double.parseDouble(DkTargetValue);
								DkTargetQ1 += DkTarget;
								
							}
			   
							if(IndOutlookQ1 != 0 && DkOutlookQ1 != 0){
								try{ resultData = (DkOutlookQ1/IndOutlookQ1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_Q01", resultData);
			   
							if(IndTargetQ1 != 0 && DkTargetQ1 != 0){
								try{ signalData = (DkTargetQ1/IndTargetQ1); } catch(ArithmeticException  ae){ signalData = 0.0; }
							}
							
							logger.debug("★ : " + DkTargetQ1 + " / " + IndTargetQ1 + " / " + signalData + " / " + resultData);
							
							double signalValue = 0.0;
							signalValue = resultData - signalData;
							
							// 신호등
							if(signalValue >= 0){
								record.put("IND_CALC1_Q01_SN", "GREEN");
							}else if(signalValue > -0.01 && signalValue < 0){
								record.put("IND_CALC1_Q01_SN", "YELLOW");
							}else{
								record.put("IND_CALC1_Q01_SN", "RED");
							}
							
						}else if( cell == 14){
			   
							Double IndOutlookQ2 = 0.0;
							Double DkOutlookQ2 = 0.0;
							Double IndTargetQ2 = 0.0;
							Double DkTargetQ2 = 0.0;
							Double resultData = 0.0;
							Double signalData = 0.0;
							
							for(int j=4; j <=6; j++){
								String IndOutlookKey = "IND_OUT_P0"+j;
								String IndOutlookValue = InDepList.get(i).get(IndOutlookKey).toString();
								Double IndOutlook = Double.parseDouble(IndOutlookValue);
								IndOutlookQ2 +=IndOutlook;
			
								String DkOutlookKey = "DK_OUT_P0"+j;
								String DkOutlookValue = DkDepList.get(i).get(DkOutlookKey).toString();
								Double DkOutlook = Double.parseDouble(DkOutlookValue);
								DkOutlookQ2 += DkOutlook;
								
								String IndTargetKey = "IND_TG_P0"+j;
								String IndTargetValue = InDepList.get(i).get(IndTargetKey).toString();
								Double IndTarget = Double.parseDouble(IndTargetValue);
								IndTargetQ2 +=IndTarget;
			
								String DkTargetKey = "DK_TG_P0"+j;
								String DkTargetValue = DkDepList.get(i).get(DkTargetKey).toString();
								Double DkTarget = Double.parseDouble(DkTargetValue);
								DkTargetQ2 += DkTarget;
							}
			   
							if(IndOutlookQ2 != 0 && DkOutlookQ2 != 0){
								try{ resultData = (DkOutlookQ2/IndOutlookQ2); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_Q02", resultData);
			   
							if(IndTargetQ2 != 0 && DkTargetQ2 != 0){
								try{ signalData = (DkTargetQ2/IndTargetQ2); } catch(ArithmeticException  ae){ signalData = 0.0; }
							}
							
							double signalValue = 0.0;
							signalValue = resultData - signalData;
							
							// 신호등
							if(signalValue >= 0){
								record.put("IND_CALC1_Q02_SN", "GREEN");
							}else if(signalValue > -0.01 && signalValue < 0){
								record.put("IND_CALC1_Q02_SN", "YELLOW");
							}else{
								record.put("IND_CALC1_Q02_SN", "RED");
							}
							
						}else if( cell == 15){
			   
							Double IndOutlookQ3 = 0.0;
							Double DkOutlookQ3 = 0.0;
							Double IndTargetQ3 = 0.0;
							Double DkTargetQ3 = 0.0;
							Double resultData = 0.0;
							Double signalData = 0.0;
			   
							for(int j=7; j <=9; j++){
								String IndOutlookKey = "IND_OUT_P0"+j;
								String IndOutlookValue = InDepList.get(i).get(IndOutlookKey).toString();
								Double IndOutlook = Double.parseDouble(IndOutlookValue);
								IndOutlookQ3 +=IndOutlook;
			
								String DkOutlookKey = "DK_OUT_P0"+j;
								String DkOutlookValue = DkDepList.get(i).get(DkOutlookKey).toString();
								Double DkOutlook = Double.parseDouble(DkOutlookValue);
								DkOutlookQ3 += DkOutlook;
								
								String IndTargetKey = "IND_TG_P0"+j;
								String IndTargetValue = InDepList.get(i).get(IndTargetKey).toString();
								Double IndTarget = Double.parseDouble(IndTargetValue);
								IndTargetQ3 +=IndTarget;
			
								String DkTargetKey = "DK_TG_P0"+j;
								String DkTargetValue = DkDepList.get(i).get(DkTargetKey).toString();
								Double DkTarget = Double.parseDouble(DkTargetValue);
								DkTargetQ3 += DkTarget;
						}
			   
						if(IndOutlookQ3 != 0 && DkOutlookQ3 != 0){
							try{ resultData = (DkOutlookQ3/IndOutlookQ3); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						
						record.put("IND_CALC1_Q03", resultData);
			   
						if(IndTargetQ3 != 0 && DkTargetQ3 != 0){
							try{ signalData = (DkTargetQ3/IndTargetQ3); } catch(ArithmeticException  ae){ signalData = 0.0; }
						}
						
						double signalValue = 0.0;
						signalValue = resultData - signalData;
						
						// 신호등
						if(signalValue >= 0){
							record.put("IND_CALC1_Q03_SN", "GREEN");
						}else if(signalValue > -0.01 && signalValue < 0){
							record.put("IND_CALC1_Q03_SN", "YELLOW");
						}else{
							record.put("IND_CALC1_Q03_SN", "RED");
						}
						
						}else if( cell == 16){
			   
							Double IndOutlookQ4 = 0.0;
							Double DkOutlookQ4 = 0.0;
							Double IndTargetQ4 = 0.0;
							Double DkTargetQ4 = 0.0;
							Double resultData = 0.0;
							Double signalData = 0.0;
			   
							for(int j=10; j<=12; j++){
								String IndOutlookKey = "IND_OUT_P"+j;
								String IndOutlookValue = InDepList.get(i).get(IndOutlookKey).toString();
								Double IndOutlook = Double.parseDouble(IndOutlookValue);
								IndOutlookQ4 +=IndOutlook;
			
								String DkOutlookKey = "DK_OUT_P"+j;
								String DkOutlookValue = DkDepList.get(i).get(DkOutlookKey).toString();
								Double DkOutlook = Double.parseDouble(DkOutlookValue);
								DkOutlookQ4 += DkOutlook;
								
								String IndTargetKey = "IND_TG_P"+j;
								String IndTargetValue = InDepList.get(i).get(IndTargetKey).toString();
								Double IndTarget = Double.parseDouble(IndTargetValue);
								IndTargetQ4 +=IndTarget;
			
								String DkTargetKey = "DK_TG_P"+j;
								String DkTargetValue = DkDepList.get(i).get(DkTargetKey).toString();
								Double DkTarget = Double.parseDouble(DkTargetValue);
								DkTargetQ4 += DkTarget;
							}
			   
							if(IndOutlookQ4 != 0 && DkOutlookQ4 != 0){
								try{ resultData = (DkOutlookQ4/IndOutlookQ4); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_Q04", resultData);
			   
							if(IndTargetQ4 != 0 && DkTargetQ4 != 0){
								try{ signalData = (DkTargetQ4/IndTargetQ4); } catch(ArithmeticException  ae){ signalData = 0.0; }
							}
							
							double signalValue = 0.0;
							signalValue = resultData - signalData;
							
							// 신호등
							if(signalValue >= 0){
								record.put("IND_CALC1_Q04_SN", "GREEN");
							}else if(signalValue > -0.01 && signalValue < 0){
								record.put("IND_CALC1_Q04_SN", "YELLOW");
							}else{
								record.put("IND_CALC1_Q04_SN", "RED");
							}
							
						}else if( cell == 17){
			   
							Double IndOutlookH1 = 0.0;
							Double DkOutlookH1 = 0.0;
							Double IndTargetH1 = 0.0;
							Double DkTargetH1 = 0.0;
							Double resultData = 0.0;
							Double signalData = 0.0;
			   
							for(int j=1; j <=6; j++){
								String IndOutlookKey = "IND_OUT_P0"+j;
								String IndOutlookValue = InDepList.get(i).get(IndOutlookKey).toString();
								Double IndOutlook = Double.parseDouble(IndOutlookValue);
								IndOutlookH1 +=IndOutlook;
			
								String DkOutlookKey = "DK_OUT_P0"+j;
								String DkOutlookValue = DkDepList.get(i).get(DkOutlookKey).toString();
								Double DkOutlook = Double.parseDouble(DkOutlookValue);
								DkOutlookH1 += DkOutlook;
								
								String IndTargetKey = "IND_TG_P0"+j;
								String IndTargetValue = InDepList.get(i).get(IndTargetKey).toString();
								Double IndTarget = Double.parseDouble(IndTargetValue);
								IndTargetH1 +=IndTarget;
			
								String DkTargetKey = "DK_TG_P0"+j;
								String DkTargetValue = DkDepList.get(i).get(DkTargetKey).toString();
								Double DkTarget = Double.parseDouble(DkTargetValue);
								DkTargetH1 += DkTarget;
								
							}
			   
							if(IndOutlookH1 != 0 && DkOutlookH1 != 0){
								try{ resultData = (DkOutlookH1/IndOutlookH1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("IND_CALC1_H01", resultData);
			   
							if(IndTargetH1 != 0 && DkTargetH1 != 0){
								try{ signalData = (DkTargetH1/IndTargetH1); } catch(ArithmeticException  ae){ signalData = 0.0; }
							}
							
							double signalValue = 0.0;
							signalValue = resultData - signalData;
							
							// 신호등
							if(signalValue >= 0){
								record.put("IND_CALC1_H01_SN", "GREEN");
							}else if(signalValue > -0.01 && signalValue < 0){
								record.put("IND_CALC1_H01_SN", "YELLOW");
							}else{
								record.put("IND_CALC1_H01_SN", "RED");
							}
							
						}else if( cell == 18){
			   
							Double IndOutlookH2 = 0.0;
							Double DkOutlookH2 = 0.0;
							Double IndTargetH2 = 0.0;
							Double DkTargetH2 = 0.0;
							Double resultData = 0.0;
							Double signalData = 0.0;
			   
							for(int j=7; j<=12; j++){
								if(j == 7 || j == 8 || j == 9){
									String IndOutlookKey = "IND_OUT_P0"+j;
									String IndOutlookValue = InDepList.get(i).get(IndOutlookKey).toString();
									Double IndOutlook = Double.parseDouble(IndOutlookValue);
									IndOutlookH2 +=IndOutlook;
			
									String DkOutlookKey = "DK_OUT_P0"+j;
									String DkOutlookValue = DkDepList.get(i).get(DkOutlookKey).toString();
									Double DkOutlook = Double.parseDouble(DkOutlookValue);
									DkOutlookH2 += DkOutlook;
									
									String IndTargetKey = "IND_TG_P0"+j;
									String IndTargetValue = InDepList.get(i).get(IndTargetKey).toString();
									Double IndTarget = Double.parseDouble(IndTargetValue);
									IndTargetH2 +=IndTarget;
				
									String DkTargetKey = "DK_TG_P0"+j;
									String DkTargetValue = DkDepList.get(i).get(DkTargetKey).toString();
									Double DkTarget = Double.parseDouble(DkTargetValue);
									DkTargetH2 += DkTarget;
									
								}else{
									String IndOutlookKey = "IND_OUT_P"+j;
									String IndOutlookValue = InDepList.get(i).get(IndOutlookKey).toString();
									Double IndOutlook = Double.parseDouble(IndOutlookValue);
									IndOutlookH2 +=IndOutlook;
			
									String DkOutlookKey = "DK_OUT_P"+j;
									String DkOutlookValue = DkDepList.get(i).get(DkOutlookKey).toString();
									Double DkOutlook = Double.parseDouble(DkOutlookValue);
									DkOutlookH2 += DkOutlook;
									
									String IndTargetKey = "IND_TG_P"+j;
									String IndTargetValue = InDepList.get(i).get(IndTargetKey).toString();
									Double IndTarget = Double.parseDouble(IndTargetValue);
									IndTargetH2 +=IndTarget;
				
									String DkTargetKey = "DK_TG_P"+j;
									String DkTargetValue = DkDepList.get(i).get(DkTargetKey).toString();
									Double DkTarget = Double.parseDouble(DkTargetValue);
									DkTargetH2 += DkTarget;
								}
							}
			   
							if(IndOutlookH2 != 0 && DkOutlookH2 != 0){
								try{ resultData = (DkOutlookH2/IndOutlookH2); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_H02", resultData);
			   
							if(IndTargetH2 != 0 && DkTargetH2 != 0){
								try{ signalData = (DkTargetH2/IndTargetH2); } catch(ArithmeticException  ae){ signalData = 0.0; }
							}
							
							double signalValue = 0.0;
							signalValue = resultData - signalData;
							
							// 신호등
							if(signalValue >= 0){
								record.put("IND_CALC1_H02_SN", "GREEN");
							}else if(signalValue > -0.01 && signalValue < 0){
								record.put("IND_CALC1_H02_SN", "YELLOW");
							}else{
								record.put("IND_CALC1_H02_SN", "RED");
							}
							
						}else if(cell == 19){
							
							String IntOutlookValue = InDepList.get(i).get("IND_OUT_YTD").toString();
							Double IndOutlookYTD = Double.parseDouble(IntOutlookValue);
							
							String DkOutlookValue = DkDepList.get(i).get("DK_OUT_YTD").toString();
							Double DkOutlookYTD = Double.parseDouble(DkOutlookValue);
							
							String IntTargetValue = InDepList.get(i).get("IND_TG_YTD").toString();
							Double IndTargetYTD = Double.parseDouble(IntTargetValue);
							
							String DkTargetValue = DkDepList.get(i).get("DK_TG_YTD").toString();
							Double DkTargetYTD = Double.parseDouble(DkTargetValue);
							
							Double resultData = 0.0;
							Double signalData = 0.0;
							
							if(IndOutlookYTD != 0 && DkOutlookYTD != 0){
								try{ resultData = (DkOutlookYTD/IndOutlookYTD); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_YTD", resultData);
							
							if(IndTargetYTD != 0 && DkTargetYTD != 0){
								try{ signalData = (DkTargetYTD/IndTargetYTD); } catch(ArithmeticException  ae){ signalData = 0.0; }
							}
							
							double signalValue = 0.0;
							signalValue = resultData - signalData;
							
							// 신호등
							if(signalValue >= 0){
								record.put("IND_CALC1_YTD_SN", "GREEN");
							}else if(signalValue > -0.01 && signalValue < 0){
								record.put("IND_CALC1_YTD_SN", "YELLOW");
							}else{
								record.put("IND_CALC1_YTD_SN", "RED");
							}
						}
					}
				}else{
					for(int cell = 1; cell <= 19; cell++){
						if(cell == 1){
							
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P01").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
			   
							Double resultData = 0.0;
							
							if(IndOutlook != 0 && dkOutP01 != 0){
								try{ resultData = (dkOutP01/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P01", resultData);
			   
						}else if(cell == 2){
							
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P02").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
							  
							Double resultData = 0.0;
							
							if(IndOutlook != 0 && dkOutP02 != 0){
								try{ resultData = (dkOutP02/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P02", resultData);
			   
						}else if(cell == 3){
							
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P03").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
			   
							Double resultData = 0.0;
							
							if(IndOutlook != 0 && dkOutP03 != 0){
								try{ resultData = (dkOutP03/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P03", resultData);
			   
						}else if(cell == 4){
							
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P04").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
			   
							Double resultData = 0.0;
							
							if(IndOutlook != 0 && dkOutP04 != 0){
								try{ resultData = (dkOutP04/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P04", resultData);
			   
						}else if(cell == 5){
							
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P05").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
			   
							Double resultData = 0.0;
							
							if(IndOutlook != 0 && dkOutP05 != 0){
								try{ resultData = (dkOutP05/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P05", resultData);
			   
						}else if(cell == 6){
			   
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P06").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
			   
							Double resultData = 0.0;
							
							if(IndOutlook != 0 && dkOutP06 != 0){
								try{ resultData = (dkOutP06/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P06", resultData);
			   
						}else if(cell == 7){
			   
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P07").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
			   
							Double resultData = 0.0;
							
							if(IndOutlook != 0 && dkOutP07 != 0){
								try{ resultData = (dkOutP07/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P07", resultData);
			   
						}else if(cell == 8){
							
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P08").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
			   
							Double resultData = 0.0;
							
							if(IndOutlook != 0 && dkOutP08 != 0){
								try{ resultData = (dkOutP08/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P08", resultData);
			   
						}else if(cell == 9){
			   
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P09").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
			   
							Double resultData = 0.0;
							
							if(IndOutlook != 0 && dkOutP09 != 0){
								try{ resultData = (dkOutP09/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P09", resultData);
			   
						}else if(cell == 10){
			   
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P10").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
			   
							Double resultData = 0.0;
							
							if(IndOutlook != 0 && dkOutP10 != 0){
								try{ resultData = (dkOutP10/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P10", resultData);
			   
						}else if(cell == 11){
			   
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P11").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
			   
							Double resultData = 0.0;
							
							if(IndOutlook != 0 && dkOutP11 != 0){
								try{ resultData = (dkOutP11/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P11", resultData);
			   
						}else if(cell == 12){
			   
							String IndOutlookValue = InDepList.get(i).get("IND_OUT_P12").toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
			   
							Double resultData = 0.0;
							
							if(IndOutlook != 0 && dkOutP12 != 0){
								try{ resultData = (dkOutP12/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_P12", resultData);
			   
						}else if( cell == 13){ 
			   
							Double IndOutlookQ1 = 0.0;
							Double IndTargetQ1 = 0.0;
							Double resultData = 0.0;
							Double signalData = 0.0;
			   
							for(int j=1; j <=3; j++){
								String IndOutlookKey = "IND_OUT_P0"+j;
								String IndOutlookValue = InDepList.get(i).get(IndOutlookKey).toString();
								Double IndOutlook = Double.parseDouble(IndOutlookValue);
								IndOutlookQ1 +=IndOutlook;
								
								String IndTargetKey = "IND_TG_P0"+j;
								String IndTargetValue = InDepList.get(i).get(IndTargetKey).toString();
								Double IndTarget = Double.parseDouble(IndTargetValue);
								IndTargetQ1 +=IndTarget;
							}
			   
							if(IndOutlookQ1 != 0 && dkOutQ01 != 0){
								try{ resultData = (dkOutQ01/IndOutlookQ1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_Q01", resultData);
			   
							if(IndTargetQ1 != 0 && dkTgQ01 != 0){
								try{ signalData = (dkTgQ01/IndTargetQ1); } catch(ArithmeticException  ae){ signalData = 0.0; }
							}
							
							double signalValue = 0.0;
							signalValue = resultData - signalData;
							
							// 신호등
							if(signalValue >= 0){
								record.put("IND_CALC1_Q01_SN", "GREEN");
							}else if(signalValue > -0.01 && signalValue < 0){
								record.put("IND_CALC1_Q01_SN", "YELLOW");
							}else{
								record.put("IND_CALC1_Q01_SN", "RED");
							}
							
						}else if( cell == 14){
			   
							Double IndOutlookQ2 = 0.0;
							Double IndTargetQ2 = 0.0;
							Double resultData = 0.0;
							Double signalData = 0.0;
			   
							for(int j=4; j <=6; j++){
								String IndOutlookKey = "IND_OUT_P0"+j;
								String IndOutlookValue = InDepList.get(i).get(IndOutlookKey).toString();
								Double IndOutlook = Double.parseDouble(IndOutlookValue);
								IndOutlookQ2 +=IndOutlook;
								
								String IndTargetKey = "IND_TG_P0"+j;
								String IndTargetValue = InDepList.get(i).get(IndTargetKey).toString();
								Double IndTarget = Double.parseDouble(IndTargetValue);
								IndTargetQ2 +=IndTarget;
							}
			   
							if(IndOutlookQ2 != 0 && dkOutQ02 != 0){
								try{ resultData = (dkOutQ02/IndOutlookQ2); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_Q02", resultData);
			   
							if(IndTargetQ2 != 0 && dkTgQ02 != 0){
								try{ signalData = (dkTgQ02/IndTargetQ2); } catch(ArithmeticException  ae){ signalData = 0.0; }
							}
							
							double signalValue = 0.0;
							signalValue = resultData - signalData;
							
							// 신호등
							if(signalValue >= 0){
								record.put("IND_CALC1_Q02_SN", "GREEN");
							}else if(signalValue > -0.01 && signalValue < 0){
								record.put("IND_CALC1_Q02_SN", "YELLOW");
							}else{
								record.put("IND_CALC1_Q02_SN", "RED");
							}
							
						}else if( cell == 15){
			   
							Double IndOutlookQ3 = 0.0;
							Double IndTargetQ3 = 0.0;
							Double resultData = 0.0;
							Double signalData = 0.0;
			   
							for(int j=7; j <=9; j++){
								String IndOutlookKey = "IND_OUT_P0"+j;
								String IndOutlookValue = InDepList.get(i).get(IndOutlookKey).toString();
								Double IndOutlook = Double.parseDouble(IndOutlookValue);
								IndOutlookQ3 +=IndOutlook;
								
								String IndTargetKey = "IND_TG_P0"+j;
								String IndTargetValue = InDepList.get(i).get(IndTargetKey).toString();
								Double IndTarget = Double.parseDouble(IndTargetValue);
								IndTargetQ3 +=IndTarget;
						}
			   
						if(IndOutlookQ3 != 0 && dkOutQ03 != 0){
							try{ resultData = (dkOutQ03/IndOutlookQ3); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						
						record.put("IND_CALC1_Q03", resultData);
			   
						if(IndTargetQ3 != 0 && dkTgQ03 != 0){
							try{ signalData = (dkTgQ03/IndTargetQ3); } catch(ArithmeticException  ae){ signalData = 0.0; }
						}
						
						double signalValue = 0.0;
						signalValue = resultData - signalData;
						
						// 신호등
						if(signalValue >= 0){
							record.put("IND_CALC1_Q03_SN", "GREEN");
						}else if(signalValue > -0.01 && signalValue < 0){
							record.put("IND_CALC1_Q03_SN", "YELLOW");
						}else{
							record.put("IND_CALC1_Q03_SN", "RED");
						}
						
						}else if( cell == 16){
			   
							Double IndOutlookQ4 = 0.0;
							Double IndTargetQ4 = 0.0;
							Double resultData = 0.0;
							Double signalData = 0.0;
			   
							for(int j=10; j<=12; j++){
								String IndOutlookKey = "IND_OUT_P"+j;
								String IndOutlookValue = InDepList.get(i).get(IndOutlookKey).toString();
								Double IndOutlook = Double.parseDouble(IndOutlookValue);
								IndOutlookQ4 +=IndOutlook;
								
								String IndTargetKey = "IND_TG_P"+j;
								String IndTargetValue = InDepList.get(i).get(IndTargetKey).toString();
								Double IndTarget = Double.parseDouble(IndTargetValue);
								IndTargetQ4 +=IndTarget;
							}
			   
							if(IndOutlookQ4 != 0 && dkOutQ04 != 0){
								try{ resultData = (dkOutQ04/IndOutlookQ4); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_Q04", resultData);
			   
							if(IndTargetQ4 != 0 && dkTgQ04 != 0){
								try{ signalData = (dkTgQ04/IndTargetQ4); } catch(ArithmeticException  ae){ signalData = 0.0; }
							}
							
							double signalValue = 0.0;
							signalValue = resultData - signalData;
							
							// 신호등
							if(signalValue >= 0){
								record.put("IND_CALC1_Q04_SN", "GREEN");
							}else if(signalValue > -0.01 && signalValue < 0){
								record.put("IND_CALC1_Q04_SN", "YELLOW");
							}else{
								record.put("IND_CALC1_Q04_SN", "RED");
							}
							
						}else if( cell == 17){
			   
							Double IndOutlookH1 = 0.0;
							Double IndTargetH1 = 0.0;
							Double resultData = 0.0;
							Double signalData = 0.0;
			   
							for(int j=1; j <=6; j++){
								String IndOutlookKey = "IND_OUT_P0"+j;
								String IndOutlookValue = InDepList.get(i).get(IndOutlookKey).toString();
								Double IndOutlook = Double.parseDouble(IndOutlookValue);
								IndOutlookH1 +=IndOutlook;
								
								String IndTargetKey = "IND_TG_P0"+j;
								String IndTargetValue = InDepList.get(i).get(IndTargetKey).toString();
								Double IndTarget = Double.parseDouble(IndTargetValue);
								IndTargetH1 +=IndTarget;
							}
			   
							if(IndOutlookH1 != 0 && dkOutH01 != 0){
								try{ resultData = (dkOutH01/IndOutlookH1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_H01", resultData);
			   
							if(IndTargetH1 != 0 && dkTgH01 != 0){
								try{ signalData = (dkTgH01/IndTargetH1); } catch(ArithmeticException  ae){ signalData = 0.0; }
							}
							
							double signalValue = 0.0;
							signalValue = resultData - signalData;
							
							// 신호등
							if(signalValue >= 0){
								record.put("IND_CALC1_H01_SN", "GREEN");
							}else if(signalValue > -0.01 && signalValue < 0){
								record.put("IND_CALC1_H01_SN", "YELLOW");
							}else{
								record.put("IND_CALC1_H01_SN", "RED");
							}
							
						}else if( cell == 18){
			   
							Double IndOutlookH2 = 0.0;
							Double IndTargetH2 = 0.0;
							Double resultData = 0.0;
							Double signalData = 0.0;
			   
							for(int j=7; j<=12; j++){
								if(j == 7 || j == 8 || j == 9){
									String IndOutlookKey = "IND_OUT_P0"+j;
									String IndOutlookValue = InDepList.get(i).get(IndOutlookKey).toString();
									Double IndOutlook = Double.parseDouble(IndOutlookValue);
									IndOutlookH2 +=IndOutlook;
									
									String IndTargetKey = "IND_TG_P0"+j;
									String IndTargetValue = InDepList.get(i).get(IndTargetKey).toString();
									Double IndTarget = Double.parseDouble(IndTargetValue);
									IndTargetH2 +=IndTarget;
								}else{
									String IndOutlookKey = "IND_OUT_P"+j;
									String IndOutlookValue = InDepList.get(i).get(IndOutlookKey).toString();
									Double IndOutlook = Double.parseDouble(IndOutlookValue);
									IndOutlookH2 +=IndOutlook;
									
									String IndTargetKey = "IND_TG_P"+j;
									String IndTargetValue = InDepList.get(i).get(IndTargetKey).toString();
									Double IndTarget = Double.parseDouble(IndTargetValue);
									IndTargetH2 +=IndTarget;
								}
							}
			   
							if(IndOutlookH2 != 0 && dkOutH02 != 0){
								try{ resultData = (dkOutH02/IndOutlookH2); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_H02", resultData);
			   
							if(IndTargetH2 != 0 && dkTgH02 != 0){
								try{ signalData = (dkTgH02/IndTargetH2); } catch(ArithmeticException  ae){ signalData = 0.0; }
							}
							
							double signalValue = 0.0;
							signalValue = resultData - signalData;
							
							// 신호등
							if(signalValue >= 0){
								record.put("IND_CALC1_H02_SN", "GREEN");
							}else if(signalValue > -0.01 && signalValue < 0){
								record.put("IND_CALC1_H02_SN", "YELLOW");
							}else{
								record.put("IND_CALC1_H02_SN", "RED");
							}
							
						}else if(cell == 19){
							
							
							String IntOutlookValue = InDepList.get(i).get("IND_OUT_YTD").toString();
							Double IndOutlookYTD = Double.parseDouble(IntOutlookValue);
							
							String IntTargetValue = InDepList.get(i).get("IND_TG_YTD").toString();
							Double IndTargetYTD = Double.parseDouble(IntTargetValue);
							
							Double resultData = 0.0;
							Double signalData = 0.0;
			   
							if(IndOutlookYTD != 0 && dkOutYTD != 0){
								try{ resultData = (dkOutYTD/IndOutlookYTD); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							
							record.put("IND_CALC1_YTD", resultData);
							
							if(IndTargetYTD != 0 && dkTgYTD != 0){
								try{ signalData = (dkTgYTD/IndTargetYTD); } catch(ArithmeticException  ae){ signalData = 0.0; }
							}
							
							double signalValue = 0.0;
							signalValue = resultData - signalData;
							
							// 신호등
							if(signalValue >= 0){
								record.put("IND_CALC1_YTD_SN", "GREEN");
							}else if(signalValue > -0.01 && signalValue < 0){
								record.put("IND_CALC1_YTD_SN", "YELLOW");
							}else{
								record.put("IND_CALC1_YTD_SN", "RED");
							}
						}
					}
				}
				
			}else{
				for(int cell = 1; cell <= 19; cell++){
					if(cell == 1){
						
						String IndOutlookValue = InDepList.get(i).get("IND_OUT_P01").toString();
						Double IndOutlook = Double.parseDouble(IndOutlookValue);
		
						String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P01").toString();
						Double DkOutlook = Double.parseDouble(DkOutlookValue);
		   
						Double resultData = 0.0;
						
						if(IndOutlook != 0 && DkOutlook != 0){
							try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						
						record.put("IND_CALC1_P01", resultData);
		   
					}else if(cell == 2){
						
						String IndOutlookValue = InDepList.get(i).get("IND_OUT_P02").toString();
						Double IndOutlook = Double.parseDouble(IndOutlookValue);
						
						String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P02").toString();
						Double DkOutlook = Double.parseDouble(DkOutlookValue);
						  
						Double resultData = 0.0;
						
						if(IndOutlook != 0 && DkOutlook != 0){
							try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						
						record.put("IND_CALC1_P02", resultData);
		   
					}else if(cell == 3){
						
						String IndOutlookValue = InDepList.get(i).get("IND_OUT_P03").toString();
						Double IndOutlook = Double.parseDouble(IndOutlookValue);
					
						String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P03").toString();
						Double DkOutlook = Double.parseDouble(DkOutlookValue);
					   
						Double resultData = 0.0;
					   
						if(IndOutlook != 0 && DkOutlook != 0){
							try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						
						record.put("IND_CALC1_P03", resultData);
		   
					}else if(cell == 4){
						
						String IndOutlookValue = InDepList.get(i).get("IND_OUT_P04").toString();
						Double IndOutlook = Double.parseDouble(IndOutlookValue);
		
						String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P04").toString();
						Double DkOutlook = Double.parseDouble(DkOutlookValue);
		   
						Double resultData = 0.0;
		   
						if(IndOutlook != 0 && DkOutlook != 0){
							try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						
						record.put("IND_CALC1_P04", resultData);
		   
					}else if(cell == 5){
						
						String IndOutlookValue = InDepList.get(i).get("IND_OUT_P05").toString();
						Double IndOutlook = Double.parseDouble(IndOutlookValue);
		
						String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P05").toString();
						Double DkOutlook = Double.parseDouble(DkOutlookValue);
		   
						Double resultData = 0.0;
		   
						if(IndOutlook != 0 && DkOutlook != 0){
							try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						
						record.put("IND_CALC1_P05", resultData);
		   
					}else if(cell == 6){
		   
						String IndOutlookValue = InDepList.get(i).get("IND_OUT_P06").toString();
						Double IndOutlook = Double.parseDouble(IndOutlookValue);
		
						String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P06").toString();
						Double DkOutlook = Double.parseDouble(DkOutlookValue);
		   
						Double resultData = 0.0;
		   
						if(IndOutlook != 0 && DkOutlook != 0){
							try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						
						record.put("IND_CALC1_P06", resultData);
		   
					}else if(cell == 7){
		   
						String IndOutlookValue = InDepList.get(i).get("IND_OUT_P07").toString();
						Double IndOutlook = Double.parseDouble(IndOutlookValue);
		
						String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P07").toString();
						Double DkOutlook = Double.parseDouble(DkOutlookValue);
		   
						Double resultData = 0.0;
		   
						if(IndOutlook != 0 && DkOutlook != 0){
							try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						
						record.put("IND_CALC1_P07", resultData);
		   
					}else if(cell == 8){
						
						String IndOutlookValue = InDepList.get(i).get("IND_OUT_P08").toString();
						Double IndOutlook = Double.parseDouble(IndOutlookValue);
		
						String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P08").toString();
						Double DkOutlook = Double.parseDouble(DkOutlookValue);
		   
						Double resultData = 0.0;
		   
						if(IndOutlook != 0 && DkOutlook != 0){
							try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						
						record.put("IND_CALC1_P08", resultData);
		   
					}else if(cell == 9){
		   
						String IndOutlookValue = InDepList.get(i).get("IND_OUT_P09").toString();
						Double IndOutlook = Double.parseDouble(IndOutlookValue);
		
						String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P09").toString();
						Double DkOutlook = Double.parseDouble(DkOutlookValue);
		   
						Double resultData = 0.0;
		   
						if(IndOutlook != 0 && DkOutlook != 0){
							try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						
						record.put("IND_CALC1_P09", resultData);
		   
					}else if(cell == 10){
		   
						String IndOutlookValue = InDepList.get(i).get("IND_OUT_P10").toString();
						Double IndOutlook = Double.parseDouble(IndOutlookValue);
		
						String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P10").toString();
						Double DkOutlook = Double.parseDouble(DkOutlookValue);
		   
						Double resultData = 0.0;
		   
						if(IndOutlook != 0 && DkOutlook != 0){
							try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						
						record.put("IND_CALC1_P10", resultData);
		   
					}else if(cell == 11){
		   
						String IndOutlookValue = InDepList.get(i).get("IND_OUT_P11").toString();
						Double IndOutlook = Double.parseDouble(IndOutlookValue);
		
						String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P11").toString();
						Double DkOutlook = Double.parseDouble(DkOutlookValue);
		   
						Double resultData = 0.0;
		   
						if(IndOutlook != 0 && DkOutlook != 0){
							try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						
						record.put("IND_CALC1_P11", resultData);
		   
					}else if(cell == 12){
		   
						String IndOutlookValue = InDepList.get(i).get("IND_OUT_P12").toString();
						Double IndOutlook = Double.parseDouble(IndOutlookValue);
		
						String DkOutlookValue = DkDepList.get(i).get("DK_OUT_P12").toString();
						Double DkOutlook = Double.parseDouble(DkOutlookValue);
		   
						Double resultData = 0.0;
		   
						if(IndOutlook != 0 && DkOutlook != 0){
							try{ resultData = (DkOutlook/IndOutlook); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						
						record.put("IND_CALC1_P12", resultData);
		   
					}else if( cell == 13){ 
		   
						Double IndOutlookQ1 = 0.0;
						Double DkOutlookQ1 = 0.0;
						Double IndTargetQ1 = 0.0;
						Double DkTargetQ1 = 0.0;
						Double resultData = 0.0;
						Double signalData = 0.0;
		   
						for(int j=1; j <=3; j++){
							String IndOutlookKey = "IND_OUT_P0"+j;
							String IndOutlookValue = InDepList.get(i).get(IndOutlookKey).toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
							IndOutlookQ1 +=IndOutlook;
		
							String DkOutlookKey = "DK_OUT_P0"+j;
							String DkOutlookValue = DkDepList.get(i).get(DkOutlookKey).toString();
							Double DkOutlook = Double.parseDouble(DkOutlookValue);
							DkOutlookQ1 += DkOutlook;
							
							String IndTargetKey = "IND_TG_P0"+j;
							String IndTargetValue = InDepList.get(i).get(IndTargetKey).toString();
							Double IndTarget = Double.parseDouble(IndTargetValue);
							IndTargetQ1 +=IndTarget;
		
							String DkTargetKey = "DK_TG_P0"+j;
							String DkTargetValue = DkDepList.get(i).get(DkTargetKey).toString();
							Double DkTarget = Double.parseDouble(DkTargetValue);
							DkTargetQ1 += DkTarget;
						}
		   
						if(IndOutlookQ1 != 0 && DkOutlookQ1 != 0){
							try{ resultData = (DkOutlookQ1/IndOutlookQ1); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						
						record.put("IND_CALC1_Q01", resultData);
		   
						if(IndTargetQ1 != 0 && DkTargetQ1 != 0){
							try{ signalData = (DkTargetQ1/IndTargetQ1); } catch(ArithmeticException  ae){ signalData = 0.0; }
						}
						
						double signalValue = 0.0;
						signalValue = resultData - signalData;
						
						logger.debug("★ : " + DkTargetQ1 + " / " + IndTargetQ1 + " / " + signalData + " / " + resultData);
						
						// 신호등
						if(signalValue >= 0){
							record.put("IND_CALC1_Q01_SN", "GREEN");
						}else if(signalValue > -0.01 && signalValue < 0){
							record.put("IND_CALC1_Q01_SN", "YELLOW");
						}else{
							record.put("IND_CALC1_Q01_SN", "RED");
						}
						
					}else if( cell == 14){
		   
						Double IndOutlookQ2 = 0.0;
						Double DkOutlookQ2 = 0.0;
						Double IndTargetQ2 = 0.0;
						Double DkTargetQ2 = 0.0;
						Double resultData = 0.0;
						Double signalData = 0.0;
		   
						for(int j=4; j <=6; j++){
							String IndOutlookKey = "IND_OUT_P0"+j;
							String IndOutlookValue = InDepList.get(i).get(IndOutlookKey).toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
							IndOutlookQ2 +=IndOutlook;
		
							String DkOutlookKey = "DK_OUT_P0"+j;
							String DkOutlookValue = DkDepList.get(i).get(DkOutlookKey).toString();
							Double DkOutlook = Double.parseDouble(DkOutlookValue);
							DkOutlookQ2 += DkOutlook;
							
							String IndTargetKey = "IND_TG_P0"+j;
							String IndTargetValue = InDepList.get(i).get(IndTargetKey).toString();
							Double IndTarget = Double.parseDouble(IndTargetValue);
							IndTargetQ2 +=IndTarget;
		
							String DkTargetKey = "DK_TG_P0"+j;
							String DkTargetValue = DkDepList.get(i).get(DkTargetKey).toString();
							Double DkTarget = Double.parseDouble(DkTargetValue);
							DkTargetQ2 += DkTarget;
						}
		   
						if(IndOutlookQ2 != 0 && DkOutlookQ2 != 0){
							try{ resultData = (DkOutlookQ2/IndOutlookQ2); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						
						record.put("IND_CALC1_Q02", resultData);
		   
						if(IndTargetQ2 != 0 && DkTargetQ2 != 0){
							try{ signalData = (DkTargetQ2/IndTargetQ2); } catch(ArithmeticException  ae){ signalData = 0.0; }
						}
						
						double signalValue = 0.0;
						signalValue = resultData - signalData;
						
						// 신호등
						if(signalValue >= 0){
							record.put("IND_CALC1_Q02_SN", "GREEN");
						}else if(signalValue > -0.01 && signalValue < 0){
							record.put("IND_CALC1_Q02_SN", "YELLOW");
						}else{
							record.put("IND_CALC1_Q02_SN", "RED");
						}
						
					}else if( cell == 15){
		   
						Double IndOutlookQ3 = 0.0;
						Double DkOutlookQ3 = 0.0;
						Double IndTargetQ3 = 0.0;
						Double DkTargetQ3 = 0.0;
						Double resultData = 0.0;
						Double signalData = 0.0;
		   
						for(int j=7; j <=9; j++){
							String IndOutlookKey = "IND_OUT_P0"+j;
							String IndOutlookValue = InDepList.get(i).get(IndOutlookKey).toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
							IndOutlookQ3 +=IndOutlook;
		
							String DkOutlookKey = "DK_OUT_P0"+j;
							String DkOutlookValue = DkDepList.get(i).get(DkOutlookKey).toString();
							Double DkOutlook = Double.parseDouble(DkOutlookValue);
							DkOutlookQ3 += DkOutlook;
							
							String IndTargetKey = "IND_TG_P0"+j;
							String IndTargetValue = InDepList.get(i).get(IndTargetKey).toString();
							Double IndTarget = Double.parseDouble(IndTargetValue);
							IndTargetQ3 +=IndTarget;
		
							String DkTargetKey = "DK_TG_P0"+j;
							String DkTargetValue = DkDepList.get(i).get(DkTargetKey).toString();
							Double DkTarget = Double.parseDouble(DkTargetValue);
							DkTargetQ3 += DkTarget;
						}
			   
						if(IndOutlookQ3 != 0 && DkOutlookQ3 != 0){
							try{ resultData = (DkOutlookQ3/IndOutlookQ3); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						
						record.put("IND_CALC1_Q03", resultData);
			   
						if(IndTargetQ3 != 0 && DkTargetQ3 != 0){
							try{ signalData = (DkTargetQ3/IndTargetQ3); } catch(ArithmeticException  ae){ signalData = 0.0; }
						}
						
						double signalValue = 0.0;
						signalValue = resultData - signalData;
						
						// 신호등
						if(signalValue >= 0){
							record.put("IND_CALC1_Q03_SN", "GREEN");
						}else if(signalValue > -0.01 && signalValue < 0){
							record.put("IND_CALC1_Q03_SN", "YELLOW");
						}else{
							record.put("IND_CALC1_Q03_SN", "RED");
						}
					
					}else if( cell == 16){
		   
						Double IndOutlookQ4 = 0.0;
						Double DkOutlookQ4 = 0.0;
						Double IndTargetQ4 = 0.0;
						Double DkTargetQ4 = 0.0;
						Double resultData = 0.0;
						Double signalData = 0.0;
		   
						for(int j=10; j<=12; j++){
							String IndOutlookKey = "IND_OUT_P"+j;
							String IndOutlookValue = InDepList.get(i).get(IndOutlookKey).toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
							IndOutlookQ4 +=IndOutlook;
		
							String DkOutlookKey = "DK_OUT_P"+j;
							String DkOutlookValue = DkDepList.get(i).get(DkOutlookKey).toString();
							Double DkOutlook = Double.parseDouble(DkOutlookValue);
							DkOutlookQ4 += DkOutlook;
							
							String IndTargetKey = "IND_TG_P"+j;
							String IndTargetValue = InDepList.get(i).get(IndTargetKey).toString();
							Double IndTarget = Double.parseDouble(IndTargetValue);
							IndTargetQ4 +=IndTarget;
		
							String DkTargetKey = "DK_TG_P"+j;
							String DkTargetValue = DkDepList.get(i).get(DkTargetKey).toString();
							Double DkTarget = Double.parseDouble(DkTargetValue);
							DkTargetQ4 += DkTarget;
						}
		   
						if(IndOutlookQ4 != 0 && DkOutlookQ4 != 0){
							try{ resultData = (DkOutlookQ4/IndOutlookQ4); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						
						record.put("IND_CALC1_Q04", resultData);
		   
						if(IndTargetQ4 != 0 && DkTargetQ4 != 0){
							try{ signalData = (DkTargetQ4/IndTargetQ4); } catch(ArithmeticException  ae){ signalData = 0.0; }
						}
						
						double signalValue = 0.0;
						signalValue = resultData - signalData;
						
						// 신호등
						if(signalValue >= 0){
							record.put("IND_CALC1_Q04_SN", "GREEN");
						}else if(signalValue > -0.01 && signalValue < 0){
							record.put("IND_CALC1_Q04_SN", "YELLOW");
						}else{
							record.put("IND_CALC1_Q04_SN", "RED");
						}
						
					}else if( cell == 17){
		   
						Double IndOutlookH1 = 0.0;
						Double DkOutlookH1 = 0.0;
						Double IndTargetH1 = 0.0;
						Double DkTargetH1 = 0.0;
						Double resultData = 0.0;
						Double signalData = 0.0;
		   
						for(int j=1; j <=6; j++){
							String IndOutlookKey = "IND_OUT_P0"+j;
							String IndOutlookValue = InDepList.get(i).get(IndOutlookKey).toString();
							Double IndOutlook = Double.parseDouble(IndOutlookValue);
							IndOutlookH1 +=IndOutlook;
		
							String DkOutlookKey = "DK_OUT_P0"+j;
							String DkOutlookValue = DkDepList.get(i).get(DkOutlookKey).toString();
							Double DkOutlook = Double.parseDouble(DkOutlookValue);
							DkOutlookH1 += DkOutlook;
							
							String IndTargetKey = "IND_TG_P0"+j;
							String IndTargetValue = InDepList.get(i).get(IndTargetKey).toString();
							Double IndTarget = Double.parseDouble(IndTargetValue);
							IndTargetH1 +=IndTarget;
		
							String DkTargetKey = "DK_TG_P0"+j;
							String DkTargetValue = DkDepList.get(i).get(DkTargetKey).toString();
							Double DkTarget = Double.parseDouble(DkTargetValue);
							DkTargetH1 += DkTarget;
						}
		   
						if(IndOutlookH1 != 0 && DkOutlookH1 != 0){
							try{ resultData = (DkOutlookH1/IndOutlookH1); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						
						record.put("IND_CALC1_H01", resultData);
		   
						if(IndTargetH1 != 0 && DkTargetH1 != 0){
							try{ signalData = (DkTargetH1/IndTargetH1); } catch(ArithmeticException  ae){ signalData = 0.0; }
						}
						
						double signalValue = 0.0;
						signalValue = resultData - signalData;
						
						// 신호등
						if(signalValue >= 0){
							record.put("IND_CALC1_H01_SN", "GREEN");
						}else if(signalValue > -0.01 && signalValue < 0){
							record.put("IND_CALC1_H01_SN", "YELLOW");
						}else{
							record.put("IND_CALC1_H01_SN", "RED");
						}
						
					}else if( cell == 18){
		   
						Double IndOutlookH2 = 0.0;
						Double DkOutlookH2 = 0.0;
						Double IndTargetH2 = 0.0;
						Double DkTargetH2 = 0.0;
						Double resultData = 0.0;
						Double signalData = 0.0;
		   
						for(int j=7; j<=12; j++){
							if(j == 7 || j == 8 || j == 9){
								String IndOutlookKey = "IND_OUT_P0"+j;
								String IndOutlookValue = InDepList.get(i).get(IndOutlookKey).toString();
								Double IndOutlook = Double.parseDouble(IndOutlookValue);
								IndOutlookH2 +=IndOutlook;
		
								String DkOutlookKey = "DK_OUT_P0"+j;
								String DkOutlookValue = DkDepList.get(i).get(DkOutlookKey).toString();
								Double DkOutlook = Double.parseDouble(DkOutlookValue);
								DkOutlookH2 += DkOutlook;
								
								String IndTargetKey = "IND_TG_P0"+j;
								String IndTargetValue = InDepList.get(i).get(IndTargetKey).toString();
								Double IndTarget = Double.parseDouble(IndTargetValue);
								IndTargetH2 +=IndTarget;
			
								String DkTargetKey = "DK_TG_P0"+j;
								String DkTargetValue = DkDepList.get(i).get(DkTargetKey).toString();
								Double DkTarget = Double.parseDouble(DkTargetValue);
								DkTargetH2 += DkTarget;
							}else{
								String IndOutlookKey = "IND_OUT_P"+j;
								String IndOutlookValue = InDepList.get(i).get(IndOutlookKey).toString();
								Double IndOutlook = Double.parseDouble(IndOutlookValue);
								IndOutlookH2 +=IndOutlook;
		
								String DkOutlookKey = "DK_OUT_P"+j;
								String DkOutlookValue = DkDepList.get(i).get(DkOutlookKey).toString();
								Double DkOutlook = Double.parseDouble(DkOutlookValue);
								DkOutlookH2 += DkOutlook;
								
								String IndTargetKey = "IND_TG_P"+j;
								String IndTargetValue = InDepList.get(i).get(IndTargetKey).toString();
								Double IndTarget = Double.parseDouble(IndTargetValue);
								IndTargetH2 +=IndTarget;
			
								String DkTargetKey = "DK_TG_P"+j;
								String DkTargetValue = DkDepList.get(i).get(DkTargetKey).toString();
								Double DkTarget = Double.parseDouble(DkTargetValue);
								DkTargetH2 += DkTarget;
							}
						}
		   
						if(IndOutlookH2 != 0 && DkOutlookH2 != 0){
							try{ resultData = (DkOutlookH2/IndOutlookH2); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						
						record.put("IND_CALC1_H02", resultData);
		   
						if(IndTargetH2 != 0 && DkTargetH2 != 0){
							try{ signalData = (DkTargetH2/IndTargetH2); } catch(ArithmeticException  ae){ signalData = 0.0; }
						}
						
						double signalValue = 0.0;
						signalValue = resultData - signalData;
						
						// 신호등
						if(signalValue >= 0){
							record.put("IND_CALC1_H02_SN", "GREEN");
						}else if(signalValue > -0.01 && signalValue < 0){
							record.put("IND_CALC1_H02_SN", "YELLOW");
						}else{
							record.put("IND_CALC1_H02_SN", "RED");
						}
						
					}else if(cell == 19){
						
						
						String IntOutlookValue = InDepList.get(i).get("IND_OUT_YTD").toString();
						Double IndOutlookYTD = Double.parseDouble(IntOutlookValue);
						
						String DkOutlookValue = DkDepList.get(i).get("DK_OUT_YTD").toString();
						Double DkOutlookYTD = Double.parseDouble(DkOutlookValue);
						
						String IntTargetValue = InDepList.get(i).get("IND_TG_YTD").toString();
						Double IndTargetYTD = Double.parseDouble(IntTargetValue);
						
						String DkTargetValue = DkDepList.get(i).get("DK_TG_YTD").toString();
						Double DkTargetYTD = Double.parseDouble(DkTargetValue);
						
						Double resultData = 0.0;
						Double signalData = 0.0;
		   
						if(IndOutlookYTD != 0 && DkOutlookYTD != 0){
							try{ resultData = (DkOutlookYTD/IndOutlookYTD); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						
						record.put("IND_CALC1_YTD", resultData);
						
						if(IndTargetYTD != 0 && DkTargetYTD != 0){
							try{ signalData = (DkTargetYTD/IndTargetYTD); } catch(ArithmeticException  ae){ signalData = 0.0; }
						}
						
						double signalValue = 0.0;
						signalValue = resultData - signalData;
						
						// 신호등
						if(signalValue >= 0){
							record.put("IND_CALC1_YTD_SN", "GREEN");
						}else if(signalValue > -0.01 && signalValue < 0){
							record.put("IND_CALC1_YTD_SN", "YELLOW");
						}else{
							record.put("IND_CALC1_YTD_SN", "RED");
						}
					}
				}
			}
			
			
			resultList.add(record);
		
		}
	  
	return resultList;
	
	}
   
	/*
	 * Description: Industry Depletion Forecast - F15 SOM 63~81번째 컬럼의 입력값을 셀에 입력
	 */
	public void setRowValue6(HSSFRow row, CellStyle style, Map rowData) {
		
		if(periodChk_Param.equals("Y")){
			
			for(int i=63; i<89; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(63).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P01").toString()));
	    	row.getCell(64).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P02").toString()));
	    	row.getCell(65).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P03").toString()));
	    	row.getCell(66).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P04").toString()));
	    	row.getCell(67).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P05").toString()));
	    	row.getCell(68).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P06").toString()));
	    	row.getCell(69).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P07").toString()));
	    	row.getCell(70).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P08").toString()));
	    	row.getCell(71).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P09").toString()));
	    	row.getCell(72).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P10").toString()));
	    	row.getCell(73).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P11").toString()));
	    	row.getCell(74).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P12").toString()));
	    	row.getCell(75).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_Q01").toString()));
	    	row.getCell(76).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_Q02").toString()));
	    	row.getCell(77).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_Q03").toString()));
	    	row.getCell(78).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_Q04").toString()));
	    	row.getCell(79).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_H01").toString()));
	    	row.getCell(80).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_H02").toString()));
	    	row.getCell(81).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_YTD").toString()));
			
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=24; i<33; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(24).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P01").toString()));
	    	row.getCell(25).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P02").toString()));
	    	row.getCell(26).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P03").toString()));
	    	row.getCell(27).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_Q01").toString()));
	    	row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_H01").toString()));
	    	row.getCell(29).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_YTD").toString()));
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=27; i<38; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(27).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P04").toString()));
	    	row.getCell(28).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P05").toString()));
	    	row.getCell(29).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P06").toString()));
	    	row.getCell(30).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_Q01").toString()));
	    	row.getCell(31).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_Q02").toString()));
	    	row.getCell(32).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_H01").toString()));
	    	row.getCell(33).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_YTD").toString()));
	    	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=30; i<43; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(30).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P07").toString()));
	    	row.getCell(31).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P08").toString()));
	    	row.getCell(32).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P09").toString()));
	    	row.getCell(33).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_Q02").toString()));
	    	row.getCell(34).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_Q03").toString()));
	    	row.getCell(35).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_H01").toString()));
	    	row.getCell(36).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_H02").toString()));
	    	row.getCell(37).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_YTD").toString()));
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=30; i<43; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(30).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P10").toString()));
	    	row.getCell(31).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P11").toString()));
	    	row.getCell(32).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_P12").toString()));
	    	row.getCell(33).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_Q03").toString()));
	    	row.getCell(34).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_Q04").toString()));
	    	row.getCell(35).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_H01").toString()));
	    	row.getCell(36).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_H02").toString()));
	    	row.getCell(37).setCellValue(Double.parseDouble(rowData.get("IND_CALC1_YTD").toString()));
	    	
		}
		
	}
	
	// Growth Rate% vs. F14
	// DK Depletion ForeCast [ Calc = (F15 Actual (Outlook) /F14 Actual) - 1 ]
	public ArrayList<Map> Dep_DKDF_Calc1(ArrayList<Map> DkDepList){
		ArrayList<Map> resultList = new ArrayList<Map>();

		for(int i=0; i<DkDepList.size(); i++){
			
			Map record = new LinkedHashMap();
			record.put("STYLE", DkDepList.get(i).get("STYLETXT").toString());
			record.put("TOTAL", DkDepList.get(i).get("TOTAL").toString());
			
			for(int cell = 1; cell <= 19; cell++){
				if(cell == 1){
					String OutlookValue = String.valueOf(DkDepList.get(i).get("DK_OUT_P01"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String ActualValue = String.valueOf(DkDepList.get(i).get("DK_AC_P01"));
					Double Actual = Double.parseDouble(ActualValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Actual != 0){
						try{ resultData = ((Outlook / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}else{
						resultData = -1.0;
					}
					record.put("DKF_CALC1_P01", resultData);
					
				}else if(cell == 2){
					String OutlookValue = String.valueOf(DkDepList.get(i).get("DK_OUT_P02"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String ActualValue = String.valueOf(DkDepList.get(i).get("DK_AC_P02"));
					Double Actual = Double.parseDouble(ActualValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Actual != 0){
						try{ resultData = ((Outlook / Actual) - 1); }  catch(ArithmeticException  ae){ resultData = 0.0; }
					}else{
						resultData = -1.0;
					}
					record.put("DKF_CALC1_P02", resultData);
					
				}else if(cell == 3){
					String OutlookValue = String.valueOf(DkDepList.get(i).get("DK_OUT_P03"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String ActualValue = String.valueOf(DkDepList.get(i).get("DK_AC_P03"));
					Double Actual = Double.parseDouble(ActualValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Actual != 0){
						try{ resultData = ((Outlook / Actual) - 1); }  catch(ArithmeticException  ae){ resultData = 0.0; }
					}else{
						resultData = -1.0;
					}
					record.put("DKF_CALC1_P03", resultData);
					
				}else if(cell == 4){
					String OutlookValue = String.valueOf(DkDepList.get(i).get("DK_OUT_P04"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String ActualValue = String.valueOf(DkDepList.get(i).get("DK_AC_P04"));
					Double Actual = Double.parseDouble(ActualValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Actual != 0){
						try{ resultData = ((Outlook / Actual) - 1); }  catch(ArithmeticException  ae){ resultData = 0.0; }
					}else{
						resultData = -1.0;
					}
					record.put("DKF_CALC1_P04", resultData);
					
				}else if(cell == 5){
					String OutlookValue = String.valueOf(DkDepList.get(i).get("DK_OUT_P05"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String ActualValue = String.valueOf(DkDepList.get(i).get("DK_AC_P05"));
					Double Actual = Double.parseDouble(ActualValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Actual != 0){
						try{ resultData = ((Outlook / Actual) - 1); }  catch(ArithmeticException  ae){ resultData = 0.0; }
					}else{
						resultData = -1.0;
					}
					record.put("DKF_CALC1_P05", resultData);
					
				}else if(cell == 6){
					String OutlookValue = String.valueOf(DkDepList.get(i).get("DK_OUT_P06"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String ActualValue = String.valueOf(DkDepList.get(i).get("DK_AC_P06"));
					Double Actual = Double.parseDouble(ActualValue);
					
					Double resultData = 0.0;

					if(Outlook != 0 && Actual != 0){
						try{ resultData = ((Outlook / Actual) - 1); }  catch(ArithmeticException  ae){ resultData = 0.0; }
					}else{
						resultData = -1.0;
					}
					record.put("DKF_CALC1_P06", resultData);
					
				}else if(cell == 7){
					String OutlookValue = String.valueOf(DkDepList.get(i).get("DK_OUT_P07"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String ActualValue = String.valueOf(DkDepList.get(i).get("DK_AC_P07"));
					Double Actual = Double.parseDouble(ActualValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Actual != 0){
						try{ resultData = ((Outlook / Actual) - 1); }  catch(ArithmeticException  ae){ resultData = 0.0; }
					}else{
						resultData = -1.0;
					}
					record.put("DKF_CALC1_P07", resultData);
					
				}else if(cell == 8){
					String OutlookValue = String.valueOf(DkDepList.get(i).get("DK_OUT_P08"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String ActualValue = String.valueOf(DkDepList.get(i).get("DK_AC_P08"));
					Double Actual = Double.parseDouble(ActualValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Actual != 0){
						try{ resultData = ((Outlook / Actual) - 1); }  catch(ArithmeticException  ae){ resultData = 0.0; }
					}else{
						resultData = -1.0;
					}
					record.put("DKF_CALC1_P08", resultData);
					
				}else if(cell == 9){
					String OutlookValue = String.valueOf(DkDepList.get(i).get("DK_OUT_P09"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String ActualValue = String.valueOf(DkDepList.get(i).get("DK_AC_P09"));
					Double Actual = Double.parseDouble(ActualValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Actual != 0){
						try{ resultData = ((Outlook / Actual) - 1); }  catch(ArithmeticException  ae){ resultData = 0.0; }
					}else{
						resultData = -1.0;
					}
					record.put("DKF_CALC1_P09", resultData);
					
				}else if(cell == 10){
					String OutlookValue = String.valueOf(DkDepList.get(i).get("DK_OUT_P10"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String ActualValue = String.valueOf(DkDepList.get(i).get("DK_AC_P10"));
					Double Actual = Double.parseDouble(ActualValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Actual != 0){
						try{ resultData = ((Outlook / Actual) - 1); }  catch(ArithmeticException  ae){ resultData = 0.0; }
					}else{
						resultData = -1.0;
					}
					record.put("DKF_CALC1_P10", resultData);
					
				}else if(cell == 11){
					String OutlookValue = String.valueOf(DkDepList.get(i).get("DK_OUT_P11"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String ActualValue = String.valueOf(DkDepList.get(i).get("DK_AC_P11"));
					Double Actual = Double.parseDouble(ActualValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Actual != 0){
						try{ resultData = ((Outlook / Actual) - 1); }  catch(ArithmeticException  ae){ resultData = 0.0; }
					}else{
						resultData = -1.0;
					}
					record.put("DKF_CALC1_P11", resultData);
					
				}else if(cell == 12){
					String OutlookValue = String.valueOf(DkDepList.get(i).get("DK_OUT_P12"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String ActualValue = String.valueOf(DkDepList.get(i).get("DK_AC_P12"));
					Double Actual = Double.parseDouble(ActualValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Actual != 0){
						try{ resultData = ((Outlook / Actual) - 1); }  catch(ArithmeticException  ae){ resultData = 0.0; }
					}else{
						resultData = -1.0;
					}
					record.put("DKF_CALC1_P12", resultData);
					
				}else if( cell == 13){
					
					Double OutlookQ1 = 0.0;
					Double ActualQ1 = 0.0;
					Double resultData = 0.0;
					
					for(int j=1; j<=3; j++){
						String OutlookKey = "DK_OUT_P0"+j;
						String OutlookValue = String.valueOf(DkDepList.get(i).get(OutlookKey));
						Double Outlook = Double.parseDouble(OutlookValue);
						OutlookQ1 +=Outlook;

						String ActualKey = "DK_AC_P0"+j;
						String ActualValue = String.valueOf(DkDepList.get(i).get(ActualKey));
						Double Actual = Double.parseDouble(ActualValue);
						ActualQ1 += Actual;
					}
					
					if(OutlookQ1 != 0 && ActualQ1 != 0){
						try{ resultData = ((OutlookQ1 / ActualQ1) - 1); }  catch(ArithmeticException  ae){ resultData = 0.0; }
					}else{
						resultData = -1.0;
					}
					record.put("DKF_CALC1_Q01", resultData);
					
					// 신호등
					if(resultData > 1){
						record.put("DKF_CALC1_Q01_SN", "GREEN");
					}else if(resultData > 0.98){
						record.put("DKF_CALC1_Q01_SN", "YELLOW");
					}else{
						record.put("DKF_CALC1_Q01_SN", "RED");
					}
					
				}else if( cell == 14){
					
					Double OutlookQ2 = 0.0;
					Double ActualQ2 = 0.0;
					Double resultData = 0.0;
					
					for(int j=4; j<=6; j++){
						String OutlookKey = "DK_OUT_P0"+j;
						String OutlookValue = String.valueOf(DkDepList.get(i).get(OutlookKey));
						Double Outlook = Double.parseDouble(OutlookValue);
						OutlookQ2 +=Outlook;

						String ActualKey = "DK_AC_P0"+j;
						String ActualValue = String.valueOf(DkDepList.get(i).get(ActualKey));
						Double Actual = Double.parseDouble(ActualValue);
						ActualQ2 += Actual;
					}
					
					if(OutlookQ2 != 0 && ActualQ2 != 0){
						try{ resultData = ((OutlookQ2 / ActualQ2) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}else{
						resultData = -1.0;
					}
					record.put("DKF_CALC1_Q02", resultData);
					
					// 신호등
					if(resultData > 1){
						record.put("DKF_CALC1_Q02_SN", "GREEN");
					}else if(resultData > 0.98){
						record.put("DKF_CALC1_Q02_SN", "YELLOW");
					}else{
						record.put("DKF_CALC1_Q02_SN", "RED");
					}
					
				}else if( cell == 15){
					
					Double OutlookQ3 = 0.0;
					Double ActualQ3 = 0.0;
					Double resultData = 0.0;
					
					for(int j=7; j<=9; j++){
						String OutlookKey = "DK_OUT_P0"+j;
						String OutlookValue = String.valueOf(DkDepList.get(i).get(OutlookKey));
						Double Outlook = Double.parseDouble(OutlookValue);
						OutlookQ3 +=Outlook;

						String ActualKey = "DK_AC_P0"+j;
						String ActualValue = String.valueOf(DkDepList.get(i).get(ActualKey));
						Double Actual = Double.parseDouble(ActualValue);
						ActualQ3 += Actual;
					}
					
					if(OutlookQ3 != 0 && ActualQ3 != 0){
						try{ resultData = ((OutlookQ3 / ActualQ3) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}else{
						resultData = -1.0;
					}
					record.put("DKF_CALC1_Q03", resultData);
					
					// 신호등
					if(resultData > 1){
						record.put("DKF_CALC1_Q03_SN", "GREEN");
					}else if(resultData > 0.98){
						record.put("DKF_CALC1_Q03_SN", "YELLOW");
					}else{
						record.put("DKF_CALC1_Q03_SN", "RED");
					}
					
				}else if( cell == 16){
					
					Double OutlookQ4 = 0.0;
					Double ActualQ4 = 0.0;
					Double resultData = 0.0;
					
					for(int j=7; j<=9; j++){
						String OutlookKey = "DK_OUT_P0"+j;
						String OutlookValue = String.valueOf(DkDepList.get(i).get(OutlookKey));
						Double Outlook = Double.parseDouble(OutlookValue);
						OutlookQ4 +=Outlook;

						String ActualKey = "DK_AC_P0"+j;
						String ActualValue = String.valueOf(DkDepList.get(i).get(ActualKey));
						Double Actual = Double.parseDouble(ActualValue);
						ActualQ4 += Actual;
					}
					
					if(OutlookQ4 != 0 && ActualQ4 != 0){
						try{ resultData = ((OutlookQ4 / ActualQ4) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}else{
						resultData = -1.0;
					}
					record.put("DKF_CALC1_Q04", resultData);
					
					// 신호등
					if(resultData > 1){
						record.put("DKF_CALC1_Q04_SN", "GREEN");
					}else if(resultData > 0.98){
						record.put("DKF_CALC1_Q04_SN", "YELLOW");
					}else{
						record.put("DKF_CALC1_Q04_SN", "RED");
					}
					
				}else if( cell == 17){
					
					Double OutlookH1 = 0.0;
					Double ActualH1 = 0.0;
					Double resultData = 0.0;
					
					for(int j=1; j<=6; j++){
						String OutlookKey = "DK_OUT_P0"+j;
						String OutlookValue = String.valueOf(DkDepList.get(i).get(OutlookKey));
						Double Outlook = Double.parseDouble(OutlookValue);
						OutlookH1 +=Outlook;

						String ActualKey = "DK_AC_P0"+j;
						String ActualValue = String.valueOf(DkDepList.get(i).get(ActualKey));
						Double Actual = Double.parseDouble(ActualValue);
						ActualH1 += Actual;
					}
					
					if(OutlookH1 != 0 && ActualH1 != 0){
						try{ resultData = ((OutlookH1 / ActualH1) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}else{
						resultData = -1.0;
					}
					record.put("DKF_CALC1_H01", resultData);
					
					// 신호등
					if(resultData > 1){
						record.put("DKF_CALC1_H01_SN", "GREEN");
					}else if(resultData > 0.98){
						record.put("DKF_CALC1_H01_SN", "YELLOW");
					}else{
						record.put("DKF_CALC1_H01_SN", "RED");
					}
					
				}else if( cell == 18){
					
					Double OutlookH2 = 0.0;
					Double ActualH2 = 0.0;
					Double resultData = 0.0;
					
					for(int j=7; j<=12; j++){
						if(j == 7 || j == 8 || j == 9){
							String OutlookKey = "DK_OUT_P0"+j;
							String OutlookValue = String.valueOf(DkDepList.get(i).get(OutlookKey));
							Double Outlook = Double.parseDouble(OutlookValue);
							OutlookH2 +=Outlook;

							String ActualKey = "DK_AC_P0"+j;
							String ActualValue = String.valueOf(DkDepList.get(i).get(ActualKey));
							Double Actual = Double.parseDouble(ActualValue);
							ActualH2 += Actual;
						}else{
							String OutlookKey = "DK_OUT_P"+j;
							String OutlookValue = String.valueOf(DkDepList.get(i).get(OutlookKey));
							Double Outlook = Double.parseDouble(OutlookValue);
							OutlookH2 +=Outlook;

							String ActualKey = "DK_AC_P"+j;
							String ActualValue = String.valueOf(DkDepList.get(i).get(ActualKey));
							Double Actual = Double.parseDouble(ActualValue);
							ActualH2 += Actual;
						}
					}
					
					if(OutlookH2 != 0 && ActualH2 != 0){
						try{ resultData = ((OutlookH2 / ActualH2) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}else{
						resultData = -1.0;
					}
					record.put("DKF_CALC1_H02", resultData);
					
					// 신호등
					if(resultData > 1){
						record.put("DKF_CALC1_H02_SN", "GREEN");
					}else if(resultData > 0.98){
						record.put("DKF_CALC1_H02_SN", "YELLOW");
					}else{
						record.put("DKF_CALC1_H02_SN", "RED");
					}
					
				}else if(cell == 19){
					String OutlookValue = String.valueOf(DkDepList.get(i).get("DK_OUT_YTD"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String ActualValue = String.valueOf(DkDepList.get(i).get("DK_AC_YTD"));
					Double Actual = Double.parseDouble(ActualValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Actual != 0){
						try{ resultData = ((Outlook / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}else{
						resultData = -1.0;
					}
					record.put("DKF_CALC1_YTD", resultData);
					
					// 신호등
					if(resultData > 1){
						record.put("DKF_CALC1_YTD_SN", "GREEN");
					}else if(resultData > 0.98){
						record.put("DKF_CALC1_YTD_SN", "YELLOW");
					}else{
						record.put("DKF_CALC1_YTD_SN", "RED");
					}
					
				}
			}
			
			resultList.add(record);
		}
		
		return resultList;
	}
	
	/*
	 * Description: DK Depletion Forecast - Growth Rate% vs. F14 43~61번째 컬럼의 입력값을 셀에 입력
	 */
	public void setRowValue7(HSSFRow row, CellStyle style, Map rowData) {
		
		if(periodChk_Param.equals("Y")){
			
			for(int i=43; i<62; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(43).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P01").toString()));
	    	row.getCell(44).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P02").toString()));
	    	row.getCell(45).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P03").toString()));
	    	row.getCell(46).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P04").toString()));
	    	row.getCell(47).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P05").toString()));
	    	row.getCell(48).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P06").toString()));
	    	row.getCell(49).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P07").toString()));
	    	row.getCell(50).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P08").toString()));
	    	row.getCell(51).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P09").toString()));
	    	row.getCell(52).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P10").toString()));
	    	row.getCell(53).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P11").toString()));
	    	row.getCell(54).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P12").toString()));
	    	row.getCell(55).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_Q01").toString()));
	    	row.getCell(56).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_Q02").toString()));
	    	row.getCell(57).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_Q03").toString()));
	    	row.getCell(58).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_Q04").toString()));
	    	row.getCell(59).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_H01").toString()));
	    	row.getCell(60).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_H02").toString()));
	    	row.getCell(61).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_YTD").toString()));
    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=17; i<23; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P01").toString()));
	    	row.getCell(18).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P02").toString()));
	    	row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P03").toString()));
	    	row.getCell(20).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_Q01").toString()));
	    	row.getCell(21).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_H01").toString()));
	    	row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P01").toString()));
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=19; i<26; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P01").toString()));
	    	row.getCell(20).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P02").toString()));
	    	row.getCell(21).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P03").toString()));
	    	row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_Q01").toString()));
	    	row.getCell(23).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_Q02").toString()));
	    	row.getCell(24).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_H01").toString()));
	    	row.getCell(25).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P01").toString()));
	    	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=21; i<29; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(21).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P07").toString()));
	    	row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P08").toString()));
	    	row.getCell(23).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P09").toString()));
	    	row.getCell(24).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_Q02").toString()));
	    	row.getCell(25).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_Q03").toString()));
	    	row.getCell(26).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_H01").toString()));
	    	row.getCell(27).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_H02").toString()));
	    	row.getCell(28).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P01").toString()));
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=21; i<29; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(21).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P07").toString()));
	    	row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P08").toString()));
	    	row.getCell(23).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P09").toString()));
	    	row.getCell(24).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_Q03").toString()));
	    	row.getCell(25).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_Q04").toString()));
	    	row.getCell(26).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_H01").toString()));
	    	row.getCell(27).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_H02").toString()));
	    	row.getCell(28).setCellValue(Double.parseDouble(rowData.get("DKF_CALC1_P01").toString()));
	    	
		}
		
	}
	
	// Achievement% vs. Target
	// DK Depletion Target [ Calc1 = F15 Actual (Outlook)/F15 Target ]
	public ArrayList<Map> Dep_DKDT_Calc1(ArrayList<Map> list){
		
		ArrayList<Map> resultList = new ArrayList<Map>();

		for(int i=0; i<list.size(); i++){
			
			Map record = new LinkedHashMap();
			record.put("STYLE", list.get(i).get("STYLETXT").toString());
			record.put("TOTAL", list.get(i).get("TOTAL").toString());
			
			for(int cell = 1; cell <= 19; cell++){
				if(cell == 1){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P01"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String TargetValue = String.valueOf(list.get(i).get("DK_TG_P01"));
					Double Target = Double.parseDouble(TargetValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Target != 0){
						try{ resultData = (Outlook / Target); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC1_P01", resultData);
				
				}else if(cell == 2){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P02"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String TargetValue = String.valueOf(list.get(i).get("DK_TG_P02"));
					Double Target = Double.parseDouble(TargetValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Target != 0){
						try{ resultData = (Outlook / Target); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC1_P02", resultData);
				
				}else if(cell == 3){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P03"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String TargetValue = String.valueOf(list.get(i).get("DK_TG_P03"));
					Double Target = Double.parseDouble(TargetValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Target != 0){
						try{ resultData = (Outlook / Target); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC1_P03", resultData);
				
				}else if(cell == 4){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P04"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String TargetValue = String.valueOf(list.get(i).get("DK_TG_P04"));
					Double Target = Double.parseDouble(TargetValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Target != 0){
						try{ resultData = (Outlook / Target); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC1_P04", resultData);
				
				}else if(cell == 5){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P05"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String TargetValue = String.valueOf(list.get(i).get("DK_TG_P05"));
					Double Target = Double.parseDouble(TargetValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Target != 0){
						try{ resultData = (Outlook / Target); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC1_P05", resultData);
				
				}else if(cell == 6){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P06"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String TargetValue = String.valueOf(list.get(i).get("DK_TG_P06"));
					Double Target = Double.parseDouble(TargetValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Target != 0){
						try{ resultData = (Outlook / Target); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC1_P06", resultData);
				
				}else if(cell == 7){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P07"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String TargetValue = String.valueOf(list.get(i).get("DK_TG_P07"));
					Double Target = Double.parseDouble(TargetValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Target != 0){
						try{ resultData = (Outlook / Target); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC1_P07", resultData);
				
				}else if(cell == 8){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P08"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String TargetValue = String.valueOf(list.get(i).get("DK_TG_P08"));
					Double Target = Double.parseDouble(TargetValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Target != 0){
						try{ resultData = (Outlook / Target); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC1_P08", resultData);
				
				}else if(cell == 9){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P09"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String TargetValue = String.valueOf(list.get(i).get("DK_TG_P09"));
					Double Target = Double.parseDouble(TargetValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Target != 0){
						try{ resultData = (Outlook / Target); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC1_P09", resultData);
				
				}else if(cell == 10){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P10"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String TargetValue = String.valueOf(list.get(i).get("DK_TG_P10"));
					Double Target = Double.parseDouble(TargetValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Target != 0){
						try{ resultData = (Outlook / Target); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC1_P10", resultData);
				
				}else if(cell == 11){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P11"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String TargetValue = String.valueOf(list.get(i).get("DK_TG_P11"));
					Double Target = Double.parseDouble(TargetValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Target != 0){
						try{ resultData = (Outlook / Target); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC1_P11", resultData);
				
				}else if(cell == 12){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P12"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String TargetValue = String.valueOf(list.get(i).get("DK_TG_P12"));
					Double Target = Double.parseDouble(TargetValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Target != 0){
						try{ resultData = (Outlook / Target); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC1_P12", resultData);
				
				}else if( cell == 13){
					
					Double OutLookQ1 = 0.0;
					Double TargetQ1 = 0.0;
					Double resultData = 0.0;
					
					for(int j=1; j<=3; j++){
						String OutLookKey = "DK_OUT_P0"+j;
						String OutLookValue = String.valueOf(list.get(i).get(OutLookKey));
						Double OutLook = Double.parseDouble(OutLookValue);
						OutLookQ1 +=OutLook;

						String TargetKey = "DK_TG_P0"+j;
						String TargetValue = String.valueOf(list.get(i).get(TargetKey));
						Double Target = Double.parseDouble(TargetValue);
						TargetQ1 += Target;
					}
					
					if(OutLookQ1 != 0 && TargetQ1 != 0){
						try{ resultData = (OutLookQ1 / TargetQ1); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					
					record.put("DKT_CALC1_Q01", resultData);
					
					// 신호등
					if(resultData > 1){
						record.put("DKT_CALC1_Q01_SN", "GREEN");
					}else if(resultData > 0.98){
						record.put("DKT_CALC1_Q01_SN", "YELLOW");
					}else{
						record.put("DKT_CALC1_Q01_SN", "RED");
					}
					
				}else if( cell == 14){
					
					Double OutLookQ2 = 0.0;
					Double TargetQ2 = 0.0;
					Double resultData = 0.0;
					
					for(int j=4; j<=6; j++){
						String OutLookKey = "DK_OUT_P0"+j;
						String OutLookValue = String.valueOf(list.get(i).get(OutLookKey));
						Double OutLook = Double.parseDouble(OutLookValue);
						OutLookQ2 +=OutLook;

						String TargetKey = "DK_TG_P0"+j;
						String TargetValue = String.valueOf(list.get(i).get(TargetKey));
						Double Target = Double.parseDouble(TargetValue);
						TargetQ2 += Target;
					}
					
					if(OutLookQ2 != 0 && TargetQ2 != 0){
						try{ resultData = (OutLookQ2 / TargetQ2); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC1_Q02", resultData);
					
					// 신호등
					if(resultData > 1){
						record.put("DKT_CALC1_Q02_SN", "GREEN");
					}else if(resultData > 0.98){
						record.put("DKT_CALC1_Q02_SN", "YELLOW");
					}else{
						record.put("DKT_CALC1_Q02_SN", "RED");
					}
					
				}else if( cell == 15){
					
					Double OutLookQ3 = 0.0;
					Double TargetQ3 = 0.0;
					Double resultData = 0.0;
					
					for(int j=7; j<=9; j++){
						String OutLookKey = "DK_OUT_P0"+j;
						String OutLookValue = String.valueOf(list.get(i).get(OutLookKey));
						Double OutLook = Double.parseDouble(OutLookValue);
						OutLookQ3 +=OutLook;

						String TargetKey = "DK_TG_P0"+j;
						String TargetValue = String.valueOf(list.get(i).get(TargetKey));
						Double Target = Double.parseDouble(TargetValue);
						TargetQ3 += Target;
					}
					
					if(OutLookQ3 != 0 && TargetQ3 != 0){
						try{ resultData = (OutLookQ3 / TargetQ3); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC1_Q03", resultData);
					
					// 신호등
					if(resultData > 1){
						record.put("DKT_CALC1_Q03_SN", "GREEN");
					}else if(resultData > 0.98){
						record.put("DKT_CALC1_Q03_SN", "YELLOW");
					}else{
						record.put("DKT_CALC1_Q03_SN", "RED");
					}
					
				}else if( cell == 16){
					
					Double OutLookQ4 = 0.0;
					Double TargetQ4 = 0.0;
					Double resultData = 0.0;
					
					for(int j=10; j<=12; j++){
						String OutLookKey = "DK_OUT_P"+j;
						String OutLookValue = String.valueOf(list.get(i).get(OutLookKey));
						Double OutLook = Double.parseDouble(OutLookValue);
						OutLookQ4 +=OutLook;

						String TargetKey = "DK_TG_P"+j;
						String TargetValue = String.valueOf(list.get(i).get(TargetKey));
						Double Target = Double.parseDouble(TargetValue);
						TargetQ4 += Target;
					}
					
					if(OutLookQ4 != 0 && TargetQ4 != 0){
						try{ resultData = (OutLookQ4 / TargetQ4); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC1_Q04", resultData);
					
					// 신호등
					if(resultData > 1){
						record.put("DKT_CALC1_Q04_SN", "GREEN");
					}else if(resultData > 0.98){
						record.put("DKT_CALC1_Q04_SN", "YELLOW");
					}else{
						record.put("DKT_CALC1_Q04_SN", "RED");
					}
					
				}else if( cell == 17){
					
					Double OutLookH1 = 0.0;
					Double TargetH1 = 0.0;
					Double resultData = 0.0;
					
					for(int j=1; j<=6; j++){
						String OutLookKey = "DK_OUT_P0"+j;
						String OutLookValue = String.valueOf(list.get(i).get(OutLookKey));
						Double OutLook = Double.parseDouble(OutLookValue);
						OutLookH1 +=OutLook;

						String TargetKey = "DK_TG_P0"+j;
						String TargetValue = String.valueOf(list.get(i).get(TargetKey));
						Double Target = Double.parseDouble(TargetValue);
						TargetH1 += Target;
					}
					
					if(OutLookH1 != 0 && TargetH1 != 0){
						try{ resultData = (OutLookH1 / TargetH1); }catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC1_H01", resultData);
					
					// 신호등
					if(resultData > 1){
						record.put("DKT_CALC1_H01_SN", "GREEN");
					}else if(resultData > 0.98){
						record.put("DKT_CALC1_H01_SN", "YELLOW");
					}else{
						record.put("DKT_CALC1_H01_SN", "RED");
					}
					
				}else if( cell == 18){
					
					Double OutLookH2 = 0.0;
					Double TargetH2 = 0.0;
					Double resultData = 0.0;
					
					for(int j=7; j<=12; j++){
						if(j == 7 || j == 8 || j == 9){
							String outLookKey = "DK_OUT_P0"+j;
							String outLookValue = String.valueOf(list.get(i).get(outLookKey));
							Double outLook = Double.parseDouble(outLookValue);
							OutLookH2 +=outLook;
	
							String TargetKey = "DK_TG_P0"+j;
							String TargetValue = String.valueOf(list.get(i).get(TargetKey));
							Double Target = Double.parseDouble(TargetValue);
							TargetH2 += Target;
						}else{
							String outLookKey = "DK_OUT_P"+j;
							String outLookValue = String.valueOf(list.get(i).get(outLookKey));
							Double outLook = Double.parseDouble(outLookValue);
							OutLookH2 +=outLook;
	
							String TargetKey = "DK_TG_P"+j;
							String TargetValue = String.valueOf(list.get(i).get(TargetKey));
							Double Target = Double.parseDouble(TargetValue);
							TargetH2 += Target;
						}
					}
					
					if(OutLookH2 != 0 && TargetH2 != 0){
						try{ resultData = (OutLookH2 / TargetH2); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC1_H02", resultData);
					
					// 신호등
					if(resultData > 1){
						record.put("DKT_CALC1_H02_SN", "GREEN");
					}else if(resultData > 0.98){
						record.put("DKT_CALC1_H02_SN", "YELLOW");
					}else{
						record.put("DKT_CALC1_H02_SN", "RED");
					}
					
				}else if(cell == 19){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_YTD"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String TargetValue = String.valueOf(list.get(i).get("DK_TG_YTD"));
					Double Target = Double.parseDouble(TargetValue);
					
					Double resultData = 0.0;
					
					if(Outlook != 0 && Target != 0){
						try{ resultData = (Outlook / Target); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC1_YTD", resultData);
					
					// 신호등
					if(resultData > 1){
						record.put("DKT_CALC1_YTD_SN", "GREEN");
					}else if(resultData > 0.98){
						record.put("DKT_CALC1_YTD_SN", "YELLOW");
					}else{
						record.put("DKT_CALC1_YTD_SN", "RED");
					}
					
				}
			}
			
			resultList.add(record);
		}
		
		return resultList;
	}
	
	/*
	 * Description: DK Depletion Target - Achievement% vs. Target 43~61번째 컬럼의 입력값을 셀에 입력
	 */
	public void setRowValue8(HSSFRow row, CellStyle style, Map rowData) {
		
		if(periodChk_Param.equals("Y")){
			
			for(int i=43; i<62; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(43).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P01").toString()));
	    	row.getCell(44).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P02").toString()));
	    	row.getCell(45).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P03").toString()));
	    	row.getCell(46).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P04").toString()));
	    	row.getCell(47).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P05").toString()));
	    	row.getCell(48).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P06").toString()));
	    	row.getCell(49).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P07").toString()));
	    	row.getCell(50).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P08").toString()));
	    	row.getCell(51).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P09").toString()));
	    	row.getCell(52).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P10").toString()));
	    	row.getCell(53).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P11").toString()));
	    	row.getCell(54).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P12").toString()));
	    	row.getCell(55).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_Q01").toString()));
	    	row.getCell(56).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_Q02").toString()));
	    	row.getCell(57).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_Q03").toString()));
	    	row.getCell(58).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_Q04").toString()));
	    	row.getCell(59).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_H01").toString()));
	    	row.getCell(60).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_H02").toString()));
	    	row.getCell(61).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_YTD").toString()));
	    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=17; i<23; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(17).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P01").toString()));
	    	row.getCell(18).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P02").toString()));
	    	row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P03").toString()));
	    	row.getCell(20).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_Q01").toString()));
	    	row.getCell(21).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_H01").toString()));
	    	row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_YTD").toString()));
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=19; i<26; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(19).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P04").toString()));
	    	row.getCell(20).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P05").toString()));
	    	row.getCell(21).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P06").toString()));
	    	row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_Q01").toString()));
	    	row.getCell(23).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_Q02").toString()));
	    	row.getCell(24).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_H01").toString()));
	    	row.getCell(25).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_YTD").toString()));
	    	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=21; i<29; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(21).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P07").toString()));
	    	row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P08").toString()));
	    	row.getCell(23).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P09").toString()));
	    	row.getCell(24).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_Q02").toString()));
	    	row.getCell(25).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_Q03").toString()));
	    	row.getCell(26).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_H01").toString()));
	    	row.getCell(27).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_H02").toString()));
	    	row.getCell(28).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_YTD").toString()));
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=21; i<29; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(21).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P10").toString()));
	    	row.getCell(22).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P11").toString()));
	    	row.getCell(23).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_P12").toString()));
	    	row.getCell(24).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_Q03").toString()));
	    	row.getCell(25).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_Q04").toString()));
	    	row.getCell(26).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_H01").toString()));
	    	row.getCell(27).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_H02").toString()));
	    	row.getCell(28).setCellValue(Double.parseDouble(rowData.get("DKT_CALC1_YTD").toString()));
	    	
		}
		
	}
	
	// Forecast Accuracy% vs. Actual
	// DK Depletion Target [ Calc = (F15 Actual (Outlook)-F15 Forecast) / F15 Forecast ] 
	public ArrayList<Map> Dep_DKDT_Calc2(ArrayList<Map> list){
		ArrayList<Map> resultList = new ArrayList<Map>();

		for(int i=0; i<list.size(); i++){

			Map record = new LinkedHashMap();
			record.put("STYLE", list.get(i).get("STYLETXT").toString());
			record.put("TOTAL", list.get(i).get("TOTAL").toString());
			
			for(int cell = 1; cell <= 19; cell++){
				if(cell ==1){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P01"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String foreCastValue = String.valueOf(list.get(i).get("DK_FOR_P01"));
					Double foreCast = Double.parseDouble(foreCastValue);
					
					Double resultData = 0.0;
					
					if((Outlook - foreCast) != 0 && foreCast != 0){
						try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC2_P01", resultData);
					
				}else if(cell ==2){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P02"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String foreCastValue = String.valueOf(list.get(i).get("DK_FOR_P02"));
					Double foreCast = Double.parseDouble(foreCastValue);
					
					Double resultData = 0.0;
					
					if((Outlook - foreCast) != 0 && foreCast != 0){
						try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC2_P02", resultData);
					
				}else if(cell ==3){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P03"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String foreCastValue = String.valueOf(list.get(i).get("DK_FOR_P03"));
					Double foreCast = Double.parseDouble(foreCastValue);
					
					Double resultData = 0.0;
					
					if((Outlook - foreCast) != 0 && foreCast != 0){
						try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC2_P03", resultData);
					
				}else if(cell ==4){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P04"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String foreCastValue = String.valueOf(list.get(i).get("DK_FOR_P04"));
					Double foreCast = Double.parseDouble(foreCastValue);
					
					Double resultData = 0.0;
					
					if((Outlook - foreCast) != 0 && foreCast != 0){
						try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC2_P04", resultData);
					
				}else if(cell ==5){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P05"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String foreCastValue = String.valueOf(list.get(i).get("DK_FOR_P05"));
					Double foreCast = Double.parseDouble(foreCastValue);
					
					Double resultData = 0.0;
					
					if((Outlook - foreCast) != 0 && foreCast != 0){
						try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC2_P05", resultData);
					
				}else if(cell ==6){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P06"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String foreCastValue = String.valueOf(list.get(i).get("DK_FOR_P06"));
					Double foreCast = Double.parseDouble(foreCastValue);
					
					Double resultData = 0.0;
					
					if((Outlook - foreCast) != 0 && foreCast != 0){
						try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC2_P06", resultData);
					
				}else if(cell ==7){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P07"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String foreCastValue = String.valueOf(list.get(i).get("DK_FOR_P07"));
					Double foreCast = Double.parseDouble(foreCastValue);
					
					Double resultData = 0.0;
					
					if((Outlook - foreCast) != 0 && foreCast != 0){
						try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC2_P07", resultData);
					
				}else if(cell ==8){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P08"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String foreCastValue = String.valueOf(list.get(i).get("DK_FOR_P08"));
					Double foreCast = Double.parseDouble(foreCastValue);
					
					Double resultData = 0.0;
					
					if((Outlook - foreCast) != 0 && foreCast != 0){
						try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC2_P08", resultData);
					
				}else if(cell ==9){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P09"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String foreCastValue = String.valueOf(list.get(i).get("DK_FOR_P09"));
					Double foreCast = Double.parseDouble(foreCastValue);
					
					Double resultData = 0.0;
					
					if((Outlook - foreCast) != 0 && foreCast != 0){
						try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC2_P09", resultData);
					
				}else if(cell ==10){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P10"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String foreCastValue = String.valueOf(list.get(i).get("DK_FOR_P10"));
					Double foreCast = Double.parseDouble(foreCastValue);
					
					Double resultData = 0.0;
					
					if((Outlook - foreCast) != 0 && foreCast != 0){
						try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC2_P10", resultData);
					
				}else if(cell ==11){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P11"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String foreCastValue = String.valueOf(list.get(i).get("DK_FOR_P11"));
					Double foreCast = Double.parseDouble(foreCastValue);
					
					Double resultData = 0.0;
					
					if((Outlook - foreCast) != 0 && foreCast != 0){
						try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC2_P11", resultData);
					
				}else if(cell ==12){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_P12"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String foreCastValue = String.valueOf(list.get(i).get("DK_FOR_P12"));
					Double foreCast = Double.parseDouble(foreCastValue);
					
					Double resultData = 0.0;
					
					if((Outlook - foreCast) != 0 && foreCast != 0){
						try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					record.put("DKT_CALC2_P12", resultData);
					
				}else if( cell == 13){
					
					Double OutLookQ1 = 0.0;
					Double foreCastQ1 = 0.0;
					Double resultData = 0.0;
					
					for(int j=1; j<=3; j++){
						String OutLookKey = "DK_OUT_P0"+j;
						String OutLookValue = String.valueOf(list.get(i).get(OutLookKey));
						Double OutLook = Double.parseDouble(OutLookValue);
						OutLookQ1 +=OutLook;

						String foreCastKey = "DK_FOR_P0"+j;
						String foreCastValue = String.valueOf(list.get(i).get(foreCastKey));
						Double foreCast = Double.parseDouble(foreCastValue);
						foreCastQ1 += foreCast;
					}
					
					if((OutLookQ1 - foreCastQ1) != 0 && foreCastQ1 != 0){
						try{ resultData = ((OutLookQ1 - foreCastQ1) / foreCastQ1); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					
					
					record.put("DKT_CALC2_Q01", resultData);
					resultData = Math.abs(resultData);
					
					// 신호등
					if(resultData <= 0.05){
						record.put("DKT_CALC2_Q01_SN", "GREEN");
					}else if(resultData > 0.05 && resultData <= 0.1){
						record.put("DKT_CALC2_Q01_SN", "YELLOW");
					}else{
						record.put("DKT_CALC2_Q01_SN", "RED");
					}
					
				}else if( cell == 14){
					
					Double OutLookQ2 = 0.0;
					Double foreCastQ2 = 0.0;
					Double resultData = 0.0;
					
					for(int j=4; j<=6; j++){
						String OutLookKey = "DK_OUT_P0"+j;
						String OutLookValue = String.valueOf(list.get(i).get(OutLookKey));
						Double OutLook = Double.parseDouble(OutLookValue);
						OutLookQ2 +=OutLook;

						String foreCastKey = "DK_FOR_P0"+j;
						String foreCastValue = String.valueOf(list.get(i).get(foreCastKey));
						Double foreCast = Double.parseDouble(foreCastValue);
						foreCastQ2 += foreCast;
					}
					
					if((OutLookQ2 - foreCastQ2) != 0 && foreCastQ2 != 0){
						try{ resultData =((OutLookQ2 - foreCastQ2) / foreCastQ2); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					
					
					record.put("DKT_CALC2_Q02", resultData);
					resultData = Math.abs(resultData);
					
					// 신호등
					if(resultData <= 0.05){
						record.put("DKT_CALC2_Q02_SN", "GREEN");
					}else if(resultData > 0.05 && resultData <= 0.1){
						record.put("DKT_CALC2_Q02_SN", "YELLOW");
					}else{
						record.put("DKT_CALC2_Q02_SN", "RED");
					}
					
				}else if( cell == 15){
					
					Double OutLookQ3 = 0.0;
					Double foreCastQ3 = 0.0;
					Double resultData = 0.0;
					
					for(int j=7; j<=9; j++){
						String OutLookKey = "DK_OUT_P0"+j;
						String OutLookValue = String.valueOf(list.get(i).get(OutLookKey));
						Double OutLook = Double.parseDouble(OutLookValue);
						OutLookQ3 +=OutLook;

						String foreCastKey = "DK_FOR_P0"+j;
						String foreCastValue = String.valueOf(list.get(i).get(foreCastKey));
						Double foreCast = Double.parseDouble(foreCastValue);
						foreCastQ3 += foreCast;
					}
					
					if((OutLookQ3 - foreCastQ3) != 0 && foreCastQ3 != 0){
						try{ resultData = ((OutLookQ3 - foreCastQ3) / foreCastQ3); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					
					
					record.put("DKT_CALC2_Q03", resultData);
					resultData = Math.abs(resultData);
					
					// 신호등
					if(resultData <= 0.05){
						record.put("DKT_CALC2_Q03_SN", "GREEN");
					}else if(resultData > 0.05 && resultData <= 0.1){
						record.put("DKT_CALC2_Q03_SN", "YELLOW");
					}else{
						record.put("DKT_CALC2_Q03_SN", "RED");
					}
					
				}else if( cell == 16){
					
					Double OutLookQ4 = 0.0;
					Double foreCastQ4 = 0.0;
					Double resultData = 0.0;
					
					for(int j=10; j<=12; j++){
						String OutLookKey = "DK_OUT_P"+j;
						String OutLookValue = String.valueOf(list.get(i).get(OutLookKey));
						Double OutLook = Double.parseDouble(OutLookValue);
						OutLookQ4 +=OutLook;

						String foreCastKey = "DK_FOR_P"+j;
						String foreCastValue = String.valueOf(list.get(i).get(foreCastKey));
						Double foreCast = Double.parseDouble(foreCastValue);
						foreCastQ4 += foreCast;
					}
					
					if((OutLookQ4 - foreCastQ4) != 0 && foreCastQ4 != 0){
						try{ resultData = ((OutLookQ4 - foreCastQ4) / foreCastQ4); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					
					
					record.put("DKT_CALC2_Q04", resultData);
					resultData = Math.abs(resultData);
					
					// 신호등
					if(resultData <= 0.05){
						record.put("DKT_CALC2_Q04_SN", "GREEN");
					}else if(resultData > 0.05 && resultData <= 0.1){
						record.put("DKT_CALC2_Q04_SN", "YELLOW");
					}else{
						record.put("DKT_CALC2_Q04_SN", "RED");
					}
					
				}else if( cell == 17){
					
					Double OutLookH1 = 0.0;
					Double foreCastH1 = 0.0;
					Double resultData = 0.0;
					
					for(int j=1; j<=6; j++){
						String OutLookKey = "DK_OUT_P0"+j;
						String OutLookValue = String.valueOf(list.get(i).get(OutLookKey));
						Double OutLook = Double.parseDouble(OutLookValue);
						OutLookH1 +=OutLook;

						String foreCastKey = "DK_FOR_P0"+j;
						String foreCastValue = String.valueOf(list.get(i).get(foreCastKey));
						Double foreCast = Double.parseDouble(foreCastValue);
						foreCastH1 += foreCast;
					}
					
					if((OutLookH1 - foreCastH1) != 0 && foreCastH1 != 0){
						try{ resultData = ((OutLookH1 - foreCastH1) / foreCastH1); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					
					
					record.put("DKT_CALC2_H01", resultData);
					resultData = Math.abs(resultData);
					
					// 신호등
					if(resultData <= 0.05){
						record.put("DKT_CALC2_H01_SN", "GREEN");
					}else if(resultData > 0.05 && resultData <= 0.1){
						record.put("DKT_CALC2_H01_SN", "YELLOW");
					}else{
						record.put("DKT_CALC2_H01_SN", "RED");
					}
					
				}else if( cell == 18){
					
					Double OutLookH2 = 0.0;
					Double foreCastH2 = 0.0;
					Double resultData = 0.0;
					
					for(int j=7; j<=12; j++){
						if(j == 7 || j == 8 || j == 9){
							String OutlookKey = "DK_OUT_P0"+j;
							String OutlookValue = String.valueOf(list.get(i).get(OutlookKey));
							Double Outlook = Double.parseDouble(OutlookValue);
							OutLookH2 +=Outlook;
	
							String foreCastKey = "DK_FOR_P0"+j;
							String foreCastValue = String.valueOf(list.get(i).get(foreCastKey));
							Double foreCast = Double.parseDouble(foreCastValue);
							foreCastH2 += foreCast;
						}else{
							String OutlookKey = "DK_OUT_P"+j;
							String OutlookValue = String.valueOf(list.get(i).get(OutlookKey));
							Double Outlook = Double.parseDouble(OutlookValue);
							OutLookH2 +=Outlook;
	
							String foreCastKey = "DK_FOR_P"+j;
							String foreCastValue = String.valueOf(list.get(i).get(foreCastKey));
							Double foreCast = Double.parseDouble(foreCastValue);
							foreCastH2 += foreCast;
						}
					}
					
					if((OutLookH2 - foreCastH2) != 0 && foreCastH2 != 0){
						try{ resultData = ((OutLookH2 - foreCastH2) / foreCastH2); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					
					
					record.put("DKT_CALC2_H02", resultData);
					resultData = Math.abs(resultData);
					
					// 신호등
					if(resultData <= 0.05){
						record.put("DKT_CALC2_H02_SN", "GREEN");
					}else if(resultData > 0.05 && resultData <= 0.1){
						record.put("DKT_CALC2_H02_SN", "YELLOW");
					}else{
						record.put("DKT_CALC2_H02_SN", "RED");
					}
					
				}else if(cell == 19){
					String OutlookValue = String.valueOf(list.get(i).get("DK_OUT_YTD"));
					Double Outlook = Double.parseDouble(OutlookValue);
				
					String foreCastValue = String.valueOf(list.get(i).get("DK_FOR_YTD"));
					Double foreCast = Double.parseDouble(foreCastValue);
					
					Double resultData = 0.0;
					
					if((Outlook - foreCast) != 0 && foreCast != 0){
						try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
					}
					
					
					record.put("DKT_CALC2_YTD", resultData);
					resultData = Math.abs(resultData);
					
					// 신호등
					if(resultData <= 0.05){
						record.put("DKT_CALC2_YTD_SN", "GREEN");
					}else if(resultData > 0.05 && resultData <= 0.1){
						record.put("DKT_CALC2_YTD_SN", "YELLOW");
					}else{
						record.put("DKT_CALC2_YTD_SN", "RED");
					}
					
				}
			}
			
			resultList.add(record);
		}
		
		return resultList;
	}
	
	/*
	 * Description: DK Depletion Target - Forecast Accuracy% vs. Actual 63~81번째 컬럼의 입력값을 셀에 입력
	 */
	public void setRowValue9(HSSFRow row, CellStyle style, Map rowData) {
		
		if(periodChk_Param.equals("Y")){
			
			for(int i=70; i<89; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(70).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P01").toString()));
	    	row.getCell(71).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P02").toString()));
	    	row.getCell(72).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P03").toString()));
	    	row.getCell(73).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P04").toString()));
	    	row.getCell(74).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P05").toString()));
	    	row.getCell(75).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P06").toString()));
	    	row.getCell(76).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P07").toString()));
	    	row.getCell(77).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P08").toString()));
	    	row.getCell(78).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P09").toString()));
	    	row.getCell(79).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P10").toString()));
	    	row.getCell(80).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P11").toString()));
	    	row.getCell(81).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P12").toString()));
	    	row.getCell(82).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_Q01").toString()));
	    	row.getCell(83).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_Q02").toString()));
	    	row.getCell(84).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_Q03").toString()));
	    	row.getCell(85).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_Q04").toString()));
	    	row.getCell(86).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_H01").toString()));
	    	row.getCell(87).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_H02").toString()));
	    	row.getCell(88).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_YTD").toString()));
	    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=27; i<33; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(27).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P01").toString()));
	    	row.getCell(28).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P02").toString()));
	    	row.getCell(29).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P03").toString()));
	    	row.getCell(30).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_Q01").toString()));
	    	row.getCell(31).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_H01").toString()));
	    	row.getCell(32).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P01").toString()));
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=31; i<38; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(31).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P01").toString()));
	    	row.getCell(32).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P02").toString()));
	    	row.getCell(33).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P03").toString()));
	    	row.getCell(34).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_Q01").toString()));
	    	row.getCell(35).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_Q02").toString()));
	    	row.getCell(36).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_H01").toString()));
	    	row.getCell(37).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P01").toString()));
	    	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=35; i<43; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(35).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P07").toString()));
	    	row.getCell(36).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P08").toString()));
	    	row.getCell(37).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P09").toString()));
	    	row.getCell(38).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_Q02").toString()));
	    	row.getCell(39).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_Q03").toString()));
	    	row.getCell(40).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_H01").toString()));
	    	row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_H02").toString()));
	    	row.getCell(42).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P01").toString()));
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=35; i<43; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(35).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P07").toString()));
	    	row.getCell(36).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P08").toString()));
	    	row.getCell(37).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P09").toString()));
	    	row.getCell(38).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_Q03").toString()));
	    	row.getCell(39).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_Q04").toString()));
	    	row.getCell(40).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_H01").toString()));
	    	row.getCell(41).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_H02").toString()));
	    	row.getCell(42).setCellValue(Double.parseDouble(rowData.get("DKT_CALC2_P01").toString()));
	    	
		}
		
	}
	
	
	// Note G ForeCast Calc1 Growth Rate% vs. F15
	// NOTE G Forecast [ Calc = (F15 Forecast / F14 Actual) - 1 ] 
	// NOTE G Forecast [ Calc = (F15 Forecast - F14 Actual)]
	public ArrayList<Map> Dep_NOTAG_Calc1(ArrayList<Map> list){
		
		ArrayList<Map> resultList = new ArrayList<Map>();
		String DataLv2_NM = null;
		String DataLv2 = null;
		for(int i=0; i<list.size(); i++){
			
			Map record = new LinkedHashMap();
			
			record.put("STYLE", list.get(i).get("STYLETXT").toString());
			record.put("TOTAL", list.get(i).get("TOTAL").toString());
			
			if(list.get(i).get("STYLETXT").toString().equals("style4")){
				if(list.get(i).get("DATALV2_NM") == "" || list.get(i).get("DATALV2_NM") == null){ 		// Rate
					DataLv2 = "RATE";
					DataLv2_NM =list.get(i-1).get("DATALV2_NM").toString();
					
					for(int cell = 1; cell <= 19; cell++){
						if(cell ==1){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P01"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P01"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							resultData = foreCast - Actual;
							
							record.put("NOTAG_CALC1_P01", resultData);

						}else if(cell ==2){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P02"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P02"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							resultData = foreCast - Actual;
							record.put("NOTAG_CALC1_P02", resultData);

						}else if(cell ==3){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P03"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P03"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							resultData = foreCast - Actual;
							record.put("NOTAG_CALC1_P03", resultData);

						}else if(cell ==4){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P04"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P04"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							resultData = foreCast - Actual;
							record.put("NOTAG_CALC1_P04", resultData);
							
						}else if(cell ==5){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P05"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P05"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							resultData = foreCast - Actual;
							record.put("NOTAG_CALC1_P05", resultData);
							
						}else if(cell ==6){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P06"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P06"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							resultData = foreCast - Actual;
							record.put("NOTAG_CALC1_P06", resultData);
							
						}else if(cell ==7){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P07"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P07"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							resultData = foreCast - Actual;
							record.put("NOTAG_CALC1_P07", resultData);

						}else if(cell ==8){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P08"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P08"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							resultData = foreCast - Actual;
							record.put("NOTAG_CALC1_P08", resultData);

						}else if(cell ==9){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P09"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P09"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							resultData = foreCast - Actual;
							record.put("NOTAG_CALC1_P09", resultData);
	
						}else if(cell ==10){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P10"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P10"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							resultData = foreCast - Actual;
							record.put("NOTAG_CALC1_P10", resultData);
							
						}else if(cell ==11){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P11"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P11"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							resultData = foreCast - Actual;
							record.put("NOTAG_CALC1_P11", resultData);

						}else if(cell ==12){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P12"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P12"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							resultData = foreCast - Actual;
							record.put("NOTAG_CALC1_P12", resultData);

						}else if(cell ==13){
							
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_Q01"));
							double foreCastQ1 = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_Q01"));
							double ActualQ1 = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							resultData = foreCastQ1 - ActualQ1;
							
							record.put("NOTAG_CALC1_Q01", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_Q01_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_Q01_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_Q01_SN", "GREEN");
							}
							
						}else if(cell ==14){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_Q02"));
							double foreCastQ2 = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_Q02"));
							double ActualQ2 = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							resultData = foreCastQ2 - ActualQ2;
							
							record.put("NOTAG_CALC1_Q02", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_Q02_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_Q02_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_Q02_SN", "GREEN");
							}
							
						}else if(cell ==15){
							
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_Q03"));
							double foreCastQ3 = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_Q03"));
							double ActualQ3 = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							resultData = foreCastQ3 - ActualQ3;
							
							record.put("NOTAG_CALC1_Q03", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_Q03_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_Q03_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_Q03_SN", "GREEN");
							}
							
						}else if(cell ==16){
							
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_Q04"));
							double foreCastQ4 = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_Q04"));
							double ActualQ4 = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							
							resultData = foreCastQ4 - ActualQ4;
							record.put("NOTAG_CALC1_Q04", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_Q04_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_Q04_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_Q04_SN", "GREEN");
							}
							
						}else if(cell ==17){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_H01"));
							double foreCastH1 = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_H01"));
							double ActualH1 = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							
							resultData = foreCastH1 - ActualH1;
							record.put("NOTAG_CALC1_H01", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_H01_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_H01_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_H01_SN", "GREEN");
							}
							
						}else if(cell ==18){
							
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_H02"));
							double foreCastH2 = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_H02"));
							double ActualH2 = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							
							resultData = foreCastH2 - ActualH2;
							record.put("NOTAG_CALC1_H02", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_H02_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_H02_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_H02_SN", "GREEN");
							}
							
						}else if(cell ==19){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_YTD"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_YTD"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							resultData = foreCast - Actual;
							record.put("NOTAG_CALC1_YTD", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_YTD_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_YTD_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_YTD_SN", "GREEN");
							}
							
						}
						
					}
					
				}else{																										// KRW
					
					DataLv2 = "KRW";
					DataLv2_NM = list.get(i).get("DATALV2_NM").toString();
					
					for(int cell = 1; cell <= 19; cell++){
						if(cell ==1){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P01"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P01"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							if(foreCast != 0 && Actual != 0){
								try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}else{
								resultData = -1.0;
							}
							record.put("NOTAG_CALC1_P01", resultData);

						}else if(cell ==2){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P02"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P02"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							if(foreCast != 0 && Actual != 0){
								try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}else{
								resultData = -1.0;
							}
							record.put("NOTAG_CALC1_P02", resultData);

						}else if(cell ==3){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P03"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P03"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							if(foreCast != 0 && Actual != 0){
								try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}else{
								resultData = -1.0;
							}
							record.put("NOTAG_CALC1_P03", resultData);

						}else if(cell ==4){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P04"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P04"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							if(foreCast != 0 && Actual != 0){
								try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}else{
								resultData = -1.0;
							}
							record.put("NOTAG_CALC1_P04", resultData);

						}else if(cell ==5){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P05"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P05"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							if(foreCast != 0 && Actual != 0){
								try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}else{
								resultData = -1.0;
							}
							record.put("NOTAG_CALC1_P05", resultData);

						}else if(cell ==6){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P06"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P06"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							if(foreCast != 0 && Actual != 0){
								try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}else{
								resultData = -1.0;
							}
							record.put("NOTAG_CALC1_P06", resultData);

						}else if(cell ==7){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P07"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P07"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							if(foreCast != 0 && Actual != 0){
								try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}else{
								resultData = -1.0;
							}
							record.put("NOTAG_CALC1_P07", resultData);
							
						}else if(cell ==8){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P08"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P08"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							if(foreCast != 0 && Actual != 0){
								try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}else{
								resultData = -1.0;
							}
							record.put("NOTAG_CALC1_P08", resultData);
							
						}else if(cell ==9){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P09"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P09"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							if(foreCast != 0 && Actual != 0){
								try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}else{
								resultData = -1.0;
							}
							record.put("NOTAG_CALC1_P09", resultData);
							
						}else if(cell ==10){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P10"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P10"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							if(foreCast != 0 && Actual != 0){
								try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}else{
								resultData = -1.0;
							}
							record.put("NOTAG_CALC1_P10", resultData);

						}else if(cell ==11){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P11"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P11"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							if(foreCast != 0 && Actual != 0){
								try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}else{
								resultData = -1.0;
							}
							record.put("NOTAG_CALC1_P11", resultData);
							
						}else if(cell ==12){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P12"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P12"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							if(foreCast != 0 && Actual != 0){
								try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}else{
								resultData = -1.0;
							}
							record.put("NOTAG_CALC1_P12", resultData);

						}else if(cell ==13){
							double foreCastQ1 = 0;
							double ActualQ1 = 0;
							double resultData = 0;
							
							for(int j=1; j<=3; j++){
								String foreCastKey = "NOTAG_FOR_P0"+j;
								String foreCastValue = String.valueOf(list.get(i).get(foreCastKey));
								double foreCast = Double.parseDouble(foreCastValue);
								foreCastQ1 += foreCast;
								
								String ActualKey = "NOTAG_AC_P0"+j;
								String ActualValue = String.valueOf(list.get(i).get(ActualKey));
								double OutLook = Double.parseDouble(ActualValue);
								ActualQ1 +=OutLook;
							}
							if(foreCastQ1 != 0 && ActualQ1 != 0){
								try{ resultData = ((foreCastQ1 / ActualQ1) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}else{
								resultData = -1.0;
							}
							record.put("NOTAG_CALC1_Q01", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_Q01_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_Q01_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_Q01_SN", "GREEN");
							}
							
						}else if(cell ==14){
							double foreCastQ2 = 0;
							double ActualQ2 = 0;
							double resultData = 0;
							
							for(int j=4; j<=6; j++){
								String foreCastKey = "NOTAG_FOR_P0"+j;
								String foreCastValue = String.valueOf(list.get(i).get(foreCastKey));
								double foreCast = Double.parseDouble(foreCastValue);
								foreCastQ2 += foreCast;
								
								String ActualKey = "NOTAG_AC_P0"+j;
								String ActualValue = String.valueOf(list.get(i).get(ActualKey));
								double OutLook = Double.parseDouble(ActualValue);
								ActualQ2 +=OutLook;
							}
							if(foreCastQ2 != 0 && ActualQ2 != 0){
								try{ resultData = ((foreCastQ2 / ActualQ2) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}else{
								resultData = -1.0;
							}
							record.put("NOTAG_CALC1_Q02", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_Q02_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_Q02_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_Q02_SN", "GREEN");
							}
							
						}else if(cell ==15){
							double foreCastQ3 = 0;
							double ActualQ3 = 0;
							double resultData = 0;
							
							for(int j=7; j<=9; j++){
								String foreCastKey = "NOTAG_FOR_P0"+j;
								String foreCastValue = String.valueOf(list.get(i).get(foreCastKey));
								double foreCast = Double.parseDouble(foreCastValue);
								foreCastQ3 += foreCast;
								
								String ActualKey = "NOTAG_AC_P0"+j;
								String ActualValue = String.valueOf(list.get(i).get(ActualKey));
								double OutLook = Double.parseDouble(ActualValue);
								ActualQ3 +=OutLook;
							}
							if(foreCastQ3 != 0 && ActualQ3 != 0){
								try{ resultData = ((foreCastQ3 / ActualQ3) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}else{
								resultData = -1.0;
							}
							record.put("NOTAG_CALC1_Q03", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_Q03_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_Q03_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_Q03_SN", "GREEN");
							}
							
						}else if(cell ==16){
							double foreCastQ4 = 0;
							double ActualQ4 = 0;
							double resultData = 0;
							
							for(int j=10; j<=12; j++){
								String foreCastKey = "NOTAG_FOR_P"+j;
								String foreCastValue = String.valueOf(list.get(i).get(foreCastKey));
								double foreCast = Double.parseDouble(foreCastValue);
								foreCastQ4 += foreCast;
								
								String ActualKey = "NOTAG_AC_P"+j;
								String ActualValue = String.valueOf(list.get(i).get(ActualKey));
								double OutLook = Double.parseDouble(ActualValue);
								ActualQ4 +=OutLook;
							}
							if(foreCastQ4 != 0 && ActualQ4 != 0){
								try{ resultData = ((foreCastQ4 / ActualQ4) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}else{
								resultData = -1.0;
							}
							record.put("NOTAG_CALC1_Q04", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_Q04_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_Q04_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_Q04_SN", "GREEN");
							}
							
						}else if(cell ==17){
							double foreCastH1 = 0;
							double ActualH1 = 0;
							double resultData = 0;
							
							for(int j=1; j<=6; j++){
								String foreCastKey = "NOTAG_FOR_P0"+j;
								String foreCastValue = String.valueOf(list.get(i).get(foreCastKey));
								double foreCast = Double.parseDouble(foreCastValue);
								foreCastH1 += foreCast;
								
								String ActualKey = "NOTAG_AC_P0"+j;
								String ActualValue = String.valueOf(list.get(i).get(ActualKey));
								double OutLook = Double.parseDouble(ActualValue);
								ActualH1 +=OutLook;
							}
							if(foreCastH1 != 0 && ActualH1 != 0){
								try{ resultData = ((foreCastH1 / ActualH1) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}else{
								resultData = -1.0;
							}
							record.put("NOTAG_CALC1_H01", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_H01_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_H01_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_H01_SN", "GREEN");
							}
							
						}else if(cell ==18){
							double foreCastH2 = 0;
							double ActualH2 = 0;
							double resultData = 0;
							
							for(int j=6; j<=12; j++){
								if(j <= 9){
									String foreCastKey = "NOTAG_FOR_P0"+j;
									String foreCastValue = String.valueOf(list.get(i).get(foreCastKey));
									double foreCast = Double.parseDouble(foreCastValue);
									foreCastH2 += foreCast;
									
									String ActualKey = "NOTAG_AC_P0"+j;
									String ActualValue = String.valueOf(list.get(i).get(ActualKey));
									double OutLook = Double.parseDouble(ActualValue);
									ActualH2 +=OutLook;
								}else{
									String foreCastKey = "NOTAG_FOR_P"+j;
									String foreCastValue = String.valueOf(list.get(i).get(foreCastKey));
									double foreCast = Double.parseDouble(foreCastValue);
									foreCastH2 += foreCast;
									
									String ActualKey = "NOTAG_AC_P"+j;
									String ActualValue = String.valueOf(list.get(i).get(ActualKey));
									double OutLook = Double.parseDouble(ActualValue);
									ActualH2 +=OutLook;
								}
							}
							if(foreCastH2 != 0 && ActualH2 != 0){
								try{ resultData = ((foreCastH2 / ActualH2) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}else{
								resultData = -1.0;
							}
							record.put("NOTAG_CALC1_H02", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_H02_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_H02_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_H02_SN", "GREEN");
							}
							
						}else if(cell ==19){
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_YTD"));
							double foreCast = Double.parseDouble(foreCastValue);
						
							String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_YTD"));
							double Actual = Double.parseDouble(ActualValue);
							
							double resultData = 0;
							if(foreCast != 0 && Actual != 0){
								try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}else{
								resultData = -1.0;
							}
							record.put("NOTAG_CALC1_YTD", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_YTD_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_YTD_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_YTD_SN", "GREEN");
							}
							
						}
						
					}
				}
				record.put("DATALV2", DataLv2);
				record.put("DATALV2_NM", DataLv2_NM);
			}else{
				for(int cell = 1; cell <= 19; cell++){
					if(cell ==1){
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P01"));
						double foreCast = Double.parseDouble(foreCastValue);
					
						String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P01"));
						double Actual = Double.parseDouble(ActualValue);
						
						double resultData = 0;
						if(foreCast != 0 && Actual != 0){
							try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}else{
							resultData = -1.0;
						}
						record.put("NOTAG_CALC1_P01", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_P01_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_P01_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_P01_SN", "GREEN");
						}
						
					}else if(cell ==2){
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P02"));
						double foreCast = Double.parseDouble(foreCastValue);
					
						String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P02"));
						double Actual = Double.parseDouble(ActualValue);
						
						double resultData = 0;
						if(foreCast != 0 && Actual != 0){
							try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}else{
							resultData = -1.0;
						}
						record.put("NOTAG_CALC1_P02", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_P02_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_P02_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_P02_SN", "GREEN");
						}
						
					}else if(cell ==3){
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P03"));
						double foreCast = Double.parseDouble(foreCastValue);
					
						String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P03"));
						double Actual = Double.parseDouble(ActualValue);
						
						double resultData = 0;
						if(foreCast != 0 && Actual != 0){
							try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}else{
							resultData = -1.0;
						}
						record.put("NOTAG_CALC1_P03", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_P03_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_P03_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_P03_SN", "GREEN");
						}
						
					}else if(cell ==4){
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P04"));
						double foreCast = Double.parseDouble(foreCastValue);
					
						String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P04"));
						double Actual = Double.parseDouble(ActualValue);
						
						double resultData = 0;
						if(foreCast != 0 && Actual != 0){
							try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}else{
							resultData = -1.0;
						}
						record.put("NOTAG_CALC1_P04", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_P04_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_P04_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_P04_SN", "GREEN");
						}
						
					}else if(cell ==5){
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P05"));
						double foreCast = Double.parseDouble(foreCastValue);
					
						String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P05"));
						double Actual = Double.parseDouble(ActualValue);
						
						double resultData = 0;
						if(foreCast != 0 && Actual != 0){
							try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}else{
							resultData = -1.0;
						}
						record.put("NOTAG_CALC1_P05", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_P05_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_P05_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_P05_SN", "GREEN");
						}
						
					}else if(cell ==6){
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P06"));
						double foreCast = Double.parseDouble(foreCastValue);
					
						String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P06"));
						double Actual = Double.parseDouble(ActualValue);
						
						double resultData = 0;
						if(foreCast != 0 && Actual != 0){
							try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}else{
							resultData = -1.0;
						}
						record.put("NOTAG_CALC1_P06", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_P06_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_P06_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_P06_SN", "GREEN");
						}
						
					}else if(cell ==7){
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P07"));
						double foreCast = Double.parseDouble(foreCastValue);
					
						String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P07"));
						double Actual = Double.parseDouble(ActualValue);
						
						double resultData = 0;
						if(foreCast != 0 && Actual != 0){
							try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}else{
							resultData = -1.0;
						}
						record.put("NOTAG_CALC1_P07", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_P07_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_P07_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_P07_SN", "GREEN");
						}
						
					}else if(cell ==8){
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P08"));
						double foreCast = Double.parseDouble(foreCastValue);
					
						String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P08"));
						double Actual = Double.parseDouble(ActualValue);
						
						double resultData = 0;
						if(foreCast != 0 && Actual != 0){
							try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}else{
							resultData = -1.0;
						}
						record.put("NOTAG_CALC1_P08", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_P08_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_P08_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_P08_SN", "GREEN");
						}
						
					}else if(cell ==9){
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P09"));
						double foreCast = Double.parseDouble(foreCastValue);
					
						String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P09"));
						double Actual = Double.parseDouble(ActualValue);
						
						double resultData = 0;
						if(foreCast != 0 && Actual != 0){
							try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}else{
							resultData = -1.0;
						}
						record.put("NOTAG_CALC1_P09", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_P09_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_P09_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_P09_SN", "GREEN");
						}
						
					}else if(cell ==10){
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P10"));
						double foreCast = Double.parseDouble(foreCastValue);
					
						String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P10"));
						double Actual = Double.parseDouble(ActualValue);
						
						double resultData = 0;
						if(foreCast != 0 && Actual != 0){
							try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}else{
							resultData = -1.0;
						}
						record.put("NOTAG_CALC1_P10", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_P10_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_P10_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_P10_SN", "GREEN");
						}
						
					}else if(cell ==11){
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P11"));
						double foreCast = Double.parseDouble(foreCastValue);
					
						String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P11"));
						double Actual = Double.parseDouble(ActualValue);
						
						double resultData = 0;
						if(foreCast != 0 && Actual != 0){
							try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}else{
							resultData = -1.0;
						}
						record.put("NOTAG_CALC1_P11", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_P11_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_P11_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_P11_SN", "GREEN");
						}
						
					}else if(cell ==12){
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P12"));
						double foreCast = Double.parseDouble(foreCastValue);
					
						String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_P12"));
						double Actual = Double.parseDouble(ActualValue);
						
						double resultData = 0;
						if(foreCast != 0 && Actual != 0){
							try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}else{
							resultData = -1.0;
						}
						record.put("NOTAG_CALC1_P12", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_P12_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_P12_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_P12_SN", "GREEN");
						}
						
					}else if(cell ==13){
						double foreCastQ1 = 0;
						double ActualQ1 = 0;
						double resultData = 0;
						
						for(int j=1; j<=3; j++){
							String foreCastKey = "NOTAG_FOR_P0"+j;
							String foreCastValue = String.valueOf(list.get(i).get(foreCastKey));
							double foreCast = Double.parseDouble(foreCastValue);
							foreCastQ1 += foreCast;
							
							String ActualKey = "NOTAG_AC_P0"+j;
							String ActualValue = String.valueOf(list.get(i).get(ActualKey));
							double OutLook = Double.parseDouble(ActualValue);
							ActualQ1 +=OutLook;
						}
						if(foreCastQ1 != 0 && ActualQ1 != 0){
							try{ resultData = ((foreCastQ1 / ActualQ1) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}else{
							resultData = -1.0;
						}
						record.put("NOTAG_CALC1_Q01", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_Q01_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_Q01_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_Q01_SN", "GREEN");
						}
						
					}else if(cell ==14){
						double foreCastQ2 = 0;
						double ActualQ2 = 0;
						double resultData = 0;
						
						for(int j=4; j<=6; j++){
							String foreCastKey = "NOTAG_FOR_P0"+j;
							String foreCastValue = String.valueOf(list.get(i).get(foreCastKey));
							double foreCast = Double.parseDouble(foreCastValue);
							foreCastQ2 += foreCast;
							
							String ActualKey = "NOTAG_AC_P0"+j;
							String ActualValue = String.valueOf(list.get(i).get(ActualKey));
							double OutLook = Double.parseDouble(ActualValue);
							ActualQ2 +=OutLook;
						}
						if(foreCastQ2 != 0 && ActualQ2 != 0){
							try{ resultData = ((foreCastQ2 / ActualQ2) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}else{
							resultData = -1.0;
						}
						record.put("NOTAG_CALC1_Q02", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_Q02_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_Q02_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_Q02_SN", "GREEN");
						}
						
					}else if(cell ==15){
						double foreCastQ3 = 0;
						double ActualQ3 = 0;
						double resultData = 0;
						
						for(int j=7; j<=9; j++){
							String foreCastKey = "NOTAG_FOR_P0"+j;
							String foreCastValue = String.valueOf(list.get(i).get(foreCastKey));
							double foreCast = Double.parseDouble(foreCastValue);
							foreCastQ3 += foreCast;
							
							String ActualKey = "NOTAG_AC_P0"+j;
							String ActualValue = String.valueOf(list.get(i).get(ActualKey));
							double OutLook = Double.parseDouble(ActualValue);
							ActualQ3 +=OutLook;
						}
						if(foreCastQ3 != 0 && ActualQ3 != 0){
							try{ resultData = ((foreCastQ3 / ActualQ3) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}else{
							resultData = -1.0;
						}
						record.put("NOTAG_CALC1_Q03", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_Q03_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_Q03_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_Q03_SN", "GREEN");
						}
						
					}else if(cell ==16){
						double foreCastQ4 = 0;
						double ActualQ4 = 0;
						double resultData = 0;
						
						for(int j=10; j<=12; j++){
							String foreCastKey = "NOTAG_FOR_P"+j;
							String foreCastValue = String.valueOf(list.get(i).get(foreCastKey));
							double foreCast = Double.parseDouble(foreCastValue);
							foreCastQ4 += foreCast;
							
							String ActualKey = "NOTAG_AC_P"+j;
							String ActualValue = String.valueOf(list.get(i).get(ActualKey));
							double OutLook = Double.parseDouble(ActualValue);
							ActualQ4 +=OutLook;
						}
						if(foreCastQ4 != 0 && ActualQ4 != 0){
							try{ resultData = ((foreCastQ4 / ActualQ4) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}else{
							resultData = -1.0;
						}
						record.put("NOTAG_CALC1_Q04", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_Q04_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_Q04_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_Q04_SN", "GREEN");
						}
						
					}else if(cell ==17){
						double foreCastH1 = 0;
						double ActualH1 = 0;
						double resultData = 0;
						
						for(int j=1; j<=6; j++){
							String foreCastKey = "NOTAG_FOR_P0"+j;
							String foreCastValue = String.valueOf(list.get(i).get(foreCastKey));
							double foreCast = Double.parseDouble(foreCastValue);
							foreCastH1 += foreCast;
							
							String ActualKey = "NOTAG_AC_P0"+j;
							String ActualValue = String.valueOf(list.get(i).get(ActualKey));
							double OutLook = Double.parseDouble(ActualValue);
							ActualH1 +=OutLook;
						}
						if(foreCastH1 != 0 && ActualH1 != 0){
							try{ resultData = ((foreCastH1 / ActualH1) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}else{
							resultData = -1.0;
						}
						record.put("NOTAG_CALC1_H01", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_H01_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_H01_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_H01_SN", "GREEN");
						}
						
					}else if(cell ==18){
						double foreCastH2 = 0;
						double ActualH2 = 0;
						double resultData = 0;
						
						for(int j=6; j<=12; j++){
							if(j <= 9){
								String foreCastKey = "NOTAG_FOR_P0"+j;
								String foreCastValue = String.valueOf(list.get(i).get(foreCastKey));
								double foreCast = Double.parseDouble(foreCastValue);
								foreCastH2 += foreCast;
								
								String ActualKey = "NOTAG_AC_P0"+j;
								String ActualValue = String.valueOf(list.get(i).get(ActualKey));
								double OutLook = Double.parseDouble(ActualValue);
								ActualH2 +=OutLook;
							}else{
								String foreCastKey = "NOTAG_FOR_P"+j;
								String foreCastValue = String.valueOf(list.get(i).get(foreCastKey));
								double foreCast = Double.parseDouble(foreCastValue);
								foreCastH2 += foreCast;
								
								String ActualKey = "NOTAG_AC_P"+j;
								String ActualValue = String.valueOf(list.get(i).get(ActualKey));
								double OutLook = Double.parseDouble(ActualValue);
								ActualH2 +=OutLook;
							}
						}
						if(foreCastH2 != 0 && ActualH2 != 0){
							try{ resultData = ((foreCastH2 / ActualH2) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}else{
							resultData = -1.0;
						}
						record.put("NOTAG_CALC1_H02", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_H02_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_H02_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_H02_SN", "GREEN");
						}
						
					}else if(cell ==19){
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_YTD"));
						double foreCast = Double.parseDouble(foreCastValue);
					
						String ActualValue = String.valueOf(list.get(i).get("NOTAG_AC_YTD"));
						double Actual = Double.parseDouble(ActualValue);
						
						double resultData = 0;
						if(foreCast != 0 && Actual != 0){
							try{ resultData = ((foreCast / Actual) - 1); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}else{
							resultData = -1.0;
						}
						record.put("NOTAG_CALC1_YTD", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_YTD_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_YTD_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_YTD_SN", "GREEN");
						}
						
					}
					
				}
			}
			
			resultList.add(record);
		}
		
		return resultList;
	}
	
	
	/*
	 * Description: NOTE G Forecast [ Calc = (F15 Forecast - F14 Actual) - 1 ]  63~81번째 컬럼의 입력값을 셀에 입력
	 */
	public void setRowValue10(HSSFRow row, CellStyle style, Map rowData) {
		
		if(periodChk_Param.equals("Y")){
			
			for(int i=43; i<62; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(43).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P01").toString()));
	    	row.getCell(44).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P02").toString()));
	    	row.getCell(45).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P03").toString()));
	    	row.getCell(46).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P04").toString()));
	    	row.getCell(47).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P05").toString()));
	    	row.getCell(48).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P06").toString()));
	    	row.getCell(49).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P07").toString()));
	    	row.getCell(50).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P08").toString()));
	    	row.getCell(51).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P09").toString()));
	    	row.getCell(52).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P10").toString()));
	    	row.getCell(53).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P11").toString()));
	    	row.getCell(54).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P12").toString()));
	    	row.getCell(55).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q01").toString()));
	    	row.getCell(56).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q02").toString()));
	    	row.getCell(57).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q03").toString()));
	    	row.getCell(58).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q04").toString()));
	    	row.getCell(59).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H01").toString()));
	    	row.getCell(60).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H02").toString()));
	    	row.getCell(61).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_YTD").toString()));
    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=17; i<23; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P01").toString()));
	    	row.getCell(18).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P02").toString()));
	    	row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P03").toString()));
	    	row.getCell(20).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q01").toString()));
	    	row.getCell(21).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H01").toString()));
	    	row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P01").toString()));
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=19; i<26; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P01").toString()));
	    	row.getCell(20).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P02").toString()));
	    	row.getCell(21).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P03").toString()));
	    	row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q01").toString()));
	    	row.getCell(23).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q02").toString()));
	    	row.getCell(24).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H01").toString()));
	    	row.getCell(25).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P01").toString()));
	    	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=21; i<29; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(21).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P07").toString()));
	    	row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P08").toString()));
	    	row.getCell(23).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P09").toString()));
	    	row.getCell(24).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q02").toString()));
	    	row.getCell(25).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q03").toString()));
	    	row.getCell(26).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H01").toString()));
	    	row.getCell(27).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H02").toString()));
	    	row.getCell(28).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P01").toString()));
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=21; i<29; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(21).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P07").toString()));
	    	row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P08").toString()));
	    	row.getCell(23).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P09").toString()));
	    	row.getCell(24).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q03").toString()));
	    	row.getCell(25).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q04").toString()));
	    	row.getCell(26).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H01").toString()));
	    	row.getCell(27).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H02").toString()));
	    	row.getCell(28).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P01").toString()));
	    	
		}
		
	}
	
	
	// Growth Rate% vs. F14
	// (foreCast / Actual) - 1
	// Note G Forecast Calc1
	public ArrayList<Map> Dep_NOTGT_Calc1(ArrayList<Map> list){
		
		ArrayList<Map> resultList = new ArrayList<Map>();
		String DataLv2_NM = null;
		String DataLv2 = null;
		for(int i=0; i<list.size(); i++){
			
			Map record = new LinkedHashMap();
			
			record.put("STYLE", list.get(i).get("STYLETXT").toString());
			record.put("TOTAL", list.get(i).get("TOTAL").toString());
			
			if(list.get(i).get("STYLETXT").toString().equals("style4")){
				if(list.get(i).get("DATALV2_NM") == "" || list.get(i).get("DATALV2_NM") == null){ 		// Rate
					DataLv2 = "RATE";
					DataLv2_NM =list.get(i-1).get("DATALV2_NM").toString();
					
					for(int cell = 1; cell <= 19; cell++){
						if(cell ==1){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P01"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P01"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							resultData = OutLook - Target;
							
							record.put("NOTAG_CALC1_P01", resultData);

						}else if(cell ==2){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P02"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P02"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							resultData = OutLook - Target;
							record.put("NOTAG_CALC1_P02", resultData);

						}else if(cell ==3){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P03"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P03"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							resultData = OutLook - Target;
							record.put("NOTAG_CALC1_P03", resultData);

						}else if(cell ==4){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P04"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P04"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							resultData = OutLook - Target;
							record.put("NOTAG_CALC1_P04", resultData);
							
						}else if(cell ==5){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P05"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P05"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							resultData = OutLook - Target;
							record.put("NOTAG_CALC1_P05", resultData);
							
						}else if(cell ==6){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P06"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P06"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							resultData = OutLook - Target;
							record.put("NOTAG_CALC1_P06", resultData);
							
						}else if(cell ==7){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P07"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P07"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							resultData = OutLook - Target;
							record.put("NOTAG_CALC1_P07", resultData);

						}else if(cell ==8){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P08"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P08"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							resultData = OutLook - Target;
							record.put("NOTAG_CALC1_P08", resultData);

						}else if(cell ==9){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P09"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P09"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							resultData = OutLook - Target;
							record.put("NOTAG_CALC1_P09", resultData);
	
						}else if(cell ==10){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P10"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P10"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							resultData = OutLook - Target;
							record.put("NOTAG_CALC1_P10", resultData);
							
						}else if(cell ==11){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P11"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P11"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							resultData = OutLook - Target;
							record.put("NOTAG_CALC1_P11", resultData);

						}else if(cell ==12){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P12"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P12"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							resultData = OutLook - Target;
							record.put("NOTAG_CALC1_P12", resultData);

						}else if(cell ==13){
							
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_Q01"));
							double OutLookQ1 = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_Q01"));
							double TargetQ1 = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							resultData = OutLookQ1 - TargetQ1;
							
							record.put("NOTAG_CALC1_Q01", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_Q01_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_Q01_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_Q01_SN", "GREEN");
							}
							
						}else if(cell ==14){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_Q02"));
							double OutLookQ2 = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_Q02"));
							double TargetQ2 = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							resultData = OutLookQ2 - TargetQ2;
							
							record.put("NOTAG_CALC1_Q02", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_Q02_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_Q02_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_Q02_SN", "GREEN");
							}
							
						}else if(cell ==15){
							
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_Q03"));
							double OutLookQ3 = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_Q03"));
							double TargetQ3 = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							resultData = OutLookQ3 - TargetQ3;
							
							record.put("NOTAG_CALC1_Q03", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_Q03_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_Q03_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_Q03_SN", "GREEN");
							}
							
						}else if(cell ==16){
							
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_Q04"));
							double OutLookQ4 = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_Q04"));
							double TargetQ4 = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							
							resultData = OutLookQ4 - TargetQ4;
							record.put("NOTAG_CALC1_Q04", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_Q04_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_Q04_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_Q04_SN", "GREEN");
							}
							
						}else if(cell ==17){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_H01"));
							double OutLookH1 = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_H01"));
							double TargetH1 = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							
							resultData = OutLookH1 - TargetH1;
							record.put("NOTAG_CALC1_H01", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_H01_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_H01_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_H01_SN", "GREEN");
							}
							
						}else if(cell ==18){
							
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_H02"));
							double OutLookH2 = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_H02"));
							double TargetH2 = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							
							resultData = OutLookH2 - TargetH2;
							record.put("NOTAG_CALC1_H02", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_H02_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_H02_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_H02_SN", "GREEN");
							}
							
						}else if(cell ==19){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_YTD"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_YTD"));
							double Target = Double.parseDouble(TargetValue);
							double resultData = 0;
							resultData = OutLook - Target;
							record.put("NOTAG_CALC1_YTD", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_YTD_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_YTD_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_YTD_SN", "GREEN");
							}
							
						}
						
					}
					
				}else{																										// KRW
					
					DataLv2 = "KRW";
					DataLv2_NM = list.get(i).get("DATALV2_NM").toString();
					
					for(int cell = 1; cell <= 19; cell++){
						if(cell ==1){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P01"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P01"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
							record.put("NOTAG_CALC1_P01", resultData);

						}else if(cell ==2){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P02"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P02"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
							record.put("NOTAG_CALC1_P02", resultData);

						}else if(cell ==3){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P03"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P03"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
							record.put("NOTAG_CALC1_P03", resultData);

						}else if(cell ==4){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P04"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P04"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
							record.put("NOTAG_CALC1_P04", resultData);

						}else if(cell ==5){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P05"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P05"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
							record.put("NOTAG_CALC1_P05", resultData);

						}else if(cell ==6){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P06"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P06"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
							record.put("NOTAG_CALC1_P06", resultData);

						}else if(cell ==7){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P07"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P07"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
							record.put("NOTAG_CALC1_P07", resultData);
							
						}else if(cell ==8){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P08"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P08"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
							record.put("NOTAG_CALC1_P08", resultData);
							
						}else if(cell ==9){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P09"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P09"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
							record.put("NOTAG_CALC1_P09", resultData);
							
						}else if(cell ==10){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P10"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P10"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
							record.put("NOTAG_CALC1_P10", resultData);

						}else if(cell ==11){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P11"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P11"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
							record.put("NOTAG_CALC1_P11", resultData);
							
						}else if(cell ==12){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P12"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P12"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
							record.put("NOTAG_CALC1_P12", resultData);

						}else if(cell ==13){
							double OutLookQ1 = 0;
							double TargetQ1 = 0;
							double resultData = 0;
							
							for(int j=1; j<=3; j++){
								String OutLookKey = "NOTAG_OUT_P0"+j;
								String OutLookValue = String.valueOf(list.get(i).get(OutLookKey));
								double OutLook = Double.parseDouble(OutLookValue);
								OutLookQ1 += OutLook;
								
								String TargetKey = "NOTAG_TG_P0"+j;
								String TargetValue = String.valueOf(list.get(i).get(TargetKey));
								double Target = Double.parseDouble(TargetValue);
								TargetQ1 +=Target;
							}
							try{if(OutLookQ1 == 0 || TargetQ1 == 0){resultData = 0.0;}else{resultData = OutLookQ1 / TargetQ1;}}catch(ArithmeticException ae){resultData = 0.0;}
							record.put("NOTAG_CALC1_Q01", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_Q01_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_Q01_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_Q01_SN", "GREEN");
							}
							
						}else if(cell ==14){
							double OutLookQ2 = 0;
							double TargetQ2 = 0;
							double resultData = 0;
							
							for(int j=4; j<=6; j++){
								String OutLookKey = "NOTAG_OUT_P0"+j;
								String OutLookValue = String.valueOf(list.get(i).get(OutLookKey));
								double OutLook = Double.parseDouble(OutLookValue);
								OutLookQ2 += OutLook;
								
								String TargetKey = "NOTAG_TG_P0"+j;
								String TargetValue = String.valueOf(list.get(i).get(TargetKey));
								double Target = Double.parseDouble(TargetValue);
								TargetQ2 +=Target;
							}
							try{if(OutLookQ2 == 0 || TargetQ2 == 0){resultData = 0.0;}else{resultData = OutLookQ2 / TargetQ2;}}catch(ArithmeticException ae){resultData = 0.0;}
							record.put("NOTAG_CALC1_Q02", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_Q02_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_Q02_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_Q02_SN", "GREEN");
							}
							
						}else if(cell ==15){
							double OutLookQ3 = 0;
							double TargetQ3 = 0;
							double resultData = 0;
							
							for(int j=7; j<=9; j++){
								String OutLookKey = "NOTAG_OUT_P0"+j;
								String OutLookValue = String.valueOf(list.get(i).get(OutLookKey));
								double OutLook = Double.parseDouble(OutLookValue);
								OutLookQ3 += OutLook;
								
								String TargetKey = "NOTAG_TG_P0"+j;
								String TargetValue = String.valueOf(list.get(i).get(TargetKey));
								double Target = Double.parseDouble(TargetValue);
								TargetQ3 +=Target;
							}
							try{if(OutLookQ3 == 0 || TargetQ3 == 0){resultData = 0.0;}else{resultData = OutLookQ3 / TargetQ3;}}catch(ArithmeticException ae){resultData = 0.0;}
							record.put("NOTAG_CALC1_Q03", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_Q03_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_Q03_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_Q03_SN", "GREEN");
							}
							
						}else if(cell ==16){
							double OutLookQ4 = 0;
							double TargetQ4 = 0;
							double resultData = 0;
							
							for(int j=10; j<=12; j++){
								String OutLookKey = "NOTAG_OUT_P"+j;
								String OutLookValue = String.valueOf(list.get(i).get(OutLookKey));
								double OutLook = Double.parseDouble(OutLookValue);
								OutLookQ4 += OutLook;
								
								String TargetKey = "NOTAG_TG_P"+j;
								String TargetValue = String.valueOf(list.get(i).get(TargetKey));
								double Target = Double.parseDouble(TargetValue);
								TargetQ4 +=Target;
							}
							try{if(OutLookQ4 == 0 || TargetQ4 == 0){resultData = 0.0;}else{resultData = OutLookQ4 / TargetQ4;}}catch(ArithmeticException ae){resultData = 0.0;}
							record.put("NOTAG_CALC1_Q04", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_Q04_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_Q04_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_Q04_SN", "GREEN");
							}
							
						}else if(cell ==17){
							double OutLookH1 = 0;
							double TargetH1 = 0;
							double resultData = 0;
							
							for(int j=1; j<=6; j++){
								String OutLookKey = "NOTAG_OUT_P0"+j;
								String OutLookValue = String.valueOf(list.get(i).get(OutLookKey));
								double OutLook = Double.parseDouble(OutLookValue);
								OutLookH1 += OutLook;
								
								String TargetKey = "NOTAG_TG_P0"+j;
								String TargetValue = String.valueOf(list.get(i).get(TargetKey));
								double Target = Double.parseDouble(TargetValue);
								TargetH1 +=Target;
							}
							try{if(OutLookH1 == 0 || TargetH1 == 0){resultData = 0.0;}else{resultData = OutLookH1 / TargetH1;}}catch(ArithmeticException ae){resultData = 0.0;}
							record.put("NOTAG_CALC1_H01", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_H01_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_H01_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_H01_SN", "GREEN");
							}
							
						}else if(cell ==18){
							double OutLookH2 = 0;
							double TargetH2 = 0;
							double resultData = 0;
							
							for(int j=6; j<=12; j++){
								if(j <= 9){
									String OutLookKey = "NOTAG_OUT_P0"+j;
									String OutLookValue = String.valueOf(list.get(i).get(OutLookKey));
									double OutLook = Double.parseDouble(OutLookValue);
									OutLookH2 += OutLook;
									
									String TargetKey = "NOTAG_TG_P0"+j;
									String TargetValue = String.valueOf(list.get(i).get(TargetKey));
									double Target = Double.parseDouble(TargetValue);
									TargetH2 +=Target;
								}else{
									String OutLookKey = "NOTAG_OUT_P"+j;
									String OutLookValue = String.valueOf(list.get(i).get(OutLookKey));
									double OutLook = Double.parseDouble(OutLookValue);
									OutLookH2 += OutLook;
									
									String TargetKey = "NOTAG_TG_P"+j;
									String TargetValue = String.valueOf(list.get(i).get(TargetKey));
									double Target = Double.parseDouble(TargetValue);
									TargetH2 +=Target;
								}
							}
							try{if(OutLookH2 == 0 || TargetH2 == 0){resultData = 0.0;}else{resultData = OutLookH2 / TargetH2;}}catch(ArithmeticException ae){resultData = 0.0;}
							record.put("NOTAG_CALC1_H02", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_H02_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_H02_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_H02_SN", "GREEN");
							}
							
						}else if(cell ==19){
							String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_YTD"));
							double OutLook = Double.parseDouble(OutLookValue);
						
							String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_YTD"));
							double Target = Double.parseDouble(TargetValue);
							
							double resultData = 0;
							try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
							record.put("NOTAG_CALC1_YTD", resultData);
							
							// 신호등
							if(resultData > 0.03){
								record.put("NOTAG_CALC1_YTD_SN", "RED");
							}else if(resultData > 0 && resultData <= 0.03){
								record.put("NOTAG_CALC1_YTD_SN", "YELLOW");
							}else if(resultData <= 0){
								record.put("NOTAG_CALC1_YTD_SN", "GREEN");
							}
							
						}
						
					}
				}
				record.put("DATALV2", DataLv2);
				record.put("DATALV2_NM", DataLv2_NM);
			}else{
				for(int cell = 1; cell <= 19; cell++){
					if(cell ==1){
						String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P01"));
						double OutLook = Double.parseDouble(OutLookValue);
					
						String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P01"));
						double Target = Double.parseDouble(TargetValue);
						
						double resultData = 0;
						try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
						
						record.put("NOTAG_CALC1_P01", resultData);

					}else if(cell ==2){
						String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P02"));
						double OutLook = Double.parseDouble(OutLookValue);
					
						String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P02"));
						double Target = Double.parseDouble(TargetValue);
						
						double resultData = 0;
						try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
						record.put("NOTAG_CALC1_P02", resultData);

					}else if(cell ==3){
						String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P03"));
						double OutLook = Double.parseDouble(OutLookValue);
					
						String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P03"));
						double Target = Double.parseDouble(TargetValue);
						
						double resultData = 0;
						try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
						record.put("NOTAG_CALC1_P03", resultData);

					}else if(cell ==4){
						String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P04"));
						double OutLook = Double.parseDouble(OutLookValue);
					
						String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P04"));
						double Target = Double.parseDouble(TargetValue);
						
						double resultData = 0;
						try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
						record.put("NOTAG_CALC1_P04", resultData);
						
					}else if(cell ==5){
						String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P05"));
						double OutLook = Double.parseDouble(OutLookValue);
					
						String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P05"));
						double Target = Double.parseDouble(TargetValue);
						
						double resultData = 0;
						try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
						record.put("NOTAG_CALC1_P05", resultData);
						
					}else if(cell ==6){
						String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P06"));
						double OutLook = Double.parseDouble(OutLookValue);
					
						String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P06"));
						double Target = Double.parseDouble(TargetValue);
						
						double resultData = 0;
						try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
						record.put("NOTAG_CALC1_P06", resultData);
						
					}else if(cell ==7){
						String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P07"));
						double OutLook = Double.parseDouble(OutLookValue);
					
						String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P07"));
						double Target = Double.parseDouble(TargetValue);
						
						double resultData = 0;
						try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
						record.put("NOTAG_CALC1_P07", resultData);

					}else if(cell ==8){
						String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P08"));
						double OutLook = Double.parseDouble(OutLookValue);
					
						String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P08"));
						double Target = Double.parseDouble(TargetValue);
						
						double resultData = 0;
						try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
						record.put("NOTAG_CALC1_P08", resultData);

					}else if(cell ==9){
						String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P09"));
						double OutLook = Double.parseDouble(OutLookValue);
					
						String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P09"));
						double Target = Double.parseDouble(TargetValue);
						
						double resultData = 0;
						try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
						record.put("NOTAG_CALC1_P09", resultData);

					}else if(cell ==10){
						String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P10"));
						double OutLook = Double.parseDouble(OutLookValue);
					
						String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P10"));
						double Target = Double.parseDouble(TargetValue);
						
						double resultData = 0;
						try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
						record.put("NOTAG_CALC1_P10", resultData);
						
					}else if(cell ==11){
						String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P11"));
						double OutLook = Double.parseDouble(OutLookValue);
					
						String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P11"));
						double Target = Double.parseDouble(TargetValue);
						
						double resultData = 0;
						try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
						record.put("NOTAG_CALC1_P11", resultData);

					}else if(cell ==12){
						String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P12"));
						double OutLook = Double.parseDouble(OutLookValue);
					
						String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_P12"));
						double Target = Double.parseDouble(TargetValue);
						
						double resultData = 0;
						try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
						record.put("NOTAG_CALC1_P12", resultData);

					}else if(cell ==13){
						
						String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_Q01"));
						double OutLookQ1 = Double.parseDouble(OutLookValue);
					
						String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_Q01"));
						double TargetQ1 = Double.parseDouble(TargetValue);
						
						double resultData = 0;
						try{if(OutLookQ1 == 0 || TargetQ1 == 0){resultData = 0.0;}else{resultData = OutLookQ1 / TargetQ1;}}catch(ArithmeticException ae){resultData = 0.0;}	
						record.put("NOTAG_CALC1_Q01", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_Q01_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_Q01_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_Q01_SN", "GREEN");
						}
						
					}else if(cell ==14){
						String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_Q02"));
						double OutLookQ2 = Double.parseDouble(OutLookValue);
					
						String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_Q02"));
						double TargetQ2 = Double.parseDouble(TargetValue);
						
						double resultData = 0;
						try{if(OutLookQ2 == 0 || TargetQ2 == 0){resultData = 0.0;}else{resultData = OutLookQ2 / TargetQ2;}}catch(ArithmeticException ae){resultData = 0.0;}
						
						record.put("NOTAG_CALC1_Q02", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_Q02_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_Q02_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_Q02_SN", "GREEN");
						}
						
					}else if(cell ==15){
						
						String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_Q03"));
						double OutLookQ3 = Double.parseDouble(OutLookValue);
					
						String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_Q03"));
						double TargetQ3 = Double.parseDouble(TargetValue);
						
						double resultData = 0;
						try{if(OutLookQ3 == 0 || TargetQ3 == 0){resultData = 0.0;}else{resultData = OutLookQ3 / TargetQ3;}}catch(ArithmeticException ae){resultData = 0.0;}
						
						record.put("NOTAG_CALC1_Q03", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_Q03_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_Q03_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_Q03_SN", "GREEN");
						}
						
					}else if(cell ==16){
						
						String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_Q04"));
						double OutLookQ4 = Double.parseDouble(OutLookValue);
					
						String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_Q04"));
						double TargetQ4 = Double.parseDouble(TargetValue);
						
						double resultData = 0;
						
						try{if(OutLookQ4 == 0 || TargetQ4 == 0){resultData = 0.0;}else{resultData = OutLookQ4 / TargetQ4;}}catch(ArithmeticException ae){resultData = 0.0;}
						record.put("NOTAG_CALC1_Q04", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_Q04_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_Q04_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_Q04_SN", "GREEN");
						}
						
					}else if(cell ==17){
						String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_H01"));
						double OutLookH1 = Double.parseDouble(OutLookValue);
					
						String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_H01"));
						double TargetH1 = Double.parseDouble(TargetValue);
						
						double resultData = 0;
						try{if(OutLookH1 == 0 || TargetH1 == 0){resultData = 0.0;}else{resultData = OutLookH1 / TargetH1;}}catch(ArithmeticException ae){resultData = 0.0;}
						
						record.put("NOTAG_CALC1_H01", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_H01_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_H01_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_H01_SN", "GREEN");
						}
						
					}else if(cell ==18){
						
						String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_H02"));
						double OutLookH2 = Double.parseDouble(OutLookValue);
					
						String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_H02"));
						double TargetH2 = Double.parseDouble(TargetValue);
						
						double resultData = 0;
						try{if(OutLookH2 == 0 || TargetH2 == 0){resultData = 0.0;}else{resultData = OutLookH2 / TargetH2;}}catch(ArithmeticException ae){resultData = 0.0;}
						
						record.put("NOTAG_CALC1_H02", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_H02_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_H02_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_H02_SN", "GREEN");
						}
						
					}else if(cell ==19){
						String OutLookValue = String.valueOf(list.get(i).get("NOTAG_OUT_YTD"));
						double OutLook = Double.parseDouble(OutLookValue);
					
						String TargetValue = String.valueOf(list.get(i).get("NOTAG_TG_YTD"));
						double Target = Double.parseDouble(TargetValue);
						
						double resultData = 0;
						try{if(OutLook == 0 || Target == 0){resultData = 0.0;}else{resultData = OutLook / Target;}}catch(ArithmeticException ae){resultData = 0.0;}
						record.put("NOTAG_CALC1_YTD", resultData);
						
						// 신호등
						if(resultData > 0.03){
							record.put("NOTAG_CALC1_YTD_SN", "RED");
						}else if(resultData > 0 && resultData <= 0.03){
							record.put("NOTAG_CALC1_YTD_SN", "YELLOW");
						}else if(resultData <= 0){
							record.put("NOTAG_CALC1_YTD_SN", "GREEN");
						}
						
					}
					
				}
			}
			
			resultList.add(record);
		}
		
		return resultList;
	}
	
	
	/*
	 * Description: NOTE G Forecast [ Calc = Outlook / Target ]  63~81번째 컬럼의 입력값을 셀에 입력
	 */
	public void setRowValue11(HSSFRow row, CellStyle style, Map rowData) {
		
		if(periodChk_Param.equals("Y")){
			
			for(int i=43; i<62; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(43).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P01").toString()));
	    	row.getCell(44).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P02").toString()));
	    	row.getCell(45).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P03").toString()));
	    	row.getCell(46).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P04").toString()));
	    	row.getCell(47).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P05").toString()));
	    	row.getCell(48).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P06").toString()));
	    	row.getCell(49).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P07").toString()));
	    	row.getCell(50).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P08").toString()));
	    	row.getCell(51).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P09").toString()));
	    	row.getCell(52).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P10").toString()));
	    	row.getCell(53).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P11").toString()));
	    	row.getCell(54).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P12").toString()));
	    	row.getCell(55).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q01").toString()));
	    	row.getCell(56).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q02").toString()));
	    	row.getCell(57).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q03").toString()));
	    	row.getCell(58).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q04").toString()));
	    	row.getCell(59).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H01").toString()));
	    	row.getCell(60).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H02").toString()));
	    	row.getCell(61).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_YTD").toString()));
    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=17; i<23; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(17).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P01").toString()));
	    	row.getCell(18).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P02").toString()));
	    	row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P03").toString()));
	    	row.getCell(20).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q01").toString()));
	    	row.getCell(21).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H01").toString()));
	    	row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P01").toString()));
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=19; i<26; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(19).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P01").toString()));
	    	row.getCell(20).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P02").toString()));
	    	row.getCell(21).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P03").toString()));
	    	row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q01").toString()));
	    	row.getCell(23).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q02").toString()));
	    	row.getCell(24).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H01").toString()));
	    	row.getCell(25).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P01").toString()));
	    	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=21; i<29; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(21).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P07").toString()));
	    	row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P08").toString()));
	    	row.getCell(23).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P09").toString()));
	    	row.getCell(24).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q02").toString()));
	    	row.getCell(25).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q03").toString()));
	    	row.getCell(26).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H01").toString()));
	    	row.getCell(27).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H02").toString()));
	    	row.getCell(28).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P01").toString()));
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=21; i<29; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(21).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P07").toString()));
	    	row.getCell(22).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P08").toString()));
	    	row.getCell(23).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P09").toString()));
	    	row.getCell(24).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q03").toString()));
	    	row.getCell(25).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q04").toString()));
	    	row.getCell(26).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H01").toString()));
	    	row.getCell(27).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H02").toString()));
	    	row.getCell(28).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P01").toString()));
	    	
		}
		
	}
	
	
	// Forecast Accuracy% vs. Actual
	// (Outlook - foreCast) / foreCast
	public ArrayList<Map> Dep_NOTGT_Calc2(ArrayList<Map> list){
		
		ArrayList<Map> resultList = new ArrayList<Map>();
		String DataLv2_NM = null;
		String DataLv2 = null;
		for(int i=0; i<list.size(); i++){
			
			Map record = new LinkedHashMap();
			
			record.put("STYLE", list.get(i).get("STYLETXT").toString());
			record.put("TOTAL", list.get(i).get("TOTAL").toString());
			
			if(list.get(i).get("STYLETXT").toString().equals("style4")){
				if(list.get(i).get("DATALV2_NM") == "" || list.get(i).get("DATALV2_NM") == null){ 		// Rate
					DataLv2 = "RATE";
					DataLv2_NM =list.get(i-1).get("DATALV2_NM").toString();
					
					for(int cell = 1; cell <= 19; cell++){
						if(cell ==1){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P01"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P01"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P01", resultData);
							
						}else if(cell ==2){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P02"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P02"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P02", resultData);
							
						}else if(cell ==3){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P03"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P03"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P03", resultData);
							
						}else if(cell ==4){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P04"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P04"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P04", resultData);
							
						}else if(cell ==5){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P05"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P05"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P05", resultData);
							
						}else if(cell ==6){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P06"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P06"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P06", resultData);
							
						}else if(cell ==7){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P07"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P07"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P07", resultData);
							
						}else if(cell ==8){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P08"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P08"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P08", resultData);
							
						}else if(cell ==9){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P09"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P09"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P09", resultData);
							
						}else if(cell ==10){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P10"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P10"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P10", resultData);
							
						}else if(cell ==11){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P11"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P11"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P11", resultData);
							
						}else if(cell ==12){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P12"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P12"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P12", resultData);
							
						}else if(cell ==13){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_Q01"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_Q01"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_Q01", resultData);
							
							if(resultData < 0){
								resultData = resultData * -1;
							}
							
							// 신호등
							if(resultData <= 0.05){
								record.put("NOTAG_CALC1_Q01_SN", "GREEN");
							}else if(resultData > 0.05 && resultData <= 0.1){
								record.put("NOTAG_CALC1_Q01_SN", "YELLOW");
							}else{
								record.put("NOTAG_CALC1_Q01_SN", "RED");
							}
							
						}else if(cell ==14){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_Q02"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_Q02"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_Q02", resultData);
							
							if(resultData < 0){
								resultData = resultData * -1;
							}
							
							// 신호등
							if(resultData <= 0.05){
								record.put("NOTAG_CALC1_Q02_SN", "GREEN");
							}else if(resultData > 0.05 && resultData <= 0.1){
								record.put("NOTAG_CALC1_Q02_SN", "YELLOW");
							}else{
								record.put("NOTAG_CALC1_Q02_SN", "RED");
							}
							
						}else if(cell ==15){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_Q03"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_Q03"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_Q03", resultData);
							
							if(resultData < 0){
								resultData = resultData * -1;
							}
							
							// 신호등
							if(resultData <= 0.05){
								record.put("NOTAG_CALC1_Q03_SN", "GREEN");
							}else if(resultData > 0.05 && resultData <= 0.1){
								record.put("NOTAG_CALC1_Q03_SN", "YELLOW");
							}else{
								record.put("NOTAG_CALC1_Q03_SN", "RED");
							}
							
						}else if(cell ==16){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_Q04"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_Q04"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_Q04", resultData);
							
							if(resultData < 0){
								resultData = resultData * -1;
							}
							
							// 신호등
							if(resultData <= 0.05){
								record.put("NOTAG_CALC1_Q04_SN", "GREEN");
							}else if(resultData > 0.05 && resultData <= 0.1){
								record.put("NOTAG_CALC1_Q04_SN", "YELLOW");
							}else{
								record.put("NOTAG_CALC1_Q04_SN", "RED");
							}
							
						}else if(cell ==17){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_H01"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_H01"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_H01", resultData);
							
							if(resultData < 0){
								resultData = resultData * -1;
							}
							
							// 신호등
							if(resultData <= 0.05){
								record.put("NOTAG_CALC1_H01_SN", "GREEN");
							}else if(resultData > 0.05 && resultData <= 0.1){
								record.put("NOTAG_CALC1_H01_SN", "YELLOW");
							}else{
								record.put("NOTAG_CALC1_H01_SN", "RED");
							}
							
						}else if(cell ==18){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_H02"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_H02"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_H02", resultData);
							
							if(resultData < 0){
								resultData = resultData * -1;
							}
							
							// 신호등
							if(resultData <= 0.05){
								record.put("NOTAG_CALC1_H02_SN", "GREEN");
							}else if(resultData > 0.05 && resultData <= 0.1){
								record.put("NOTAG_CALC1_H02_SN", "YELLOW");
							}else{
								record.put("NOTAG_CALC1_H02_SN", "RED");
							}
							
						}else if(cell ==19){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_YTD"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_YTD"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_YTD", resultData);
							
							if(resultData < 0){
								resultData = resultData * -1;
							}
							
							// 신호등
							if(resultData <= 0.05){
								record.put("NOTAG_CALC1_YTD_SN", "GREEN");
							}else if(resultData > 0.05 && resultData <= 0.1){
								record.put("NOTAG_CALC1_YTD_SN", "YELLOW");
							}else{
								record.put("NOTAG_CALC1_YTD_SN", "RED");
							}
							
						}
						
					}
					
				}else{																										// KRW
					
					DataLv2 = "KRW";
					DataLv2_NM = list.get(i).get("DATALV2_NM").toString();
					
					for(int cell = 1; cell <= 19; cell++){
						if(cell ==1){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P01"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P01"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P01", resultData);
							
						}else if(cell ==2){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P02"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P02"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P02", resultData);
							
						}else if(cell ==3){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P03"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P03"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P03", resultData);
							
						}else if(cell ==4){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P04"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P04"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P04", resultData);
							
						}else if(cell ==5){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P05"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P05"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P05", resultData);
							
						}else if(cell ==6){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P06"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P06"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P06", resultData);
							
						}else if(cell ==7){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P07"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P07"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P07", resultData);
							
						}else if(cell ==8){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P08"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P08"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P08", resultData);
							
						}else if(cell ==9){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P09"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P09"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P09", resultData);
							
						}else if(cell ==10){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P10"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P10"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P10", resultData);
							
						}else if(cell ==11){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P11"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P11"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P11", resultData);
							
						}else if(cell ==12){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P12"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P12"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_P12", resultData);
							
						}else if(cell ==13){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_Q01"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_Q01"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_Q01", resultData);
							
							if(resultData < 0){
								resultData = resultData * -1;
							}
							
							// 신호등
							if(resultData <= 0.05){
								record.put("NOTAG_CALC1_Q01_SN", "GREEN");
							}else if(resultData > 0.05 && resultData <= 0.1){
								record.put("NOTAG_CALC1_Q01_SN", "YELLOW");
							}else{
								record.put("NOTAG_CALC1_Q01_SN", "RED");
							}
							
						}else if(cell ==14){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_Q02"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_Q02"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_Q02", resultData);
							
							if(resultData < 0){
								resultData = resultData * -1;
							}
							
							// 신호등
							if(resultData <= 0.05){
								record.put("NOTAG_CALC1_Q02_SN", "GREEN");
							}else if(resultData > 0.05 && resultData <= 0.1){
								record.put("NOTAG_CALC1_Q02_SN", "YELLOW");
							}else{
								record.put("NOTAG_CALC1_Q02_SN", "RED");
							}
							
						}else if(cell ==15){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_Q03"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_Q03"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_Q03", resultData);
							
							if(resultData < 0){
								resultData = resultData * -1;
							}
							
							// 신호등
							if(resultData <= 0.05){
								record.put("NOTAG_CALC1_Q03_SN", "GREEN");
							}else if(resultData > 0.05 && resultData <= 0.1){
								record.put("NOTAG_CALC1_Q03_SN", "YELLOW");
							}else{
								record.put("NOTAG_CALC1_Q03_SN", "RED");
							}
							
						}else if(cell ==16){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_Q04"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_Q04"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_Q04", resultData);
							
							if(resultData < 0){
								resultData = resultData * -1;
							}
							
							// 신호등
							if(resultData <= 0.05){
								record.put("NOTAG_CALC1_Q04_SN", "GREEN");
							}else if(resultData > 0.05 && resultData <= 0.1){
								record.put("NOTAG_CALC1_Q04_SN", "YELLOW");
							}else{
								record.put("NOTAG_CALC1_Q04_SN", "RED");
							}
							
						}else if(cell ==17){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_H01"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_H01"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_H01", resultData);
							
							if(resultData < 0){
								resultData = resultData * -1;
							}
							
							// 신호등
							if(resultData <= 0.05){
								record.put("NOTAG_CALC1_H01_SN", "GREEN");
							}else if(resultData > 0.05 && resultData <= 0.1){
								record.put("NOTAG_CALC1_H01_SN", "YELLOW");
							}else{
								record.put("NOTAG_CALC1_H01_SN", "RED");
							}
							
						}else if(cell ==18){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_H02"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_H02"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_H02", resultData);
							
							if(resultData < 0){
								resultData = resultData * -1;
							}
							
							// 신호등
							if(resultData <= 0.05){
								record.put("NOTAG_CALC1_H02_SN", "GREEN");
							}else if(resultData > 0.05 && resultData <= 0.1){
								record.put("NOTAG_CALC1_H02_SN", "YELLOW");
							}else{
								record.put("NOTAG_CALC1_H02_SN", "RED");
							}
							
						}else if(cell ==19){
							String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_YTD"));
							double Outlook = Double.parseDouble(OutlookValue);
						
							String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_YTD"));
							double foreCast = Double.parseDouble(foreCastValue);
							
							double resultData = 0;
							if((Outlook - foreCast) != 0 && foreCast != 0){
								try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
							}
							record.put("NOTAG_CALC1_YTD", resultData);
							
							if(resultData < 0){
								resultData = resultData * -1;
							}
							
							// 신호등
							if(resultData <= 0.05){
								record.put("NOTAG_CALC1_YTD_SN", "GREEN");
							}else if(resultData > 0.05 && resultData <= 0.1){
								record.put("NOTAG_CALC1_YTD_SN", "YELLOW");
							}else{
								record.put("NOTAG_CALC1_YTD_SN", "RED");
							}
							
						}
						
					}
				}
				record.put("DATALV2", DataLv2);
				record.put("DATALV2_NM", DataLv2_NM);
			}else{
				for(int cell = 1; cell <= 19; cell++){
					if(cell ==1){
						String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P01"));
						double Outlook = Double.parseDouble(OutlookValue);
					
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P01"));
						double foreCast = Double.parseDouble(foreCastValue);
						
						double resultData = 0;
						if((Outlook - foreCast) != 0 && foreCast != 0){
							try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						record.put("NOTAG_CALC1_P01", resultData);
						
					}else if(cell ==2){
						String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P02"));
						double Outlook = Double.parseDouble(OutlookValue);
					
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P02"));
						double foreCast = Double.parseDouble(foreCastValue);
						
						double resultData = 0;
						if((Outlook - foreCast) != 0 && foreCast != 0){
							try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						record.put("NOTAG_CALC1_P02", resultData);
						
					}else if(cell ==3){
						String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P03"));
						double Outlook = Double.parseDouble(OutlookValue);
					
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P03"));
						double foreCast = Double.parseDouble(foreCastValue);
						
						double resultData = 0;
						if((Outlook - foreCast) != 0 && foreCast != 0){
							try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						record.put("NOTAG_CALC1_P03", resultData);
						
					}else if(cell ==4){
						String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P04"));
						double Outlook = Double.parseDouble(OutlookValue);
					
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P04"));
						double foreCast = Double.parseDouble(foreCastValue);
						
						double resultData = 0;
						if((Outlook - foreCast) != 0 && foreCast != 0){
							try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						record.put("NOTAG_CALC1_P04", resultData);
						
					}else if(cell ==5){
						String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P05"));
						double Outlook = Double.parseDouble(OutlookValue);
					
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P05"));
						double foreCast = Double.parseDouble(foreCastValue);
						
						double resultData = 0;
						if((Outlook - foreCast) != 0 && foreCast != 0){
							try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						record.put("NOTAG_CALC1_P05", resultData);
						
					}else if(cell ==6){
						String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P06"));
						double Outlook = Double.parseDouble(OutlookValue);
					
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P06"));
						double foreCast = Double.parseDouble(foreCastValue);
						
						double resultData = 0;
						if((Outlook - foreCast) != 0 && foreCast != 0){
							try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						record.put("NOTAG_CALC1_P06", resultData);
						
					}else if(cell ==7){
						String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P07"));
						double Outlook = Double.parseDouble(OutlookValue);
					
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P07"));
						double foreCast = Double.parseDouble(foreCastValue);
						
						double resultData = 0;
						if((Outlook - foreCast) != 0 && foreCast != 0){
							try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						record.put("NOTAG_CALC1_P07", resultData);
						
					}else if(cell ==8){
						String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P08"));
						double Outlook = Double.parseDouble(OutlookValue);
					
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P08"));
						double foreCast = Double.parseDouble(foreCastValue);
						
						double resultData = 0;
						if((Outlook - foreCast) != 0 && foreCast != 0){
							try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						record.put("NOTAG_CALC1_P08", resultData);
						
					}else if(cell ==9){
						String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P09"));
						double Outlook = Double.parseDouble(OutlookValue);
					
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P09"));
						double foreCast = Double.parseDouble(foreCastValue);
						
						double resultData = 0;
						if((Outlook - foreCast) != 0 && foreCast != 0){
							try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						record.put("NOTAG_CALC1_P09", resultData);
						
					}else if(cell ==10){
						String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P10"));
						double Outlook = Double.parseDouble(OutlookValue);
					
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P10"));
						double foreCast = Double.parseDouble(foreCastValue);
						
						double resultData = 0;
						if((Outlook - foreCast) != 0 && foreCast != 0){
							try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						record.put("NOTAG_CALC1_P10", resultData);
						
					}else if(cell ==11){
						String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P11"));
						double Outlook = Double.parseDouble(OutlookValue);
					
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P11"));
						double foreCast = Double.parseDouble(foreCastValue);
						
						double resultData = 0;
						if((Outlook - foreCast) != 0 && foreCast != 0){
							try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						record.put("NOTAG_CALC1_P11", resultData);
						
					}else if(cell ==12){
						String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_P12"));
						double Outlook = Double.parseDouble(OutlookValue);
					
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_P12"));
						double foreCast = Double.parseDouble(foreCastValue);
						
						double resultData = 0;
						if((Outlook - foreCast) != 0 && foreCast != 0){
							try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						record.put("NOTAG_CALC1_P12", resultData);
						
					}else if(cell ==13){
						String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_Q01"));
						double Outlook = Double.parseDouble(OutlookValue);
					
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_Q01"));
						double foreCast = Double.parseDouble(foreCastValue);
						
						double resultData = 0;
						if((Outlook - foreCast) != 0 && foreCast != 0){
							try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						record.put("NOTAG_CALC1_Q01", resultData);
						
						if(resultData < 0){
							resultData = resultData * -1;
						}
						
						// 신호등
						if(resultData <= 0.05){
							record.put("NOTAG_CALC1_Q01_SN", "GREEN");
						}else if(resultData > 0.05 && resultData <= 0.1){
							record.put("NOTAG_CALC1_Q01_SN", "YELLOW");
						}else{
							record.put("NOTAG_CALC1_Q01_SN", "RED");
						}
						
					}else if(cell ==14){
						String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_Q02"));
						double Outlook = Double.parseDouble(OutlookValue);
					
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_Q02"));
						double foreCast = Double.parseDouble(foreCastValue);
						
						double resultData = 0;
						if((Outlook - foreCast) != 0 && foreCast != 0){
							try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						record.put("NOTAG_CALC1_Q02", resultData);
						
						if(resultData < 0){
							resultData = resultData * -1;
						}
						
						// 신호등
						if(resultData <= 0.05){
							record.put("NOTAG_CALC1_Q02_SN", "GREEN");
						}else if(resultData > 0.05 && resultData <= 0.1){
							record.put("NOTAG_CALC1_Q02_SN", "YELLOW");
						}else{
							record.put("NOTAG_CALC1_Q02_SN", "RED");
						}
						
					}else if(cell ==15){
						String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_Q03"));
						double Outlook = Double.parseDouble(OutlookValue);
					
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_Q03"));
						double foreCast = Double.parseDouble(foreCastValue);
						
						double resultData = 0;
						if((Outlook - foreCast) != 0 && foreCast != 0){
							try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						record.put("NOTAG_CALC1_Q03", resultData);
						
						if(resultData < 0){
							resultData = resultData * -1;
						}
						
						// 신호등
						if(resultData <= 0.05){
							record.put("NOTAG_CALC1_Q03_SN", "GREEN");
						}else if(resultData > 0.05 && resultData <= 0.1){
							record.put("NOTAG_CALC1_Q03_SN", "YELLOW");
						}else{
							record.put("NOTAG_CALC1_Q03_SN", "RED");
						}
						
					}else if(cell ==16){
						String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_Q04"));
						double Outlook = Double.parseDouble(OutlookValue);
					
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_Q04"));
						double foreCast = Double.parseDouble(foreCastValue);
						
						double resultData = 0;
						if((Outlook - foreCast) != 0 && foreCast != 0){
							try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						record.put("NOTAG_CALC1_Q04", resultData);
						
						if(resultData < 0){
							resultData = resultData * -1;
						}
						
						// 신호등
						if(resultData <= 0.05){
							record.put("NOTAG_CALC1_Q04_SN", "GREEN");
						}else if(resultData > 0.05 && resultData <= 0.1){
							record.put("NOTAG_CALC1_Q04_SN", "YELLOW");
						}else{
							record.put("NOTAG_CALC1_Q04_SN", "RED");
						}
						
					}else if(cell ==17){
						String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_H01"));
						double Outlook = Double.parseDouble(OutlookValue);
					
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_H01"));
						double foreCast = Double.parseDouble(foreCastValue);
						
						double resultData = 0;
						if((Outlook - foreCast) != 0 && foreCast != 0){
							try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						record.put("NOTAG_CALC1_H01", resultData);
						
						if(resultData < 0){
							resultData = resultData * -1;
						}
						
						// 신호등
						if(resultData <= 0.05){
							record.put("NOTAG_CALC1_H01_SN", "GREEN");
						}else if(resultData > 0.05 && resultData <= 0.1){
							record.put("NOTAG_CALC1_H01_SN", "YELLOW");
						}else{
							record.put("NOTAG_CALC1_H01_SN", "RED");
						}
						
					}else if(cell ==18){
						String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_H02"));
						double Outlook = Double.parseDouble(OutlookValue);
					
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_H02"));
						double foreCast = Double.parseDouble(foreCastValue);
						
						double resultData = 0;
						if((Outlook - foreCast) != 0 && foreCast != 0){
							try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						record.put("NOTAG_CALC1_H02", resultData);
						
						if(resultData < 0){
							resultData = resultData * -1;
						}
						
						// 신호등
						if(resultData <= 0.05){
							record.put("NOTAG_CALC1_H02_SN", "GREEN");
						}else if(resultData > 0.05 && resultData <= 0.1){
							record.put("NOTAG_CALC1_H02_SN", "YELLOW");
						}else{
							record.put("NOTAG_CALC1_H02_SN", "RED");
						}
						
					}else if(cell ==19){
						String OutlookValue = String.valueOf(list.get(i).get("NOTAG_OUT_YTD"));
						double Outlook = Double.parseDouble(OutlookValue);
					
						String foreCastValue = String.valueOf(list.get(i).get("NOTAG_FOR_YTD"));
						double foreCast = Double.parseDouble(foreCastValue);
						
						double resultData = 0;
						if((Outlook - foreCast) != 0 && foreCast != 0){
							try{ resultData = ((Outlook - foreCast) / foreCast); } catch(ArithmeticException  ae){ resultData = 0.0; }
						}
						record.put("NOTAG_CALC1_YTD", resultData);
						
						if(resultData < 0){
							resultData = resultData * -1;
						}
						
						// 신호등
						if(resultData <= 0.05){
							record.put("NOTAG_CALC1_YTD_SN", "GREEN");
						}else if(resultData > 0.05 && resultData <= 0.1){
							record.put("NOTAG_CALC1_YTD_SN", "YELLOW");
						}else{
							record.put("NOTAG_CALC1_YTD_SN", "RED");
						}
						
					}
					
				}
			}
			
			resultList.add(record);
		}
		
		return resultList;
	}
	
	
	/*
	 * Description: Note G Target (ON Channel) - Forecast Accuracy% vs. Actual 63~81번째 컬럼의 입력값을 셀에 입력
	 */
	public void setRowValue12(HSSFRow row, CellStyle style, Map rowData) throws Exception {
		
		if(periodChk_Param.equals("Y")){
			
			for(int i=70; i<89; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(70).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P01").toString()));
	    	row.getCell(71).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P02").toString()));
	    	row.getCell(72).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P03").toString()));
	    	row.getCell(73).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P04").toString()));
	    	row.getCell(74).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P05").toString()));
	    	row.getCell(75).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P06").toString()));
	    	row.getCell(76).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P07").toString()));
	    	row.getCell(77).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P08").toString()));
	    	row.getCell(78).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P09").toString()));
	    	row.getCell(79).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P10").toString()));
	    	row.getCell(80).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P11").toString()));
	    	row.getCell(81).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P12").toString()));
	    	row.getCell(82).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q01").toString()));
	    	row.getCell(83).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q02").toString()));
	    	row.getCell(84).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q03").toString()));
	    	row.getCell(85).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q04").toString()));
	    	row.getCell(86).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H01").toString()));
	    	row.getCell(87).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H02").toString()));
	    	row.getCell(88).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_YTD").toString()));
	    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=27; i<33; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(27).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P01").toString()));
	    	row.getCell(28).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P02").toString()));
	    	row.getCell(29).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P03").toString()));
	    	row.getCell(30).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q01").toString()));
	    	row.getCell(31).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H01").toString()));
	    	row.getCell(32).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_YTD").toString()));
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=31; i<38; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(31).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P04").toString()));
	    	row.getCell(32).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P05").toString()));
	    	row.getCell(33).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P06").toString()));
	    	row.getCell(34).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q01").toString()));
	    	row.getCell(35).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q02").toString()));
	    	row.getCell(36).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H01").toString()));
	    	row.getCell(37).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_YTD").toString()));
	    	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=35; i<43; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(35).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P07").toString()));
	    	row.getCell(36).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P08").toString()));
	    	row.getCell(37).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P09").toString()));
	    	row.getCell(38).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q02").toString()));
	    	row.getCell(39).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q03").toString()));
	    	row.getCell(40).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H01").toString()));
	    	row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H02").toString()));
	    	row.getCell(42).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_YTD").toString()));
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=35; i<43; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(35).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P10").toString()));
	    	row.getCell(36).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P11").toString()));
	    	row.getCell(37).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_P12").toString()));
	    	row.getCell(38).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q03").toString()));
	    	row.getCell(39).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_Q04").toString()));
	    	row.getCell(40).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H01").toString()));
	    	row.getCell(41).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_H02").toString()));
	    	row.getCell(42).setCellValue(Double.parseDouble(rowData.get("NOTAG_CALC1_YTD").toString()));
	    	
		}
		
	}
	
	public void setRowValue13(HSSFRow row, CellStyle style, Map rowData) throws Exception {
		
		if(periodChk_Param.equals("Y")){
			
			for(int i=82; i<89; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
				row.getCell(i).setCellValue(" ");
			}
			
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=30; i<33; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
				row.getCell(i).setCellValue(" ");
			}
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=34; i<38; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
				row.getCell(i).setCellValue(" ");
			}
	    	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=38; i<43; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
				row.getCell(i).setCellValue(" ");
			}
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=38; i<43; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
				row.getCell(i).setCellValue(" ");
			}
	    	
		}
		
	}
	
	public void setRowValue14(HSSFRow row, CellStyle style, Map rowData) throws Exception {
		
		if(periodChk_Param.equals("Y")){
			
			for(int i=62; i<69; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
				row.getCell(i).setCellValue(" ");
			}
			
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=23; i<26; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
				row.getCell(i).setCellValue(" ");
			}
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=26; i<30; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
				row.getCell(i).setCellValue(" ");
			}
	    	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=29; i<34; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
				row.getCell(i).setCellValue(" ");
			}
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=29; i<34; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
				row.getCell(i).setCellValue(" ");
			}
	    	
		}
		
	}
	
	public void setRowValue15(HSSFRow row, CellStyle style, Map rowData) throws Exception {
		
		if(periodChk_Param.equals("Y")){
			
			for(int i=89; i<96; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
				row.getCell(i).setCellValue(" ");
			}
			
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=33; i<36; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
				row.getCell(i).setCellValue(" ");
			}
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=38; i<42; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
				row.getCell(i).setCellValue(" ");
			}
	    	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=43; i<48; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
				row.getCell(i).setCellValue(" ");
			}
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=43; i<48; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
				row.getCell(i).setCellValue(" ");
			}
	    	
		}
		
	}
	
	public void signalStyle(HSSFRow row, CellStyle style, String grpTxt){
		
		if(periodChk_Param.equals("Y")){
			
			if(seq == 0){
				for(int j=82; j<89; j++){
					row.createCell(j).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				}
				
				seq++;
				
			}
			
			if(!(grpTxt.toString().indexOf("Q01_SN") == -1)){
				row.getCell(82).setCellValue("●");
				row.getCell(82).setCellStyle(style);
			}
			if(!(grpTxt.toString().indexOf("Q02_SN") == -1)){
				row.getCell(83).setCellValue("●");
				row.getCell(83).setCellStyle(style);
			}
			if(!(grpTxt.toString().indexOf("Q03_SN") == -1)){
				row.getCell(84).setCellValue("●");
				row.getCell(84).setCellStyle(style);
			}
			if(!(grpTxt.toString().indexOf("Q04_SN") == -1)){
				row.getCell(85).setCellValue("●");
				row.getCell(85).setCellStyle(style);
			}
			if(!(grpTxt.toString().indexOf("H01_SN") == -1)){
				row.getCell(86).setCellValue("●");
				row.getCell(86).setCellStyle(style);
			}
			if(!(grpTxt.toString().indexOf("H02_SN") == -1)){
				row.getCell(87).setCellValue("●");
				row.getCell(87).setCellStyle(style);
			}
			if(!(grpTxt.toString().indexOf("YTD_SN") == -1)){
				row.getCell(88).setCellValue("●");
				row.getCell(88).setCellStyle(style);
			}
		
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			if(seq == 0){
				for(int j=30; j<33; j++){
					row.createCell(j).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				}
				seq++;
			}
			
			if(!(grpTxt.toString().indexOf("Q01_SN") == -1)){
				row.getCell(30).setCellValue("●");
				row.getCell(30).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("H01_SN") == -1)){
				row.getCell(31).setCellValue("●");
				row.getCell(31).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("YTD_SN") == -1)){
				row.getCell(32).setCellValue("●");
				row.getCell(32).setCellStyle(style);
			}
			
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			if(seq == 0){
				for(int j=34; j<38; j++){
					row.createCell(j).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				}
				seq++;
			}
			
			if(!(grpTxt.toString().indexOf("Q01_SN") == -1)){
				row.getCell(34).setCellValue("●");
				row.getCell(34).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("Q02_SN") == -1)){
				row.getCell(35).setCellValue("●");
				row.getCell(35).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("H01_SN") == -1)){
				row.getCell(36).setCellValue("●");
				row.getCell(36).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("YTD_SN") == -1)){
				row.getCell(37).setCellValue("●");
				row.getCell(37).setCellStyle(style);
			}
			
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			if(seq == 0){
				for(int j=38; j<43; j++){
					row.createCell(j).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				}
				seq++;
			}
			
			if(!(grpTxt.toString().indexOf("Q02_SN") == -1)){
				row.getCell(38).setCellValue("●");
				row.getCell(38).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("Q03_SN") == -1)){
				row.getCell(39).setCellValue("●");
				row.getCell(39).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("H01_SN") == -1)){
				row.getCell(40).setCellValue("●");
				row.getCell(40).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("H02_SN") == -1)){
				row.getCell(41).setCellValue("●");
				row.getCell(41).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("YTD_SN") == -1)){
				row.getCell(42).setCellValue("●");
				row.getCell(42).setCellStyle(style);
			}
			
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			if(seq == 0){
				for(int j=38; j<43; j++){
					row.createCell(j).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				}
				seq++;
			}
			
			if(!(grpTxt.toString().indexOf("Q03_SN") == -1)){
				row.getCell(38).setCellValue("●");
				row.getCell(38).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("Q04_SN") == -1)){
				row.getCell(39).setCellValue("●");
				row.getCell(39).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("H01_SN") == -1)){
				row.getCell(40).setCellValue("●");
				row.getCell(40).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("H02_SN") == -1)){
				row.getCell(41).setCellValue("●");
				row.getCell(41).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("YTD_SN") == -1)){
				row.getCell(42).setCellValue("●");
				row.getCell(42).setCellStyle(style);
			}
			
		}
		
	}
	
	public void signalStyle2(HSSFRow row, CellStyle style, String grpTxt){
		
		if(periodChk_Param.equals("Y")){
			
			if(seq == 0){
				for(int j=62; j<69; j++){
					row.createCell(j).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				}
				
				seq++;
				
			}
			
			if(!(grpTxt.toString().indexOf("Q01_SN") == -1)){
				row.getCell(62).setCellValue("●");
				row.getCell(62).setCellStyle(style);
			}
			if(!(grpTxt.toString().indexOf("Q02_SN") == -1)){
				row.getCell(63).setCellValue("●");
				row.getCell(63).setCellStyle(style);
			}
			if(!(grpTxt.toString().indexOf("Q03_SN") == -1)){
				row.getCell(64).setCellValue("●");
				row.getCell(64).setCellStyle(style);
			}
			if(!(grpTxt.toString().indexOf("Q04_SN") == -1)){
				row.getCell(65).setCellValue("●");
				row.getCell(65).setCellStyle(style);
			}
			if(!(grpTxt.toString().indexOf("H01_SN") == -1)){
				row.getCell(66).setCellValue("●");
				row.getCell(66).setCellStyle(style);
			}
			if(!(grpTxt.toString().indexOf("H02_SN") == -1)){
				row.getCell(67).setCellValue("●");
				row.getCell(67).setCellStyle(style);
			}
			if(!(grpTxt.toString().indexOf("YTD_SN") == -1)){
				row.getCell(68).setCellValue("●");
				row.getCell(68).setCellStyle(style);
			}
		
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			if(seq == 0){
				for(int j=23; j<26; j++){
					row.createCell(j).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				}
				seq++;
			}
			
			if(!(grpTxt.toString().indexOf("Q01_SN") == -1)){
				row.getCell(23).setCellValue("●");
				row.getCell(23).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("H01_SN") == -1)){
				row.getCell(24).setCellValue("●");
				row.getCell(24).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("YTD_SN") == -1)){
				row.getCell(25).setCellValue("●");
				row.getCell(25).setCellStyle(style);
			}
			
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			if(seq == 0){
				for(int j=26; j<30; j++){
					row.createCell(j).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				}
				seq++;
			}
			
			if(!(grpTxt.toString().indexOf("Q01_SN") == -1)){
				row.getCell(26).setCellValue("●");
				row.getCell(26).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("Q02_SN") == -1)){
				row.getCell(27).setCellValue("●");
				row.getCell(27).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("H01_SN") == -1)){
				row.getCell(28).setCellValue("●");
				row.getCell(28).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("YTD_SN") == -1)){
				row.getCell(29).setCellValue("●");
				row.getCell(29).setCellStyle(style);
			}
			
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			if(seq == 0){
				for(int j=29; j<34; j++){
					row.createCell(j).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				}
				seq++;
			}
			
			if(!(grpTxt.toString().indexOf("Q02_SN") == -1)){
				row.getCell(29).setCellValue("●");
				row.getCell(29).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("Q03_SN") == -1)){
				row.getCell(30).setCellValue("●");
				row.getCell(30).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("H01_SN") == -1)){
				row.getCell(31).setCellValue("●");
				row.getCell(31).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("H02_SN") == -1)){
				row.getCell(32).setCellValue("●");
				row.getCell(32).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("YTD_SN") == -1)){
				row.getCell(33).setCellValue("●");
				row.getCell(33).setCellStyle(style);
			}
			
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			if(seq == 0){
				for(int j=29; j<34; j++){
					row.createCell(j).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				}
				seq++;
			}
			
			if(!(grpTxt.toString().indexOf("Q03_SN") == -1)){
				row.getCell(29).setCellValue("●");
				row.getCell(29).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("Q04_SN") == -1)){
				row.getCell(30).setCellValue("●");
				row.getCell(30).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("H01_SN") == -1)){
				row.getCell(31).setCellValue("●");
				row.getCell(31).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("H02_SN") == -1)){
				row.getCell(32).setCellValue("●");
				row.getCell(32).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("YTD_SN") == -1)){
				row.getCell(33).setCellValue("●");
				row.getCell(33).setCellStyle(style);
			}
			
		}
		
	}
	
	public void signalStyle3(HSSFRow row, CellStyle style, String grpTxt){
		
		if(periodChk_Param.equals("Y")){
			
			if(seq == 0){
				for(int j=89; j<96; j++){
					row.createCell(j).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				}
				
				seq++;
				
			}
			
			if(!(grpTxt.toString().indexOf("Q01_SN") == -1)){
				row.getCell(89).setCellValue("●");
				row.getCell(89).setCellStyle(style);
			}
			if(!(grpTxt.toString().indexOf("Q02_SN") == -1)){
				row.getCell(90).setCellValue("●");
				row.getCell(90).setCellStyle(style);
			}
			if(!(grpTxt.toString().indexOf("Q03_SN") == -1)){
				row.getCell(91).setCellValue("●");
				row.getCell(91).setCellStyle(style);
			}
			if(!(grpTxt.toString().indexOf("Q04_SN") == -1)){
				row.getCell(92).setCellValue("●");
				row.getCell(92).setCellStyle(style);
			}
			if(!(grpTxt.toString().indexOf("H01_SN") == -1)){
				row.getCell(93).setCellValue("●");
				row.getCell(93).setCellStyle(style);
			}
			if(!(grpTxt.toString().indexOf("H02_SN") == -1)){
				row.getCell(94).setCellValue("●");
				row.getCell(94).setCellStyle(style);
			}
			if(!(grpTxt.toString().indexOf("YTD_SN") == -1)){
				row.getCell(95).setCellValue("●");
				row.getCell(95).setCellStyle(style);
			}
		
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			if(seq == 0){
				for(int j=33; j<36; j++){
					row.createCell(j).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				}
				seq++;
			}
			
			if(!(grpTxt.toString().indexOf("Q01_SN") == -1)){
				row.getCell(33).setCellValue("●");
				row.getCell(33).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("H01_SN") == -1)){
				row.getCell(34).setCellValue("●");
				row.getCell(34).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("YTD_SN") == -1)){
				row.getCell(35).setCellValue("●");
				row.getCell(35).setCellStyle(style);
			}
			
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			if(seq == 0){
				for(int j=38; j<42; j++){
					row.createCell(j).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				}
				seq++;
			}
			
			if(!(grpTxt.toString().indexOf("Q01_SN") == -1)){
				row.getCell(38).setCellValue("●");
				row.getCell(38).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("Q02_SN") == -1)){
				row.getCell(39).setCellValue("●");
				row.getCell(39).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("H01_SN") == -1)){
				row.getCell(40).setCellValue("●");
				row.getCell(40).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("YTD_SN") == -1)){
				row.getCell(41).setCellValue("●");
				row.getCell(41).setCellStyle(style);
			}
			
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			if(seq == 0){
				for(int j=43; j<48; j++){
					row.createCell(j).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				}
				seq++;
			}
			
			if(!(grpTxt.toString().indexOf("Q02_SN") == -1)){
				row.getCell(43).setCellValue("●");
				row.getCell(43).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("Q03_SN") == -1)){
				row.getCell(44).setCellValue("●");
				row.getCell(44).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("H01_SN") == -1)){
				row.getCell(45).setCellValue("●");
				row.getCell(45).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("H02_SN") == -1)){
				row.getCell(46).setCellValue("●");
				row.getCell(46).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("YTD_SN") == -1)){
				row.getCell(47).setCellValue("●");
				row.getCell(47).setCellStyle(style);
			}
			
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			if(seq == 0){
				for(int j=43; j<48; j++){
					row.createCell(j).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				}
				seq++;
			}
			
			if(!(grpTxt.toString().indexOf("Q03_SN") == -1)){
				row.getCell(43).setCellValue("●");
				row.getCell(43).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("Q04_SN") == -1)){
				row.getCell(44).setCellValue("●");
				row.getCell(44).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("H01_SN") == -1)){
				row.getCell(45).setCellValue("●");
				row.getCell(45).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("H02_SN") == -1)){
				row.getCell(46).setCellValue("●");
				row.getCell(46).setCellStyle(style);
			}else if(!(grpTxt.toString().indexOf("YTD_SN") == -1)){
				row.getCell(47).setCellValue("●");
				row.getCell(47).setCellStyle(style);
			}
			
		}
		
	}

	// depletion 엑셀 다운로드
	@RequestMapping("/downloadFileDepletion")
	public ModelAndView downloadFileDepletion(HttpServletRequest request, HttpServletResponse response) throws Exception {
        String templateFilePath = request.getServletContext().getRealPath("WEB-INF/excel/");
        String createTempFilePath = request.getServletContext().getRealPath("WEB-INF/temp/");
        ResultMessage rm = new ResultMessage();
		
		Map parameters = new HashMap();
		
		String fileName = request.getParameter("fileName");
		
		parameters.put("fileName", fileName);
		parameters.put("tempFileName", fileName);
		parameters.put("uploadDir", createTempFilePath);
		
		return new ModelAndView("downloadView", parameters);
	}
	
	
	/*
	 * Description: Note G Forecast (ON channel) 4~41번째 컬럼의 입력값을 셀에 입력
	 */
	public void setRowValue16(HSSFRow row, CellStyle style, Map rowData, String styleTxt) {
		
		if(dkDeplFcAcP01 != 0 && !(rowData.get("NOTAG_AC_P01").toString().equals(0))){
			noteGDkAcP01 = ((Double.parseDouble(rowData.get("NOTAG_AC_P01").toString())/dkDeplFcAcP01)*100);
    	};
    	if(dkDeplFcAcP02 != 0 && !(rowData.get("NOTAG_AC_P02").toString().equals(0))){
    		noteGDkAcP02 = ((Double.parseDouble(rowData.get("NOTAG_AC_P02").toString())/dkDeplFcAcP02)*100);
    	};
    	if(dkDeplFcAcP03 != 0 && !(rowData.get("NOTAG_AC_P03").toString().equals(0))){
    		noteGDkAcP03 = ((Double.parseDouble(rowData.get("NOTAG_AC_P03").toString())/dkDeplFcAcP03)*100);
    	};
    	if(dkDeplFcAcP04 != 0 && !(rowData.get("NOTAG_AC_P04").toString().equals(0))){
    		noteGDkAcP04 = ((Double.parseDouble(rowData.get("NOTAG_AC_P04").toString())/dkDeplFcAcP04)*100);
    	};
    	if(dkDeplFcAcP05 != 0 && !(rowData.get("NOTAG_AC_P05").toString().equals(0))){
    		noteGDkAcP05 = ((Double.parseDouble(rowData.get("NOTAG_AC_P05").toString())/dkDeplFcAcP05)*100);
    	};
    	if(dkDeplFcAcP06 != 0 && !(rowData.get("NOTAG_AC_P06").toString().equals(0))){
    		noteGDkAcP06 = ((Double.parseDouble(rowData.get("NOTAG_AC_P06").toString())/dkDeplFcAcP06)*100);
    	};
    	if(dkDeplFcAcP07 != 0 && !(rowData.get("NOTAG_AC_P07").toString().equals(0))){
    		noteGDkAcP07 = ((Double.parseDouble(rowData.get("NOTAG_AC_P07").toString())/dkDeplFcAcP07)*100);
    	};
    	if(dkDeplFcAcP08 != 0 && !(rowData.get("NOTAG_AC_P08").toString().equals(0))){
    		noteGDkAcP08 = ((Double.parseDouble(rowData.get("NOTAG_AC_P08").toString())/dkDeplFcAcP08)*100);
    	};
    	if(dkDeplFcAcP09 != 0 && !(rowData.get("NOTAG_AC_P09").toString().equals(0))){
    		noteGDkAcP09 = ((Double.parseDouble(rowData.get("NOTAG_AC_P09").toString())/dkDeplFcAcP09)*100);
    	};
    	if(dkDeplFcAcP10 != 0 && !(rowData.get("NOTAG_AC_P10").toString().equals(0))){
    		noteGDkAcP10 = ((Double.parseDouble(rowData.get("NOTAG_AC_P10").toString())/dkDeplFcAcP10)*100);
    	};
    	if(dkDeplFcAcP11 != 0 && !(rowData.get("NOTAG_AC_P11").toString().equals(0))){
    		noteGDkAcP11 = ((Double.parseDouble(rowData.get("NOTAG_AC_P11").toString())/dkDeplFcAcP11)*100);
    	};
    	if(dkDeplFcAcP12 != 0 && !(rowData.get("NOTAG_AC_P12").toString().equals(0))){
    		noteGDkAcP12 = ((Double.parseDouble(rowData.get("NOTAG_AC_P12").toString())/dkDeplFcAcP12)*100);
    	};
    	if(dkDeplFcAcQ01 != 0 && !(rowData.get("NOTAG_AC_Q01").toString().equals(0))){
    		noteGDkAcQ01 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q01").toString())/dkDeplFcAcQ01)*100);
    	};
    	if(dkDeplFcAcQ02 != 0 && !(rowData.get("NOTAG_AC_Q02").toString().equals(0))){
    		noteGDkAcQ02 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q02").toString())/dkDeplFcAcQ02)*100);
    	};
    	if(dkDeplFcAcQ03 != 0 && !(rowData.get("NOTAG_AC_Q03").toString().equals(0))){
    		noteGDkAcQ03 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q03").toString())/dkDeplFcAcQ03)*100);
    	};
    	if(dkDeplFcAcQ04 != 0 && !(rowData.get("NOTAG_AC_Q04").toString().equals(0))){
    		noteGDkAcQ04 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q04").toString())/dkDeplFcAcQ04)*100);
    	};
    	if(dkDeplFcAcH01 != 0 && !(rowData.get("NOTAG_AC_H01").toString().equals(0))){
    		noteGDkAcH01 = ((Double.parseDouble(rowData.get("NOTAG_AC_H01").toString())/dkDeplFcAcH01)*100);
    	};
    	if(dkDeplFcAcH02 != 0 && !(rowData.get("NOTAG_AC_H02").toString().equals(0))){
    		noteGDkAcH02 = ((Double.parseDouble(rowData.get("NOTAG_AC_H02").toString())/dkDeplFcAcH02)*100);
    	};
    	if(ytd_Param.equals("P01")){
    		if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD01").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD01").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P02")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD02").toString().equals(0))){
				noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD02").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P03")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD03").toString().equals(0))){
				noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD03").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P04")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD04").toString().equals(0))){
				noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD04").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P05")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD05").toString().equals(0))){
				noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD05").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P06")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD06").toString().equals(0))){
				noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD06").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P07")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD07").toString().equals(0))){
				noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD07").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P08")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD08").toString().equals(0))){
				noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD08").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P09")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD09").toString().equals(0))){
				noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD09").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P10")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD10").toString().equals(0))){
				noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD10").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P11")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD11").toString().equals(0))){
				noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD11").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P12")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD12").toString().equals(0))){
				noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString())/dkDeplFcAcYTD)*100);
        	};
		}else{
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD12").toString().equals(0))){
				noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString())/dkDeplFcAcYTD)*100);
        	};
		}
    	
    	if(dkDeplFcAcP01 != 0 && !(rowData.get("NOTAG_FOR_P01").toString().equals(0))){
			noteGDkForP01 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P01").toString())/dkDeplFcAcP01)*100);
    	};
    	if(dkDeplFcAcP02 != 0 && !(rowData.get("NOTAG_FOR_P02").toString().equals(0))){
    		noteGDkForP02 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P02").toString())/dkDeplFcAcP02)*100);
    	};
    	if(dkDeplFcAcP03 != 0 && !(rowData.get("NOTAG_FOR_P03").toString().equals(0))){
    		noteGDkForP03 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P03").toString())/dkDeplFcAcP03)*100);
    	};
    	if(dkDeplFcAcP04 != 0 && !(rowData.get("NOTAG_FOR_P04").toString().equals(0))){
    		noteGDkForP04 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P04").toString())/dkDeplFcAcP04)*100);
    	};
    	if(dkDeplFcAcP05 != 0 && !(rowData.get("NOTAG_FOR_P05").toString().equals(0))){
    		noteGDkForP05 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P05").toString())/dkDeplFcAcP05)*100);
    	};
    	if(dkDeplFcAcP06 != 0 && !(rowData.get("NOTAG_FOR_P06").toString().equals(0))){
    		noteGDkForP06 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P06").toString())/dkDeplFcAcP06)*100);
    	};
    	if(dkDeplFcAcP07 != 0 && !(rowData.get("NOTAG_FOR_P07").toString().equals(0))){
    		noteGDkForP07 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P07").toString())/dkDeplFcAcP07)*100);
    	};
    	if(dkDeplFcAcP08 != 0 && !(rowData.get("NOTAG_FOR_P08").toString().equals(0))){
    		noteGDkForP08 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P08").toString())/dkDeplFcAcP08)*100);
    	};
    	if(dkDeplFcAcP09 != 0 && !(rowData.get("NOTAG_FOR_P09").toString().equals(0))){
    		noteGDkForP09 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P09").toString())/dkDeplFcAcP09)*100);
    	};
    	if(dkDeplFcAcP10 != 0 && !(rowData.get("NOTAG_FOR_P10").toString().equals(0))){
    		noteGDkForP10 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P10").toString())/dkDeplFcAcP10)*100);
    	};
    	if(dkDeplFcAcP11 != 0 && !(rowData.get("NOTAG_FOR_P11").toString().equals(0))){
    		noteGDkForP11 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P11").toString())/dkDeplFcAcP11)*100);
    	};
    	if(dkDeplFcAcP12 != 0 && !(rowData.get("NOTAG_FOR_P12").toString().equals(0))){
    		noteGDkForP12 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P12").toString())/dkDeplFcAcP12)*100);
    	};
    	if(dkDeplFcAcQ01 != 0 && !(rowData.get("NOTAG_FOR_Q01").toString().equals(0))){
    		noteGDkForQ01 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q01").toString())/dkDeplFcAcQ01)*100);
    	};
    	if(dkDeplFcAcQ02 != 0 && !(rowData.get("NOTAG_FOR_Q02").toString().equals(0))){
    		noteGDkForQ02 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q02").toString())/dkDeplFcAcQ02)*100);
    	};
    	if(dkDeplFcAcQ03 != 0 && !(rowData.get("NOTAG_FOR_Q03").toString().equals(0))){
    		noteGDkForQ03 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q03").toString())/dkDeplFcAcQ03)*100);
    	};
    	if(dkDeplFcAcQ04 != 0 && !(rowData.get("NOTAG_FOR_Q04").toString().equals(0))){
    		noteGDkForQ04 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q04").toString())/dkDeplFcAcQ04)*100);
    	};
    	if(dkDeplFcAcH01 != 0 && !(rowData.get("NOTAG_FOR_H01").toString().equals(0))){
    		noteGDkForH01 = ((Double.parseDouble(rowData.get("NOTAG_FOR_H01").toString())/dkDeplFcAcH01)*100);
    	};
    	if(dkDeplFcAcH02 != 0 && !(rowData.get("NOTAG_FOR_H02").toString().equals(0))){
    		noteGDkForH02 = ((Double.parseDouble(rowData.get("NOTAG_FOR_H02").toString())/dkDeplFcAcH02)*100);
    	};
    	if(ytd_Param.equals("P01")){
    		if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD01").toString().equals(0))){
    			noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD01").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P02")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD02").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD02").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P03")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD03").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD03").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P04")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD04").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD04").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P05")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD05").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD05").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P06")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD06").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD06").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P07")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD07").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD07").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P08")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD08").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD08").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P09")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD09").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD09").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P10")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD10").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD10").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P11")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD11").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD11").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P12")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD12").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString())/dkDeplFcAcYTD)*100);
        	};
		}else{
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD12").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString())/dkDeplFcAcYTD)*100);
        	};
		}
    	
    	if(dkDeplFcAcP01 != 0 && !(rowData.get("NOTAG_OUT_P01").toString().equals(0))){
			noteGDkOutP01 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P01").toString())/dkDeplFcAcP01)*100);
    	};
    	if(dkDeplFcAcP02 != 0 && !(rowData.get("NOTAG_OUT_P02").toString().equals(0))){
    		noteGDkOutP02 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P02").toString())/dkDeplFcAcP02)*100);
    	};
    	if(dkDeplFcAcP03 != 0 && !(rowData.get("NOTAG_OUT_P03").toString().equals(0))){
    		noteGDkOutP03 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P03").toString())/dkDeplFcAcP03)*100);
    	};
    	if(dkDeplFcAcP04 != 0 && !(rowData.get("NOTAG_OUT_P04").toString().equals(0))){
    		noteGDkOutP04 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P04").toString())/dkDeplFcAcP04)*100);
    	};
    	if(dkDeplFcAcP05 != 0 && !(rowData.get("NOTAG_OUT_P05").toString().equals(0))){
    		noteGDkOutP05 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P05").toString())/dkDeplFcAcP05)*100);
    	};
    	if(dkDeplFcAcP06 != 0 && !(rowData.get("NOTAG_OUT_P06").toString().equals(0))){
    		noteGDkOutP06 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P06").toString())/dkDeplFcAcP06)*100);
    	};
    	if(dkDeplFcAcP07 != 0 && !(rowData.get("NOTAG_OUT_P07").toString().equals(0))){
    		noteGDkOutP07 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P07").toString())/dkDeplFcAcP07)*100);
    	};
    	if(dkDeplFcAcP08 != 0 && !(rowData.get("NOTAG_OUT_P08").toString().equals(0))){
    		noteGDkOutP08 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P08").toString())/dkDeplFcAcP08)*100);
    	};
    	if(dkDeplFcAcP09 != 0 && !(rowData.get("NOTAG_OUT_P09").toString().equals(0))){
    		noteGDkOutP09 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P09").toString())/dkDeplFcAcP09)*100);
    	};
    	if(dkDeplFcAcP10 != 0 && !(rowData.get("NOTAG_OUT_P10").toString().equals(0))){
    		noteGDkOutP10 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P10").toString())/dkDeplFcAcP10)*100);
    	};
    	if(dkDeplFcAcP11 != 0 && !(rowData.get("NOTAG_OUT_P11").toString().equals(0))){
    		noteGDkOutP11 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P11").toString())/dkDeplFcAcP11)*100);
    	};
    	if(dkDeplFcAcP12 != 0 && !(rowData.get("NOTAG_OUT_P12").toString().equals(0))){
    		noteGDkOutP12 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P12").toString())/dkDeplFcAcP12)*100);
    	};
    	if(dkDeplFcAcQ01 != 0 && !(rowData.get("NOTAG_OUT_Q01").toString().equals(0))){
    		noteGDkOutQ01 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q01").toString())/dkDeplFcAcQ01)*100);
    	};
    	if(dkDeplFcAcQ02 != 0 && !(rowData.get("NOTAG_OUT_Q02").toString().equals(0))){
    		noteGDkOutQ02 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q02").toString())/dkDeplFcAcQ02)*100);
    	};
    	if(dkDeplFcAcQ03 != 0 && !(rowData.get("NOTAG_OUT_Q03").toString().equals(0))){
    		noteGDkOutQ03 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q03").toString())/dkDeplFcAcQ03)*100);
    	};
    	if(dkDeplFcAcQ04 != 0 && !(rowData.get("NOTAG_OUT_Q04").toString().equals(0))){
    		noteGDkOutQ04 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q04").toString())/dkDeplFcAcQ04)*100);
    	};
    	if(dkDeplFcAcH01 != 0 && !(rowData.get("NOTAG_OUT_H01").toString().equals(0))){
    		noteGDkOutH01 = ((Double.parseDouble(rowData.get("NOTAG_OUT_H01").toString())/dkDeplFcAcH01)*100);
    	};
    	if(dkDeplFcAcH02 != 0 && !(rowData.get("NOTAG_OUT_H02").toString().equals(0))){
    		noteGDkOutH02 = ((Double.parseDouble(rowData.get("NOTAG_OUT_H02").toString())/dkDeplFcAcH02)*100);
    	};
    	if(ytd_Param.equals("P01")){
    		if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD01").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD01").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P02")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD02").toString().equals(0))){
				noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD02").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P03")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD03").toString().equals(0))){
				noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD03").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P04")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD04").toString().equals(0))){
				noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD04").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P05")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD05").toString().equals(0))){
				noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD05").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P06")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD06").toString().equals(0))){
				noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD06").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P07")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD07").toString().equals(0))){
				noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD07").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P08")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD08").toString().equals(0))){
				noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD08").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P09")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD09").toString().equals(0))){
				noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD09").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P10")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD10").toString().equals(0))){
				noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD10").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P11")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD11").toString().equals(0))){
				noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD11").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P12")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD12").toString().equals(0))){
				noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD12").toString())/dkDeplFcAcYTD)*100);
        	};
		}else{
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD12").toString().equals(0))){
				noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD12").toString())/dkDeplFcAcYTD)*100);
        	};
		}
    	
    	if(dkDeplFcAcP01 != 0 && !(rowData.get("NOTAG_TG_P01").toString().equals(0))){
			noteGDkTgP01 = ((Double.parseDouble(rowData.get("NOTAG_TG_P01").toString())/dkDeplFcAcP01)*100);
    	};
    	if(dkDeplFcAcP02 != 0 && !(rowData.get("NOTAG_TG_P02").toString().equals(0))){
    		noteGDkTgP02 = ((Double.parseDouble(rowData.get("NOTAG_TG_P02").toString())/dkDeplFcAcP02)*100);
    	};
    	if(dkDeplFcAcP03 != 0 && !(rowData.get("NOTAG_TG_P03").toString().equals(0))){
    		noteGDkTgP03 = ((Double.parseDouble(rowData.get("NOTAG_TG_P03").toString())/dkDeplFcAcP03)*100);
    	};
    	if(dkDeplFcAcP04 != 0 && !(rowData.get("NOTAG_TG_P04").toString().equals(0))){
    		noteGDkTgP04 = ((Double.parseDouble(rowData.get("NOTAG_TG_P04").toString())/dkDeplFcAcP04)*100);
    	};
    	if(dkDeplFcAcP05 != 0 && !(rowData.get("NOTAG_TG_P05").toString().equals(0))){
    		noteGDkTgP05 = ((Double.parseDouble(rowData.get("NOTAG_TG_P05").toString())/dkDeplFcAcP05)*100);
    	};
    	if(dkDeplFcAcP06 != 0 && !(rowData.get("NOTAG_TG_P06").toString().equals(0))){
    		noteGDkTgP06 = ((Double.parseDouble(rowData.get("NOTAG_TG_P06").toString())/dkDeplFcAcP06)*100);
    	};
    	if(dkDeplFcAcP07 != 0 && !(rowData.get("NOTAG_TG_P07").toString().equals(0))){
    		noteGDkTgP07 = ((Double.parseDouble(rowData.get("NOTAG_TG_P07").toString())/dkDeplFcAcP07)*100);
    	};
    	if(dkDeplFcAcP08 != 0 && !(rowData.get("NOTAG_TG_P08").toString().equals(0))){
    		noteGDkTgP08 = ((Double.parseDouble(rowData.get("NOTAG_TG_P08").toString())/dkDeplFcAcP08)*100);
    	};
    	if(dkDeplFcAcP09 != 0 && !(rowData.get("NOTAG_TG_P09").toString().equals(0))){
    		noteGDkTgP09 = ((Double.parseDouble(rowData.get("NOTAG_TG_P09").toString())/dkDeplFcAcP09)*100);
    	};
    	if(dkDeplFcAcP10 != 0 && !(rowData.get("NOTAG_TG_P10").toString().equals(0))){
    		noteGDkTgP10 = ((Double.parseDouble(rowData.get("NOTAG_TG_P10").toString())/dkDeplFcAcP10)*100);
    	};
    	if(dkDeplFcAcP11 != 0 && !(rowData.get("NOTAG_TG_P11").toString().equals(0))){
    		noteGDkTgP11 = ((Double.parseDouble(rowData.get("NOTAG_TG_P11").toString())/dkDeplFcAcP11)*100);
    	};
    	if(dkDeplFcAcP12 != 0 && !(rowData.get("NOTAG_TG_P12").toString().equals(0))){
    		noteGDkTgP12 = ((Double.parseDouble(rowData.get("NOTAG_TG_P12").toString())/dkDeplFcAcP12)*100);
    	};
    	if(dkDeplFcAcQ01 != 0 && !(rowData.get("NOTAG_TG_Q01").toString().equals(0))){
    		noteGDkTgQ01 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q01").toString())/dkDeplFcAcQ01)*100);
    	};
    	if(dkDeplFcAcQ02 != 0 && !(rowData.get("NOTAG_TG_Q02").toString().equals(0))){
    		noteGDkTgQ02 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q02").toString())/dkDeplFcAcQ02)*100);
    	};
    	if(dkDeplFcAcQ03 != 0 && !(rowData.get("NOTAG_TG_Q03").toString().equals(0))){
    		noteGDkTgQ03 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q03").toString())/dkDeplFcAcQ03)*100);
    	};
    	if(dkDeplFcAcQ04 != 0 && !(rowData.get("NOTAG_TG_Q04").toString().equals(0))){
    		noteGDkTgQ04 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q04").toString())/dkDeplFcAcQ04)*100);
    	};
    	if(dkDeplFcAcH01 != 0 && !(rowData.get("NOTAG_TG_H01").toString().equals(0))){
    		noteGDkTgH01 = ((Double.parseDouble(rowData.get("NOTAG_TG_H01").toString())/dkDeplFcAcH01)*100);
    	};
    	if(dkDeplFcAcH02 != 0 && !(rowData.get("NOTAG_TG_H02").toString().equals(0))){
    		noteGDkTgH02 = ((Double.parseDouble(rowData.get("NOTAG_TG_H02").toString())/dkDeplFcAcH02)*100);
    	};
    	if(ytd_Param.equals("P01")){
    		if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD01").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD01").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P02")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD02").toString().equals(0))){
				noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD02").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P03")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD03").toString().equals(0))){
				noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD03").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P04")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD04").toString().equals(0))){
				noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD04").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P05")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD05").toString().equals(0))){
				noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD05").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P06")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD06").toString().equals(0))){
				noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD06").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P07")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD07").toString().equals(0))){
				noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD07").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P08")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD08").toString().equals(0))){
				noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD08").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P09")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD09").toString().equals(0))){
				noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD09").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P10")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD10").toString().equals(0))){
				noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD10").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P11")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD11").toString().equals(0))){
				noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD11").toString())/dkDeplFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P12")){
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD12").toString().equals(0))){
				noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString())/dkDeplFcAcYTD)*100);
        	};
		}else{
			if(dkDeplFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD12").toString().equals(0))){
				noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString())/dkDeplFcAcYTD)*100);
        	};
		}
    	
		if(periodChk_Param.equals("Y")){
			
			for(int i=4; i<42; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkAcP01);
        	row.getCell(5).setCellValue(noteGDkAcP02);
        	row.getCell(6).setCellValue(noteGDkAcP03);
        	row.getCell(7).setCellValue(noteGDkAcP04);
        	row.getCell(8).setCellValue(noteGDkAcP05);
        	row.getCell(9).setCellValue(noteGDkAcP06);
        	row.getCell(10).setCellValue(noteGDkAcP07);
        	row.getCell(11).setCellValue(noteGDkAcP08);
        	row.getCell(12).setCellValue(noteGDkAcP09);
        	row.getCell(13).setCellValue(noteGDkAcP10);
        	row.getCell(14).setCellValue(noteGDkAcP11);
        	row.getCell(15).setCellValue(noteGDkAcP12);
        	row.getCell(16).setCellValue(noteGDkAcQ01);
        	row.getCell(17).setCellValue(noteGDkAcQ02);
        	row.getCell(18).setCellValue(noteGDkAcQ03);
        	row.getCell(19).setCellValue(noteGDkAcQ04);
        	row.getCell(20).setCellValue(noteGDkAcH01);
        	row.getCell(21).setCellValue(noteGDkAcH02);
        	row.getCell(22).setCellValue(noteGDkAcYTD);
        	row.getCell(23).setCellValue(noteGDkForP01);
        	row.getCell(24).setCellValue(noteGDkForP02);
        	row.getCell(25).setCellValue(noteGDkForP03);
        	row.getCell(26).setCellValue(noteGDkForP04);
        	row.getCell(27).setCellValue(noteGDkForP05);
        	row.getCell(28).setCellValue(noteGDkForP06);
        	row.getCell(29).setCellValue(noteGDkForP07);
        	row.getCell(30).setCellValue(noteGDkForP08);
        	row.getCell(31).setCellValue(noteGDkForP09);
        	row.getCell(32).setCellValue(noteGDkForP10);
        	row.getCell(33).setCellValue(noteGDkForP11);
        	row.getCell(34).setCellValue(noteGDkForP12);
        	row.getCell(35).setCellValue(noteGDkForQ01);
        	row.getCell(36).setCellValue(noteGDkForQ02);
        	row.getCell(37).setCellValue(noteGDkForQ03);
        	row.getCell(38).setCellValue(noteGDkForQ04);
        	row.getCell(39).setCellValue(noteGDkForH01);
        	row.getCell(40).setCellValue(noteGDkForH02);
        	row.getCell(41).setCellValue(noteGDkForYTD);
    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=4; i<16; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(noteGDkAcP01);
        	row.getCell(5).setCellValue(noteGDkAcP02);
        	row.getCell(6).setCellValue(noteGDkAcP03);
        	row.getCell(7).setCellValue(noteGDkAcQ01);
        	row.getCell(8).setCellValue(noteGDkAcH01);
        	row.getCell(9).setCellValue(noteGDkAcYTD);
        	row.getCell(10).setCellValue(noteGDkForP01);
        	row.getCell(11).setCellValue(noteGDkForP02);
        	row.getCell(12).setCellValue(noteGDkForP03);
        	row.getCell(13).setCellValue(noteGDkForQ01);
        	row.getCell(14).setCellValue(noteGDkForH01);
        	row.getCell(15).setCellValue(noteGDkForYTD);
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=4; i<18; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkAcP04);
        	row.getCell(5).setCellValue(noteGDkAcP05);
        	row.getCell(6).setCellValue(noteGDkAcP06);
        	row.getCell(7).setCellValue(noteGDkAcQ01);
        	row.getCell(8).setCellValue(noteGDkAcQ02);
        	row.getCell(9).setCellValue(noteGDkAcH01);
        	row.getCell(10).setCellValue(noteGDkAcYTD);
        	row.getCell(11).setCellValue(noteGDkForP04);
        	row.getCell(12).setCellValue(noteGDkForP05);
        	row.getCell(13).setCellValue(noteGDkForP06);
        	row.getCell(14).setCellValue(noteGDkForQ01);
        	row.getCell(15).setCellValue(noteGDkForQ02);
        	row.getCell(16).setCellValue(noteGDkForH01);
        	row.getCell(17).setCellValue(noteGDkForYTD);
        	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkAcP07);
        	row.getCell(5).setCellValue(noteGDkAcP08);
        	row.getCell(6).setCellValue(noteGDkAcP09);
        	row.getCell(7).setCellValue(noteGDkAcQ02);
        	row.getCell(8).setCellValue(noteGDkAcQ03);
        	row.getCell(9).setCellValue(noteGDkAcH01);
        	row.getCell(10).setCellValue(noteGDkAcH02);
        	row.getCell(11).setCellValue(noteGDkAcYTD);
        	row.getCell(12).setCellValue(noteGDkForP07);
        	row.getCell(13).setCellValue(noteGDkForP08);
        	row.getCell(14).setCellValue(noteGDkForP09);
        	row.getCell(15).setCellValue(noteGDkForQ02);
        	row.getCell(16).setCellValue(noteGDkForQ03);
        	row.getCell(17).setCellValue(noteGDkForH01);
        	row.getCell(18).setCellValue(noteGDkForH02);
        	row.getCell(19).setCellValue(noteGDkForYTD);
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(noteGDkAcP10);
        	row.getCell(5).setCellValue(noteGDkAcP11);
        	row.getCell(6).setCellValue(noteGDkAcP12);
        	row.getCell(7).setCellValue(noteGDkAcQ03);
        	row.getCell(8).setCellValue(noteGDkAcQ04);
        	row.getCell(9).setCellValue(noteGDkAcH01);
        	row.getCell(10).setCellValue(noteGDkAcH02);
        	row.getCell(11).setCellValue(noteGDkAcYTD);
        	row.getCell(12).setCellValue(noteGDkForP10);
        	row.getCell(13).setCellValue(noteGDkForP11);
        	row.getCell(14).setCellValue(noteGDkForP12);
        	row.getCell(15).setCellValue(noteGDkForQ03);
        	row.getCell(16).setCellValue(noteGDkForQ04);
        	row.getCell(17).setCellValue(noteGDkForH01);
        	row.getCell(18).setCellValue(noteGDkForH02);
        	row.getCell(19).setCellValue(noteGDkForYTD);
	    	
		}
    	
    	// 계산식을 위해 리스트에 값을 담아준다.
    	noteGMap = new HashMap();
    	
    	noteGMap.put("STYLETXT", styleTxt);
    	noteGMap.put("TOTAL", "");
    	noteGMap.put("NOTAG_AC_P01", noteGDkAcP01);
    	noteGMap.put("NOTAG_AC_P02", noteGDkAcP02);
    	noteGMap.put("NOTAG_AC_P03", noteGDkAcP03);
    	noteGMap.put("NOTAG_AC_P04", noteGDkAcP04);
    	noteGMap.put("NOTAG_AC_P05", noteGDkAcP05);
    	noteGMap.put("NOTAG_AC_P06", noteGDkAcP06);
    	noteGMap.put("NOTAG_AC_P07", noteGDkAcP07);
    	noteGMap.put("NOTAG_AC_P08", noteGDkAcP08);
    	noteGMap.put("NOTAG_AC_P09", noteGDkAcP09);
    	noteGMap.put("NOTAG_AC_P10", noteGDkAcP10);
    	noteGMap.put("NOTAG_AC_P11", noteGDkAcP11);
    	noteGMap.put("NOTAG_AC_P12", noteGDkAcP12);
    	noteGMap.put("NOTAG_AC_Q01", noteGDkAcQ01);
    	noteGMap.put("NOTAG_AC_Q02", noteGDkAcQ02);
    	noteGMap.put("NOTAG_AC_Q03", noteGDkAcQ03);
    	noteGMap.put("NOTAG_AC_Q04", noteGDkAcQ04);
    	noteGMap.put("NOTAG_AC_H01", noteGDkAcH01);
    	noteGMap.put("NOTAG_AC_H02", noteGDkAcH02);
    	noteGMap.put("NOTAG_AC_YTD", noteGDkAcYTD);
		
    	noteGMap.put("NOTAG_FOR_P01", noteGDkForP01);
    	noteGMap.put("NOTAG_FOR_P02", noteGDkForP02);
    	noteGMap.put("NOTAG_FOR_P03", noteGDkForP03);
    	noteGMap.put("NOTAG_FOR_P04", noteGDkForP04);
    	noteGMap.put("NOTAG_FOR_P05", noteGDkForP05);
    	noteGMap.put("NOTAG_FOR_P06", noteGDkForP06);
    	noteGMap.put("NOTAG_FOR_P07", noteGDkForP07);
    	noteGMap.put("NOTAG_FOR_P08", noteGDkForP08);
    	noteGMap.put("NOTAG_FOR_P09", noteGDkForP09);
    	noteGMap.put("NOTAG_FOR_P10", noteGDkForP10);
    	noteGMap.put("NOTAG_FOR_P11", noteGDkForP11);
    	noteGMap.put("NOTAG_FOR_P12", noteGDkForP12);
    	noteGMap.put("NOTAG_FOR_Q01", noteGDkForQ01);
    	noteGMap.put("NOTAG_FOR_Q02", noteGDkForQ02);
    	noteGMap.put("NOTAG_FOR_Q03", noteGDkForQ03);
    	noteGMap.put("NOTAG_FOR_Q04", noteGDkForQ04);
    	noteGMap.put("NOTAG_FOR_H01", noteGDkForH01);
    	noteGMap.put("NOTAG_FOR_H02", noteGDkForH02);
    	noteGMap.put("NOTAG_FOR_YTD", noteGDkForYTD);
    	
    	noteGMap.put("NOTAG_OUT_P01", noteGDkOutP01);
    	noteGMap.put("NOTAG_OUT_P02", noteGDkOutP02);
    	noteGMap.put("NOTAG_OUT_P03", noteGDkOutP03);
    	noteGMap.put("NOTAG_OUT_P04", noteGDkOutP04);
    	noteGMap.put("NOTAG_OUT_P05", noteGDkOutP05);
    	noteGMap.put("NOTAG_OUT_P06", noteGDkOutP06);
    	noteGMap.put("NOTAG_OUT_P07", noteGDkOutP07);
    	noteGMap.put("NOTAG_OUT_P08", noteGDkOutP08);
    	noteGMap.put("NOTAG_OUT_P09", noteGDkOutP09);
    	noteGMap.put("NOTAG_OUT_P10", noteGDkOutP10);
    	noteGMap.put("NOTAG_OUT_P11", noteGDkOutP11);
    	noteGMap.put("NOTAG_OUT_P12", noteGDkOutP12);
    	noteGMap.put("NOTAG_OUT_Q01", noteGDkOutQ01);
    	noteGMap.put("NOTAG_OUT_Q02", noteGDkOutQ02);
    	noteGMap.put("NOTAG_OUT_Q03", noteGDkOutQ03);
    	noteGMap.put("NOTAG_OUT_Q04", noteGDkOutQ04);
    	noteGMap.put("NOTAG_OUT_H01", noteGDkOutH01);
    	noteGMap.put("NOTAG_OUT_H02", noteGDkOutH02);
    	noteGMap.put("NOTAG_OUT_YTD", noteGDkOutYTD);
    	
    	noteGMap.put("NOTAG_TG_P01", noteGDkTgP01);
    	noteGMap.put("NOTAG_TG_P02", noteGDkTgP02);
    	noteGMap.put("NOTAG_TG_P03", noteGDkTgP03);
    	noteGMap.put("NOTAG_TG_P04", noteGDkTgP04);
    	noteGMap.put("NOTAG_TG_P05", noteGDkTgP05);
    	noteGMap.put("NOTAG_TG_P06", noteGDkTgP06);
    	noteGMap.put("NOTAG_TG_P07", noteGDkTgP07);
    	noteGMap.put("NOTAG_TG_P08", noteGDkTgP08);
    	noteGMap.put("NOTAG_TG_P09", noteGDkTgP09);
    	noteGMap.put("NOTAG_TG_P10", noteGDkTgP10);
    	noteGMap.put("NOTAG_TG_P11", noteGDkTgP11);
    	noteGMap.put("NOTAG_TG_P12", noteGDkTgP12);
    	noteGMap.put("NOTAG_TG_Q01", noteGDkTgQ01);
    	noteGMap.put("NOTAG_TG_Q02", noteGDkTgQ02);
    	noteGMap.put("NOTAG_TG_Q03", noteGDkTgQ03);
    	noteGMap.put("NOTAG_TG_Q04", noteGDkTgQ04);
    	noteGMap.put("NOTAG_TG_H01", noteGDkTgH01);
    	noteGMap.put("NOTAG_TG_H02", noteGDkTgH02);
    	noteGMap.put("NOTAG_TG_YTD", noteGDkTgYTD);
    	
		noteG.add(noteGMap);
		
	}
	
	/*
	 * Description: Note G Forecast (ON channel) 4~41번째 컬럼의 입력값을 셀에 입력
	 */
	public void setRowValue17(HSSFRow row, CellStyle style, Map rowData, String styleTxt) {
		
		if(periodChk_Param.equals("Y")){
			
			for(int i=4; i<42; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkOutP01);
        	row.getCell(5).setCellValue(noteGDkOutP02);
        	row.getCell(6).setCellValue(noteGDkOutP03);
        	row.getCell(7).setCellValue(noteGDkOutP04);
        	row.getCell(8).setCellValue(noteGDkOutP05);
        	row.getCell(9).setCellValue(noteGDkOutP06);
        	row.getCell(10).setCellValue(noteGDkOutP07);
        	row.getCell(11).setCellValue(noteGDkOutP08);
        	row.getCell(12).setCellValue(noteGDkOutP09);
        	row.getCell(13).setCellValue(noteGDkOutP10);
        	row.getCell(14).setCellValue(noteGDkOutP11);
        	row.getCell(15).setCellValue(noteGDkOutP12);
        	row.getCell(16).setCellValue(noteGDkOutQ01);
        	row.getCell(17).setCellValue(noteGDkOutQ02);
        	row.getCell(18).setCellValue(noteGDkOutQ03);
        	row.getCell(19).setCellValue(noteGDkOutQ04);
        	row.getCell(20).setCellValue(noteGDkOutH01);
        	row.getCell(21).setCellValue(noteGDkOutH02);
        	row.getCell(22).setCellValue(noteGDkOutYTD);
        	row.getCell(23).setCellValue(noteGDkTgP01);
        	row.getCell(24).setCellValue(noteGDkTgP02);
        	row.getCell(25).setCellValue(noteGDkTgP03);
        	row.getCell(26).setCellValue(noteGDkTgP04);
        	row.getCell(27).setCellValue(noteGDkTgP05);
        	row.getCell(28).setCellValue(noteGDkTgP06);
        	row.getCell(29).setCellValue(noteGDkTgP07);
        	row.getCell(30).setCellValue(noteGDkTgP08);
        	row.getCell(31).setCellValue(noteGDkTgP09);
        	row.getCell(32).setCellValue(noteGDkTgP10);
        	row.getCell(33).setCellValue(noteGDkTgP11);
        	row.getCell(34).setCellValue(noteGDkTgP12);
        	row.getCell(35).setCellValue(noteGDkTgQ01);
        	row.getCell(36).setCellValue(noteGDkTgQ02);
        	row.getCell(37).setCellValue(noteGDkTgQ03);
        	row.getCell(38).setCellValue(noteGDkTgQ04);
        	row.getCell(39).setCellValue(noteGDkTgH01);
        	row.getCell(40).setCellValue(noteGDkTgH02);
        	row.getCell(41).setCellValue(noteGDkTgYTD);
    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=4; i<16; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(noteGDkOutP01);
        	row.getCell(5).setCellValue(noteGDkOutP02);
        	row.getCell(6).setCellValue(noteGDkOutP03);
        	row.getCell(7).setCellValue(noteGDkOutQ01);
        	row.getCell(8).setCellValue(noteGDkOutH01);
        	row.getCell(9).setCellValue(noteGDkOutYTD);
        	row.getCell(10).setCellValue(noteGDkTgP01);
        	row.getCell(11).setCellValue(noteGDkTgP02);
        	row.getCell(12).setCellValue(noteGDkTgP03);
        	row.getCell(13).setCellValue(noteGDkTgQ01);
        	row.getCell(14).setCellValue(noteGDkTgH01);
        	row.getCell(15).setCellValue(noteGDkTgYTD);
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=4; i<18; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkOutP04);
        	row.getCell(5).setCellValue(noteGDkOutP05);
        	row.getCell(6).setCellValue(noteGDkOutP06);
        	row.getCell(7).setCellValue(noteGDkOutQ01);
        	row.getCell(8).setCellValue(noteGDkOutQ02);
        	row.getCell(9).setCellValue(noteGDkOutH01);
        	row.getCell(10).setCellValue(noteGDkOutYTD);
        	row.getCell(11).setCellValue(noteGDkTgP04);
        	row.getCell(12).setCellValue(noteGDkTgP05);
        	row.getCell(13).setCellValue(noteGDkTgP06);
        	row.getCell(14).setCellValue(noteGDkTgQ01);
        	row.getCell(15).setCellValue(noteGDkTgQ02);
        	row.getCell(16).setCellValue(noteGDkTgH01);
        	row.getCell(17).setCellValue(noteGDkTgYTD);
        	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkOutP07);
        	row.getCell(5).setCellValue(noteGDkOutP08);
        	row.getCell(6).setCellValue(noteGDkOutP09);
        	row.getCell(7).setCellValue(noteGDkOutQ02);
        	row.getCell(8).setCellValue(noteGDkOutQ03);
        	row.getCell(9).setCellValue(noteGDkOutH01);
        	row.getCell(10).setCellValue(noteGDkOutH02);
        	row.getCell(11).setCellValue(noteGDkOutYTD);
        	row.getCell(12).setCellValue(noteGDkTgP07);
        	row.getCell(13).setCellValue(noteGDkTgP08);
        	row.getCell(14).setCellValue(noteGDkTgP09);
        	row.getCell(15).setCellValue(noteGDkTgQ02);
        	row.getCell(16).setCellValue(noteGDkTgQ03);
        	row.getCell(17).setCellValue(noteGDkTgH01);
        	row.getCell(18).setCellValue(noteGDkTgH02);
        	row.getCell(19).setCellValue(noteGDkTgYTD);
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(noteGDkOutP10);
        	row.getCell(5).setCellValue(noteGDkOutP11);
        	row.getCell(6).setCellValue(noteGDkOutP12);
        	row.getCell(7).setCellValue(noteGDkOutQ03);
        	row.getCell(8).setCellValue(noteGDkOutQ04);
        	row.getCell(9).setCellValue(noteGDkOutH01);
        	row.getCell(10).setCellValue(noteGDkOutH02);
        	row.getCell(11).setCellValue(noteGDkOutYTD);
        	row.getCell(12).setCellValue(noteGDkTgP10);
        	row.getCell(13).setCellValue(noteGDkTgP11);
        	row.getCell(14).setCellValue(noteGDkTgP12);
        	row.getCell(15).setCellValue(noteGDkTgQ03);
        	row.getCell(16).setCellValue(noteGDkTgQ04);
        	row.getCell(17).setCellValue(noteGDkTgH01);
        	row.getCell(18).setCellValue(noteGDkTgH02);
        	row.getCell(19).setCellValue(noteGDkTgYTD);
	    	
		}
	}
	
	/*
	 * Description: Note G Forecast (ON channel) 4~41번째 컬럼의 입력값을 셀에 입력
	 */
	public void setRowValue18(HSSFRow row, CellStyle style, Map rowData, String styleTxt) {
		
		if(indDepFcAcP01 != 0 && !(rowData.get("NOTAG_AC_P01").toString().equals(0))){
			noteGDkAc2P01 = ((Double.parseDouble(rowData.get("NOTAG_AC_P01").toString())/indDepFcAcP01)*100);
    	};
    	if(indDepFcAcP02 != 0 && !(rowData.get("NOTAG_AC_P02").toString().equals(0))){
    		noteGDkAc2P02 = ((Double.parseDouble(rowData.get("NOTAG_AC_P02").toString())/indDepFcAcP02)*100);
    	};
    	if(indDepFcAcP03 != 0 && !(rowData.get("NOTAG_AC_P03").toString().equals(0))){
    		noteGDkAc2P03 = ((Double.parseDouble(rowData.get("NOTAG_AC_P03").toString())/indDepFcAcP03)*100);
    	};
    	if(indDepFcAcP04 != 0 && !(rowData.get("NOTAG_AC_P04").toString().equals(0))){
    		noteGDkAc2P04 = ((Double.parseDouble(rowData.get("NOTAG_AC_P04").toString())/indDepFcAcP04)*100);
    	};
    	if(indDepFcAcP05 != 0 && !(rowData.get("NOTAG_AC_P05").toString().equals(0))){
    		noteGDkAc2P05 = ((Double.parseDouble(rowData.get("NOTAG_AC_P05").toString())/indDepFcAcP05)*100);
    	};
    	if(indDepFcAcP06 != 0 && !(rowData.get("NOTAG_AC_P06").toString().equals(0))){
    		noteGDkAc2P06 = ((Double.parseDouble(rowData.get("NOTAG_AC_P06").toString())/indDepFcAcP06)*100);
    	};
    	if(indDepFcAcP07 != 0 && !(rowData.get("NOTAG_AC_P07").toString().equals(0))){
    		noteGDkAc2P07 = ((Double.parseDouble(rowData.get("NOTAG_AC_P07").toString())/indDepFcAcP07)*100);
    	};
    	if(indDepFcAcP08 != 0 && !(rowData.get("NOTAG_AC_P08").toString().equals(0))){
    		noteGDkAc2P08 = ((Double.parseDouble(rowData.get("NOTAG_AC_P08").toString())/indDepFcAcP08)*100);
    	};
    	if(indDepFcAcP09 != 0 && !(rowData.get("NOTAG_AC_P09").toString().equals(0))){
    		noteGDkAc2P09 = ((Double.parseDouble(rowData.get("NOTAG_AC_P09").toString())/indDepFcAcP09)*100);
    	};
    	if(indDepFcAcP10 != 0 && !(rowData.get("NOTAG_AC_P10").toString().equals(0))){
    		noteGDkAc2P10 = ((Double.parseDouble(rowData.get("NOTAG_AC_P10").toString())/indDepFcAcP10)*100);
    	};
    	if(indDepFcAcP11 != 0 && !(rowData.get("NOTAG_AC_P11").toString().equals(0))){
    		noteGDkAc2P11 = ((Double.parseDouble(rowData.get("NOTAG_AC_P11").toString())/indDepFcAcP11)*100);
    	};
    	if(indDepFcAcP12 != 0 && !(rowData.get("NOTAG_AC_P12").toString().equals(0))){
    		noteGDkAc2P12 = ((Double.parseDouble(rowData.get("NOTAG_AC_P12").toString())/indDepFcAcP12)*100);
    	};
    	if(indDepFcAcQ01 != 0 && !(rowData.get("NOTAG_AC_Q01").toString().equals(0))){
    		noteGDkAc2Q01 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q01").toString())/indDepFcAcQ01)*100);
    	};
    	if(indDepFcAcQ02 != 0 && !(rowData.get("NOTAG_AC_Q02").toString().equals(0))){
    		noteGDkAc2Q02 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q02").toString())/indDepFcAcQ02)*100);
    	};
    	if(indDepFcAcQ03 != 0 && !(rowData.get("NOTAG_AC_Q03").toString().equals(0))){
    		noteGDkAc2Q03 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q03").toString())/indDepFcAcQ03)*100);
    	};
    	if(indDepFcAcQ04 != 0 && !(rowData.get("NOTAG_AC_Q04").toString().equals(0))){
    		noteGDkAc2Q04 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q04").toString())/indDepFcAcQ04)*100);
    	};
    	if(indDepFcAcH01 != 0 && !(rowData.get("NOTAG_AC_H01").toString().equals(0))){
    		noteGDkAc2H01 = ((Double.parseDouble(rowData.get("NOTAG_AC_H01").toString())/indDepFcAcH01)*100);
    	};
    	if(indDepFcAcH02 != 0 && !(rowData.get("NOTAG_AC_H02").toString().equals(0))){
    		noteGDkAc2H02 = ((Double.parseDouble(rowData.get("NOTAG_AC_H02").toString())/indDepFcAcH02)*100);
    	};
    	if(ytd_Param.equals("P01")){
    		if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD01").toString().equals(0))){
    			noteGDkAc2YTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD01").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P02")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD02").toString().equals(0))){
				noteGDkAc2YTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD02").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P03")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD03").toString().equals(0))){
				noteGDkAc2YTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD03").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P04")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD04").toString().equals(0))){
				noteGDkAc2YTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD04").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P05")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD05").toString().equals(0))){
				noteGDkAc2YTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD05").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P06")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD06").toString().equals(0))){
				noteGDkAc2YTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD06").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P07")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD07").toString().equals(0))){
				noteGDkAc2YTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD07").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P08")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD08").toString().equals(0))){
				noteGDkAc2YTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD08").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P09")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD09").toString().equals(0))){
				noteGDkAc2YTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD09").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P10")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD10").toString().equals(0))){
				noteGDkAc2YTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD10").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P11")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD11").toString().equals(0))){
				noteGDkAc2YTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD11").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P12")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD12").toString().equals(0))){
				noteGDkAc2YTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString())/indDepFcAcYTD)*100);
        	};
		}else{
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_AC_YTD12").toString().equals(0))){
				noteGDkAc2YTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString())/indDepFcAcYTD)*100);
        	};
		}
    	
    	if(indDepFcAcP01 != 0 && !(rowData.get("NOTAG_FOR_P01").toString().equals(0))){
			noteGDkFor2P01 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P01").toString())/indDepFcAcP01)*100);
    	};
    	if(indDepFcAcP02 != 0 && !(rowData.get("NOTAG_FOR_P02").toString().equals(0))){
    		noteGDkFor2P02 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P02").toString())/indDepFcAcP02)*100);
    	};
    	if(indDepFcAcP03 != 0 && !(rowData.get("NOTAG_FOR_P03").toString().equals(0))){
    		noteGDkFor2P03 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P03").toString())/indDepFcAcP03)*100);
    	};
    	if(indDepFcAcP04 != 0 && !(rowData.get("NOTAG_FOR_P04").toString().equals(0))){
    		noteGDkFor2P04 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P04").toString())/indDepFcAcP04)*100);
    	};
    	if(indDepFcAcP05 != 0 && !(rowData.get("NOTAG_FOR_P05").toString().equals(0))){
    		noteGDkFor2P05 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P05").toString())/indDepFcAcP05)*100);
    	};
    	if(indDepFcAcP06 != 0 && !(rowData.get("NOTAG_FOR_P06").toString().equals(0))){
    		noteGDkFor2P06 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P06").toString())/indDepFcAcP06)*100);
    	};
    	if(indDepFcAcP07 != 0 && !(rowData.get("NOTAG_FOR_P07").toString().equals(0))){
    		noteGDkFor2P07 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P07").toString())/indDepFcAcP07)*100);
    	};
    	if(indDepFcAcP08 != 0 && !(rowData.get("NOTAG_FOR_P08").toString().equals(0))){
    		noteGDkFor2P08 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P08").toString())/indDepFcAcP08)*100);
    	};
    	if(indDepFcAcP09 != 0 && !(rowData.get("NOTAG_FOR_P09").toString().equals(0))){
    		noteGDkFor2P09 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P09").toString())/indDepFcAcP09)*100);
    	};
    	if(indDepFcAcP10 != 0 && !(rowData.get("NOTAG_FOR_P10").toString().equals(0))){
    		noteGDkFor2P10 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P10").toString())/indDepFcAcP10)*100);
    	};
    	if(indDepFcAcP11 != 0 && !(rowData.get("NOTAG_FOR_P11").toString().equals(0))){
    		noteGDkFor2P11 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P11").toString())/indDepFcAcP11)*100);
    	};
    	if(indDepFcAcP12 != 0 && !(rowData.get("NOTAG_FOR_P12").toString().equals(0))){
    		noteGDkFor2P12 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P12").toString())/indDepFcAcP12)*100);
    	};
    	if(indDepFcAcQ01 != 0 && !(rowData.get("NOTAG_FOR_Q01").toString().equals(0))){
    		noteGDkFor2Q01 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q01").toString())/indDepFcAcQ01)*100);
    	};
    	if(indDepFcAcQ02 != 0 && !(rowData.get("NOTAG_FOR_Q02").toString().equals(0))){
    		noteGDkFor2Q02 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q02").toString())/indDepFcAcQ02)*100);
    	};
    	if(indDepFcAcQ03 != 0 && !(rowData.get("NOTAG_FOR_Q03").toString().equals(0))){
    		noteGDkFor2Q03 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q03").toString())/indDepFcAcQ03)*100);
    	};
    	if(indDepFcAcQ04 != 0 && !(rowData.get("NOTAG_FOR_Q04").toString().equals(0))){
    		noteGDkFor2Q04 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q04").toString())/indDepFcAcQ04)*100);
    	};
    	if(indDepFcAcH01 != 0 && !(rowData.get("NOTAG_FOR_H01").toString().equals(0))){
    		noteGDkFor2H01 = ((Double.parseDouble(rowData.get("NOTAG_FOR_H01").toString())/indDepFcAcH01)*100);
    	};
    	if(indDepFcAcH02 != 0 && !(rowData.get("NOTAG_FOR_H02").toString().equals(0))){
    		noteGDkFor2H02 = ((Double.parseDouble(rowData.get("NOTAG_FOR_H02").toString())/indDepFcAcH02)*100);
    	};
    	if(ytd_Param.equals("P01")){
    		if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD01").toString().equals(0))){
    			noteGDkFor2YTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD01").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P02")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD02").toString().equals(0))){
				noteGDkFor2YTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD02").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P03")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD03").toString().equals(0))){
				noteGDkFor2YTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD03").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P04")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD04").toString().equals(0))){
				noteGDkFor2YTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD04").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P05")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD05").toString().equals(0))){
				noteGDkFor2YTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD05").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P06")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD06").toString().equals(0))){
				noteGDkFor2YTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD06").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P07")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD07").toString().equals(0))){
				noteGDkFor2YTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD07").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P08")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD08").toString().equals(0))){
				noteGDkFor2YTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD08").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P09")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD09").toString().equals(0))){
				noteGDkFor2YTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD09").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P10")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD10").toString().equals(0))){
				noteGDkFor2YTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD10").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P11")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD11").toString().equals(0))){
				noteGDkFor2YTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD11").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P12")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD12").toString().equals(0))){
				noteGDkFor2YTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString())/indDepFcAcYTD)*100);
        	};
		}else{
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_FOR_YTD12").toString().equals(0))){
				noteGDkFor2YTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString())/indDepFcAcYTD)*100);
        	};
		}
    	
    	if(indDepFcAcP01 != 0 && !(rowData.get("NOTAG_OUT_P01").toString().equals(0))){
			noteGDkOut2P01 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P01").toString())/indDepFcAcP01)*100);
    	};
    	if(indDepFcAcP02 != 0 && !(rowData.get("NOTAG_OUT_P02").toString().equals(0))){
    		noteGDkOut2P02 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P02").toString())/indDepFcAcP02)*100);
    	};
    	if(indDepFcAcP03 != 0 && !(rowData.get("NOTAG_OUT_P03").toString().equals(0))){
    		noteGDkOut2P03 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P03").toString())/indDepFcAcP03)*100);
    	};
    	if(indDepFcAcP04 != 0 && !(rowData.get("NOTAG_OUT_P04").toString().equals(0))){
    		noteGDkOut2P04 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P04").toString())/indDepFcAcP04)*100);
    	};
    	if(indDepFcAcP05 != 0 && !(rowData.get("NOTAG_OUT_P05").toString().equals(0))){
    		noteGDkOut2P05 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P05").toString())/indDepFcAcP05)*100);
    	};
    	if(indDepFcAcP06 != 0 && !(rowData.get("NOTAG_OUT_P06").toString().equals(0))){
    		noteGDkOut2P06 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P06").toString())/indDepFcAcP06)*100);
    	};
    	if(indDepFcAcP07 != 0 && !(rowData.get("NOTAG_OUT_P07").toString().equals(0))){
    		noteGDkOut2P07 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P07").toString())/indDepFcAcP07)*100);
    	};
    	if(indDepFcAcP08 != 0 && !(rowData.get("NOTAG_OUT_P08").toString().equals(0))){
    		noteGDkOut2P08 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P08").toString())/indDepFcAcP08)*100);
    	};
    	if(indDepFcAcP09 != 0 && !(rowData.get("NOTAG_OUT_P09").toString().equals(0))){
    		noteGDkOut2P09 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P09").toString())/indDepFcAcP09)*100);
    	};
    	if(indDepFcAcP10 != 0 && !(rowData.get("NOTAG_OUT_P10").toString().equals(0))){
    		noteGDkOut2P10 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P10").toString())/indDepFcAcP10)*100);
    	};
    	if(indDepFcAcP11 != 0 && !(rowData.get("NOTAG_OUT_P11").toString().equals(0))){
    		noteGDkOut2P11 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P11").toString())/indDepFcAcP11)*100);
    	};
    	if(indDepFcAcP12 != 0 && !(rowData.get("NOTAG_OUT_P12").toString().equals(0))){
    		noteGDkOut2P12 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P12").toString())/indDepFcAcP12)*100);
    	};
    	if(indDepFcAcQ01 != 0 && !(rowData.get("NOTAG_OUT_Q01").toString().equals(0))){
    		noteGDkOut2Q01 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q01").toString())/indDepFcAcQ01)*100);
    	};
    	if(indDepFcAcQ02 != 0 && !(rowData.get("NOTAG_OUT_Q02").toString().equals(0))){
    		noteGDkOut2Q02 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q02").toString())/indDepFcAcQ02)*100);
    	};
    	if(indDepFcAcQ03 != 0 && !(rowData.get("NOTAG_OUT_Q03").toString().equals(0))){
    		noteGDkOut2Q03 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q03").toString())/indDepFcAcQ03)*100);
    	};
    	if(indDepFcAcQ04 != 0 && !(rowData.get("NOTAG_OUT_Q04").toString().equals(0))){
    		noteGDkOut2Q04 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q04").toString())/indDepFcAcQ04)*100);
    	};
    	if(indDepFcAcH01 != 0 && !(rowData.get("NOTAG_OUT_H01").toString().equals(0))){
    		noteGDkOut2H01 = ((Double.parseDouble(rowData.get("NOTAG_OUT_H01").toString())/indDepFcAcH01)*100);
    	};
    	if(indDepFcAcH02 != 0 && !(rowData.get("NOTAG_OUT_H02").toString().equals(0))){
    		noteGDkOut2H02 = ((Double.parseDouble(rowData.get("NOTAG_OUT_H02").toString())/indDepFcAcH02)*100);
    	};
    	if(ytd_Param.equals("P01")){
    		if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD01").toString().equals(0))){
    			noteGDkOut2YTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD01").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P02")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD02").toString().equals(0))){
				noteGDkOut2YTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD02").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P03")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD03").toString().equals(0))){
				noteGDkOut2YTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD03").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P04")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD04").toString().equals(0))){
				noteGDkOut2YTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD04").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P05")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD05").toString().equals(0))){
				noteGDkOut2YTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD05").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P06")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD06").toString().equals(0))){
				noteGDkOut2YTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD06").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P07")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD07").toString().equals(0))){
				noteGDkOut2YTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD07").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P08")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD08").toString().equals(0))){
				noteGDkOut2YTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD08").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P09")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD09").toString().equals(0))){
				noteGDkOut2YTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD09").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P10")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD10").toString().equals(0))){
				noteGDkOut2YTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD10").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P11")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD11").toString().equals(0))){
				noteGDkOut2YTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD11").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P12")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD12").toString().equals(0))){
				noteGDkOut2YTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD12").toString())/indDepFcAcYTD)*100);
        	};
		}else{
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_OUT_YTD12").toString().equals(0))){
				noteGDkOut2YTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD12").toString())/indDepFcAcYTD)*100);
        	};
		}
    	
    	if(indDepFcAcP01 != 0 && !(rowData.get("NOTAG_TG_P01").toString().equals(0))){
			noteGDkTg2P01 = ((Double.parseDouble(rowData.get("NOTAG_TG_P01").toString())/indDepFcAcP01)*100);
    	};
    	if(indDepFcAcP02 != 0 && !(rowData.get("NOTAG_TG_P02").toString().equals(0))){
    		noteGDkTg2P02 = ((Double.parseDouble(rowData.get("NOTAG_TG_P02").toString())/indDepFcAcP02)*100);
    	};
    	if(indDepFcAcP03 != 0 && !(rowData.get("NOTAG_TG_P03").toString().equals(0))){
    		noteGDkTg2P03 = ((Double.parseDouble(rowData.get("NOTAG_TG_P03").toString())/indDepFcAcP03)*100);
    	};
    	if(indDepFcAcP04 != 0 && !(rowData.get("NOTAG_TG_P04").toString().equals(0))){
    		noteGDkTg2P04 = ((Double.parseDouble(rowData.get("NOTAG_TG_P04").toString())/indDepFcAcP04)*100);
    	};
    	if(indDepFcAcP05 != 0 && !(rowData.get("NOTAG_TG_P05").toString().equals(0))){
    		noteGDkTg2P05 = ((Double.parseDouble(rowData.get("NOTAG_TG_P05").toString())/indDepFcAcP05)*100);
    	};
    	if(indDepFcAcP06 != 0 && !(rowData.get("NOTAG_TG_P06").toString().equals(0))){
    		noteGDkTg2P06 = ((Double.parseDouble(rowData.get("NOTAG_TG_P06").toString())/indDepFcAcP06)*100);
    	};
    	if(indDepFcAcP07 != 0 && !(rowData.get("NOTAG_TG_P07").toString().equals(0))){
    		noteGDkTg2P07 = ((Double.parseDouble(rowData.get("NOTAG_TG_P07").toString())/indDepFcAcP07)*100);
    	};
    	if(indDepFcAcP08 != 0 && !(rowData.get("NOTAG_TG_P08").toString().equals(0))){
    		noteGDkTg2P08 = ((Double.parseDouble(rowData.get("NOTAG_TG_P08").toString())/indDepFcAcP08)*100);
    	};
    	if(indDepFcAcP09 != 0 && !(rowData.get("NOTAG_TG_P09").toString().equals(0))){
    		noteGDkTg2P09 = ((Double.parseDouble(rowData.get("NOTAG_TG_P09").toString())/indDepFcAcP09)*100);
    	};
    	if(indDepFcAcP10 != 0 && !(rowData.get("NOTAG_TG_P10").toString().equals(0))){
    		noteGDkTg2P10 = ((Double.parseDouble(rowData.get("NOTAG_TG_P10").toString())/indDepFcAcP10)*100);
    	};
    	if(indDepFcAcP11 != 0 && !(rowData.get("NOTAG_TG_P11").toString().equals(0))){
    		noteGDkTg2P11 = ((Double.parseDouble(rowData.get("NOTAG_TG_P11").toString())/indDepFcAcP11)*100);
    	};
    	if(indDepFcAcP12 != 0 && !(rowData.get("NOTAG_TG_P12").toString().equals(0))){
    		noteGDkTg2P12 = ((Double.parseDouble(rowData.get("NOTAG_TG_P12").toString())/indDepFcAcP12)*100);
    	};
    	if(indDepFcAcQ01 != 0 && !(rowData.get("NOTAG_TG_Q01").toString().equals(0))){
    		noteGDkTg2Q01 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q01").toString())/indDepFcAcQ01)*100);
    	};
    	if(indDepFcAcQ02 != 0 && !(rowData.get("NOTAG_TG_Q02").toString().equals(0))){
    		noteGDkTg2Q02 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q02").toString())/indDepFcAcQ02)*100);
    	};
    	if(indDepFcAcQ03 != 0 && !(rowData.get("NOTAG_TG_Q03").toString().equals(0))){
    		noteGDkTg2Q03 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q03").toString())/indDepFcAcQ03)*100);
    	};
    	if(indDepFcAcQ04 != 0 && !(rowData.get("NOTAG_TG_Q04").toString().equals(0))){
    		noteGDkTg2Q04 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q04").toString())/indDepFcAcQ04)*100);
    	};
    	if(indDepFcAcH01 != 0 && !(rowData.get("NOTAG_TG_H01").toString().equals(0))){
    		noteGDkTg2H01 = ((Double.parseDouble(rowData.get("NOTAG_TG_H01").toString())/indDepFcAcH01)*100);
    	};
    	if(indDepFcAcH02 != 0 && !(rowData.get("NOTAG_TG_H02").toString().equals(0))){
    		noteGDkTg2H02 = ((Double.parseDouble(rowData.get("NOTAG_TG_H02").toString())/indDepFcAcH02)*100);
    	};
    	if(ytd_Param.equals("P01")){
    		if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD01").toString().equals(0))){
    			noteGDkTg2YTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD01").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P02")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD02").toString().equals(0))){
				noteGDkTg2YTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD02").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P03")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD03").toString().equals(0))){
				noteGDkTg2YTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD03").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P04")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD04").toString().equals(0))){
				noteGDkTg2YTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD04").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P05")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD05").toString().equals(0))){
				noteGDkTg2YTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD05").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P06")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD06").toString().equals(0))){
				noteGDkTg2YTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD06").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P07")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD07").toString().equals(0))){
				noteGDkTg2YTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD07").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P08")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD08").toString().equals(0))){
				noteGDkTg2YTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD08").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P09")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD09").toString().equals(0))){
				noteGDkTg2YTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD09").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P10")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD10").toString().equals(0))){
				noteGDkTg2YTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD10").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P11")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD11").toString().equals(0))){
				noteGDkTg2YTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD11").toString())/indDepFcAcYTD)*100);
        	};
		}else if(ytd_Param.equals("P12")){
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD12").toString().equals(0))){
				noteGDkTg2YTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString())/indDepFcAcYTD)*100);
        	};
		}else{
			if(indDepFcAcYTD != 0 && !(rowData.get("NOTAG_TG_YTD12").toString().equals(0))){
				noteGDkTg2YTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString())/indDepFcAcYTD)*100);
        	};
		}
    	
		if(periodChk_Param.equals("Y")){
			
			for(int i=4; i<42; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkAc2P01);
        	row.getCell(5).setCellValue(noteGDkAc2P02);
        	row.getCell(6).setCellValue(noteGDkAc2P03);
        	row.getCell(7).setCellValue(noteGDkAc2P04);
        	row.getCell(8).setCellValue(noteGDkAc2P05);
        	row.getCell(9).setCellValue(noteGDkAc2P06);
        	row.getCell(10).setCellValue(noteGDkAc2P07);
        	row.getCell(11).setCellValue(noteGDkAc2P08);
        	row.getCell(12).setCellValue(noteGDkAc2P09);
        	row.getCell(13).setCellValue(noteGDkAc2P10);
        	row.getCell(14).setCellValue(noteGDkAc2P11);
        	row.getCell(15).setCellValue(noteGDkAc2P12);
        	row.getCell(16).setCellValue(noteGDkAc2Q01);
        	row.getCell(17).setCellValue(noteGDkAc2Q02);
        	row.getCell(18).setCellValue(noteGDkAc2Q03);
        	row.getCell(19).setCellValue(noteGDkAc2Q04);
        	row.getCell(20).setCellValue(noteGDkAc2H01);
        	row.getCell(21).setCellValue(noteGDkAc2H02);
        	row.getCell(22).setCellValue(noteGDkAc2YTD);
        	row.getCell(23).setCellValue(noteGDkFor2P01);
        	row.getCell(24).setCellValue(noteGDkFor2P02);
        	row.getCell(25).setCellValue(noteGDkFor2P03);
        	row.getCell(26).setCellValue(noteGDkFor2P04);
        	row.getCell(27).setCellValue(noteGDkFor2P05);
        	row.getCell(28).setCellValue(noteGDkFor2P06);
        	row.getCell(29).setCellValue(noteGDkFor2P07);
        	row.getCell(30).setCellValue(noteGDkFor2P08);
        	row.getCell(31).setCellValue(noteGDkFor2P09);
        	row.getCell(32).setCellValue(noteGDkFor2P10);
        	row.getCell(33).setCellValue(noteGDkFor2P11);
        	row.getCell(34).setCellValue(noteGDkFor2P12);
        	row.getCell(35).setCellValue(noteGDkFor2Q01);
        	row.getCell(36).setCellValue(noteGDkFor2Q02);
        	row.getCell(37).setCellValue(noteGDkFor2Q03);
        	row.getCell(38).setCellValue(noteGDkFor2Q04);
        	row.getCell(39).setCellValue(noteGDkFor2H01);
        	row.getCell(40).setCellValue(noteGDkFor2H02);
        	row.getCell(41).setCellValue(noteGDkFor2YTD);
    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=4; i<16; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(noteGDkAc2P01);
        	row.getCell(5).setCellValue(noteGDkAc2P02);
        	row.getCell(6).setCellValue(noteGDkAc2P03);
        	row.getCell(7).setCellValue(noteGDkAc2Q01);
        	row.getCell(8).setCellValue(noteGDkAc2H01);
        	row.getCell(9).setCellValue(noteGDkAc2YTD);
        	row.getCell(10).setCellValue(noteGDkFor2P01);
        	row.getCell(11).setCellValue(noteGDkFor2P02);
        	row.getCell(12).setCellValue(noteGDkFor2P03);
        	row.getCell(13).setCellValue(noteGDkFor2Q01);
        	row.getCell(14).setCellValue(noteGDkFor2H01);
        	row.getCell(15).setCellValue(noteGDkFor2YTD);
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=4; i<18; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkAc2P04);
        	row.getCell(5).setCellValue(noteGDkAc2P05);
        	row.getCell(6).setCellValue(noteGDkAc2P06);
        	row.getCell(7).setCellValue(noteGDkAc2Q01);
        	row.getCell(8).setCellValue(noteGDkAc2Q02);
        	row.getCell(9).setCellValue(noteGDkAc2H01);
        	row.getCell(10).setCellValue(noteGDkAc2YTD);
        	row.getCell(11).setCellValue(noteGDkFor2P04);
        	row.getCell(12).setCellValue(noteGDkFor2P05);
        	row.getCell(13).setCellValue(noteGDkFor2P06);
        	row.getCell(14).setCellValue(noteGDkFor2Q01);
        	row.getCell(15).setCellValue(noteGDkFor2Q02);
        	row.getCell(16).setCellValue(noteGDkFor2H01);
        	row.getCell(17).setCellValue(noteGDkFor2YTD);
        	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkAc2P07);
        	row.getCell(5).setCellValue(noteGDkAc2P08);
        	row.getCell(6).setCellValue(noteGDkAc2P09);
        	row.getCell(7).setCellValue(noteGDkAc2Q02);
        	row.getCell(8).setCellValue(noteGDkAc2Q03);
        	row.getCell(9).setCellValue(noteGDkAc2H01);
        	row.getCell(10).setCellValue(noteGDkAc2H02);
        	row.getCell(11).setCellValue(noteGDkAc2YTD);
        	row.getCell(12).setCellValue(noteGDkFor2P07);
        	row.getCell(13).setCellValue(noteGDkFor2P08);
        	row.getCell(14).setCellValue(noteGDkFor2P09);
        	row.getCell(15).setCellValue(noteGDkFor2Q02);
        	row.getCell(16).setCellValue(noteGDkFor2Q03);
        	row.getCell(17).setCellValue(noteGDkFor2H01);
        	row.getCell(18).setCellValue(noteGDkFor2H02);
        	row.getCell(19).setCellValue(noteGDkFor2YTD);
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(noteGDkAc2P10);
        	row.getCell(5).setCellValue(noteGDkAc2P11);
        	row.getCell(6).setCellValue(noteGDkAc2P12);
        	row.getCell(7).setCellValue(noteGDkAc2Q03);
        	row.getCell(8).setCellValue(noteGDkAc2Q04);
        	row.getCell(9).setCellValue(noteGDkAc2H01);
        	row.getCell(10).setCellValue(noteGDkAc2H02);
        	row.getCell(11).setCellValue(noteGDkAc2YTD);
        	row.getCell(12).setCellValue(noteGDkFor2P10);
        	row.getCell(13).setCellValue(noteGDkFor2P11);
        	row.getCell(14).setCellValue(noteGDkFor2P12);
        	row.getCell(15).setCellValue(noteGDkFor2Q03);
        	row.getCell(16).setCellValue(noteGDkFor2Q04);
        	row.getCell(17).setCellValue(noteGDkFor2H01);
        	row.getCell(18).setCellValue(noteGDkFor2H02);
        	row.getCell(19).setCellValue(noteGDkFor2YTD);
	    	
		}
    	
    	// 계산식을 위해 리스트에 값을 담아준다.
    	noteGMap = new HashMap();
    	
    	noteGMap.put("STYLETXT", styleTxt);
    	noteGMap.put("TOTAL", "");
    	noteGMap.put("NOTAG_AC_P01", noteGDkAc2P01);
    	noteGMap.put("NOTAG_AC_P02", noteGDkAc2P02);
    	noteGMap.put("NOTAG_AC_P03", noteGDkAc2P03);
    	noteGMap.put("NOTAG_AC_P04", noteGDkAc2P04);
    	noteGMap.put("NOTAG_AC_P05", noteGDkAc2P05);
    	noteGMap.put("NOTAG_AC_P06", noteGDkAc2P06);
    	noteGMap.put("NOTAG_AC_P07", noteGDkAc2P07);
    	noteGMap.put("NOTAG_AC_P08", noteGDkAc2P08);
    	noteGMap.put("NOTAG_AC_P09", noteGDkAc2P09);
    	noteGMap.put("NOTAG_AC_P10", noteGDkAc2P10);
    	noteGMap.put("NOTAG_AC_P11", noteGDkAc2P11);
    	noteGMap.put("NOTAG_AC_P12", noteGDkAc2P12);
    	noteGMap.put("NOTAG_AC_Q01", noteGDkAc2Q01);
    	noteGMap.put("NOTAG_AC_Q02", noteGDkAc2Q02);
    	noteGMap.put("NOTAG_AC_Q03", noteGDkAc2Q03);
    	noteGMap.put("NOTAG_AC_Q04", noteGDkAc2Q04);
    	noteGMap.put("NOTAG_AC_H01", noteGDkAc2H01);
    	noteGMap.put("NOTAG_AC_H02", noteGDkAc2H02);
    	noteGMap.put("NOTAG_AC_YTD", noteGDkAc2YTD);
		
    	noteGMap.put("NOTAG_FOR_P01", noteGDkFor2P01);
    	noteGMap.put("NOTAG_FOR_P02", noteGDkFor2P02);
    	noteGMap.put("NOTAG_FOR_P03", noteGDkFor2P03);
    	noteGMap.put("NOTAG_FOR_P04", noteGDkFor2P04);
    	noteGMap.put("NOTAG_FOR_P05", noteGDkFor2P05);
    	noteGMap.put("NOTAG_FOR_P06", noteGDkFor2P06);
    	noteGMap.put("NOTAG_FOR_P07", noteGDkFor2P07);
    	noteGMap.put("NOTAG_FOR_P08", noteGDkFor2P08);
    	noteGMap.put("NOTAG_FOR_P09", noteGDkFor2P09);
    	noteGMap.put("NOTAG_FOR_P10", noteGDkFor2P10);
    	noteGMap.put("NOTAG_FOR_P11", noteGDkFor2P11);
    	noteGMap.put("NOTAG_FOR_P12", noteGDkFor2P12);
    	noteGMap.put("NOTAG_FOR_Q01", noteGDkFor2Q01);
    	noteGMap.put("NOTAG_FOR_Q02", noteGDkFor2Q02);
    	noteGMap.put("NOTAG_FOR_Q03", noteGDkFor2Q03);
    	noteGMap.put("NOTAG_FOR_Q04", noteGDkFor2Q04);
    	noteGMap.put("NOTAG_FOR_H01", noteGDkFor2H01);
    	noteGMap.put("NOTAG_FOR_H02", noteGDkFor2H02);
    	noteGMap.put("NOTAG_FOR_YTD", noteGDkFor2YTD);
    	
    	noteGMap.put("NOTAG_OUT_P01", noteGDkOut2P01);
    	noteGMap.put("NOTAG_OUT_P02", noteGDkOut2P02);
    	noteGMap.put("NOTAG_OUT_P03", noteGDkOut2P03);
    	noteGMap.put("NOTAG_OUT_P04", noteGDkOut2P04);
    	noteGMap.put("NOTAG_OUT_P05", noteGDkOut2P05);
    	noteGMap.put("NOTAG_OUT_P06", noteGDkOut2P06);
    	noteGMap.put("NOTAG_OUT_P07", noteGDkOut2P07);
    	noteGMap.put("NOTAG_OUT_P08", noteGDkOut2P08);
    	noteGMap.put("NOTAG_OUT_P09", noteGDkOut2P09);
    	noteGMap.put("NOTAG_OUT_P10", noteGDkOut2P10);
    	noteGMap.put("NOTAG_OUT_P11", noteGDkOut2P11);
    	noteGMap.put("NOTAG_OUT_P12", noteGDkOut2P12);
    	noteGMap.put("NOTAG_OUT_Q01", noteGDkOut2Q01);
    	noteGMap.put("NOTAG_OUT_Q02", noteGDkOut2Q02);
    	noteGMap.put("NOTAG_OUT_Q03", noteGDkOut2Q03);
    	noteGMap.put("NOTAG_OUT_Q04", noteGDkOut2Q04);
    	noteGMap.put("NOTAG_OUT_H01", noteGDkOut2H01);
    	noteGMap.put("NOTAG_OUT_H02", noteGDkOut2H02);
    	noteGMap.put("NOTAG_OUT_YTD", noteGDkOut2YTD);
    	
    	noteGMap.put("NOTAG_TG_P01", noteGDkTg2P01);
    	noteGMap.put("NOTAG_TG_P02", noteGDkTg2P02);
    	noteGMap.put("NOTAG_TG_P03", noteGDkTg2P03);
    	noteGMap.put("NOTAG_TG_P04", noteGDkTg2P04);
    	noteGMap.put("NOTAG_TG_P05", noteGDkTg2P05);
    	noteGMap.put("NOTAG_TG_P06", noteGDkTg2P06);
    	noteGMap.put("NOTAG_TG_P07", noteGDkTg2P07);
    	noteGMap.put("NOTAG_TG_P08", noteGDkTg2P08);
    	noteGMap.put("NOTAG_TG_P09", noteGDkTg2P09);
    	noteGMap.put("NOTAG_TG_P10", noteGDkTg2P10);
    	noteGMap.put("NOTAG_TG_P11", noteGDkTg2P11);
    	noteGMap.put("NOTAG_TG_P12", noteGDkTg2P12);
    	noteGMap.put("NOTAG_TG_Q01", noteGDkTg2Q01);
    	noteGMap.put("NOTAG_TG_Q02", noteGDkTg2Q02);
    	noteGMap.put("NOTAG_TG_Q03", noteGDkTg2Q03);
    	noteGMap.put("NOTAG_TG_Q04", noteGDkTg2Q04);
    	noteGMap.put("NOTAG_TG_H01", noteGDkTg2H01);
    	noteGMap.put("NOTAG_TG_H02", noteGDkTg2H02);
    	noteGMap.put("NOTAG_TG_YTD", noteGDkTg2YTD);
    	
		noteG.add(noteGMap);
		
	}
	
	/*
	 * Description: Note G Forecast (ON channel) 4~41번째 컬럼의 입력값을 셀에 입력
	 */
	public void setRowValue19(HSSFRow row, CellStyle style, Map rowData, String styleTxt) {
		
		if(periodChk_Param.equals("Y")){
			
			for(int i=4; i<42; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkOut2P01);
        	row.getCell(5).setCellValue(noteGDkOut2P02);
        	row.getCell(6).setCellValue(noteGDkOut2P03);
        	row.getCell(7).setCellValue(noteGDkOut2P04);
        	row.getCell(8).setCellValue(noteGDkOut2P05);
        	row.getCell(9).setCellValue(noteGDkOut2P06);
        	row.getCell(10).setCellValue(noteGDkOut2P07);
        	row.getCell(11).setCellValue(noteGDkOut2P08);
        	row.getCell(12).setCellValue(noteGDkOut2P09);
        	row.getCell(13).setCellValue(noteGDkOut2P10);
        	row.getCell(14).setCellValue(noteGDkOut2P11);
        	row.getCell(15).setCellValue(noteGDkOut2P12);
        	row.getCell(16).setCellValue(noteGDkOut2Q01);
        	row.getCell(17).setCellValue(noteGDkOut2Q02);
        	row.getCell(18).setCellValue(noteGDkOut2Q03);
        	row.getCell(19).setCellValue(noteGDkOut2Q04);
        	row.getCell(20).setCellValue(noteGDkOut2H01);
        	row.getCell(21).setCellValue(noteGDkOut2H02);
        	row.getCell(22).setCellValue(noteGDkOut2YTD);
        	row.getCell(23).setCellValue(noteGDkTg2P01);
        	row.getCell(24).setCellValue(noteGDkTg2P02);
        	row.getCell(25).setCellValue(noteGDkTg2P03);
        	row.getCell(26).setCellValue(noteGDkTg2P04);
        	row.getCell(27).setCellValue(noteGDkTg2P05);
        	row.getCell(28).setCellValue(noteGDkTg2P06);
        	row.getCell(29).setCellValue(noteGDkTg2P07);
        	row.getCell(30).setCellValue(noteGDkTg2P08);
        	row.getCell(31).setCellValue(noteGDkTg2P09);
        	row.getCell(32).setCellValue(noteGDkTg2P10);
        	row.getCell(33).setCellValue(noteGDkTg2P11);
        	row.getCell(34).setCellValue(noteGDkTg2P12);
        	row.getCell(35).setCellValue(noteGDkTg2Q01);
        	row.getCell(36).setCellValue(noteGDkTg2Q02);
        	row.getCell(37).setCellValue(noteGDkTg2Q03);
        	row.getCell(38).setCellValue(noteGDkTg2Q04);
        	row.getCell(39).setCellValue(noteGDkTg2H01);
        	row.getCell(40).setCellValue(noteGDkTg2H02);
        	row.getCell(41).setCellValue(noteGDkTg2YTD);
    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=4; i<16; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(noteGDkOut2P01);
        	row.getCell(5).setCellValue(noteGDkOut2P02);
        	row.getCell(6).setCellValue(noteGDkOut2P03);
        	row.getCell(7).setCellValue(noteGDkOut2Q01);
        	row.getCell(8).setCellValue(noteGDkOut2H01);
        	row.getCell(9).setCellValue(noteGDkOut2YTD);
        	row.getCell(10).setCellValue(noteGDkTg2P01);
        	row.getCell(11).setCellValue(noteGDkTg2P02);
        	row.getCell(12).setCellValue(noteGDkTg2P03);
        	row.getCell(13).setCellValue(noteGDkTg2Q01);
        	row.getCell(14).setCellValue(noteGDkTg2H01);
        	row.getCell(15).setCellValue(noteGDkTg2YTD);
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=4; i<18; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkOut2P04);
        	row.getCell(5).setCellValue(noteGDkOut2P05);
        	row.getCell(6).setCellValue(noteGDkOut2P06);
        	row.getCell(7).setCellValue(noteGDkOut2Q01);
        	row.getCell(8).setCellValue(noteGDkOut2Q02);
        	row.getCell(9).setCellValue(noteGDkOut2H01);
        	row.getCell(10).setCellValue(noteGDkOut2YTD);
        	row.getCell(11).setCellValue(noteGDkTg2P04);
        	row.getCell(12).setCellValue(noteGDkTg2P05);
        	row.getCell(13).setCellValue(noteGDkTg2P06);
        	row.getCell(14).setCellValue(noteGDkTg2Q01);
        	row.getCell(15).setCellValue(noteGDkTg2Q02);
        	row.getCell(16).setCellValue(noteGDkTg2H01);
        	row.getCell(17).setCellValue(noteGDkTg2YTD);
        	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkOut2P07);
        	row.getCell(5).setCellValue(noteGDkOut2P08);
        	row.getCell(6).setCellValue(noteGDkOut2P09);
        	row.getCell(7).setCellValue(noteGDkOut2Q02);
        	row.getCell(8).setCellValue(noteGDkOut2Q03);
        	row.getCell(9).setCellValue(noteGDkOut2H01);
        	row.getCell(10).setCellValue(noteGDkOut2H02);
        	row.getCell(11).setCellValue(noteGDkOut2YTD);
        	row.getCell(12).setCellValue(noteGDkTg2P07);
        	row.getCell(13).setCellValue(noteGDkTg2P08);
        	row.getCell(14).setCellValue(noteGDkTg2P09);
        	row.getCell(15).setCellValue(noteGDkTg2Q02);
        	row.getCell(16).setCellValue(noteGDkTg2Q03);
        	row.getCell(17).setCellValue(noteGDkTg2H01);
        	row.getCell(18).setCellValue(noteGDkTg2H02);
        	row.getCell(19).setCellValue(noteGDkTg2YTD);
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(noteGDkOut2P10);
        	row.getCell(5).setCellValue(noteGDkOut2P11);
        	row.getCell(6).setCellValue(noteGDkOut2P12);
        	row.getCell(7).setCellValue(noteGDkOut2Q03);
        	row.getCell(8).setCellValue(noteGDkOut2Q04);
        	row.getCell(9).setCellValue(noteGDkOut2H01);
        	row.getCell(10).setCellValue(noteGDkOut2H02);
        	row.getCell(11).setCellValue(noteGDkOut2YTD);
        	row.getCell(12).setCellValue(noteGDkTg2P10);
        	row.getCell(13).setCellValue(noteGDkTg2P11);
        	row.getCell(14).setCellValue(noteGDkTg2P12);
        	row.getCell(15).setCellValue(noteGDkTg2Q03);
        	row.getCell(16).setCellValue(noteGDkTg2Q04);
        	row.getCell(17).setCellValue(noteGDkTg2H01);
        	row.getCell(18).setCellValue(noteGDkTg2H02);
        	row.getCell(19).setCellValue(noteGDkTg2YTD);
	    	
		}
	}
	
	/*
	 * Note G Rate 계산
	 */
	public void setRowValue20(HSSFRow row, CellStyle style, Map rowData, String styleTxt, List dataList, String dataLv2, String dataLv3, String team) {
		
		double ng_local_ac_total_P01 = 0.0; double ng_local_ac_total_P02 = 0.0; double ng_local_ac_total_P03 = 0.0; double ng_local_ac_total_P04 = 0.0; double ng_local_ac_total_P05 = 0.0; double ng_local_ac_total_P06 = 0.0; 
		double ng_local_ac_total_P07 = 0.0; double ng_local_ac_total_P08 = 0.0; double ng_local_ac_total_P09 = 0.0; double ng_local_ac_total_P10 = 0.0; double ng_local_ac_total_P11 = 0.0; double ng_local_ac_total_P12 = 0.0; 
		double ng_local_ac_total_Q01 = 0.0; double ng_local_ac_total_Q02 = 0.0; double ng_local_ac_total_Q03 = 0.0; double ng_local_ac_total_Q04 = 0.0; double ng_local_ac_total_H01 = 0.0; double ng_local_ac_total_H02 = 0.0;
		double ng_local_ac_total_YTD01 = 0.0; double ng_local_ac_total_YTD02 = 0.0; double ng_local_ac_total_YTD03 = 0.0; double ng_local_ac_total_YTD04 = 0.0; double ng_local_ac_total_YTD05 = 0.0; double ng_local_ac_total_YTD06 = 0.0; 
		double ng_local_ac_total_YTD07 = 0.0; double ng_local_ac_total_YTD08 = 0.0; double ng_local_ac_total_YTD09 = 0.0; double ng_local_ac_total_YTD10 = 0.0; double ng_local_ac_total_YTD11 = 0.0; double ng_local_ac_total_YTD12 = 0.0;
		
		double ng_local_for_total_P01 = 0.0; double ng_local_for_total_P02 = 0.0; double ng_local_for_total_P03 = 0.0; double ng_local_for_total_P04 = 0.0; double ng_local_for_total_P05 = 0.0; double ng_local_for_total_P06 = 0.0; 
		double ng_local_for_total_P07 = 0.0; double ng_local_for_total_P08 = 0.0; double ng_local_for_total_P09 = 0.0; double ng_local_for_total_P10 = 0.0; double ng_local_for_total_P11 = 0.0; double ng_local_for_total_P12 = 0.0; 
		double ng_local_for_total_Q01 = 0.0; double ng_local_for_total_Q02 = 0.0; double ng_local_for_total_Q03 = 0.0; double ng_local_for_total_Q04 = 0.0; double ng_local_for_total_H01 = 0.0; double ng_local_for_total_H02 = 0.0;
		double ng_local_for_total_YTD01 = 0.0; double ng_local_for_total_YTD02 = 0.0; double ng_local_for_total_YTD03 = 0.0; double ng_local_for_total_YTD04 = 0.0; double ng_local_for_total_YTD05 = 0.0; double ng_local_for_total_YTD06 = 0.0; 
		double ng_local_for_total_YTD07 = 0.0; double ng_local_for_total_YTD08 = 0.0; double ng_local_for_total_YTD09 = 0.0; double ng_local_for_total_YTD10 = 0.0; double ng_local_for_total_YTD11 = 0.0; double ng_local_for_total_YTD12 = 0.0;
		
		double ng_local_out_total_P01 = 0.0; double ng_local_out_total_P02 = 0.0; double ng_local_out_total_P03 = 0.0; double ng_local_out_total_P04 = 0.0; double ng_local_out_total_P05 = 0.0; double ng_local_out_total_P06 = 0.0; 
		double ng_local_out_total_P07 = 0.0; double ng_local_out_total_P08 = 0.0; double ng_local_out_total_P09 = 0.0; double ng_local_out_total_P10 = 0.0; double ng_local_out_total_P11 = 0.0; double ng_local_out_total_P12 = 0.0; 
		double ng_local_out_total_Q01 = 0.0; double ng_local_out_total_Q02 = 0.0; double ng_local_out_total_Q03 = 0.0; double ng_local_out_total_Q04 = 0.0; double ng_local_out_total_H01 = 0.0; double ng_local_out_total_H02 = 0.0;
		double ng_local_out_total_YTD01 = 0.0; double ng_local_out_total_YTD02 = 0.0; double ng_local_out_total_YTD03 = 0.0; double ng_local_out_total_YTD04 = 0.0; double ng_local_out_total_YTD05 = 0.0; double ng_local_out_total_YTD06 = 0.0; 
		double ng_local_out_total_YTD07 = 0.0; double ng_local_out_total_YTD08 = 0.0; double ng_local_out_total_YTD09 = 0.0; double ng_local_out_total_YTD10 = 0.0; double ng_local_out_total_YTD11 = 0.0; double ng_local_out_total_YTD12 = 0.0;
		
		double ng_local_tg_total_P01 = 0.0; double ng_local_tg_total_P02 = 0.0; double ng_local_tg_total_P03 = 0.0; double ng_local_tg_total_P04 = 0.0; double ng_local_tg_total_P05 = 0.0; double ng_local_tg_total_P06 = 0.0; 
		double ng_local_tg_total_P07 = 0.0; double ng_local_tg_total_P08 = 0.0; double ng_local_tg_total_P09 = 0.0; double ng_local_tg_total_P10 = 0.0; double ng_local_tg_total_P11 = 0.0; double ng_local_tg_total_P12 = 0.0; 
		double ng_local_tg_total_Q01 = 0.0; double ng_local_tg_total_Q02 = 0.0; double ng_local_tg_total_Q03 = 0.0; double ng_local_tg_total_Q04 = 0.0; double ng_local_tg_total_H01 = 0.0; double ng_local_tg_total_H02 = 0.0;
		double ng_local_tg_total_YTD01 = 0.0; double ng_local_tg_total_YTD02 = 0.0; double ng_local_tg_total_YTD03 = 0.0; double ng_local_tg_total_YTD04 = 0.0; double ng_local_tg_total_YTD05 = 0.0; double ng_local_tg_total_YTD06 = 0.0; 
		double ng_local_tg_total_YTD07 = 0.0; double ng_local_tg_total_YTD08 = 0.0; double ng_local_tg_total_YTD09 = 0.0; double ng_local_tg_total_YTD10 = 0.0; double ng_local_tg_total_YTD11 = 0.0; double ng_local_tg_total_YTD12 = 0.0;
		
		
		Double colSum = 0.0;
		for (int i=0; i < dataList.size(); i++) {
			if(team == null || team == ""){
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P01 = ng_local_ac_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P02 = ng_local_ac_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P03 = ng_local_ac_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P04 = ng_local_ac_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P05 = ng_local_ac_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P06 = ng_local_ac_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P07 = ng_local_ac_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P08 = ng_local_ac_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P09 = ng_local_ac_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P10 = ng_local_ac_total_P10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P11 = ng_local_ac_total_P11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P12 = ng_local_ac_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P12").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_Q01 = ng_local_ac_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_Q01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_Q02 = ng_local_ac_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_Q02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_Q03 = ng_local_ac_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_Q03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_Q04 = ng_local_ac_total_Q04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_Q04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_H01 = ng_local_ac_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_H01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_H02 = ng_local_ac_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_H02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD01 = ng_local_ac_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD02 = ng_local_ac_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD03 = ng_local_ac_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD04 = ng_local_ac_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD05 = ng_local_ac_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD06 = ng_local_ac_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD07 = ng_local_ac_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD08 = ng_local_ac_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD09 = ng_local_ac_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD10 = ng_local_ac_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD11 = ng_local_ac_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD12 = ng_local_ac_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD12").toString());
				}
	
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P01 = ng_local_for_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P02 = ng_local_for_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P03 = ng_local_for_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P04 = ng_local_for_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P05 = ng_local_for_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P06 = ng_local_for_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P07 = ng_local_for_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P08 = ng_local_for_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P09 = ng_local_for_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P10 = ng_local_for_total_P10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P11 = ng_local_for_total_P11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P12 = ng_local_for_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P12").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_Q01 = ng_local_for_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_Q01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_Q02 = ng_local_for_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_Q02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_Q03 = ng_local_for_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_Q03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_Q04 = ng_local_for_total_Q04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_Q04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_H01 = ng_local_for_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_H01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_H02 = ng_local_for_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_H02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD01 = ng_local_for_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD02 = ng_local_for_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD03 = ng_local_for_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD04 = ng_local_for_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD05 = ng_local_for_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD06 = ng_local_for_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD07 = ng_local_for_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD08 = ng_local_for_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD09 = ng_local_for_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD10 = ng_local_for_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD11 = ng_local_for_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD12 = ng_local_for_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD12").toString());
				}
	
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P01 = ng_local_out_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P02 = ng_local_out_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P03 = ng_local_out_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P04 = ng_local_out_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P05 = ng_local_out_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P06 = ng_local_out_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P07 = ng_local_out_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P08 = ng_local_out_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P09 = ng_local_out_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P10 = ng_local_out_total_P10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P11 = ng_local_out_total_P11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P12 = ng_local_out_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P12").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_Q01 = ng_local_out_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_Q01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_Q02 = ng_local_out_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_Q02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_Q03 = ng_local_out_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_Q03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_Q04 = ng_local_out_total_Q04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_Q04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_H01 = ng_local_out_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_H01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_H02 = ng_local_out_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_H02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD01 = ng_local_out_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD02 = ng_local_out_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD03 = ng_local_out_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD04 = ng_local_out_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD05 = ng_local_out_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD06 = ng_local_out_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD07 = ng_local_out_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD08 = ng_local_out_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD09 = ng_local_out_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD10 = ng_local_out_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD11 = ng_local_out_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD12 = ng_local_out_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD12").toString());
				}
	
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P01 = ng_local_tg_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P02 = ng_local_tg_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P03 = ng_local_tg_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P04 = ng_local_tg_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P05 = ng_local_tg_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P06 = ng_local_tg_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P07 = ng_local_tg_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P08 = ng_local_tg_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P09 = ng_local_tg_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P10 = ng_local_tg_total_P10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P11 = ng_local_tg_total_P11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P12 = ng_local_tg_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P12").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_Q01 = ng_local_tg_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_Q01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_Q02 = ng_local_tg_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_Q02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_Q03 = ng_local_tg_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_Q03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_Q04 = ng_local_tg_total_Q04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_Q04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_H01 = ng_local_tg_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_H01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_H02 = ng_local_tg_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_H02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD01 = ng_local_tg_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD02 = ng_local_tg_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD03 = ng_local_tg_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD04 = ng_local_tg_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD05 = ng_local_tg_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD06 = ng_local_tg_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD07 = ng_local_tg_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD08 = ng_local_tg_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD09 = ng_local_tg_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD10 = ng_local_tg_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD11 = ng_local_tg_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD12 = ng_local_tg_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD12").toString());
				}
				
			}else{
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P01 = ng_local_ac_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P02 = ng_local_ac_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P03 = ng_local_ac_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P04 = ng_local_ac_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P05 = ng_local_ac_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P06 = ng_local_ac_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P07 = ng_local_ac_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P08 = ng_local_ac_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P09 = ng_local_ac_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P10 = ng_local_ac_total_P10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P11 = ng_local_ac_total_P11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P12 = ng_local_ac_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P12").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_Q01 = ng_local_ac_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_Q01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_Q02 = ng_local_ac_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_Q02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_Q03 = ng_local_ac_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_Q03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_Q04 = ng_local_ac_total_Q04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_Q04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_H01 = ng_local_ac_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_H01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_H02 = ng_local_ac_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_H02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD01 = ng_local_ac_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD02 = ng_local_ac_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD03 = ng_local_ac_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD04 = ng_local_ac_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD05 = ng_local_ac_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD06 = ng_local_ac_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD07 = ng_local_ac_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD08 = ng_local_ac_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD09 = ng_local_ac_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD10 = ng_local_ac_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD11 = ng_local_ac_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD12 = ng_local_ac_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD12").toString());
				}
	
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P01 = ng_local_for_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P02 = ng_local_for_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P03 = ng_local_for_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P04 = ng_local_for_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P05 = ng_local_for_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P06 = ng_local_for_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P07 = ng_local_for_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P08 = ng_local_for_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P09 = ng_local_for_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P10 = ng_local_for_total_P10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P11 = ng_local_for_total_P11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P12 = ng_local_for_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P12").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_Q01 = ng_local_for_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_Q01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_Q02 = ng_local_for_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_Q02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_Q03 = ng_local_for_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_Q03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_Q04 = ng_local_for_total_Q04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_Q04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_H01 = ng_local_for_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_H01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_H02 = ng_local_for_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_H02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD01 = ng_local_for_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD02 = ng_local_for_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD03 = ng_local_for_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD04 = ng_local_for_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD05 = ng_local_for_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD06 = ng_local_for_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD07 = ng_local_for_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD08 = ng_local_for_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD09 = ng_local_for_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD10 = ng_local_for_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD11 = ng_local_for_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD12 = ng_local_for_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD12").toString());
				}
	
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P01 = ng_local_out_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P02 = ng_local_out_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P03 = ng_local_out_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P04 = ng_local_out_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P05 = ng_local_out_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P06 = ng_local_out_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P07 = ng_local_out_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P08 = ng_local_out_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P09 = ng_local_out_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P10 = ng_local_out_total_P10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P11 = ng_local_out_total_P11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P12 = ng_local_out_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P12").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_Q01 = ng_local_out_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_Q01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_Q02 = ng_local_out_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_Q02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_Q03 = ng_local_out_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_Q03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_Q04 = ng_local_out_total_Q04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_Q04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_H01 = ng_local_out_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_H01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_H02 = ng_local_out_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_H02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD01 = ng_local_out_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD02 = ng_local_out_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD03 = ng_local_out_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD04 = ng_local_out_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD05 = ng_local_out_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD06 = ng_local_out_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD07 = ng_local_out_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD08 = ng_local_out_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD09 = ng_local_out_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD10 = ng_local_out_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD11 = ng_local_out_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD12 = ng_local_out_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD12").toString());
				}
	
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P01 = ng_local_tg_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P02 = ng_local_tg_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P03 = ng_local_tg_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P04 = ng_local_tg_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P05 = ng_local_tg_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P06 = ng_local_tg_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P07 = ng_local_tg_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P08 = ng_local_tg_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P09 = ng_local_tg_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P10 = ng_local_tg_total_P10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P11 = ng_local_tg_total_P11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P12 = ng_local_tg_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P12").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_Q01 = ng_local_tg_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_Q01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_Q02 = ng_local_tg_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_Q02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_Q03 = ng_local_tg_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_Q03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_Q04 = ng_local_tg_total_Q04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_Q04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_H01 = ng_local_tg_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_H01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_H02 = ng_local_tg_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_H02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD01 = ng_local_tg_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD02 = ng_local_tg_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD03 = ng_local_tg_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD04 = ng_local_tg_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD05 = ng_local_tg_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD06 = ng_local_tg_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD07 = ng_local_tg_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD08 = ng_local_tg_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD09 = ng_local_tg_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD10 = ng_local_tg_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD11 = ng_local_tg_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD12 = ng_local_tg_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD12").toString());
				}
			}
		}
		
		
		
		
		
		
		if(ng_local_ac_total_P01 != 0 && !(rowData.get("NOTAG_AC_P01").toString().equals(0))){
			noteGDkAcP01 = ((Double.parseDouble(rowData.get("NOTAG_AC_P01").toString())/ng_local_ac_total_P01));
    	}else{
    		noteGDkAcP01 = 0.0;
    	}
    	
		if(ng_local_ac_total_P02 != 0 && !(rowData.get("NOTAG_AC_P02").toString().equals(0))){
			noteGDkAcP02 = ((Double.parseDouble(rowData.get("NOTAG_AC_P02").toString())/ng_local_ac_total_P02));
    	}else{
    		noteGDkAcP02 = 0.0;
    	}
		
		if(ng_local_ac_total_P03 != 0 && !(rowData.get("NOTAG_AC_P03").toString().equals(0))){
			noteGDkAcP03 = ((Double.parseDouble(rowData.get("NOTAG_AC_P03").toString())/ng_local_ac_total_P03));
    	}else{
    		noteGDkAcP03 = 0.0;
    	}
		
		if(ng_local_ac_total_P04 != 0 && !(rowData.get("NOTAG_AC_P04").toString().equals(0))){
			noteGDkAcP04 = ((Double.parseDouble(rowData.get("NOTAG_AC_P04").toString())/ng_local_ac_total_P04));
    	}else{
    		noteGDkAcP04 = 0.0;
    	}
		
		if(ng_local_ac_total_P05 != 0 && !(rowData.get("NOTAG_AC_P05").toString().equals(0))){
			noteGDkAcP05 = ((Double.parseDouble(rowData.get("NOTAG_AC_P05").toString())/ng_local_ac_total_P05));
    	}else{
    		noteGDkAcP05 = 0.0;
    	}
		
		if(ng_local_ac_total_P06 != 0 && !(rowData.get("NOTAG_AC_P06").toString().equals(0))){
			noteGDkAcP06 = ((Double.parseDouble(rowData.get("NOTAG_AC_P06").toString())/ng_local_ac_total_P06));
    	}else{
    		noteGDkAcP06 = 0.0;
    	}
		
		if(ng_local_ac_total_P07 != 0 && !(rowData.get("NOTAG_AC_P07").toString().equals(0))){
			noteGDkAcP07 = ((Double.parseDouble(rowData.get("NOTAG_AC_P07").toString())/ng_local_ac_total_P07));
    	}else{
    		noteGDkAcP07 = 0.0;
    	}
		
		if(ng_local_ac_total_P08 != 0 && !(rowData.get("NOTAG_AC_P08").toString().equals(0))){
			noteGDkAcP08 = ((Double.parseDouble(rowData.get("NOTAG_AC_P08").toString())/ng_local_ac_total_P08));
    	}else{
    		noteGDkAcP08 = 0.0;
    	}
		
		if(ng_local_ac_total_P09 != 0 && !(rowData.get("NOTAG_AC_P09").toString().equals(0))){
			noteGDkAcP09 = ((Double.parseDouble(rowData.get("NOTAG_AC_P09").toString())/ng_local_ac_total_P09));
    	}else{
    		noteGDkAcP09 = 0.0;
    	}
		
		if(ng_local_ac_total_P10 != 0 && !(rowData.get("NOTAG_AC_P10").toString().equals(0))){
			noteGDkAcP10 = ((Double.parseDouble(rowData.get("NOTAG_AC_P10").toString())/ng_local_ac_total_P10));
    	}else{
    		noteGDkAcP10 = 0.0;
    	}
		
		if(ng_local_ac_total_P11 != 0 && !(rowData.get("NOTAG_AC_P11").toString().equals(0))){
			noteGDkAcP11 = ((Double.parseDouble(rowData.get("NOTAG_AC_P11").toString())/ng_local_ac_total_P11));
    	}else{
    		noteGDkAcP11 = 0.0;
    	}
		
		if(ng_local_ac_total_P12 != 0 && !(rowData.get("NOTAG_AC_P12").toString().equals(0))){
			noteGDkAcP12 = ((Double.parseDouble(rowData.get("NOTAG_AC_P12").toString())/ng_local_ac_total_P12));
    	}else{
    		noteGDkAcP12 = 0.0;
    	}
		
		if(ng_local_ac_total_Q01 != 0 && !(rowData.get("NOTAG_AC_Q01").toString().equals(0))){
			noteGDkAcQ01 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q01").toString())/ng_local_ac_total_Q01));
    	}else{
    		noteGDkAcQ01 = 0.0;
    	}
		
		if(ng_local_ac_total_Q02 != 0 && !(rowData.get("NOTAG_AC_Q02").toString().equals(0))){
			noteGDkAcQ02 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q02").toString())/ng_local_ac_total_Q02));
    	}else{
    		noteGDkAcQ02 = 0.0;
    	}
		
		if(ng_local_ac_total_Q03 != 0 && !(rowData.get("NOTAG_AC_Q03").toString().equals(0))){
			noteGDkAcQ03 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q03").toString())/ng_local_ac_total_Q03));
    	}else{
    		noteGDkAcQ03 = 0.0;
    	}
		
		if(ng_local_ac_total_Q04 != 0 && !(rowData.get("NOTAG_AC_Q04").toString().equals(0))){
			noteGDkAcQ04 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q04").toString())/ng_local_ac_total_Q04));
    	}else{
    		noteGDkAcQ04 = 0.0;
    	}
		
		if(ng_local_ac_total_H01 != 0 && !(rowData.get("NOTAG_AC_H01").toString().equals(0))){
			noteGDkAcH01 = ((Double.parseDouble(rowData.get("NOTAG_AC_H01").toString())/ng_local_ac_total_H01));
    	}else{
    		noteGDkAcH01 = 0.0;
    	}
		
		if(ng_local_ac_total_H02 != 0 && !(rowData.get("NOTAG_AC_H02").toString().equals(0))){
			noteGDkAcH02 = ((Double.parseDouble(rowData.get("NOTAG_AC_H02").toString())/ng_local_ac_total_H02));
    	}else{
    		noteGDkAcH02 = 0.0;
    	}
		
		
    	if(ytd_Param.equals("P01")){
    		if(ng_local_ac_total_YTD01 != 0 && !(rowData.get("NOTAG_AC_YTD01").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD01").toString())/ng_local_ac_total_YTD01));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P02")){
    		if(ng_local_ac_total_YTD02 != 0 && !(rowData.get("NOTAG_AC_YTD02").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD02").toString())/ng_local_ac_total_YTD02));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P03")){
    		if(ng_local_ac_total_YTD03 != 0 && !(rowData.get("NOTAG_AC_YTD03").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD03").toString())/ng_local_ac_total_YTD03));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P04")){
    		if(ng_local_ac_total_YTD04 != 0 && !(rowData.get("NOTAG_AC_YTD04").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD04").toString())/ng_local_ac_total_YTD04));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P05")){
    		if(ng_local_ac_total_YTD05 != 0 && !(rowData.get("NOTAG_AC_YTD05").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD05").toString())/ng_local_ac_total_YTD05));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P06")){
    		if(ng_local_ac_total_YTD06 != 0 && !(rowData.get("NOTAG_AC_YTD06").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD06").toString())/ng_local_ac_total_YTD06));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P07")){
    		if(ng_local_ac_total_YTD07 != 0 && !(rowData.get("NOTAG_AC_YTD07").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD07").toString())/ng_local_ac_total_YTD07));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P08")){
    		if(ng_local_ac_total_YTD08 != 0 && !(rowData.get("NOTAG_AC_YTD08").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD08").toString())/ng_local_ac_total_YTD08));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P09")){
    		if(ng_local_ac_total_YTD09 != 0 && !(rowData.get("NOTAG_AC_YTD09").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD09").toString())/ng_local_ac_total_YTD09));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P10")){
    		if(ng_local_ac_total_YTD10 != 0 && !(rowData.get("NOTAG_AC_YTD10").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD10").toString())/ng_local_ac_total_YTD10));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P11")){
    		if(ng_local_ac_total_YTD11 != 0 && !(rowData.get("NOTAG_AC_YTD11").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD11").toString())/ng_local_ac_total_YTD11));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P12")){
    		if(ng_local_ac_total_YTD12 != 0 && !(rowData.get("NOTAG_AC_YTD12").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString())/ng_local_ac_total_YTD12));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else{
    		if(ng_local_ac_total_YTD12 != 0 && !(rowData.get("NOTAG_AC_YTD12").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString())/ng_local_ac_total_YTD12));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}
    	

    	if(ng_local_for_total_P01 != 0 && !(rowData.get("NOTAG_FOR_P01").toString().equals(0))){
			noteGDkForP01 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P01").toString())/ng_local_for_total_P01));
    	}else{
    		noteGDkForP01 = 0.0;
    	}
    	
    	if(ng_local_for_total_P02 != 0 && !(rowData.get("NOTAG_FOR_P02").toString().equals(0))){
			noteGDkForP02 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P02").toString())/ng_local_for_total_P02));
    	}else{
    		noteGDkForP02 = 0.0;
    	}
    	
    	if(ng_local_for_total_P03 != 0 && !(rowData.get("NOTAG_FOR_P03").toString().equals(0))){
			noteGDkForP03 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P03").toString())/ng_local_for_total_P03));
    	}else{
    		noteGDkForP03 = 0.0;
    	}
    	
    	if(ng_local_for_total_P04 != 0 && !(rowData.get("NOTAG_FOR_P04").toString().equals(0))){
			noteGDkForP04 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P04").toString())/ng_local_for_total_P04));
    	}else{
    		noteGDkForP04 = 0.0;
    	}
    	
    	if(ng_local_for_total_P05 != 0 && !(rowData.get("NOTAG_FOR_P05").toString().equals(0))){
			noteGDkForP05 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P05").toString())/ng_local_for_total_P05));
    	}else{
    		noteGDkForP05 = 0.0;
    	}
    	
    	if(ng_local_for_total_P06 != 0 && !(rowData.get("NOTAG_FOR_P06").toString().equals(0))){
			noteGDkForP06 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P06").toString())/ng_local_for_total_P06));
    	}else{
    		noteGDkForP06 = 0.0;
    	}
    	
    	if(ng_local_for_total_P07 != 0 && !(rowData.get("NOTAG_FOR_P07").toString().equals(0))){
			noteGDkForP07 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P07").toString())/ng_local_for_total_P07));
    	}else{
    		noteGDkForP07 = 0.0;
    	}
    	
    	if(ng_local_for_total_P08 != 0 && !(rowData.get("NOTAG_FOR_P08").toString().equals(0))){
			noteGDkForP08 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P08").toString())/ng_local_for_total_P08));
    	}else{
    		noteGDkForP08 = 0.0;
    	}
    	
    	if(ng_local_for_total_P09 != 0 && !(rowData.get("NOTAG_FOR_P09").toString().equals(0))){
			noteGDkForP09 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P09").toString())/ng_local_for_total_P09));
    	}else{
    		noteGDkForP09 = 0.0;
    	}
    	
    	if(ng_local_for_total_P10 != 0 && !(rowData.get("NOTAG_FOR_P10").toString().equals(0))){
			noteGDkForP10 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P10").toString())/ng_local_for_total_P10));
    	}else{
    		noteGDkForP10 = 0.0;
    	}
    	
    	if(ng_local_for_total_P11 != 0 && !(rowData.get("NOTAG_FOR_P11").toString().equals(0))){
			noteGDkForP11 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P11").toString())/ng_local_for_total_P11));
    	}else{
    		noteGDkForP11 = 0.0;
    	}
    	
    	if(ng_local_for_total_P12 != 0 && !(rowData.get("NOTAG_FOR_P12").toString().equals(0))){
			noteGDkForP12 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P12").toString())/ng_local_for_total_P12));
    	}else{
    		noteGDkForP12 = 0.0;
    	}
    	
    	if(ng_local_for_total_Q01 != 0 && !(rowData.get("NOTAG_FOR_Q01").toString().equals(0))){
			noteGDkForQ01 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q01").toString())/ng_local_for_total_Q01));
    	}else{
    		noteGDkForQ01 = 0.0;
    	}
    	
    	if(ng_local_for_total_Q02 != 0 && !(rowData.get("NOTAG_FOR_Q02").toString().equals(0))){
			noteGDkForQ02 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q02").toString())/ng_local_for_total_Q02));
    	}else{
    		noteGDkForQ02 = 0.0;
    	}
    	
    	if(ng_local_for_total_Q03 != 0 && !(rowData.get("NOTAG_FOR_Q03").toString().equals(0))){
			noteGDkForQ03 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q03").toString())/ng_local_for_total_Q03));
    	}else{
    		noteGDkForQ03 = 0.0;
    	}
    	
    	if(ng_local_for_total_Q04 != 0 && !(rowData.get("NOTAG_FOR_Q04").toString().equals(0))){
			noteGDkForQ04 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q04").toString())/ng_local_for_total_Q04));
    	}else{
    		noteGDkForQ04 = 0.0;
    	}
    	
    	if(ng_local_for_total_H01 != 0 && !(rowData.get("NOTAG_FOR_H01").toString().equals(0))){
			noteGDkForH01 = ((Double.parseDouble(rowData.get("NOTAG_FOR_H01").toString())/ng_local_for_total_H01));
    	}else{
    		noteGDkForH01 = 0.0;
    	}
    	
    	if(ng_local_for_total_H02 != 0 && !(rowData.get("NOTAG_FOR_H02").toString().equals(0))){
			noteGDkForH02 = ((Double.parseDouble(rowData.get("NOTAG_FOR_H02").toString())/ng_local_for_total_H02));
    	}else{
    		noteGDkForH02 = 0.0;
    	}

    	if(ytd_Param.equals("P01")){
    		if(ng_local_for_total_YTD01 != 0 && !(rowData.get("NOTAG_FOR_YTD01").toString().equals(0))){
    			noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD01").toString())/ng_local_for_total_YTD01));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P02")){
			if(ng_local_for_total_YTD02 != 0 && !(rowData.get("NOTAG_FOR_YTD02").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD02").toString())/ng_local_for_total_YTD02));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P03")){
			if(ng_local_for_total_YTD03 != 0 && !(rowData.get("NOTAG_FOR_YTD03").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD03").toString())/ng_local_for_total_YTD03));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P04")){
			if(ng_local_for_total_YTD04 != 0 && !(rowData.get("NOTAG_FOR_YTD04").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD04").toString())/ng_local_for_total_YTD04));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P05")){
			if(ng_local_for_total_YTD05 != 0 && !(rowData.get("NOTAG_FOR_YTD05").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD05").toString())/ng_local_for_total_YTD05));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P06")){
			if(ng_local_for_total_YTD06 != 0 && !(rowData.get("NOTAG_FOR_YTD06").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD06").toString())/ng_local_for_total_YTD06));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P07")){
			if(ng_local_for_total_YTD07 != 0 && !(rowData.get("NOTAG_FOR_YTD07").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD07").toString())/ng_local_for_total_YTD07));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P08")){
			if(ng_local_for_total_YTD08 != 0 && !(rowData.get("NOTAG_FOR_YTD08").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD08").toString())/ng_local_for_total_YTD08));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P09")){
			if(ng_local_for_total_YTD09 != 0 && !(rowData.get("NOTAG_FOR_YTD09").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD09").toString())/ng_local_for_total_YTD09));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P10")){
			if(ng_local_for_total_YTD10 != 0 && !(rowData.get("NOTAG_FOR_YTD10").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD10").toString())/ng_local_for_total_YTD10));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P11")){
			if(ng_local_for_total_YTD11 != 0 && !(rowData.get("NOTAG_FOR_YTD11").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD11").toString())/ng_local_for_total_YTD11));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P12")){
			if(ng_local_for_total_YTD11 != 0 && !(rowData.get("NOTAG_FOR_YTD12").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString())/ng_local_for_total_YTD11));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else{
			if(ng_local_for_total_YTD12 != 0 && !(rowData.get("NOTAG_FOR_YTD12").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString())/ng_local_for_total_YTD12));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}
    	
    	if(ng_local_out_total_P01 != 0 && !(rowData.get("NOTAG_OUT_P01").toString().equals(0))){
			noteGDkOutP01 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P01").toString())/ng_local_out_total_P01));
    	}else{
    		noteGDkOutP01 = 0.0;
    	}
    	if(ng_local_out_total_P02 != 0 && !(rowData.get("NOTAG_OUT_P02").toString().equals(0))){
			noteGDkOutP02 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P02").toString())/ng_local_out_total_P02));
    	}else{
    		noteGDkOutP02 = 0.0;
    	}
    	if(ng_local_out_total_P03 != 0 && !(rowData.get("NOTAG_OUT_P03").toString().equals(0))){
			noteGDkOutP03 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P03").toString())/ng_local_out_total_P03));
    	}else{
    		noteGDkOutP03 = 0.0;
    	}
    	if(ng_local_out_total_P04 != 0 && !(rowData.get("NOTAG_OUT_P04").toString().equals(0))){
			noteGDkOutP04 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P04").toString())/ng_local_out_total_P04));
    	}else{
    		noteGDkOutP04 = 0.0;
    	}
    	if(ng_local_out_total_P05 != 0 && !(rowData.get("NOTAG_OUT_P05").toString().equals(0))){
			noteGDkOutP05 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P05").toString())/ng_local_out_total_P05));
    	}else{
    		noteGDkOutP05 = 0.0;
    	}
    	if(ng_local_out_total_P06 != 0 && !(rowData.get("NOTAG_OUT_P06").toString().equals(0))){
			noteGDkOutP06 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P06").toString())/ng_local_out_total_P06));
    	}else{
    		noteGDkOutP06 = 0.0;
    	}
    	if(ng_local_out_total_P07 != 0 && !(rowData.get("NOTAG_OUT_P07").toString().equals(0))){
			noteGDkOutP07 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P07").toString())/ng_local_out_total_P07));
    	}else{
    		noteGDkOutP07 = 0.0;
    	}
    	if(ng_local_out_total_P08 != 0 && !(rowData.get("NOTAG_OUT_P08").toString().equals(0))){
			noteGDkOutP08 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P08").toString())/ng_local_out_total_P08));
    	}else{
    		noteGDkOutP08 = 0.0;
    	}
    	if(ng_local_out_total_P09 != 0 && !(rowData.get("NOTAG_OUT_P09").toString().equals(0))){
			noteGDkOutP09 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P09").toString())/ng_local_out_total_P09));
    	}else{
    		noteGDkOutP09 = 0.0;
    	}
    	if(ng_local_out_total_P10 != 0 && !(rowData.get("NOTAG_OUT_P10").toString().equals(0))){
			noteGDkOutP10 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P10").toString())/ng_local_out_total_P10));
    	}else{
    		noteGDkOutP10 = 0.0;
    	}
    	if(ng_local_out_total_P11 != 0 && !(rowData.get("NOTAG_OUT_P11").toString().equals(0))){
			noteGDkOutP11 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P11").toString())/ng_local_out_total_P11));
    	}else{
    		noteGDkOutP11 = 0.0;
    	}
    	if(ng_local_out_total_P12 != 0 && !(rowData.get("NOTAG_OUT_P12").toString().equals(0))){
			noteGDkOutP12 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P12").toString())/ng_local_out_total_P12));
    	}else{
    		noteGDkOutP12 = 0.0;
    	}
    	if(ng_local_out_total_Q01 != 0 && !(rowData.get("NOTAG_OUT_Q01").toString().equals(0))){
			noteGDkOutQ01 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q01").toString())/ng_local_out_total_Q01));
    	}else{
    		noteGDkOutQ01 = 0.0;
    	}
    	if(ng_local_out_total_Q02 != 0 && !(rowData.get("NOTAG_OUT_Q02").toString().equals(0))){
			noteGDkOutQ02 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q02").toString())/ng_local_out_total_Q02));
    	}else{
    		noteGDkOutQ02 = 0.0;
    	}
    	if(ng_local_out_total_Q03 != 0 && !(rowData.get("NOTAG_OUT_Q03").toString().equals(0))){
			noteGDkOutQ03 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q03").toString())/ng_local_out_total_Q03));
    	}else{
    		noteGDkOutQ03 = 0.0;
    	}
    	if(ng_local_out_total_Q04 != 0 && !(rowData.get("NOTAG_OUT_Q04").toString().equals(0))){
			noteGDkOutQ04 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q04").toString())/ng_local_out_total_Q04));
    	}else{
    		noteGDkOutQ04 = 0.0;
    	}
    	if(ng_local_out_total_H01 != 0 && !(rowData.get("NOTAG_OUT_H01").toString().equals(0))){
			noteGDkOutH01 = ((Double.parseDouble(rowData.get("NOTAG_OUT_H01").toString())/ng_local_out_total_H01));
    	}else{
    		noteGDkOutH01 = 0.0;
    	}
    	if(ng_local_out_total_H02 != 0 && !(rowData.get("NOTAG_OUT_H02").toString().equals(0))){
			noteGDkOutH02 = ((Double.parseDouble(rowData.get("NOTAG_OUT_H02").toString())/ng_local_out_total_H02));
    	}else{
    		noteGDkOutH02 = 0.0;
    	}
    	
    	if(ytd_Param.equals("P01")){
    		if(ng_local_out_total_YTD01 != 0 && !(rowData.get("NOTAG_OUT_YTD01").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD01").toString())/ng_local_out_total_YTD01));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P02")){
    		if(ng_local_out_total_YTD02 != 0 && !(rowData.get("NOTAG_OUT_YTD02").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD02").toString())/ng_local_out_total_YTD02));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P03")){
    		if(ng_local_out_total_YTD03 != 0 && !(rowData.get("NOTAG_OUT_YTD03").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD03").toString())/ng_local_out_total_YTD03));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P04")){
    		if(ng_local_out_total_YTD04 != 0 && !(rowData.get("NOTAG_OUT_YTD04").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD04").toString())/ng_local_out_total_YTD04));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P05")){
    		if(ng_local_out_total_YTD05 != 0 && !(rowData.get("NOTAG_OUT_YTD05").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD05").toString())/ng_local_out_total_YTD05));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P06")){
    		if(ng_local_out_total_YTD06 != 0 && !(rowData.get("NOTAG_OUT_YTD06").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD06").toString())/ng_local_out_total_YTD06));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P07")){
    		if(ng_local_out_total_YTD07 != 0 && !(rowData.get("NOTAG_OUT_YTD07").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD07").toString())/ng_local_out_total_YTD07));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P08")){
    		if(ng_local_out_total_YTD08 != 0 && !(rowData.get("NOTAG_OUT_YTD08").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD08").toString())/ng_local_out_total_YTD08));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P09")){
    		if(ng_local_out_total_YTD09 != 0 && !(rowData.get("NOTAG_OUT_YTD09").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD09").toString())/ng_local_out_total_YTD09));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P10")){
    		if(ng_local_out_total_YTD10 != 0 && !(rowData.get("NOTAG_OUT_YTD10").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD10").toString())/ng_local_out_total_YTD10));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P11")){
    		if(ng_local_out_total_YTD11 != 0 && !(rowData.get("NOTAG_OUT_YTD11").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD11").toString())/ng_local_out_total_YTD11));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P12")){
    		if(ng_local_out_total_YTD12 != 0 && !(rowData.get("NOTAG_OUT_YTD12").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD12").toString())/ng_local_out_total_YTD12));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else{
    		if(ng_local_out_total_YTD12 != 0 && !(rowData.get("NOTAG_OUT_YTD12").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD12").toString())/ng_local_out_total_YTD12));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}
		
    	
    	
    	
    
    	if(ng_local_tg_total_P01 != 0 && !(rowData.get("NOTAG_TG_P01").toString().equals(0))){
			noteGDkTgP01 = ((Double.parseDouble(rowData.get("NOTAG_TG_P01").toString())/ng_local_tg_total_P01));
    	}else{
    		noteGDkTgP01 = 0.0;
    	}
    	if(ng_local_tg_total_P02 != 0 && !(rowData.get("NOTAG_TG_P02").toString().equals(0))){
			noteGDkTgP02 = ((Double.parseDouble(rowData.get("NOTAG_TG_P02").toString())/ng_local_tg_total_P02));
    	}else{
    		noteGDkTgP02 = 0.0;
    	}
    	if(ng_local_tg_total_P03 != 0 && !(rowData.get("NOTAG_TG_P03").toString().equals(0))){
			noteGDkTgP03 = ((Double.parseDouble(rowData.get("NOTAG_TG_P03").toString())/ng_local_tg_total_P03));
    	}else{
    		noteGDkTgP03 = 0.0;
    	}
    	if(ng_local_tg_total_P04 != 0 && !(rowData.get("NOTAG_TG_P04").toString().equals(0))){
			noteGDkTgP04 = ((Double.parseDouble(rowData.get("NOTAG_TG_P04").toString())/ng_local_tg_total_P04));
    	}else{
    		noteGDkTgP04 = 0.0;
    	}
    	if(ng_local_tg_total_P05 != 0 && !(rowData.get("NOTAG_TG_P05").toString().equals(0))){
			noteGDkTgP05 = ((Double.parseDouble(rowData.get("NOTAG_TG_P05").toString())/ng_local_tg_total_P05));
    	}else{
    		noteGDkTgP05 = 0.0;
    	}
    	if(ng_local_tg_total_P06 != 0 && !(rowData.get("NOTAG_TG_P06").toString().equals(0))){
			noteGDkTgP06 = ((Double.parseDouble(rowData.get("NOTAG_TG_P06").toString())/ng_local_tg_total_P06));
    	}else{
    		noteGDkTgP06 = 0.0;
    	}
    	if(ng_local_tg_total_P07 != 0 && !(rowData.get("NOTAG_TG_P07").toString().equals(0))){
			noteGDkTgP07 = ((Double.parseDouble(rowData.get("NOTAG_TG_P07").toString())/ng_local_tg_total_P07));
    	}else{
    		noteGDkTgP07 = 0.0;
    	}
    	if(ng_local_tg_total_P08 != 0 && !(rowData.get("NOTAG_TG_P08").toString().equals(0))){
			noteGDkTgP08 = ((Double.parseDouble(rowData.get("NOTAG_TG_P08").toString())/ng_local_tg_total_P08));
    	}else{
    		noteGDkTgP08 = 0.0;
    	}
    	if(ng_local_tg_total_P09 != 0 && !(rowData.get("NOTAG_TG_P09").toString().equals(0))){
			noteGDkTgP09 = ((Double.parseDouble(rowData.get("NOTAG_TG_P09").toString())/ng_local_tg_total_P09));
    	}else{
    		noteGDkTgP09 = 0.0;
    	}
    	if(ng_local_tg_total_P10 != 0 && !(rowData.get("NOTAG_TG_P10").toString().equals(0))){
			noteGDkTgP10 = ((Double.parseDouble(rowData.get("NOTAG_TG_P10").toString())/ng_local_tg_total_P10));
    	}else{
    		noteGDkTgP10 = 0.0;
    	}
    	if(ng_local_tg_total_P11 != 0 && !(rowData.get("NOTAG_TG_P11").toString().equals(0))){
			noteGDkTgP11 = ((Double.parseDouble(rowData.get("NOTAG_TG_P11").toString())/ng_local_tg_total_P11));
    	}else{
    		noteGDkTgP11 = 0.0;
    	}
    	if(ng_local_tg_total_P12 != 0 && !(rowData.get("NOTAG_TG_P12").toString().equals(0))){
			noteGDkTgP12 = ((Double.parseDouble(rowData.get("NOTAG_TG_P12").toString())/ng_local_tg_total_P12));
    	}else{
    		noteGDkTgP12 = 0.0;
    	}
    	if(ng_local_tg_total_Q01 != 0 && !(rowData.get("NOTAG_TG_Q01").toString().equals(0))){
			noteGDkTgQ01 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q01").toString())/ng_local_tg_total_Q01));
    	}else{
    		noteGDkTgQ01 = 0.0;
    	}
    	if(ng_local_tg_total_Q02 != 0 && !(rowData.get("NOTAG_TG_Q02").toString().equals(0))){
			noteGDkTgQ02 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q02").toString())/ng_local_tg_total_Q02));
    	}else{
    		noteGDkTgQ02 = 0.0;
    	}
    	if(ng_local_tg_total_Q03 != 0 && !(rowData.get("NOTAG_TG_Q03").toString().equals(0))){
			noteGDkTgQ03 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q03").toString())/ng_local_tg_total_Q03));
    	}else{
    		noteGDkTgQ03 = 0.0;
    	}
    	if(ng_local_tg_total_Q04 != 0 && !(rowData.get("NOTAG_TG_Q04").toString().equals(0))){
			noteGDkTgQ04 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q04").toString())/ng_local_tg_total_Q04));
    	}else{
    		noteGDkTgQ04 = 0.0;
    	}
    	if(ng_local_tg_total_H01 != 0 && !(rowData.get("NOTAG_TG_H01").toString().equals(0))){
			noteGDkTgH01 = ((Double.parseDouble(rowData.get("NOTAG_TG_H01").toString())/ng_local_tg_total_H01));
    	}else{
    		noteGDkTgH01 = 0.0;
    	}
    	if(ng_local_tg_total_H02 != 0 && !(rowData.get("NOTAG_TG_H02").toString().equals(0))){
			noteGDkTgH02 = ((Double.parseDouble(rowData.get("NOTAG_TG_H02").toString())/ng_local_tg_total_H02));
    	}else{
    		noteGDkTgH02 = 0.0;
    	}
    	
    	
    	
    	if(ytd_Param.equals("P01")){
    		if(ng_local_tg_total_YTD01 != 0 && !(rowData.get("NOTAG_TG_YTD01").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD01").toString())/ng_local_tg_total_YTD01));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P02")){
    		if(ng_local_tg_total_YTD02 != 0 && !(rowData.get("NOTAG_TG_YTD02").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD02").toString())/ng_local_tg_total_YTD02));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P03")){
    		if(ng_local_tg_total_YTD03 != 0 && !(rowData.get("NOTAG_TG_YTD03").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD03").toString())/ng_local_tg_total_YTD03));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P03")){
    		if(ng_local_tg_total_YTD03 != 0 && !(rowData.get("NOTAG_TG_YTD03").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD03").toString())/ng_local_tg_total_YTD03));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P04")){
    		if(ng_local_tg_total_YTD04 != 0 && !(rowData.get("NOTAG_TG_YTD04").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD04").toString())/ng_local_tg_total_YTD04));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P05")){
    		if(ng_local_tg_total_YTD05 != 0 && !(rowData.get("NOTAG_TG_YTD05").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD05").toString())/ng_local_tg_total_YTD05));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P06")){
    		if(ng_local_tg_total_YTD06 != 0 && !(rowData.get("NOTAG_TG_YTD06").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD06").toString())/ng_local_tg_total_YTD06));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P07")){
    		if(ng_local_tg_total_YTD07 != 0 && !(rowData.get("NOTAG_TG_YTD07").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD07").toString())/ng_local_tg_total_YTD07));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P08")){
    		if(ng_local_tg_total_YTD08 != 0 && !(rowData.get("NOTAG_TG_YTD08").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD08").toString())/ng_local_tg_total_YTD08));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P09")){
    		if(ng_local_tg_total_YTD09 != 0 && !(rowData.get("NOTAG_TG_YTD09").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD09").toString())/ng_local_tg_total_YTD09));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P10")){
    		if(ng_local_tg_total_YTD10 != 0 && !(rowData.get("NOTAG_TG_YTD10").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD10").toString())/ng_local_tg_total_YTD10));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P11")){
    		if(ng_local_tg_total_YTD11 != 0 && !(rowData.get("NOTAG_TG_YTD11").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD11").toString())/ng_local_tg_total_YTD11));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P12")){
    		if(ng_local_tg_total_YTD12 != 0 && !(rowData.get("NOTAG_TG_YTD12").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString())/ng_local_tg_total_YTD12));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else{
			if(ng_local_tg_total_YTD12 != 0 && !(rowData.get("NOTAG_TG_YTD12").toString().equals(0))){
				noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString())/ng_local_tg_total_YTD12));
			}else{
				noteGDkTgYTD = 0.0;
			}
		}

    	
		if(periodChk_Param.equals("Y")){
			
			for(int i=4; i<42; i++){
				if(i == 22){
					row.createCell(22).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
					//row.getCell(22).setCellStyle(style);
				}else{
					row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
					row.getCell(i).setCellStyle(style);
				}
			}
			
        	row.getCell(4).setCellValue(noteGDkAcP01);
        	row.getCell(5).setCellValue(noteGDkAcP02);
        	row.getCell(6).setCellValue(noteGDkAcP03);
        	row.getCell(7).setCellValue(noteGDkAcP04);
        	row.getCell(8).setCellValue(noteGDkAcP05);
        	row.getCell(9).setCellValue(noteGDkAcP06);
        	row.getCell(10).setCellValue(noteGDkAcP07);
        	row.getCell(11).setCellValue(noteGDkAcP08);
        	row.getCell(12).setCellValue(noteGDkAcP09);
        	row.getCell(13).setCellValue(noteGDkAcP10);
        	row.getCell(14).setCellValue(noteGDkAcP11);
        	row.getCell(15).setCellValue(noteGDkAcP12);
        	row.getCell(16).setCellValue(noteGDkAcQ01);
        	row.getCell(17).setCellValue(noteGDkAcQ02);
        	row.getCell(18).setCellValue(noteGDkAcQ03);
        	row.getCell(19).setCellValue(noteGDkAcQ04);
        	row.getCell(20).setCellValue(noteGDkAcH01);
        	row.getCell(21).setCellValue(noteGDkAcH02);
        	row.getCell(22).setCellValue(noteGDkAcYTD);
        	row.getCell(23).setCellValue(noteGDkForP01);
        	row.getCell(24).setCellValue(noteGDkForP02);
        	row.getCell(25).setCellValue(noteGDkForP03);
        	row.getCell(26).setCellValue(noteGDkForP04);
        	row.getCell(27).setCellValue(noteGDkForP05);
        	row.getCell(28).setCellValue(noteGDkForP06);
        	row.getCell(29).setCellValue(noteGDkForP07);
        	row.getCell(30).setCellValue(noteGDkForP08);
        	row.getCell(31).setCellValue(noteGDkForP09);
        	row.getCell(32).setCellValue(noteGDkForP10);
        	row.getCell(33).setCellValue(noteGDkForP11);
        	row.getCell(34).setCellValue(noteGDkForP12);
        	row.getCell(35).setCellValue(noteGDkForQ01);
        	row.getCell(36).setCellValue(noteGDkForQ02);
        	row.getCell(37).setCellValue(noteGDkForQ03);
        	row.getCell(38).setCellValue(noteGDkForQ04);
        	row.getCell(39).setCellValue(noteGDkForH01);
        	row.getCell(40).setCellValue(noteGDkForH02);
        	row.getCell(41).setCellValue(noteGDkForYTD);
    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=4; i<16; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(noteGDkAcP01);
        	row.getCell(5).setCellValue(noteGDkAcP02);
        	row.getCell(6).setCellValue(noteGDkAcP03);
        	row.getCell(7).setCellValue(noteGDkAcQ01);
        	row.getCell(8).setCellValue(noteGDkAcH01);
        	row.getCell(9).setCellValue(noteGDkAcYTD);
        	row.getCell(10).setCellValue(noteGDkForP01);
        	row.getCell(11).setCellValue(noteGDkForP02);
        	row.getCell(12).setCellValue(noteGDkForP03);
        	row.getCell(13).setCellValue(noteGDkForQ01);
        	row.getCell(14).setCellValue(noteGDkForH01);
        	row.getCell(15).setCellValue(noteGDkForYTD);
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=4; i<18; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkAcP04);
        	row.getCell(5).setCellValue(noteGDkAcP05);
        	row.getCell(6).setCellValue(noteGDkAcP06);
        	row.getCell(7).setCellValue(noteGDkAcQ01);
        	row.getCell(8).setCellValue(noteGDkAcQ02);
        	row.getCell(9).setCellValue(noteGDkAcH01);
        	row.getCell(10).setCellValue(noteGDkAcYTD);
        	row.getCell(11).setCellValue(noteGDkForP04);
        	row.getCell(12).setCellValue(noteGDkForP05);
        	row.getCell(13).setCellValue(noteGDkForP06);
        	row.getCell(14).setCellValue(noteGDkForQ01);
        	row.getCell(15).setCellValue(noteGDkForQ02);
        	row.getCell(16).setCellValue(noteGDkForH01);
        	row.getCell(17).setCellValue(noteGDkForYTD);
        	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkAcP07);
        	row.getCell(5).setCellValue(noteGDkAcP08);
        	row.getCell(6).setCellValue(noteGDkAcP09);
        	row.getCell(7).setCellValue(noteGDkAcQ02);
        	row.getCell(8).setCellValue(noteGDkAcQ03);
        	row.getCell(9).setCellValue(noteGDkAcH01);
        	row.getCell(10).setCellValue(noteGDkAcH02);
        	row.getCell(11).setCellValue(noteGDkAcYTD);
        	row.getCell(12).setCellValue(noteGDkForP07);
        	row.getCell(13).setCellValue(noteGDkForP08);
        	row.getCell(14).setCellValue(noteGDkForP09);
        	row.getCell(15).setCellValue(noteGDkForQ02);
        	row.getCell(16).setCellValue(noteGDkForQ03);
        	row.getCell(17).setCellValue(noteGDkForH01);
        	row.getCell(18).setCellValue(noteGDkForH02);
        	row.getCell(19).setCellValue(noteGDkForYTD);
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(noteGDkAcP10);
        	row.getCell(5).setCellValue(noteGDkAcP11);
        	row.getCell(6).setCellValue(noteGDkAcP12);
        	row.getCell(7).setCellValue(noteGDkAcQ03);
        	row.getCell(8).setCellValue(noteGDkAcQ04);
        	row.getCell(9).setCellValue(noteGDkAcH01);
        	row.getCell(10).setCellValue(noteGDkAcH02);
        	row.getCell(11).setCellValue(noteGDkAcYTD);
        	row.getCell(12).setCellValue(noteGDkForP10);
        	row.getCell(13).setCellValue(noteGDkForP11);
        	row.getCell(14).setCellValue(noteGDkForP12);
        	row.getCell(15).setCellValue(noteGDkForQ03);
        	row.getCell(16).setCellValue(noteGDkForQ04);
        	row.getCell(17).setCellValue(noteGDkForH01);
        	row.getCell(18).setCellValue(noteGDkForH02);
        	row.getCell(19).setCellValue(noteGDkForYTD);
	    	
		}
    	
    	// 계산식을 위해 리스트에 값을 담아준다.
    	noteGMap = new HashMap();
    	
    	noteGMap.put("STYLETXT", styleTxt);
    	noteGMap.put("TOTAL", "");
    	noteGMap.put("NOTAG_AC_P01", noteGDkAcP01);
    	noteGMap.put("NOTAG_AC_P02", noteGDkAcP02);
    	noteGMap.put("NOTAG_AC_P03", noteGDkAcP03);
    	noteGMap.put("NOTAG_AC_P04", noteGDkAcP04);
    	noteGMap.put("NOTAG_AC_P05", noteGDkAcP05);
    	noteGMap.put("NOTAG_AC_P06", noteGDkAcP06);
    	noteGMap.put("NOTAG_AC_P07", noteGDkAcP07);
    	noteGMap.put("NOTAG_AC_P08", noteGDkAcP08);
    	noteGMap.put("NOTAG_AC_P09", noteGDkAcP09);
    	noteGMap.put("NOTAG_AC_P10", noteGDkAcP10);
    	noteGMap.put("NOTAG_AC_P11", noteGDkAcP11);
    	noteGMap.put("NOTAG_AC_P12", noteGDkAcP12);
    	noteGMap.put("NOTAG_AC_Q01", noteGDkAcQ01);
    	noteGMap.put("NOTAG_AC_Q02", noteGDkAcQ02);
    	noteGMap.put("NOTAG_AC_Q03", noteGDkAcQ03);
    	noteGMap.put("NOTAG_AC_Q04", noteGDkAcQ04);
    	noteGMap.put("NOTAG_AC_H01", noteGDkAcH01);
    	noteGMap.put("NOTAG_AC_H02", noteGDkAcH02);
    	noteGMap.put("NOTAG_AC_YTD", noteGDkAcYTD);
		
    	noteGMap.put("NOTAG_FOR_P01", noteGDkForP01);
    	noteGMap.put("NOTAG_FOR_P02", noteGDkForP02);
    	noteGMap.put("NOTAG_FOR_P03", noteGDkForP03);
    	noteGMap.put("NOTAG_FOR_P04", noteGDkForP04);
    	noteGMap.put("NOTAG_FOR_P05", noteGDkForP05);
    	noteGMap.put("NOTAG_FOR_P06", noteGDkForP06);
    	noteGMap.put("NOTAG_FOR_P07", noteGDkForP07);
    	noteGMap.put("NOTAG_FOR_P08", noteGDkForP08);
    	noteGMap.put("NOTAG_FOR_P09", noteGDkForP09);
    	noteGMap.put("NOTAG_FOR_P10", noteGDkForP10);
    	noteGMap.put("NOTAG_FOR_P11", noteGDkForP11);
    	noteGMap.put("NOTAG_FOR_P12", noteGDkForP12);
    	noteGMap.put("NOTAG_FOR_Q01", noteGDkForQ01);
    	noteGMap.put("NOTAG_FOR_Q02", noteGDkForQ02);
    	noteGMap.put("NOTAG_FOR_Q03", noteGDkForQ03);
    	noteGMap.put("NOTAG_FOR_Q04", noteGDkForQ04);
    	noteGMap.put("NOTAG_FOR_H01", noteGDkForH01);
    	noteGMap.put("NOTAG_FOR_H02", noteGDkForH02);
    	noteGMap.put("NOTAG_FOR_YTD", noteGDkForYTD);
    	
    	noteGMap.put("NOTAG_OUT_P01", noteGDkOutP01);
    	noteGMap.put("NOTAG_OUT_P02", noteGDkOutP02);
    	noteGMap.put("NOTAG_OUT_P03", noteGDkOutP03);
    	noteGMap.put("NOTAG_OUT_P04", noteGDkOutP04);
    	noteGMap.put("NOTAG_OUT_P05", noteGDkOutP05);
    	noteGMap.put("NOTAG_OUT_P06", noteGDkOutP06);
    	noteGMap.put("NOTAG_OUT_P07", noteGDkOutP07);
    	noteGMap.put("NOTAG_OUT_P08", noteGDkOutP08);
    	noteGMap.put("NOTAG_OUT_P09", noteGDkOutP09);
    	noteGMap.put("NOTAG_OUT_P10", noteGDkOutP10);
    	noteGMap.put("NOTAG_OUT_P11", noteGDkOutP11);
    	noteGMap.put("NOTAG_OUT_P12", noteGDkOutP12);
    	noteGMap.put("NOTAG_OUT_Q01", noteGDkOutQ01);
    	noteGMap.put("NOTAG_OUT_Q02", noteGDkOutQ02);
    	noteGMap.put("NOTAG_OUT_Q03", noteGDkOutQ03);
    	noteGMap.put("NOTAG_OUT_Q04", noteGDkOutQ04);
    	noteGMap.put("NOTAG_OUT_H01", noteGDkOutH01);
    	noteGMap.put("NOTAG_OUT_H02", noteGDkOutH02);
    	noteGMap.put("NOTAG_OUT_YTD", noteGDkOutYTD);
    	
    	noteGMap.put("NOTAG_TG_P01", noteGDkTgP01);
    	noteGMap.put("NOTAG_TG_P02", noteGDkTgP02);
    	noteGMap.put("NOTAG_TG_P03", noteGDkTgP03);
    	noteGMap.put("NOTAG_TG_P04", noteGDkTgP04);
    	noteGMap.put("NOTAG_TG_P05", noteGDkTgP05);
    	noteGMap.put("NOTAG_TG_P06", noteGDkTgP06);
    	noteGMap.put("NOTAG_TG_P07", noteGDkTgP07);
    	noteGMap.put("NOTAG_TG_P08", noteGDkTgP08);
    	noteGMap.put("NOTAG_TG_P09", noteGDkTgP09);
    	noteGMap.put("NOTAG_TG_P10", noteGDkTgP10);
    	noteGMap.put("NOTAG_TG_P11", noteGDkTgP11);
    	noteGMap.put("NOTAG_TG_P12", noteGDkTgP12);
    	noteGMap.put("NOTAG_TG_Q01", noteGDkTgQ01);
    	noteGMap.put("NOTAG_TG_Q02", noteGDkTgQ02);
    	noteGMap.put("NOTAG_TG_Q03", noteGDkTgQ03);
    	noteGMap.put("NOTAG_TG_Q04", noteGDkTgQ04);
    	noteGMap.put("NOTAG_TG_H01", noteGDkTgH01);
    	noteGMap.put("NOTAG_TG_H02", noteGDkTgH02);
    	noteGMap.put("NOTAG_TG_YTD", noteGDkTgYTD);
    	
		noteG.add(noteGMap);
		
	}
	
	
	
	public void setRowValue21(HSSFRow row, CellStyle style, Map rowData, String styleTxt, List dataList, String dataLv2, String dataLv3, String team) {

		double ng_local_ac_total_P01 = 0.0; double ng_local_ac_total_P02 = 0.0; double ng_local_ac_total_P03 = 0.0; double ng_local_ac_total_P04 = 0.0; double ng_local_ac_total_P05 = 0.0; double ng_local_ac_total_P06 = 0.0; 
		double ng_local_ac_total_P07 = 0.0; double ng_local_ac_total_P08 = 0.0; double ng_local_ac_total_P09 = 0.0; double ng_local_ac_total_P10 = 0.0; double ng_local_ac_total_P11 = 0.0; double ng_local_ac_total_P12 = 0.0; 
		double ng_local_ac_total_Q01 = 0.0; double ng_local_ac_total_Q02 = 0.0; double ng_local_ac_total_Q03 = 0.0; double ng_local_ac_total_Q04 = 0.0; double ng_local_ac_total_H01 = 0.0; double ng_local_ac_total_H02 = 0.0;
		double ng_local_ac_total_YTD01 = 0.0; double ng_local_ac_total_YTD02 = 0.0; double ng_local_ac_total_YTD03 = 0.0; double ng_local_ac_total_YTD04 = 0.0; double ng_local_ac_total_YTD05 = 0.0; double ng_local_ac_total_YTD06 = 0.0; 
		double ng_local_ac_total_YTD07 = 0.0; double ng_local_ac_total_YTD08 = 0.0; double ng_local_ac_total_YTD09 = 0.0; double ng_local_ac_total_YTD10 = 0.0; double ng_local_ac_total_YTD11 = 0.0; double ng_local_ac_total_YTD12 = 0.0;
		
		double ng_local_for_total_P01 = 0.0; double ng_local_for_total_P02 = 0.0; double ng_local_for_total_P03 = 0.0; double ng_local_for_total_P04 = 0.0; double ng_local_for_total_P05 = 0.0; double ng_local_for_total_P06 = 0.0; 
		double ng_local_for_total_P07 = 0.0; double ng_local_for_total_P08 = 0.0; double ng_local_for_total_P09 = 0.0; double ng_local_for_total_P10 = 0.0; double ng_local_for_total_P11 = 0.0; double ng_local_for_total_P12 = 0.0; 
		double ng_local_for_total_Q01 = 0.0; double ng_local_for_total_Q02 = 0.0; double ng_local_for_total_Q03 = 0.0; double ng_local_for_total_Q04 = 0.0; double ng_local_for_total_H01 = 0.0; double ng_local_for_total_H02 = 0.0;
		double ng_local_for_total_YTD01 = 0.0; double ng_local_for_total_YTD02 = 0.0; double ng_local_for_total_YTD03 = 0.0; double ng_local_for_total_YTD04 = 0.0; double ng_local_for_total_YTD05 = 0.0; double ng_local_for_total_YTD06 = 0.0; 
		double ng_local_for_total_YTD07 = 0.0; double ng_local_for_total_YTD08 = 0.0; double ng_local_for_total_YTD09 = 0.0; double ng_local_for_total_YTD10 = 0.0; double ng_local_for_total_YTD11 = 0.0; double ng_local_for_total_YTD12 = 0.0;
		
		double ng_local_out_total_P01 = 0.0; double ng_local_out_total_P02 = 0.0; double ng_local_out_total_P03 = 0.0; double ng_local_out_total_P04 = 0.0; double ng_local_out_total_P05 = 0.0; double ng_local_out_total_P06 = 0.0; 
		double ng_local_out_total_P07 = 0.0; double ng_local_out_total_P08 = 0.0; double ng_local_out_total_P09 = 0.0; double ng_local_out_total_P10 = 0.0; double ng_local_out_total_P11 = 0.0; double ng_local_out_total_P12 = 0.0; 
		double ng_local_out_total_Q01 = 0.0; double ng_local_out_total_Q02 = 0.0; double ng_local_out_total_Q03 = 0.0; double ng_local_out_total_Q04 = 0.0; double ng_local_out_total_H01 = 0.0; double ng_local_out_total_H02 = 0.0;
		double ng_local_out_total_YTD01 = 0.0; double ng_local_out_total_YTD02 = 0.0; double ng_local_out_total_YTD03 = 0.0; double ng_local_out_total_YTD04 = 0.0; double ng_local_out_total_YTD05 = 0.0; double ng_local_out_total_YTD06 = 0.0; 
		double ng_local_out_total_YTD07 = 0.0; double ng_local_out_total_YTD08 = 0.0; double ng_local_out_total_YTD09 = 0.0; double ng_local_out_total_YTD10 = 0.0; double ng_local_out_total_YTD11 = 0.0; double ng_local_out_total_YTD12 = 0.0;
		
		double ng_local_tg_total_P01 = 0.0; double ng_local_tg_total_P02 = 0.0; double ng_local_tg_total_P03 = 0.0; double ng_local_tg_total_P04 = 0.0; double ng_local_tg_total_P05 = 0.0; double ng_local_tg_total_P06 = 0.0; 
		double ng_local_tg_total_P07 = 0.0; double ng_local_tg_total_P08 = 0.0; double ng_local_tg_total_P09 = 0.0; double ng_local_tg_total_P10 = 0.0; double ng_local_tg_total_P11 = 0.0; double ng_local_tg_total_P12 = 0.0; 
		double ng_local_tg_total_Q01 = 0.0; double ng_local_tg_total_Q02 = 0.0; double ng_local_tg_total_Q03 = 0.0; double ng_local_tg_total_Q04 = 0.0; double ng_local_tg_total_H01 = 0.0; double ng_local_tg_total_H02 = 0.0;
		double ng_local_tg_total_YTD01 = 0.0; double ng_local_tg_total_YTD02 = 0.0; double ng_local_tg_total_YTD03 = 0.0; double ng_local_tg_total_YTD04 = 0.0; double ng_local_tg_total_YTD05 = 0.0; double ng_local_tg_total_YTD06 = 0.0; 
		double ng_local_tg_total_YTD07 = 0.0; double ng_local_tg_total_YTD08 = 0.0; double ng_local_tg_total_YTD09 = 0.0; double ng_local_tg_total_YTD10 = 0.0; double ng_local_tg_total_YTD11 = 0.0; double ng_local_tg_total_YTD12 = 0.0;
		
		
		Double colSum = 0.0;
		for (int i=0; i < dataList.size(); i++) {
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P01 = ng_local_ac_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P02 = ng_local_ac_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P03 = ng_local_ac_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P04 = ng_local_ac_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P04").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P05 = ng_local_ac_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P05").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P06 = ng_local_ac_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P06").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P07 = ng_local_ac_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P07").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P08 = ng_local_ac_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P08").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P09 = ng_local_ac_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P09").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P10 = ng_local_ac_total_P10 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P10").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P11 = ng_local_ac_total_P11 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P11").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P12 = ng_local_ac_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P12").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_Q01 = ng_local_ac_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_Q01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_Q02 = ng_local_ac_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_Q02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_Q03 = ng_local_ac_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_Q03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_Q04 = ng_local_ac_total_Q04 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_Q04").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_H01 = ng_local_ac_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_H01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_H02 = ng_local_ac_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_H02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD01 = ng_local_ac_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD02 = ng_local_ac_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD03 = ng_local_ac_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD04 = ng_local_ac_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD04").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD05 = ng_local_ac_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD05").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD06 = ng_local_ac_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD06").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD07 = ng_local_ac_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD07").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD08 = ng_local_ac_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD08").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD09 = ng_local_ac_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD09").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD10 = ng_local_ac_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD10").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD11 = ng_local_ac_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD11").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD12 = ng_local_ac_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD12").toString());
			}

			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P01 = ng_local_for_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P02 = ng_local_for_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P03 = ng_local_for_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P04 = ng_local_for_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P04").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P05 = ng_local_for_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P05").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P06 = ng_local_for_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P06").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P07 = ng_local_for_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P07").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P08 = ng_local_for_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P08").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P09 = ng_local_for_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P09").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P01 = ng_local_for_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P12 = ng_local_for_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P12").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_Q01 = ng_local_for_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_Q01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_Q02 = ng_local_for_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_Q02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_Q03 = ng_local_for_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_Q03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P01 = ng_local_for_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_H01 = ng_local_for_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_H01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_H02 = ng_local_for_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_H02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD01 = ng_local_for_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD02 = ng_local_for_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD03 = ng_local_for_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD04 = ng_local_for_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD04").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD05 = ng_local_for_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD05").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD06 = ng_local_for_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD06").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD07 = ng_local_for_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD07").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD08 = ng_local_for_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD08").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD09 = ng_local_for_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD09").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD10 = ng_local_for_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD10").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD11 = ng_local_for_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD11").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD12 = ng_local_for_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD12").toString());
			}

			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P01 = ng_local_out_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P02 = ng_local_out_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P03 = ng_local_out_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P04 = ng_local_out_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P04").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P05 = ng_local_out_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P05").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P06 = ng_local_out_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P06").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P07 = ng_local_out_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P07").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P08 = ng_local_out_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P08").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P09 = ng_local_out_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P09").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P10 = ng_local_out_total_P10 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P10").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P11 = ng_local_out_total_P11 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P11").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P12 = ng_local_out_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P12").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_Q01 = ng_local_out_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_Q01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_Q02 = ng_local_out_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_Q02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_Q03 = ng_local_out_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_Q03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_Q04 = ng_local_out_total_Q04 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_Q04").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_H01 = ng_local_out_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_H01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_H02 = ng_local_out_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_H02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD01 = ng_local_out_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD02 = ng_local_out_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD03 = ng_local_out_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD04 = ng_local_out_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD04").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD05 = ng_local_out_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD05").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD06 = ng_local_out_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD06").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD07 = ng_local_out_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD07").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD08 = ng_local_out_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD08").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD09 = ng_local_out_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD09").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD10 = ng_local_out_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD10").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD11 = ng_local_out_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD11").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD12 = ng_local_out_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD12").toString());
			}

			
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P01 = ng_local_tg_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P02 = ng_local_tg_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P03 = ng_local_tg_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P04 = ng_local_tg_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P04").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P05 = ng_local_tg_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P05").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P06 = ng_local_tg_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P06").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P07 = ng_local_tg_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P07").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P08 = ng_local_tg_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P08").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P09 = ng_local_tg_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P09").toString());
			}

			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P10 = ng_local_tg_total_P10 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P10").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P11 = ng_local_tg_total_P11 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P11").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P12 = ng_local_tg_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P12").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_Q01 = ng_local_tg_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_Q01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_Q02 = ng_local_tg_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_Q02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_Q03 = ng_local_tg_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_Q03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_Q04 = ng_local_tg_total_Q04 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_Q04").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_H01 = ng_local_tg_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_H01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_H02 = ng_local_tg_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_H02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD01 = ng_local_tg_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD02 = ng_local_tg_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD03 = ng_local_tg_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD04 = ng_local_tg_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD04").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD05 = ng_local_tg_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD05").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD06 = ng_local_tg_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD06").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD07 = ng_local_tg_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD07").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD08 = ng_local_tg_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD08").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD09 = ng_local_tg_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD09").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD10 = ng_local_tg_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD10").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD11 = ng_local_tg_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD11").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD12 = ng_local_tg_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD12").toString());
			}
		}
		
		
		
		
		
		
		if(ng_local_ac_total_P01 != 0 && !(rowData.get("NOTAG_AC_P01").toString().equals(0))){
			noteGDkAcP01 = ((Double.parseDouble(rowData.get("NOTAG_AC_P01").toString())/ng_local_ac_total_P01));
    	}else{
    		noteGDkAcP01 = 0.0;
    	}
    	
		if(ng_local_ac_total_P02 != 0 && !(rowData.get("NOTAG_AC_P02").toString().equals(0))){
			noteGDkAcP02 = ((Double.parseDouble(rowData.get("NOTAG_AC_P02").toString())/ng_local_ac_total_P02));
    	}else{
    		noteGDkAcP02 = 0.0;
    	}
		
		if(ng_local_ac_total_P03 != 0 && !(rowData.get("NOTAG_AC_P03").toString().equals(0))){
			noteGDkAcP03 = ((Double.parseDouble(rowData.get("NOTAG_AC_P03").toString())/ng_local_ac_total_P03));
    	}else{
    		noteGDkAcP03 = 0.0;
    	}
		
		if(ng_local_ac_total_P04 != 0 && !(rowData.get("NOTAG_AC_P04").toString().equals(0))){
			noteGDkAcP04 = ((Double.parseDouble(rowData.get("NOTAG_AC_P04").toString())/ng_local_ac_total_P04));
    	}else{
    		noteGDkAcP04 = 0.0;
    	}
		
		if(ng_local_ac_total_P05 != 0 && !(rowData.get("NOTAG_AC_P05").toString().equals(0))){
			noteGDkAcP05 = ((Double.parseDouble(rowData.get("NOTAG_AC_P05").toString())/ng_local_ac_total_P05));
    	}else{
    		noteGDkAcP05 = 0.0;
    	}
		
		if(ng_local_ac_total_P06 != 0 && !(rowData.get("NOTAG_AC_P06").toString().equals(0))){
			noteGDkAcP06 = ((Double.parseDouble(rowData.get("NOTAG_AC_P06").toString())/ng_local_ac_total_P06));
    	}else{
    		noteGDkAcP06 = 0.0;
    	}
		
		if(ng_local_ac_total_P07 != 0 && !(rowData.get("NOTAG_AC_P07").toString().equals(0))){
			noteGDkAcP07 = ((Double.parseDouble(rowData.get("NOTAG_AC_P07").toString())/ng_local_ac_total_P07));
    	}else{
    		noteGDkAcP07 = 0.0;
    	}
		
		if(ng_local_ac_total_P08 != 0 && !(rowData.get("NOTAG_AC_P08").toString().equals(0))){
			noteGDkAcP08 = ((Double.parseDouble(rowData.get("NOTAG_AC_P08").toString())/ng_local_ac_total_P08));
    	}else{
    		noteGDkAcP08 = 0.0;
    	}
		
		if(ng_local_ac_total_P09 != 0 && !(rowData.get("NOTAG_AC_P09").toString().equals(0))){
			noteGDkAcP09 = ((Double.parseDouble(rowData.get("NOTAG_AC_P09").toString())/ng_local_ac_total_P09));
    	}else{
    		noteGDkAcP09 = 0.0;
    	}
		
		if(ng_local_ac_total_P10 != 0 && !(rowData.get("NOTAG_AC_P10").toString().equals(0))){
			noteGDkAcP10 = ((Double.parseDouble(rowData.get("NOTAG_AC_P10").toString())/ng_local_ac_total_P10));
    	}else{
    		noteGDkAcP10 = 0.0;
    	}
		
		if(ng_local_ac_total_P11 != 0 && !(rowData.get("NOTAG_AC_P11").toString().equals(0))){
			noteGDkAcP11 = ((Double.parseDouble(rowData.get("NOTAG_AC_P11").toString())/ng_local_ac_total_P11));
    	}else{
    		noteGDkAcP11 = 0.0;
    	}
		
		if(ng_local_ac_total_P12 != 0 && !(rowData.get("NOTAG_AC_P12").toString().equals(0))){
			noteGDkAcP12 = ((Double.parseDouble(rowData.get("NOTAG_AC_P12").toString())/ng_local_ac_total_P12));
    	}else{
    		noteGDkAcP12 = 0.0;
    	}
		
		if(ng_local_ac_total_Q01 != 0 && !(rowData.get("NOTAG_AC_Q01").toString().equals(0))){
			noteGDkAcQ01 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q01").toString())/ng_local_ac_total_Q01));
    	}else{
    		noteGDkAcQ01 = 0.0;
    	}
		
		if(ng_local_ac_total_Q02 != 0 && !(rowData.get("NOTAG_AC_Q02").toString().equals(0))){
			noteGDkAcQ02 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q02").toString())/ng_local_ac_total_Q02));
    	}else{
    		noteGDkAcQ02 = 0.0;
    	}
		
		if(ng_local_ac_total_Q03 != 0 && !(rowData.get("NOTAG_AC_Q03").toString().equals(0))){
			noteGDkAcQ03 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q03").toString())/ng_local_ac_total_Q03));
    	}else{
    		noteGDkAcQ03 = 0.0;
    	}
		
		if(ng_local_ac_total_Q04 != 0 && !(rowData.get("NOTAG_AC_Q04").toString().equals(0))){
			noteGDkAcQ04 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q04").toString())/ng_local_ac_total_Q04));
    	}else{
    		noteGDkAcQ04 = 0.0;
    	}
		
		if(ng_local_ac_total_H01 != 0 && !(rowData.get("NOTAG_AC_H01").toString().equals(0))){
			noteGDkAcH01 = ((Double.parseDouble(rowData.get("NOTAG_AC_H01").toString())/ng_local_ac_total_H01));
    	}else{
    		noteGDkAcH01 = 0.0;
    	}
		
		if(ng_local_ac_total_H02 != 0 && !(rowData.get("NOTAG_AC_H02").toString().equals(0))){
			noteGDkAcH02 = ((Double.parseDouble(rowData.get("NOTAG_AC_H02").toString())/ng_local_ac_total_H02));
    	}else{
    		noteGDkAcH02 = 0.0;
    	}
		
		
    	if(ytd_Param.equals("P01")){
    		if(ng_local_ac_total_YTD01 != 0 && !(rowData.get("NOTAG_AC_YTD01").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD01").toString())/ng_local_ac_total_YTD01));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P02")){
    		if(ng_local_ac_total_YTD02 != 0 && !(rowData.get("NOTAG_AC_YTD02").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD02").toString())/ng_local_ac_total_YTD02));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P03")){
    		if(ng_local_ac_total_YTD03 != 0 && !(rowData.get("NOTAG_AC_YTD03").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD03").toString())/ng_local_ac_total_YTD03));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P04")){
    		if(ng_local_ac_total_YTD04 != 0 && !(rowData.get("NOTAG_AC_YTD04").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD04").toString())/ng_local_ac_total_YTD04));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P05")){
    		if(ng_local_ac_total_YTD05 != 0 && !(rowData.get("NOTAG_AC_YTD05").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD05").toString())/ng_local_ac_total_YTD05));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P06")){
    		if(ng_local_ac_total_YTD06 != 0 && !(rowData.get("NOTAG_AC_YTD06").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD06").toString())/ng_local_ac_total_YTD06));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P07")){
    		if(ng_local_ac_total_YTD07 != 0 && !(rowData.get("NOTAG_AC_YTD07").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD07").toString())/ng_local_ac_total_YTD07));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P08")){
    		if(ng_local_ac_total_YTD08 != 0 && !(rowData.get("NOTAG_AC_YTD08").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD08").toString())/ng_local_ac_total_YTD08));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P09")){
    		if(ng_local_ac_total_YTD09 != 0 && !(rowData.get("NOTAG_AC_YTD09").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD09").toString())/ng_local_ac_total_YTD09));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P10")){
    		if(ng_local_ac_total_YTD10 != 0 && !(rowData.get("NOTAG_AC_YTD10").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD10").toString())/ng_local_ac_total_YTD10));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P11")){
    		if(ng_local_ac_total_YTD11 != 0 && !(rowData.get("NOTAG_AC_YTD11").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD11").toString())/ng_local_ac_total_YTD11));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P12")){
    		if(ng_local_ac_total_YTD12 != 0 && !(rowData.get("NOTAG_AC_YTD12").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString())/ng_local_ac_total_YTD12));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else{
    		if(ng_local_ac_total_YTD12 != 0 && !(rowData.get("NOTAG_AC_YTD12").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString())/ng_local_ac_total_YTD02));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}
    	

    	if(ng_local_for_total_P01 != 0 && !(rowData.get("NOTAG_FOR_P01").toString().equals(0))){
			noteGDkForP01 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P01").toString())/ng_local_for_total_P01));
    	}else{
    		noteGDkForP01 = 0.0;
    	}
    	
    	if(ng_local_for_total_P02 != 0 && !(rowData.get("NOTAG_FOR_P02").toString().equals(0))){
			noteGDkForP02 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P02").toString())/ng_local_for_total_P02));
    	}else{
    		noteGDkForP02 = 0.0;
    	}
    	
    	if(ng_local_for_total_P03 != 0 && !(rowData.get("NOTAG_FOR_P03").toString().equals(0))){
			noteGDkForP03 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P03").toString())/ng_local_for_total_P03));
    	}else{
    		noteGDkForP03 = 0.0;
    	}
    	
    	if(ng_local_for_total_P04 != 0 && !(rowData.get("NOTAG_FOR_P04").toString().equals(0))){
			noteGDkForP04 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P04").toString())/ng_local_for_total_P04));
    	}else{
    		noteGDkForP04 = 0.0;
    	}
    	
    	if(ng_local_for_total_P05 != 0 && !(rowData.get("NOTAG_FOR_P05").toString().equals(0))){
			noteGDkForP05 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P05").toString())/ng_local_for_total_P05));
    	}else{
    		noteGDkForP05 = 0.0;
    	}
    	
    	if(ng_local_for_total_P06 != 0 && !(rowData.get("NOTAG_FOR_P06").toString().equals(0))){
			noteGDkForP06 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P06").toString())/ng_local_for_total_P06));
    	}else{
    		noteGDkForP06 = 0.0;
    	}
    	
    	if(ng_local_for_total_P07 != 0 && !(rowData.get("NOTAG_FOR_P07").toString().equals(0))){
			noteGDkForP07 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P07").toString())/ng_local_for_total_P07));
    	}else{
    		noteGDkForP07 = 0.0;
    	}
    	
    	if(ng_local_for_total_P08 != 0 && !(rowData.get("NOTAG_FOR_P08").toString().equals(0))){
			noteGDkForP08 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P08").toString())/ng_local_for_total_P08));
    	}else{
    		noteGDkForP08 = 0.0;
    	}
    	
    	if(ng_local_for_total_P09 != 0 && !(rowData.get("NOTAG_FOR_P09").toString().equals(0))){
			noteGDkForP09 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P09").toString())/ng_local_for_total_P09));
    	}else{
    		noteGDkForP09 = 0.0;
    	}
    	
    	if(ng_local_for_total_P10 != 0 && !(rowData.get("NOTAG_FOR_P10").toString().equals(0))){
			noteGDkForP10 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P10").toString())/ng_local_for_total_P10));
    	}else{
    		noteGDkForP10 = 0.0;
    	}
    	
    	if(ng_local_for_total_P11 != 0 && !(rowData.get("NOTAG_FOR_P11").toString().equals(0))){
			noteGDkForP11 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P11").toString())/ng_local_for_total_P11));
    	}else{
    		noteGDkForP11 = 0.0;
    	}
    	
    	if(ng_local_for_total_P12 != 0 && !(rowData.get("NOTAG_FOR_P12").toString().equals(0))){
			noteGDkForP12 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P12").toString())/ng_local_for_total_P12));
    	}else{
    		noteGDkForP12 = 0.0;
    	}
    	
    	if(ng_local_for_total_Q01 != 0 && !(rowData.get("NOTAG_FOR_Q01").toString().equals(0))){
			noteGDkForQ01 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q01").toString())/ng_local_for_total_Q01));
    	}else{
    		noteGDkForQ01 = 0.0;
    	}
    	
    	if(ng_local_for_total_Q02 != 0 && !(rowData.get("NOTAG_FOR_Q02").toString().equals(0))){
			noteGDkForQ02 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q02").toString())/ng_local_for_total_Q02));
    	}else{
    		noteGDkForQ02 = 0.0;
    	}
    	
    	if(ng_local_for_total_Q03 != 0 && !(rowData.get("NOTAG_FOR_Q03").toString().equals(0))){
			noteGDkForQ03 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q03").toString())/ng_local_for_total_Q03));
    	}else{
    		noteGDkForQ03 = 0.0;
    	}
    	
    	if(ng_local_for_total_Q04 != 0 && !(rowData.get("NOTAG_FOR_Q04").toString().equals(0))){
			noteGDkForQ04 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q04").toString())/ng_local_for_total_Q04));
    	}else{
    		noteGDkForQ04 = 0.0;
    	}
    	
    	if(ng_local_for_total_H01 != 0 && !(rowData.get("NOTAG_FOR_H01").toString().equals(0))){
			noteGDkForH01 = ((Double.parseDouble(rowData.get("NOTAG_FOR_H01").toString())/ng_local_for_total_H01));
    	}else{
    		noteGDkForH01 = 0.0;
    	}
    	
    	if(ng_local_for_total_H02 != 0 && !(rowData.get("NOTAG_FOR_H02").toString().equals(0))){
			noteGDkForH02 = ((Double.parseDouble(rowData.get("NOTAG_FOR_H02").toString())/ng_local_for_total_H02));
    	}else{
    		noteGDkForH02 = 0.0;
    	}

    	if(ytd_Param.equals("P01")){
    		if(ng_local_for_total_YTD01 != 0 && !(rowData.get("NOTAG_FOR_YTD01").toString().equals(0))){
    			noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD01").toString())/ng_local_for_total_YTD01));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P02")){
			if(ng_local_for_total_YTD02 != 0 && !(rowData.get("NOTAG_FOR_YTD02").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD02").toString())/ng_local_for_total_YTD02));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P03")){
			if(ng_local_for_total_YTD03 != 0 && !(rowData.get("NOTAG_FOR_YTD03").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD03").toString())/ng_local_for_total_YTD03));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P04")){
			if(ng_local_for_total_YTD04 != 0 && !(rowData.get("NOTAG_FOR_YTD04").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD04").toString())/ng_local_for_total_YTD04));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P05")){
			if(ng_local_for_total_YTD05 != 0 && !(rowData.get("NOTAG_FOR_YTD05").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD05").toString())/ng_local_for_total_YTD05));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P06")){
			if(ng_local_for_total_YTD06 != 0 && !(rowData.get("NOTAG_FOR_YTD06").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD06").toString())/ng_local_for_total_YTD06));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P07")){
			if(ng_local_for_total_YTD07 != 0 && !(rowData.get("NOTAG_FOR_YTD07").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD07").toString())/ng_local_for_total_YTD07));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P08")){
			if(ng_local_for_total_YTD08 != 0 && !(rowData.get("NOTAG_FOR_YTD08").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD08").toString())/ng_local_for_total_YTD08));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P09")){
			if(ng_local_for_total_YTD09 != 0 && !(rowData.get("NOTAG_FOR_YTD09").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD09").toString())/ng_local_for_total_YTD09));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P10")){
			if(ng_local_for_total_YTD10 != 0 && !(rowData.get("NOTAG_FOR_YTD10").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD10").toString())/ng_local_for_total_YTD10));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P11")){
			if(ng_local_for_total_YTD11 != 0 && !(rowData.get("NOTAG_FOR_YTD11").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD11").toString())/ng_local_for_total_YTD11));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P12")){
			if(ng_local_for_total_YTD11 != 0 && !(rowData.get("NOTAG_FOR_YTD12").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString())/ng_local_for_total_YTD11));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else{
			if(ng_local_for_total_YTD12 != 0 && !(rowData.get("NOTAG_FOR_YTD12").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString())/ng_local_for_total_YTD12));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}
    	
    	if(ng_local_out_total_P01 != 0 && !(rowData.get("NOTAG_OUT_P01").toString().equals(0))){
			noteGDkOutP01 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P01").toString())/ng_local_out_total_P01));
    	}else{
    		noteGDkOutP01 = 0.0;
    	}
    	if(ng_local_out_total_P02 != 0 && !(rowData.get("NOTAG_OUT_P02").toString().equals(0))){
			noteGDkOutP02 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P02").toString())/ng_local_out_total_P02));
    	}else{
    		noteGDkOutP02 = 0.0;
    	}
    	if(ng_local_out_total_P03 != 0 && !(rowData.get("NOTAG_OUT_P03").toString().equals(0))){
			noteGDkOutP03 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P03").toString())/ng_local_out_total_P03));
    	}else{
    		noteGDkOutP03 = 0.0;
    	}
    	if(ng_local_out_total_P04 != 0 && !(rowData.get("NOTAG_OUT_P04").toString().equals(0))){
			noteGDkOutP04 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P04").toString())/ng_local_out_total_P04));
    	}else{
    		noteGDkOutP04 = 0.0;
    	}
    	if(ng_local_out_total_P05 != 0 && !(rowData.get("NOTAG_OUT_P05").toString().equals(0))){
			noteGDkOutP05 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P05").toString())/ng_local_out_total_P05));
    	}else{
    		noteGDkOutP05 = 0.0;
    	}
    	if(ng_local_out_total_P06 != 0 && !(rowData.get("NOTAG_OUT_P06").toString().equals(0))){
			noteGDkOutP06 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P06").toString())/ng_local_out_total_P06));
    	}else{
    		noteGDkOutP06 = 0.0;
    	}
    	if(ng_local_out_total_P07 != 0 && !(rowData.get("NOTAG_OUT_P07").toString().equals(0))){
			noteGDkOutP07 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P07").toString())/ng_local_out_total_P07));
    	}else{
    		noteGDkOutP07 = 0.0;
    	}
    	if(ng_local_out_total_P08 != 0 && !(rowData.get("NOTAG_OUT_P08").toString().equals(0))){
			noteGDkOutP08 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P08").toString())/ng_local_out_total_P08));
    	}else{
    		noteGDkOutP08 = 0.0;
    	}
    	if(ng_local_out_total_P09 != 0 && !(rowData.get("NOTAG_OUT_P09").toString().equals(0))){
			noteGDkOutP09 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P09").toString())/ng_local_out_total_P09));
    	}else{
    		noteGDkOutP09 = 0.0;
    	}
    	if(ng_local_out_total_P10 != 0 && !(rowData.get("NOTAG_OUT_P10").toString().equals(0))){
			noteGDkOutP10 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P10").toString())/ng_local_out_total_P10));
    	}else{
    		noteGDkOutP10 = 0.0;
    	}
    	if(ng_local_out_total_P11 != 0 && !(rowData.get("NOTAG_OUT_P11").toString().equals(0))){
			noteGDkOutP11 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P11").toString())/ng_local_out_total_P11));
    	}else{
    		noteGDkOutP11 = 0.0;
    	}
    	if(ng_local_out_total_P12 != 0 && !(rowData.get("NOTAG_OUT_P12").toString().equals(0))){
			noteGDkOutP12 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P12").toString())/ng_local_out_total_P12));
    	}else{
    		noteGDkOutP12 = 0.0;
    	}
    	if(ng_local_out_total_Q01 != 0 && !(rowData.get("NOTAG_OUT_Q01").toString().equals(0))){
			noteGDkOutQ01 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q01").toString())/ng_local_out_total_Q01));
    	}else{
    		noteGDkOutQ01 = 0.0;
    	}
    	if(ng_local_out_total_Q02 != 0 && !(rowData.get("NOTAG_OUT_Q02").toString().equals(0))){
			noteGDkOutQ02 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q02").toString())/ng_local_out_total_Q02));
    	}else{
    		noteGDkOutQ02 = 0.0;
    	}
    	if(ng_local_out_total_Q03 != 0 && !(rowData.get("NOTAG_OUT_Q03").toString().equals(0))){
			noteGDkOutQ03 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q03").toString())/ng_local_out_total_Q03));
    	}else{
    		noteGDkOutQ03 = 0.0;
    	}
    	if(ng_local_out_total_Q04 != 0 && !(rowData.get("NOTAG_OUT_Q04").toString().equals(0))){
			noteGDkOutQ04 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q04").toString())/ng_local_out_total_Q04));
    	}else{
    		noteGDkOutQ04 = 0.0;
    	}
    	if(ng_local_out_total_H01 != 0 && !(rowData.get("NOTAG_OUT_H01").toString().equals(0))){
			noteGDkOutH01 = ((Double.parseDouble(rowData.get("NOTAG_OUT_H01").toString())/ng_local_out_total_H01));
    	}else{
    		noteGDkOutH01 = 0.0;
    	}
    	if(ng_local_out_total_H02 != 0 && !(rowData.get("NOTAG_OUT_H02").toString().equals(0))){
			noteGDkOutH02 = ((Double.parseDouble(rowData.get("NOTAG_OUT_H02").toString())/ng_local_out_total_H02));
    	}else{
    		noteGDkOutH02 = 0.0;
    	}
    	
    	if(ytd_Param.equals("P01")){
    		if(ng_local_out_total_YTD01 != 0 && !(rowData.get("NOTAG_OUT_YTD01").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD01").toString())/ng_local_out_total_YTD01));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P02")){
    		if(ng_local_out_total_YTD02 != 0 && !(rowData.get("NOTAG_OUT_YTD02").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD02").toString())/ng_local_out_total_YTD02));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P03")){
    		if(ng_local_out_total_YTD03 != 0 && !(rowData.get("NOTAG_OUT_YTD03").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD03").toString())/ng_local_out_total_YTD03));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P04")){
    		if(ng_local_out_total_YTD04 != 0 && !(rowData.get("NOTAG_OUT_YTD04").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD04").toString())/ng_local_out_total_YTD04));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P05")){
    		if(ng_local_out_total_YTD05 != 0 && !(rowData.get("NOTAG_OUT_YTD05").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD05").toString())/ng_local_out_total_YTD05));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P06")){
    		if(ng_local_out_total_YTD06 != 0 && !(rowData.get("NOTAG_OUT_YTD06").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD06").toString())/ng_local_out_total_YTD06));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P07")){
    		if(ng_local_out_total_YTD07 != 0 && !(rowData.get("NOTAG_OUT_YTD07").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD07").toString())/ng_local_out_total_YTD07));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P08")){
    		if(ng_local_out_total_YTD08 != 0 && !(rowData.get("NOTAG_OUT_YTD08").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD08").toString())/ng_local_out_total_YTD08));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P09")){
    		if(ng_local_out_total_YTD09 != 0 && !(rowData.get("NOTAG_OUT_YTD09").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD09").toString())/ng_local_out_total_YTD09));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P10")){
    		if(ng_local_out_total_YTD10 != 0 && !(rowData.get("NOTAG_OUT_YTD10").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD10").toString())/ng_local_out_total_YTD10));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P11")){
    		if(ng_local_out_total_YTD11 != 0 && !(rowData.get("NOTAG_OUT_YTD11").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD11").toString())/ng_local_out_total_YTD11));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P12")){
    		if(ng_local_out_total_YTD12 != 0 && !(rowData.get("NOTAG_OUT_YTD12").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD12").toString())/ng_local_out_total_YTD12));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}
		
    	
    	
    	
    
    	if(ng_local_tg_total_P01 != 0 && !(rowData.get("NOTAG_TG_P01").toString().equals(0))){
			noteGDkTgP01 = ((Double.parseDouble(rowData.get("NOTAG_TG_P01").toString())/ng_local_tg_total_P01));
    	}else{
    		noteGDkTgP01 = 0.0;
    	}
    	if(ng_local_tg_total_P02 != 0 && !(rowData.get("NOTAG_TG_P02").toString().equals(0))){
			noteGDkTgP02 = ((Double.parseDouble(rowData.get("NOTAG_TG_P02").toString())/ng_local_tg_total_P02));
    	}else{
    		noteGDkTgP02 = 0.0;
    	}
    	if(ng_local_tg_total_P03 != 0 && !(rowData.get("NOTAG_TG_P03").toString().equals(0))){
			noteGDkTgP03 = ((Double.parseDouble(rowData.get("NOTAG_TG_P03").toString())/ng_local_tg_total_P03));
    	}else{
    		noteGDkTgP03 = 0.0;
    	}
    	if(ng_local_tg_total_P04 != 0 && !(rowData.get("NOTAG_TG_P04").toString().equals(0))){
			noteGDkTgP04 = ((Double.parseDouble(rowData.get("NOTAG_TG_P04").toString())/ng_local_tg_total_P04));
    	}else{
    		noteGDkTgP04 = 0.0;
    	}
    	if(ng_local_tg_total_P05 != 0 && !(rowData.get("NOTAG_TG_P05").toString().equals(0))){
			noteGDkTgP05 = ((Double.parseDouble(rowData.get("NOTAG_TG_P05").toString())/ng_local_tg_total_P05));
    	}else{
    		noteGDkTgP05 = 0.0;
    	}
    	if(ng_local_tg_total_P06 != 0 && !(rowData.get("NOTAG_TG_P06").toString().equals(0))){
			noteGDkTgP06 = ((Double.parseDouble(rowData.get("NOTAG_TG_P06").toString())/ng_local_tg_total_P06));
    	}else{
    		noteGDkTgP06 = 0.0;
    	}
    	if(ng_local_tg_total_P07 != 0 && !(rowData.get("NOTAG_TG_P07").toString().equals(0))){
			noteGDkTgP07 = ((Double.parseDouble(rowData.get("NOTAG_TG_P07").toString())/ng_local_tg_total_P07));
    	}else{
    		noteGDkTgP07 = 0.0;
    	}
    	if(ng_local_tg_total_P08 != 0 && !(rowData.get("NOTAG_TG_P08").toString().equals(0))){
			noteGDkTgP08 = ((Double.parseDouble(rowData.get("NOTAG_TG_P08").toString())/ng_local_tg_total_P08));
    	}else{
    		noteGDkTgP08 = 0.0;
    	}
    	if(ng_local_tg_total_P09 != 0 && !(rowData.get("NOTAG_TG_P09").toString().equals(0))){
			noteGDkTgP09 = ((Double.parseDouble(rowData.get("NOTAG_TG_P09").toString())/ng_local_tg_total_P09));
    	}else{
    		noteGDkTgP09 = 0.0;
    	}
    	if(ng_local_tg_total_P10 != 0 && !(rowData.get("NOTAG_TG_P10").toString().equals(0))){
			noteGDkTgP10 = ((Double.parseDouble(rowData.get("NOTAG_TG_P10").toString())/ng_local_tg_total_P10));
    	}else{
    		noteGDkTgP10 = 0.0;
    	}
    	if(ng_local_tg_total_P11 != 0 && !(rowData.get("NOTAG_TG_P11").toString().equals(0))){
			noteGDkTgP11 = ((Double.parseDouble(rowData.get("NOTAG_TG_P11").toString())/ng_local_tg_total_P11));
    	}else{
    		noteGDkTgP11 = 0.0;
    	}
    	if(ng_local_tg_total_P12 != 0 && !(rowData.get("NOTAG_TG_P12").toString().equals(0))){
			noteGDkTgP12 = ((Double.parseDouble(rowData.get("NOTAG_TG_P12").toString())/ng_local_tg_total_P12));
    	}else{
    		noteGDkTgP12 = 0.0;
    	}
    	if(ng_local_tg_total_Q01 != 0 && !(rowData.get("NOTAG_TG_Q01").toString().equals(0))){
			noteGDkTgQ01 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q01").toString())/ng_local_tg_total_Q01));
    	}else{
    		noteGDkTgQ01 = 0.0;
    	}
    	if(ng_local_tg_total_Q02 != 0 && !(rowData.get("NOTAG_TG_Q02").toString().equals(0))){
			noteGDkTgQ02 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q02").toString())/ng_local_tg_total_Q02));
    	}else{
    		noteGDkTgQ02 = 0.0;
    	}
    	if(ng_local_tg_total_Q03 != 0 && !(rowData.get("NOTAG_TG_Q03").toString().equals(0))){
			noteGDkTgQ03 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q03").toString())/ng_local_tg_total_Q03));
    	}else{
    		noteGDkTgQ03 = 0.0;
    	}
    	if(ng_local_tg_total_Q04 != 0 && !(rowData.get("NOTAG_TG_Q04").toString().equals(0))){
			noteGDkTgQ04 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q04").toString())/ng_local_tg_total_Q04));
    	}else{
    		noteGDkTgQ04 = 0.0;
    	}
    	if(ng_local_tg_total_H01 != 0 && !(rowData.get("NOTAG_TG_H01").toString().equals(0))){
			noteGDkTgH01 = ((Double.parseDouble(rowData.get("NOTAG_TG_H01").toString())/ng_local_tg_total_H01));
    	}else{
    		noteGDkTgH01 = 0.0;
    	}
    	if(ng_local_tg_total_H02 != 0 && !(rowData.get("NOTAG_TG_H02").toString().equals(0))){
			noteGDkTgH02 = ((Double.parseDouble(rowData.get("NOTAG_TG_H02").toString())/ng_local_tg_total_H02));
    	}else{
    		noteGDkTgH02 = 0.0;
    	}
    	
    	
    	
    	if(ytd_Param.equals("P01")){
    		if(ng_local_tg_total_YTD01 != 0 && !(rowData.get("NOTAG_TG_YTD01").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD01").toString())/ng_local_tg_total_YTD01));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P02")){
    		if(ng_local_tg_total_YTD02 != 0 && !(rowData.get("NOTAG_TG_YTD02").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD02").toString())/ng_local_tg_total_YTD02));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P03")){
    		if(ng_local_tg_total_YTD03 != 0 && !(rowData.get("NOTAG_TG_YTD03").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD03").toString())/ng_local_tg_total_YTD03));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P03")){
    		if(ng_local_tg_total_YTD03 != 0 && !(rowData.get("NOTAG_TG_YTD03").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD03").toString())/ng_local_tg_total_YTD03));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P04")){
    		if(ng_local_tg_total_YTD04 != 0 && !(rowData.get("NOTAG_TG_YTD04").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD04").toString())/ng_local_tg_total_YTD04));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P05")){
    		if(ng_local_tg_total_YTD05 != 0 && !(rowData.get("NOTAG_TG_YTD05").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD05").toString())/ng_local_tg_total_YTD05));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P06")){
    		if(ng_local_tg_total_YTD06 != 0 && !(rowData.get("NOTAG_TG_YTD06").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD06").toString())/ng_local_tg_total_YTD06));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P07")){
    		if(ng_local_tg_total_YTD07 != 0 && !(rowData.get("NOTAG_TG_YTD07").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD07").toString())/ng_local_tg_total_YTD07));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P08")){
    		if(ng_local_tg_total_YTD08 != 0 && !(rowData.get("NOTAG_TG_YTD08").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD08").toString())/ng_local_tg_total_YTD08));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P09")){
    		if(ng_local_tg_total_YTD09 != 0 && !(rowData.get("NOTAG_TG_YTD09").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD09").toString())/ng_local_tg_total_YTD09));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P10")){
    		if(ng_local_tg_total_YTD10 != 0 && !(rowData.get("NOTAG_TG_YTD10").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD10").toString())/ng_local_tg_total_YTD10));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P11")){
    		if(ng_local_tg_total_YTD11 != 0 && !(rowData.get("NOTAG_TG_YTD11").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD11").toString())/ng_local_tg_total_YTD11));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P12")){
    		if(ng_local_tg_total_YTD12 != 0 && !(rowData.get("NOTAG_TG_YTD12").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString())/ng_local_tg_total_YTD12));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else{
			if(ng_local_tg_total_YTD12 != 0 && !(rowData.get("NOTAG_TG_YTD12").toString().equals(0))){
				noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString())/ng_local_tg_total_YTD12));
			}else{
				noteGDkTgYTD = 0.0;
			}
		}

    	
		if(periodChk_Param.equals("Y")){
			
			for(int i=4; i<42; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkAcP01);
        	row.getCell(5).setCellValue(noteGDkAcP02);
        	row.getCell(6).setCellValue(noteGDkAcP03);
        	row.getCell(7).setCellValue(noteGDkAcP04);
        	row.getCell(8).setCellValue(noteGDkAcP05);
        	row.getCell(9).setCellValue(noteGDkAcP06);
        	row.getCell(10).setCellValue(noteGDkAcP07);
        	row.getCell(11).setCellValue(noteGDkAcP08);
        	row.getCell(12).setCellValue(noteGDkAcP09);
        	row.getCell(13).setCellValue(noteGDkAcP10);
        	row.getCell(14).setCellValue(noteGDkAcP11);
        	row.getCell(15).setCellValue(noteGDkAcP12);
        	row.getCell(16).setCellValue(noteGDkAcQ01);
        	row.getCell(17).setCellValue(noteGDkAcQ02);
        	row.getCell(18).setCellValue(noteGDkAcQ03);
        	row.getCell(19).setCellValue(noteGDkAcQ04);
        	row.getCell(20).setCellValue(noteGDkAcH01);
        	row.getCell(21).setCellValue(noteGDkAcH02);
        	row.getCell(22).setCellValue(noteGDkAcYTD);
        	row.getCell(23).setCellValue(noteGDkForP01);
        	row.getCell(24).setCellValue(noteGDkForP02);
        	row.getCell(25).setCellValue(noteGDkForP03);
        	row.getCell(26).setCellValue(noteGDkForP04);
        	row.getCell(27).setCellValue(noteGDkForP05);
        	row.getCell(28).setCellValue(noteGDkForP06);
        	row.getCell(29).setCellValue(noteGDkForP07);
        	row.getCell(30).setCellValue(noteGDkForP08);
        	row.getCell(31).setCellValue(noteGDkForP09);
        	row.getCell(32).setCellValue(noteGDkForP10);
        	row.getCell(33).setCellValue(noteGDkForP11);
        	row.getCell(34).setCellValue(noteGDkForP12);
        	row.getCell(35).setCellValue(noteGDkForQ01);
        	row.getCell(36).setCellValue(noteGDkForQ02);
        	row.getCell(37).setCellValue(noteGDkForQ03);
        	row.getCell(38).setCellValue(noteGDkForQ04);
        	row.getCell(39).setCellValue(noteGDkForH01);
        	row.getCell(40).setCellValue(noteGDkForH02);
        	row.getCell(41).setCellValue(noteGDkForYTD);
    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=4; i<16; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(noteGDkAcP01);
        	row.getCell(5).setCellValue(noteGDkAcP02);
        	row.getCell(6).setCellValue(noteGDkAcP03);
        	row.getCell(7).setCellValue(noteGDkAcQ01);
        	row.getCell(8).setCellValue(noteGDkAcH01);
        	row.getCell(9).setCellValue(noteGDkAcYTD);
        	row.getCell(10).setCellValue(noteGDkForP01);
        	row.getCell(11).setCellValue(noteGDkForP02);
        	row.getCell(12).setCellValue(noteGDkForP03);
        	row.getCell(13).setCellValue(noteGDkForQ01);
        	row.getCell(14).setCellValue(noteGDkForH01);
        	row.getCell(15).setCellValue(noteGDkForYTD);
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=4; i<18; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkAcP04);
        	row.getCell(5).setCellValue(noteGDkAcP05);
        	row.getCell(6).setCellValue(noteGDkAcP06);
        	row.getCell(7).setCellValue(noteGDkAcQ01);
        	row.getCell(8).setCellValue(noteGDkAcQ02);
        	row.getCell(9).setCellValue(noteGDkAcH01);
        	row.getCell(10).setCellValue(noteGDkAcYTD);
        	row.getCell(11).setCellValue(noteGDkForP04);
        	row.getCell(12).setCellValue(noteGDkForP05);
        	row.getCell(13).setCellValue(noteGDkForP06);
        	row.getCell(14).setCellValue(noteGDkForQ01);
        	row.getCell(15).setCellValue(noteGDkForQ02);
        	row.getCell(16).setCellValue(noteGDkForH01);
        	row.getCell(17).setCellValue(noteGDkForYTD);
        	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkAcP07);
        	row.getCell(5).setCellValue(noteGDkAcP08);
        	row.getCell(6).setCellValue(noteGDkAcP09);
        	row.getCell(7).setCellValue(noteGDkAcQ02);
        	row.getCell(8).setCellValue(noteGDkAcQ03);
        	row.getCell(9).setCellValue(noteGDkAcH01);
        	row.getCell(10).setCellValue(noteGDkAcH02);
        	row.getCell(11).setCellValue(noteGDkAcYTD);
        	row.getCell(12).setCellValue(noteGDkForP07);
        	row.getCell(13).setCellValue(noteGDkForP08);
        	row.getCell(14).setCellValue(noteGDkForP09);
        	row.getCell(15).setCellValue(noteGDkForQ02);
        	row.getCell(16).setCellValue(noteGDkForQ03);
        	row.getCell(17).setCellValue(noteGDkForH01);
        	row.getCell(18).setCellValue(noteGDkForH02);
        	row.getCell(19).setCellValue(noteGDkForYTD);
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(noteGDkAcP10);
        	row.getCell(5).setCellValue(noteGDkAcP11);
        	row.getCell(6).setCellValue(noteGDkAcP12);
        	row.getCell(7).setCellValue(noteGDkAcQ03);
        	row.getCell(8).setCellValue(noteGDkAcQ04);
        	row.getCell(9).setCellValue(noteGDkAcH01);
        	row.getCell(10).setCellValue(noteGDkAcH02);
        	row.getCell(11).setCellValue(noteGDkAcYTD);
        	row.getCell(12).setCellValue(noteGDkForP10);
        	row.getCell(13).setCellValue(noteGDkForP11);
        	row.getCell(14).setCellValue(noteGDkForP12);
        	row.getCell(15).setCellValue(noteGDkForQ03);
        	row.getCell(16).setCellValue(noteGDkForQ04);
        	row.getCell(17).setCellValue(noteGDkForH01);
        	row.getCell(18).setCellValue(noteGDkForH02);
        	row.getCell(19).setCellValue(noteGDkForYTD);
	    	
		}
    	
    	// 계산식을 위해 리스트에 값을 담아준다.
    	noteGMap = new HashMap();
    	
    	noteGMap.put("STYLETXT", styleTxt);
    	noteGMap.put("TOTAL", "");
    	noteGMap.put("NOTAG_AC_P01", noteGDkAcP01);
    	noteGMap.put("NOTAG_AC_P02", noteGDkAcP02);
    	noteGMap.put("NOTAG_AC_P03", noteGDkAcP03);
    	noteGMap.put("NOTAG_AC_P04", noteGDkAcP04);
    	noteGMap.put("NOTAG_AC_P05", noteGDkAcP05);
    	noteGMap.put("NOTAG_AC_P06", noteGDkAcP06);
    	noteGMap.put("NOTAG_AC_P07", noteGDkAcP07);
    	noteGMap.put("NOTAG_AC_P08", noteGDkAcP08);
    	noteGMap.put("NOTAG_AC_P09", noteGDkAcP09);
    	noteGMap.put("NOTAG_AC_P10", noteGDkAcP10);
    	noteGMap.put("NOTAG_AC_P11", noteGDkAcP11);
    	noteGMap.put("NOTAG_AC_P12", noteGDkAcP12);
    	noteGMap.put("NOTAG_AC_Q01", noteGDkAcQ01);
    	noteGMap.put("NOTAG_AC_Q02", noteGDkAcQ02);
    	noteGMap.put("NOTAG_AC_Q03", noteGDkAcQ03);
    	noteGMap.put("NOTAG_AC_Q04", noteGDkAcQ04);
    	noteGMap.put("NOTAG_AC_H01", noteGDkAcH01);
    	noteGMap.put("NOTAG_AC_H02", noteGDkAcH02);
    	noteGMap.put("NOTAG_AC_YTD", noteGDkAcYTD);
		
    	noteGMap.put("NOTAG_FOR_P01", noteGDkForP01);
    	noteGMap.put("NOTAG_FOR_P02", noteGDkForP02);
    	noteGMap.put("NOTAG_FOR_P03", noteGDkForP03);
    	noteGMap.put("NOTAG_FOR_P04", noteGDkForP04);
    	noteGMap.put("NOTAG_FOR_P05", noteGDkForP05);
    	noteGMap.put("NOTAG_FOR_P06", noteGDkForP06);
    	noteGMap.put("NOTAG_FOR_P07", noteGDkForP07);
    	noteGMap.put("NOTAG_FOR_P08", noteGDkForP08);
    	noteGMap.put("NOTAG_FOR_P09", noteGDkForP09);
    	noteGMap.put("NOTAG_FOR_P10", noteGDkForP10);
    	noteGMap.put("NOTAG_FOR_P11", noteGDkForP11);
    	noteGMap.put("NOTAG_FOR_P12", noteGDkForP12);
    	noteGMap.put("NOTAG_FOR_Q01", noteGDkForQ01);
    	noteGMap.put("NOTAG_FOR_Q02", noteGDkForQ02);
    	noteGMap.put("NOTAG_FOR_Q03", noteGDkForQ03);
    	noteGMap.put("NOTAG_FOR_Q04", noteGDkForQ04);
    	noteGMap.put("NOTAG_FOR_H01", noteGDkForH01);
    	noteGMap.put("NOTAG_FOR_H02", noteGDkForH02);
    	noteGMap.put("NOTAG_FOR_YTD", noteGDkForYTD);
    	
    	noteGMap.put("NOTAG_OUT_P01", noteGDkOutP01);
    	noteGMap.put("NOTAG_OUT_P02", noteGDkOutP02);
    	noteGMap.put("NOTAG_OUT_P03", noteGDkOutP03);
    	noteGMap.put("NOTAG_OUT_P04", noteGDkOutP04);
    	noteGMap.put("NOTAG_OUT_P05", noteGDkOutP05);
    	noteGMap.put("NOTAG_OUT_P06", noteGDkOutP06);
    	noteGMap.put("NOTAG_OUT_P07", noteGDkOutP07);
    	noteGMap.put("NOTAG_OUT_P08", noteGDkOutP08);
    	noteGMap.put("NOTAG_OUT_P09", noteGDkOutP09);
    	noteGMap.put("NOTAG_OUT_P10", noteGDkOutP10);
    	noteGMap.put("NOTAG_OUT_P11", noteGDkOutP11);
    	noteGMap.put("NOTAG_OUT_P12", noteGDkOutP12);
    	noteGMap.put("NOTAG_OUT_Q01", noteGDkOutQ01);
    	noteGMap.put("NOTAG_OUT_Q02", noteGDkOutQ02);
    	noteGMap.put("NOTAG_OUT_Q03", noteGDkOutQ03);
    	noteGMap.put("NOTAG_OUT_Q04", noteGDkOutQ04);
    	noteGMap.put("NOTAG_OUT_H01", noteGDkOutH01);
    	noteGMap.put("NOTAG_OUT_H02", noteGDkOutH02);
    	noteGMap.put("NOTAG_OUT_YTD", noteGDkOutYTD);
    	
    	noteGMap.put("NOTAG_TG_P01", noteGDkTgP01);
    	noteGMap.put("NOTAG_TG_P02", noteGDkTgP02);
    	noteGMap.put("NOTAG_TG_P03", noteGDkTgP03);
    	noteGMap.put("NOTAG_TG_P04", noteGDkTgP04);
    	noteGMap.put("NOTAG_TG_P05", noteGDkTgP05);
    	noteGMap.put("NOTAG_TG_P06", noteGDkTgP06);
    	noteGMap.put("NOTAG_TG_P07", noteGDkTgP07);
    	noteGMap.put("NOTAG_TG_P08", noteGDkTgP08);
    	noteGMap.put("NOTAG_TG_P09", noteGDkTgP09);
    	noteGMap.put("NOTAG_TG_P10", noteGDkTgP10);
    	noteGMap.put("NOTAG_TG_P11", noteGDkTgP11);
    	noteGMap.put("NOTAG_TG_P12", noteGDkTgP12);
    	noteGMap.put("NOTAG_TG_Q01", noteGDkTgQ01);
    	noteGMap.put("NOTAG_TG_Q02", noteGDkTgQ02);
    	noteGMap.put("NOTAG_TG_Q03", noteGDkTgQ03);
    	noteGMap.put("NOTAG_TG_Q04", noteGDkTgQ04);
    	noteGMap.put("NOTAG_TG_H01", noteGDkTgH01);
    	noteGMap.put("NOTAG_TG_H02", noteGDkTgH02);
    	noteGMap.put("NOTAG_TG_YTD", noteGDkTgYTD);
    	
		noteG.add(noteGMap);
		
	}
	
	/*
	 * Description: Note G Forecast (ON channel) 4~41번째 컬럼의 입력값을 셀에 입력
	 */
	public void setRowValue22(HSSFRow row, CellStyle style, Map rowData, String styleTxt, List dataList, String dataLv2, String dataLv3, String team) {
		
		double ng_local_ac_total_P01 = 0.0; double ng_local_ac_total_P02 = 0.0; double ng_local_ac_total_P03 = 0.0; double ng_local_ac_total_P04 = 0.0; double ng_local_ac_total_P05 = 0.0; double ng_local_ac_total_P06 = 0.0; 
		double ng_local_ac_total_P07 = 0.0; double ng_local_ac_total_P08 = 0.0; double ng_local_ac_total_P09 = 0.0; double ng_local_ac_total_P10 = 0.0; double ng_local_ac_total_P11 = 0.0; double ng_local_ac_total_P12 = 0.0; 
		double ng_local_ac_total_Q01 = 0.0; double ng_local_ac_total_Q02 = 0.0; double ng_local_ac_total_Q03 = 0.0; double ng_local_ac_total_Q04 = 0.0; double ng_local_ac_total_H01 = 0.0; double ng_local_ac_total_H02 = 0.0;
		double ng_local_ac_total_YTD01 = 0.0; double ng_local_ac_total_YTD02 = 0.0; double ng_local_ac_total_YTD03 = 0.0; double ng_local_ac_total_YTD04 = 0.0; double ng_local_ac_total_YTD05 = 0.0; double ng_local_ac_total_YTD06 = 0.0; 
		double ng_local_ac_total_YTD07 = 0.0; double ng_local_ac_total_YTD08 = 0.0; double ng_local_ac_total_YTD09 = 0.0; double ng_local_ac_total_YTD10 = 0.0; double ng_local_ac_total_YTD11 = 0.0; double ng_local_ac_total_YTD12 = 0.0;
		
		double ng_local_for_total_P01 = 0.0; double ng_local_for_total_P02 = 0.0; double ng_local_for_total_P03 = 0.0; double ng_local_for_total_P04 = 0.0; double ng_local_for_total_P05 = 0.0; double ng_local_for_total_P06 = 0.0; 
		double ng_local_for_total_P07 = 0.0; double ng_local_for_total_P08 = 0.0; double ng_local_for_total_P09 = 0.0; double ng_local_for_total_P10 = 0.0; double ng_local_for_total_P11 = 0.0; double ng_local_for_total_P12 = 0.0; 
		double ng_local_for_total_Q01 = 0.0; double ng_local_for_total_Q02 = 0.0; double ng_local_for_total_Q03 = 0.0; double ng_local_for_total_Q04 = 0.0; double ng_local_for_total_H01 = 0.0; double ng_local_for_total_H02 = 0.0;
		double ng_local_for_total_YTD01 = 0.0; double ng_local_for_total_YTD02 = 0.0; double ng_local_for_total_YTD03 = 0.0; double ng_local_for_total_YTD04 = 0.0; double ng_local_for_total_YTD05 = 0.0; double ng_local_for_total_YTD06 = 0.0; 
		double ng_local_for_total_YTD07 = 0.0; double ng_local_for_total_YTD08 = 0.0; double ng_local_for_total_YTD09 = 0.0; double ng_local_for_total_YTD10 = 0.0; double ng_local_for_total_YTD11 = 0.0; double ng_local_for_total_YTD12 = 0.0;
		
		double ng_local_out_total_P01 = 0.0; double ng_local_out_total_P02 = 0.0; double ng_local_out_total_P03 = 0.0; double ng_local_out_total_P04 = 0.0; double ng_local_out_total_P05 = 0.0; double ng_local_out_total_P06 = 0.0; 
		double ng_local_out_total_P07 = 0.0; double ng_local_out_total_P08 = 0.0; double ng_local_out_total_P09 = 0.0; double ng_local_out_total_P10 = 0.0; double ng_local_out_total_P11 = 0.0; double ng_local_out_total_P12 = 0.0; 
		double ng_local_out_total_Q01 = 0.0; double ng_local_out_total_Q02 = 0.0; double ng_local_out_total_Q03 = 0.0; double ng_local_out_total_Q04 = 0.0; double ng_local_out_total_H01 = 0.0; double ng_local_out_total_H02 = 0.0;
		double ng_local_out_total_YTD01 = 0.0; double ng_local_out_total_YTD02 = 0.0; double ng_local_out_total_YTD03 = 0.0; double ng_local_out_total_YTD04 = 0.0; double ng_local_out_total_YTD05 = 0.0; double ng_local_out_total_YTD06 = 0.0; 
		double ng_local_out_total_YTD07 = 0.0; double ng_local_out_total_YTD08 = 0.0; double ng_local_out_total_YTD09 = 0.0; double ng_local_out_total_YTD10 = 0.0; double ng_local_out_total_YTD11 = 0.0; double ng_local_out_total_YTD12 = 0.0;
		
		double ng_local_tg_total_P01 = 0.0; double ng_local_tg_total_P02 = 0.0; double ng_local_tg_total_P03 = 0.0; double ng_local_tg_total_P04 = 0.0; double ng_local_tg_total_P05 = 0.0; double ng_local_tg_total_P06 = 0.0; 
		double ng_local_tg_total_P07 = 0.0; double ng_local_tg_total_P08 = 0.0; double ng_local_tg_total_P09 = 0.0; double ng_local_tg_total_P10 = 0.0; double ng_local_tg_total_P11 = 0.0; double ng_local_tg_total_P12 = 0.0; 
		double ng_local_tg_total_Q01 = 0.0; double ng_local_tg_total_Q02 = 0.0; double ng_local_tg_total_Q03 = 0.0; double ng_local_tg_total_Q04 = 0.0; double ng_local_tg_total_H01 = 0.0; double ng_local_tg_total_H02 = 0.0;
		double ng_local_tg_total_YTD01 = 0.0; double ng_local_tg_total_YTD02 = 0.0; double ng_local_tg_total_YTD03 = 0.0; double ng_local_tg_total_YTD04 = 0.0; double ng_local_tg_total_YTD05 = 0.0; double ng_local_tg_total_YTD06 = 0.0; 
		double ng_local_tg_total_YTD07 = 0.0; double ng_local_tg_total_YTD08 = 0.0; double ng_local_tg_total_YTD09 = 0.0; double ng_local_tg_total_YTD10 = 0.0; double ng_local_tg_total_YTD11 = 0.0; double ng_local_tg_total_YTD12 = 0.0;
		
		
		Double colSum = 0.0;
		for (int i=0; i < dataList.size(); i++) {
			if(team == null || team == ""){
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P01 = ng_local_ac_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P02 = ng_local_ac_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P03 = ng_local_ac_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P04 = ng_local_ac_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P05 = ng_local_ac_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P06 = ng_local_ac_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P07 = ng_local_ac_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P08 = ng_local_ac_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P09 = ng_local_ac_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P10 = ng_local_ac_total_P10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P11 = ng_local_ac_total_P11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_P12 = ng_local_ac_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P12").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_Q01 = ng_local_ac_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_Q01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_Q02 = ng_local_ac_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_Q02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_Q03 = ng_local_ac_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_Q03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_Q04 = ng_local_ac_total_Q04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_Q04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_H01 = ng_local_ac_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_H01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_H02 = ng_local_ac_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_H02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD01 = ng_local_ac_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD02 = ng_local_ac_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD03 = ng_local_ac_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD04 = ng_local_ac_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD05 = ng_local_ac_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD06 = ng_local_ac_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD07 = ng_local_ac_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD08 = ng_local_ac_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD09 = ng_local_ac_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD10 = ng_local_ac_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD11 = ng_local_ac_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_ac_total_YTD12 = ng_local_ac_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD12").toString());
				}
	
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P01 = ng_local_for_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P02 = ng_local_for_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P03 = ng_local_for_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P04 = ng_local_for_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P05 = ng_local_for_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P06 = ng_local_for_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P07 = ng_local_for_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P08 = ng_local_for_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P09 = ng_local_for_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P10 = ng_local_for_total_P10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P11 = ng_local_for_total_P11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_P12 = ng_local_for_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P12").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_Q01 = ng_local_for_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_Q01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_Q02 = ng_local_for_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_Q02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_Q03 = ng_local_for_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_Q03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_Q04 = ng_local_for_total_Q04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_Q04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_H01 = ng_local_for_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_H01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_H02 = ng_local_for_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_H02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD01 = ng_local_for_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD02 = ng_local_for_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD03 = ng_local_for_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD04 = ng_local_for_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD05 = ng_local_for_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD06 = ng_local_for_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD07 = ng_local_for_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD08 = ng_local_for_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD09 = ng_local_for_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD10 = ng_local_for_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD11 = ng_local_for_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_for_total_YTD12 = ng_local_for_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD12").toString());
				}
	
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P01 = ng_local_out_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P02 = ng_local_out_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P03 = ng_local_out_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P04 = ng_local_out_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P05 = ng_local_out_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P06 = ng_local_out_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P07 = ng_local_out_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P08 = ng_local_out_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P09 = ng_local_out_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P10 = ng_local_out_total_P10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P10").toString());
				}
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P11 = ng_local_out_total_P11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_P12 = ng_local_out_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P12").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_Q01 = ng_local_out_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_Q01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_Q02 = ng_local_out_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_Q02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_Q03 = ng_local_out_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_Q03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_Q04 = ng_local_out_total_Q04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_Q04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_H01 = ng_local_out_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_H01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_H02 = ng_local_out_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_H02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD01 = ng_local_out_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD02 = ng_local_out_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD03 = ng_local_out_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD04 = ng_local_out_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD05 = ng_local_out_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD06 = ng_local_out_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD07 = ng_local_out_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD08 = ng_local_out_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD09 = ng_local_out_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD10 = ng_local_out_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD11 = ng_local_out_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_out_total_YTD12 = ng_local_out_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD12").toString());
				}
	
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P01 = ng_local_tg_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P02 = ng_local_tg_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P03 = ng_local_tg_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P04 = ng_local_tg_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P05 = ng_local_tg_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P06 = ng_local_tg_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P07 = ng_local_tg_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P08 = ng_local_tg_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P09 = ng_local_tg_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P10 = ng_local_tg_total_P10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P11 = ng_local_tg_total_P11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_P12 = ng_local_tg_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P12").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_Q01 = ng_local_tg_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_Q01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_Q02 = ng_local_tg_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_Q02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_Q03 = ng_local_tg_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_Q03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_Q04 = ng_local_tg_total_Q04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_Q04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_H01 = ng_local_tg_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_H01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_H02 = ng_local_tg_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_H02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD01 = ng_local_tg_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD02 = ng_local_tg_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD03 = ng_local_tg_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD04 = ng_local_tg_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD05 = ng_local_tg_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD06 = ng_local_tg_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD07 = ng_local_tg_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD08 = ng_local_tg_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD09 = ng_local_tg_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD10 = ng_local_tg_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD11 = ng_local_tg_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3)) {
					ng_local_tg_total_YTD12 = ng_local_tg_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD12").toString());
				}
				
			}else{
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P01 = ng_local_ac_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P02 = ng_local_ac_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P03 = ng_local_ac_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P04 = ng_local_ac_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P05 = ng_local_ac_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P06 = ng_local_ac_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P07 = ng_local_ac_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P08 = ng_local_ac_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P09 = ng_local_ac_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P10 = ng_local_ac_total_P10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P11 = ng_local_ac_total_P11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_P12 = ng_local_ac_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_P12").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_Q01 = ng_local_ac_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_Q01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_Q02 = ng_local_ac_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_Q02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_Q03 = ng_local_ac_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_Q03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_Q04 = ng_local_ac_total_Q04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_Q04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_H01 = ng_local_ac_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_H01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_H02 = ng_local_ac_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_H02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD01 = ng_local_ac_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD02 = ng_local_ac_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD03 = ng_local_ac_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD04 = ng_local_ac_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD05 = ng_local_ac_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD06 = ng_local_ac_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD07 = ng_local_ac_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD08 = ng_local_ac_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD09 = ng_local_ac_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD10 = ng_local_ac_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD11 = ng_local_ac_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_ac_total_YTD12 = ng_local_ac_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_AC_YTD12").toString());
				}

				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P01 = ng_local_for_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P02 = ng_local_for_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P03 = ng_local_for_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P04 = ng_local_for_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P05 = ng_local_for_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P06 = ng_local_for_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P07 = ng_local_for_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P08 = ng_local_for_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P09 = ng_local_for_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P10 = ng_local_for_total_P10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P11 = ng_local_for_total_P11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_P12 = ng_local_for_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_P12").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_Q01 = ng_local_for_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_Q01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_Q02 = ng_local_for_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_Q02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_Q03 = ng_local_for_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_Q03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_Q04 = ng_local_for_total_Q04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_Q04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_H01 = ng_local_for_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_H01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_H02 = ng_local_for_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_H02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD01 = ng_local_for_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD02 = ng_local_for_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD03 = ng_local_for_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD04 = ng_local_for_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD05 = ng_local_for_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD06 = ng_local_for_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD07 = ng_local_for_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD08 = ng_local_for_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD09 = ng_local_for_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD10 = ng_local_for_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD11 = ng_local_for_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_for_total_YTD12 = ng_local_for_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_FOR_YTD12").toString());
				}

				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P01 = ng_local_out_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P02 = ng_local_out_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P03 = ng_local_out_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P04 = ng_local_out_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P05 = ng_local_out_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P06 = ng_local_out_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P07 = ng_local_out_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P08 = ng_local_out_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P09 = ng_local_out_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P10 = ng_local_out_total_P10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P10").toString());
				}
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P11 = ng_local_out_total_P11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_P12 = ng_local_out_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_P12").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_Q01 = ng_local_out_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_Q01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_Q02 = ng_local_out_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_Q02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_Q03 = ng_local_out_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_Q03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_Q04 = ng_local_out_total_Q04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_Q04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_H01 = ng_local_out_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_H01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_H02 = ng_local_out_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_H02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD01 = ng_local_out_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD02 = ng_local_out_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD03 = ng_local_out_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD04 = ng_local_out_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD05 = ng_local_out_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD06 = ng_local_out_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD07 = ng_local_out_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD08 = ng_local_out_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD09 = ng_local_out_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD10 = ng_local_out_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD11 = ng_local_out_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_out_total_YTD12 = ng_local_out_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_OUT_YTD12").toString());
				}

				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P01 = ng_local_tg_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P02 = ng_local_tg_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P03 = ng_local_tg_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P04 = ng_local_tg_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P05 = ng_local_tg_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P06 = ng_local_tg_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P07 = ng_local_tg_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P08 = ng_local_tg_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P09 = ng_local_tg_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P10 = ng_local_tg_total_P10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P11 = ng_local_tg_total_P11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_P12 = ng_local_tg_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_P12").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_Q01 = ng_local_tg_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_Q01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_Q02 = ng_local_tg_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_Q02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_Q03 = ng_local_tg_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_Q03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_Q04 = ng_local_tg_total_Q04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_Q04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_H01 = ng_local_tg_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_H01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_H02 = ng_local_tg_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_H02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD01 = ng_local_tg_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD01").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD02 = ng_local_tg_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD02").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD03 = ng_local_tg_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD03").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD04 = ng_local_tg_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD04").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD05 = ng_local_tg_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD05").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD06 = ng_local_tg_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD06").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD07 = ng_local_tg_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD07").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD08 = ng_local_tg_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD08").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD09 = ng_local_tg_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD09").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD10 = ng_local_tg_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD10").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD11 = ng_local_tg_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD11").toString());
				}
				
				if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV3").toString().equals(dataLv3) && ((Map)dataList.get(i)).get("DATALV4").toString().equals(team)) {
					ng_local_tg_total_YTD12 = ng_local_tg_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("DK_TG_YTD12").toString());
				}
			}
		}
		
		
		
		
		
		
		if(ng_local_ac_total_P01 != 0 && !(rowData.get("NOTAG_AC_P01").toString().equals(0))){
			noteGDkAcP01 = ((Double.parseDouble(rowData.get("NOTAG_AC_P01").toString())/ng_local_ac_total_P01));
    	}else{
    		noteGDkAcP01 = 0.0;
    	}
    	
		if(ng_local_ac_total_P02 != 0 && !(rowData.get("NOTAG_AC_P02").toString().equals(0))){
			noteGDkAcP02 = ((Double.parseDouble(rowData.get("NOTAG_AC_P02").toString())/ng_local_ac_total_P02));
    	}else{
    		noteGDkAcP02 = 0.0;
    	}
		
		if(ng_local_ac_total_P03 != 0 && !(rowData.get("NOTAG_AC_P03").toString().equals(0))){
			noteGDkAcP03 = ((Double.parseDouble(rowData.get("NOTAG_AC_P03").toString())/ng_local_ac_total_P03));
    	}else{
    		noteGDkAcP03 = 0.0;
    	}
		
		if(ng_local_ac_total_P04 != 0 && !(rowData.get("NOTAG_AC_P04").toString().equals(0))){
			noteGDkAcP04 = ((Double.parseDouble(rowData.get("NOTAG_AC_P04").toString())/ng_local_ac_total_P04));
    	}else{
    		noteGDkAcP04 = 0.0;
    	}
		
		if(ng_local_ac_total_P05 != 0 && !(rowData.get("NOTAG_AC_P05").toString().equals(0))){
			noteGDkAcP05 = ((Double.parseDouble(rowData.get("NOTAG_AC_P05").toString())/ng_local_ac_total_P05));
    	}else{
    		noteGDkAcP05 = 0.0;
    	}
		
		if(ng_local_ac_total_P06 != 0 && !(rowData.get("NOTAG_AC_P06").toString().equals(0))){
			noteGDkAcP06 = ((Double.parseDouble(rowData.get("NOTAG_AC_P06").toString())/ng_local_ac_total_P06));
    	}else{
    		noteGDkAcP06 = 0.0;
    	}
		
		if(ng_local_ac_total_P07 != 0 && !(rowData.get("NOTAG_AC_P07").toString().equals(0))){
			noteGDkAcP07 = ((Double.parseDouble(rowData.get("NOTAG_AC_P07").toString())/ng_local_ac_total_P07));
    	}else{
    		noteGDkAcP07 = 0.0;
    	}
		
		if(ng_local_ac_total_P08 != 0 && !(rowData.get("NOTAG_AC_P08").toString().equals(0))){
			noteGDkAcP08 = ((Double.parseDouble(rowData.get("NOTAG_AC_P08").toString())/ng_local_ac_total_P08));
    	}else{
    		noteGDkAcP08 = 0.0;
    	}
		
		if(ng_local_ac_total_P09 != 0 && !(rowData.get("NOTAG_AC_P09").toString().equals(0))){
			noteGDkAcP09 = ((Double.parseDouble(rowData.get("NOTAG_AC_P09").toString())/ng_local_ac_total_P09));
    	}else{
    		noteGDkAcP09 = 0.0;
    	}
		
		if(ng_local_ac_total_P10 != 0 && !(rowData.get("NOTAG_AC_P10").toString().equals(0))){
			noteGDkAcP10 = ((Double.parseDouble(rowData.get("NOTAG_AC_P10").toString())/ng_local_ac_total_P10));
    	}else{
    		noteGDkAcP10 = 0.0;
    	}
		
		if(ng_local_ac_total_P11 != 0 && !(rowData.get("NOTAG_AC_P11").toString().equals(0))){
			noteGDkAcP11 = ((Double.parseDouble(rowData.get("NOTAG_AC_P11").toString())/ng_local_ac_total_P11));
    	}else{
    		noteGDkAcP11 = 0.0;
    	}
		
		if(ng_local_ac_total_P12 != 0 && !(rowData.get("NOTAG_AC_P12").toString().equals(0))){
			noteGDkAcP12 = ((Double.parseDouble(rowData.get("NOTAG_AC_P12").toString())/ng_local_ac_total_P12));
    	}else{
    		noteGDkAcP12 = 0.0;
    	}
		
		if(ng_local_ac_total_Q01 != 0 && !(rowData.get("NOTAG_AC_Q01").toString().equals(0))){
			noteGDkAcQ01 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q01").toString())/ng_local_ac_total_Q01));
    	}else{
    		noteGDkAcQ01 = 0.0;
    	}
		
		if(ng_local_ac_total_Q02 != 0 && !(rowData.get("NOTAG_AC_Q02").toString().equals(0))){
			noteGDkAcQ02 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q02").toString())/ng_local_ac_total_Q02));
    	}else{
    		noteGDkAcQ02 = 0.0;
    	}
		
		if(ng_local_ac_total_Q03 != 0 && !(rowData.get("NOTAG_AC_Q03").toString().equals(0))){
			noteGDkAcQ03 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q03").toString())/ng_local_ac_total_Q03));
    	}else{
    		noteGDkAcQ03 = 0.0;
    	}
		
		if(ng_local_ac_total_Q04 != 0 && !(rowData.get("NOTAG_AC_Q04").toString().equals(0))){
			noteGDkAcQ04 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q04").toString())/ng_local_ac_total_Q04));
    	}else{
    		noteGDkAcQ04 = 0.0;
    	}
		
		if(ng_local_ac_total_H01 != 0 && !(rowData.get("NOTAG_AC_H01").toString().equals(0))){
			noteGDkAcH01 = ((Double.parseDouble(rowData.get("NOTAG_AC_H01").toString())/ng_local_ac_total_H01));
    	}else{
    		noteGDkAcH01 = 0.0;
    	}
		
		if(ng_local_ac_total_H02 != 0 && !(rowData.get("NOTAG_AC_H02").toString().equals(0))){
			noteGDkAcH02 = ((Double.parseDouble(rowData.get("NOTAG_AC_H02").toString())/ng_local_ac_total_H02));
    	}else{
    		noteGDkAcH02 = 0.0;
    	}
		
		
    	if(ytd_Param.equals("P01")){
    		if(ng_local_ac_total_YTD01 != 0 && !(rowData.get("NOTAG_AC_YTD01").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD01").toString())/ng_local_ac_total_YTD01));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P02")){
    		if(ng_local_ac_total_YTD02 != 0 && !(rowData.get("NOTAG_AC_YTD02").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD02").toString())/ng_local_ac_total_YTD02));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P03")){
    		if(ng_local_ac_total_YTD03 != 0 && !(rowData.get("NOTAG_AC_YTD03").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD03").toString())/ng_local_ac_total_YTD03));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P04")){
    		if(ng_local_ac_total_YTD04 != 0 && !(rowData.get("NOTAG_AC_YTD04").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD04").toString())/ng_local_ac_total_YTD04));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P05")){
    		if(ng_local_ac_total_YTD05 != 0 && !(rowData.get("NOTAG_AC_YTD05").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD05").toString())/ng_local_ac_total_YTD05));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P06")){
    		if(ng_local_ac_total_YTD06 != 0 && !(rowData.get("NOTAG_AC_YTD06").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD06").toString())/ng_local_ac_total_YTD06));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P07")){
    		if(ng_local_ac_total_YTD07 != 0 && !(rowData.get("NOTAG_AC_YTD07").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD07").toString())/ng_local_ac_total_YTD07));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P08")){
    		if(ng_local_ac_total_YTD08 != 0 && !(rowData.get("NOTAG_AC_YTD08").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD08").toString())/ng_local_ac_total_YTD08));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P09")){
    		if(ng_local_ac_total_YTD09 != 0 && !(rowData.get("NOTAG_AC_YTD09").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD09").toString())/ng_local_ac_total_YTD09));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P10")){
    		if(ng_local_ac_total_YTD10 != 0 && !(rowData.get("NOTAG_AC_YTD10").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD10").toString())/ng_local_ac_total_YTD10));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P11")){
    		if(ng_local_ac_total_YTD11 != 0 && !(rowData.get("NOTAG_AC_YTD11").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD11").toString())/ng_local_ac_total_YTD11));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P12")){
    		if(ng_local_ac_total_YTD12 != 0 && !(rowData.get("NOTAG_AC_YTD12").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString())/ng_local_ac_total_YTD12));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else{
    		if(ng_local_ac_total_YTD12 != 0 && !(rowData.get("NOTAG_AC_YTD12").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString())/ng_local_ac_total_YTD02));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}
    	

    	if(ng_local_for_total_P01 != 0 && !(rowData.get("NOTAG_FOR_P01").toString().equals(0))){
			noteGDkForP01 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P01").toString())/ng_local_for_total_P01));
    	}else{
    		noteGDkForP01 = 0.0;
    	}
    	
    	if(ng_local_for_total_P02 != 0 && !(rowData.get("NOTAG_FOR_P02").toString().equals(0))){
			noteGDkForP02 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P02").toString())/ng_local_for_total_P02));
    	}else{
    		noteGDkForP02 = 0.0;
    	}
    	
    	if(ng_local_for_total_P03 != 0 && !(rowData.get("NOTAG_FOR_P03").toString().equals(0))){
			noteGDkForP03 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P03").toString())/ng_local_for_total_P03));
    	}else{
    		noteGDkForP03 = 0.0;
    	}
    	
    	if(ng_local_for_total_P04 != 0 && !(rowData.get("NOTAG_FOR_P04").toString().equals(0))){
			noteGDkForP04 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P04").toString())/ng_local_for_total_P04));
    	}else{
    		noteGDkForP04 = 0.0;
    	}
    	
    	if(ng_local_for_total_P05 != 0 && !(rowData.get("NOTAG_FOR_P05").toString().equals(0))){
			noteGDkForP05 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P05").toString())/ng_local_for_total_P05));
    	}else{
    		noteGDkForP05 = 0.0;
    	}
    	
    	if(ng_local_for_total_P06 != 0 && !(rowData.get("NOTAG_FOR_P06").toString().equals(0))){
			noteGDkForP06 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P06").toString())/ng_local_for_total_P06));
    	}else{
    		noteGDkForP06 = 0.0;
    	}
    	
    	if(ng_local_for_total_P07 != 0 && !(rowData.get("NOTAG_FOR_P07").toString().equals(0))){
			noteGDkForP07 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P07").toString())/ng_local_for_total_P07));
    	}else{
    		noteGDkForP07 = 0.0;
    	}
    	
    	if(ng_local_for_total_P08 != 0 && !(rowData.get("NOTAG_FOR_P08").toString().equals(0))){
			noteGDkForP08 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P08").toString())/ng_local_for_total_P08));
    	}else{
    		noteGDkForP08 = 0.0;
    	}
    	
    	if(ng_local_for_total_P09 != 0 && !(rowData.get("NOTAG_FOR_P09").toString().equals(0))){
			noteGDkForP09 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P09").toString())/ng_local_for_total_P09));
    	}else{
    		noteGDkForP09 = 0.0;
    	}
    	
    	if(ng_local_for_total_P10 != 0 && !(rowData.get("NOTAG_FOR_P10").toString().equals(0))){
			noteGDkForP10 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P10").toString())/ng_local_for_total_P10));
    	}else{
    		noteGDkForP10 = 0.0;
    	}
    	
    	if(ng_local_for_total_P11 != 0 && !(rowData.get("NOTAG_FOR_P11").toString().equals(0))){
			noteGDkForP11 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P11").toString())/ng_local_for_total_P11));
    	}else{
    		noteGDkForP11 = 0.0;
    	}
    	
    	if(ng_local_for_total_P12 != 0 && !(rowData.get("NOTAG_FOR_P12").toString().equals(0))){
			noteGDkForP12 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P12").toString())/ng_local_for_total_P12));
    	}else{
    		noteGDkForP12 = 0.0;
    	}
    	
    	if(ng_local_for_total_Q01 != 0 && !(rowData.get("NOTAG_FOR_Q01").toString().equals(0))){
			noteGDkForQ01 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q01").toString())/ng_local_for_total_Q01));
    	}else{
    		noteGDkForQ01 = 0.0;
    	}
    	
    	if(ng_local_for_total_Q02 != 0 && !(rowData.get("NOTAG_FOR_Q02").toString().equals(0))){
			noteGDkForQ02 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q02").toString())/ng_local_for_total_Q02));
    	}else{
    		noteGDkForQ02 = 0.0;
    	}
    	
    	if(ng_local_for_total_Q03 != 0 && !(rowData.get("NOTAG_FOR_Q03").toString().equals(0))){
			noteGDkForQ03 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q03").toString())/ng_local_for_total_Q03));
    	}else{
    		noteGDkForQ03 = 0.0;
    	}
    	
    	if(ng_local_for_total_Q04 != 0 && !(rowData.get("NOTAG_FOR_Q04").toString().equals(0))){
			noteGDkForQ04 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q04").toString())/ng_local_for_total_Q04));
    	}else{
    		noteGDkForQ04 = 0.0;
    	}
    	
    	if(ng_local_for_total_H01 != 0 && !(rowData.get("NOTAG_FOR_H01").toString().equals(0))){
			noteGDkForH01 = ((Double.parseDouble(rowData.get("NOTAG_FOR_H01").toString())/ng_local_for_total_H01));
    	}else{
    		noteGDkForH01 = 0.0;
    	}
    	
    	if(ng_local_for_total_H02 != 0 && !(rowData.get("NOTAG_FOR_H02").toString().equals(0))){
			noteGDkForH02 = ((Double.parseDouble(rowData.get("NOTAG_FOR_H02").toString())/ng_local_for_total_H02));
    	}else{
    		noteGDkForH02 = 0.0;
    	}

    	if(ytd_Param.equals("P01")){
    		if(ng_local_for_total_YTD01 != 0 && !(rowData.get("NOTAG_FOR_YTD01").toString().equals(0))){
    			noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD01").toString())/ng_local_for_total_YTD01));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P02")){
			if(ng_local_for_total_YTD02 != 0 && !(rowData.get("NOTAG_FOR_YTD02").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD02").toString())/ng_local_for_total_YTD02));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P03")){
			if(ng_local_for_total_YTD03 != 0 && !(rowData.get("NOTAG_FOR_YTD03").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD03").toString())/ng_local_for_total_YTD03));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P04")){
			if(ng_local_for_total_YTD04 != 0 && !(rowData.get("NOTAG_FOR_YTD04").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD04").toString())/ng_local_for_total_YTD04));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P05")){
			if(ng_local_for_total_YTD05 != 0 && !(rowData.get("NOTAG_FOR_YTD05").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD05").toString())/ng_local_for_total_YTD05));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P06")){
			if(ng_local_for_total_YTD06 != 0 && !(rowData.get("NOTAG_FOR_YTD06").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD06").toString())/ng_local_for_total_YTD06));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P07")){
			if(ng_local_for_total_YTD07 != 0 && !(rowData.get("NOTAG_FOR_YTD07").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD07").toString())/ng_local_for_total_YTD07));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P08")){
			if(ng_local_for_total_YTD08 != 0 && !(rowData.get("NOTAG_FOR_YTD08").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD08").toString())/ng_local_for_total_YTD08));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P09")){
			if(ng_local_for_total_YTD09 != 0 && !(rowData.get("NOTAG_FOR_YTD09").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD09").toString())/ng_local_for_total_YTD09));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P10")){
			if(ng_local_for_total_YTD10 != 0 && !(rowData.get("NOTAG_FOR_YTD10").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD10").toString())/ng_local_for_total_YTD10));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P11")){
			if(ng_local_for_total_YTD11 != 0 && !(rowData.get("NOTAG_FOR_YTD11").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD11").toString())/ng_local_for_total_YTD11));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P12")){
			if(ng_local_for_total_YTD11 != 0 && !(rowData.get("NOTAG_FOR_YTD12").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString())/ng_local_for_total_YTD11));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else{
			if(ng_local_for_total_YTD12 != 0 && !(rowData.get("NOTAG_FOR_YTD12").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString())/ng_local_for_total_YTD12));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}
    	
    	if(ng_local_out_total_P01 != 0 && !(rowData.get("NOTAG_OUT_P01").toString().equals(0))){
			noteGDkOutP01 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P01").toString())/ng_local_out_total_P01));
    	}else{
    		noteGDkOutP01 = 0.0;
    	}
    	if(ng_local_out_total_P02 != 0 && !(rowData.get("NOTAG_OUT_P02").toString().equals(0))){
			noteGDkOutP02 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P02").toString())/ng_local_out_total_P02));
    	}else{
    		noteGDkOutP02 = 0.0;
    	}
    	if(ng_local_out_total_P03 != 0 && !(rowData.get("NOTAG_OUT_P03").toString().equals(0))){
			noteGDkOutP03 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P03").toString())/ng_local_out_total_P03));
    	}else{
    		noteGDkOutP03 = 0.0;
    	}
    	if(ng_local_out_total_P04 != 0 && !(rowData.get("NOTAG_OUT_P04").toString().equals(0))){
			noteGDkOutP04 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P04").toString())/ng_local_out_total_P04));
    	}else{
    		noteGDkOutP04 = 0.0;
    	}
    	if(ng_local_out_total_P05 != 0 && !(rowData.get("NOTAG_OUT_P05").toString().equals(0))){
			noteGDkOutP05 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P05").toString())/ng_local_out_total_P05));
    	}else{
    		noteGDkOutP05 = 0.0;
    	}
    	if(ng_local_out_total_P06 != 0 && !(rowData.get("NOTAG_OUT_P06").toString().equals(0))){
			noteGDkOutP06 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P06").toString())/ng_local_out_total_P06));
    	}else{
    		noteGDkOutP06 = 0.0;
    	}
    	if(ng_local_out_total_P07 != 0 && !(rowData.get("NOTAG_OUT_P07").toString().equals(0))){
			noteGDkOutP07 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P07").toString())/ng_local_out_total_P07));
    	}else{
    		noteGDkOutP07 = 0.0;
    	}
    	if(ng_local_out_total_P08 != 0 && !(rowData.get("NOTAG_OUT_P08").toString().equals(0))){
			noteGDkOutP08 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P08").toString())/ng_local_out_total_P08));
    	}else{
    		noteGDkOutP08 = 0.0;
    	}
    	if(ng_local_out_total_P09 != 0 && !(rowData.get("NOTAG_OUT_P09").toString().equals(0))){
			noteGDkOutP09 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P09").toString())/ng_local_out_total_P09));
    	}else{
    		noteGDkOutP09 = 0.0;
    	}
    	if(ng_local_out_total_P10 != 0 && !(rowData.get("NOTAG_OUT_P10").toString().equals(0))){
			noteGDkOutP10 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P10").toString())/ng_local_out_total_P10));
    	}else{
    		noteGDkOutP10 = 0.0;
    	}
    	if(ng_local_out_total_P11 != 0 && !(rowData.get("NOTAG_OUT_P11").toString().equals(0))){
			noteGDkOutP11 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P11").toString())/ng_local_out_total_P11));
    	}else{
    		noteGDkOutP11 = 0.0;
    	}
    	if(ng_local_out_total_P12 != 0 && !(rowData.get("NOTAG_OUT_P12").toString().equals(0))){
			noteGDkOutP12 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P12").toString())/ng_local_out_total_P12));
    	}else{
    		noteGDkOutP12 = 0.0;
    	}
    	if(ng_local_out_total_Q01 != 0 && !(rowData.get("NOTAG_OUT_Q01").toString().equals(0))){
			noteGDkOutQ01 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q01").toString())/ng_local_out_total_Q01));
    	}else{
    		noteGDkOutQ01 = 0.0;
    	}
    	if(ng_local_out_total_Q02 != 0 && !(rowData.get("NOTAG_OUT_Q02").toString().equals(0))){
			noteGDkOutQ02 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q02").toString())/ng_local_out_total_Q02));
    	}else{
    		noteGDkOutQ02 = 0.0;
    	}
    	if(ng_local_out_total_Q03 != 0 && !(rowData.get("NOTAG_OUT_Q03").toString().equals(0))){
			noteGDkOutQ03 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q03").toString())/ng_local_out_total_Q03));
    	}else{
    		noteGDkOutQ03 = 0.0;
    	}
    	if(ng_local_out_total_Q04 != 0 && !(rowData.get("NOTAG_OUT_Q04").toString().equals(0))){
			noteGDkOutQ04 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q04").toString())/ng_local_out_total_Q04));
    	}else{
    		noteGDkOutQ04 = 0.0;
    	}
    	if(ng_local_out_total_H01 != 0 && !(rowData.get("NOTAG_OUT_H01").toString().equals(0))){
			noteGDkOutH01 = ((Double.parseDouble(rowData.get("NOTAG_OUT_H01").toString())/ng_local_out_total_H01));
    	}else{
    		noteGDkOutH01 = 0.0;
    	}
    	if(ng_local_out_total_H02 != 0 && !(rowData.get("NOTAG_OUT_H02").toString().equals(0))){
			noteGDkOutH02 = ((Double.parseDouble(rowData.get("NOTAG_OUT_H02").toString())/ng_local_out_total_H02));
    	}else{
    		noteGDkOutH02 = 0.0;
    	}
    	
    	if(ytd_Param.equals("P01")){
    		if(ng_local_out_total_YTD01 != 0 && !(rowData.get("NOTAG_OUT_YTD01").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD01").toString())/ng_local_out_total_YTD01));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P02")){
    		if(ng_local_out_total_YTD02 != 0 && !(rowData.get("NOTAG_OUT_YTD02").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD02").toString())/ng_local_out_total_YTD02));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P03")){
    		if(ng_local_out_total_YTD03 != 0 && !(rowData.get("NOTAG_OUT_YTD03").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD03").toString())/ng_local_out_total_YTD03));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P04")){
    		if(ng_local_out_total_YTD04 != 0 && !(rowData.get("NOTAG_OUT_YTD04").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD04").toString())/ng_local_out_total_YTD04));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P05")){
    		if(ng_local_out_total_YTD05 != 0 && !(rowData.get("NOTAG_OUT_YTD05").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD05").toString())/ng_local_out_total_YTD05));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P06")){
    		if(ng_local_out_total_YTD06 != 0 && !(rowData.get("NOTAG_OUT_YTD06").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD06").toString())/ng_local_out_total_YTD06));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P07")){
    		if(ng_local_out_total_YTD07 != 0 && !(rowData.get("NOTAG_OUT_YTD07").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD07").toString())/ng_local_out_total_YTD07));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P08")){
    		if(ng_local_out_total_YTD08 != 0 && !(rowData.get("NOTAG_OUT_YTD08").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD08").toString())/ng_local_out_total_YTD08));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P09")){
    		if(ng_local_out_total_YTD09 != 0 && !(rowData.get("NOTAG_OUT_YTD09").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD09").toString())/ng_local_out_total_YTD09));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P10")){
    		if(ng_local_out_total_YTD10 != 0 && !(rowData.get("NOTAG_OUT_YTD10").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD10").toString())/ng_local_out_total_YTD10));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P11")){
    		if(ng_local_out_total_YTD11 != 0 && !(rowData.get("NOTAG_OUT_YTD11").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD11").toString())/ng_local_out_total_YTD11));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P12")){
    		if(ng_local_out_total_YTD12 != 0 && !(rowData.get("NOTAG_OUT_YTD12").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD12").toString())/ng_local_out_total_YTD12));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}
		
    	
    	
    	
    
    	if(ng_local_tg_total_P01 != 0 && !(rowData.get("NOTAG_TG_P01").toString().equals(0))){
			noteGDkTgP01 = ((Double.parseDouble(rowData.get("NOTAG_TG_P01").toString())/ng_local_tg_total_P01));
    	}else{
    		noteGDkTgP01 = 0.0;
    	}
    	if(ng_local_tg_total_P02 != 0 && !(rowData.get("NOTAG_TG_P02").toString().equals(0))){
			noteGDkTgP02 = ((Double.parseDouble(rowData.get("NOTAG_TG_P02").toString())/ng_local_tg_total_P02));
    	}else{
    		noteGDkTgP02 = 0.0;
    	}
    	if(ng_local_tg_total_P03 != 0 && !(rowData.get("NOTAG_TG_P03").toString().equals(0))){
			noteGDkTgP03 = ((Double.parseDouble(rowData.get("NOTAG_TG_P03").toString())/ng_local_tg_total_P03));
    	}else{
    		noteGDkTgP03 = 0.0;
    	}
    	if(ng_local_tg_total_P04 != 0 && !(rowData.get("NOTAG_TG_P04").toString().equals(0))){
			noteGDkTgP04 = ((Double.parseDouble(rowData.get("NOTAG_TG_P04").toString())/ng_local_tg_total_P04));
    	}else{
    		noteGDkTgP04 = 0.0;
    	}
    	if(ng_local_tg_total_P05 != 0 && !(rowData.get("NOTAG_TG_P05").toString().equals(0))){
			noteGDkTgP05 = ((Double.parseDouble(rowData.get("NOTAG_TG_P05").toString())/ng_local_tg_total_P05));
    	}else{
    		noteGDkTgP05 = 0.0;
    	}
    	if(ng_local_tg_total_P06 != 0 && !(rowData.get("NOTAG_TG_P06").toString().equals(0))){
			noteGDkTgP06 = ((Double.parseDouble(rowData.get("NOTAG_TG_P06").toString())/ng_local_tg_total_P06));
    	}else{
    		noteGDkTgP06 = 0.0;
    	}
    	if(ng_local_tg_total_P07 != 0 && !(rowData.get("NOTAG_TG_P07").toString().equals(0))){
			noteGDkTgP07 = ((Double.parseDouble(rowData.get("NOTAG_TG_P07").toString())/ng_local_tg_total_P07));
    	}else{
    		noteGDkTgP07 = 0.0;
    	}
    	if(ng_local_tg_total_P08 != 0 && !(rowData.get("NOTAG_TG_P08").toString().equals(0))){
			noteGDkTgP08 = ((Double.parseDouble(rowData.get("NOTAG_TG_P08").toString())/ng_local_tg_total_P08));
    	}else{
    		noteGDkTgP08 = 0.0;
    	}
    	if(ng_local_tg_total_P09 != 0 && !(rowData.get("NOTAG_TG_P09").toString().equals(0))){
			noteGDkTgP09 = ((Double.parseDouble(rowData.get("NOTAG_TG_P09").toString())/ng_local_tg_total_P09));
    	}else{
    		noteGDkTgP09 = 0.0;
    	}
    	if(ng_local_tg_total_P10 != 0 && !(rowData.get("NOTAG_TG_P10").toString().equals(0))){
			noteGDkTgP10 = ((Double.parseDouble(rowData.get("NOTAG_TG_P10").toString())/ng_local_tg_total_P10));
    	}else{
    		noteGDkTgP10 = 0.0;
    	}
    	if(ng_local_tg_total_P11 != 0 && !(rowData.get("NOTAG_TG_P11").toString().equals(0))){
			noteGDkTgP11 = ((Double.parseDouble(rowData.get("NOTAG_TG_P11").toString())/ng_local_tg_total_P11));
    	}else{
    		noteGDkTgP11 = 0.0;
    	}
    	if(ng_local_tg_total_P12 != 0 && !(rowData.get("NOTAG_TG_P12").toString().equals(0))){
			noteGDkTgP12 = ((Double.parseDouble(rowData.get("NOTAG_TG_P12").toString())/ng_local_tg_total_P12));
    	}else{
    		noteGDkTgP12 = 0.0;
    	}
    	if(ng_local_tg_total_Q01 != 0 && !(rowData.get("NOTAG_TG_Q01").toString().equals(0))){
			noteGDkTgQ01 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q01").toString())/ng_local_tg_total_Q01));
    	}else{
    		noteGDkTgQ01 = 0.0;
    	}
    	if(ng_local_tg_total_Q02 != 0 && !(rowData.get("NOTAG_TG_Q02").toString().equals(0))){
			noteGDkTgQ02 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q02").toString())/ng_local_tg_total_Q02));
    	}else{
    		noteGDkTgQ02 = 0.0;
    	}
    	if(ng_local_tg_total_Q03 != 0 && !(rowData.get("NOTAG_TG_Q03").toString().equals(0))){
			noteGDkTgQ03 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q03").toString())/ng_local_tg_total_Q03));
    	}else{
    		noteGDkTgQ03 = 0.0;
    	}
    	if(ng_local_tg_total_Q04 != 0 && !(rowData.get("NOTAG_TG_Q04").toString().equals(0))){
			noteGDkTgQ04 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q04").toString())/ng_local_tg_total_Q04));
    	}else{
    		noteGDkTgQ04 = 0.0;
    	}
    	if(ng_local_tg_total_H01 != 0 && !(rowData.get("NOTAG_TG_H01").toString().equals(0))){
			noteGDkTgH01 = ((Double.parseDouble(rowData.get("NOTAG_TG_H01").toString())/ng_local_tg_total_H01));
    	}else{
    		noteGDkTgH01 = 0.0;
    	}
    	if(ng_local_tg_total_H02 != 0 && !(rowData.get("NOTAG_TG_H02").toString().equals(0))){
			noteGDkTgH02 = ((Double.parseDouble(rowData.get("NOTAG_TG_H02").toString())/ng_local_tg_total_H02));
    	}else{
    		noteGDkTgH02 = 0.0;
    	}
    	
    	
    	
    	if(ytd_Param.equals("P01")){
    		if(ng_local_tg_total_YTD01 != 0 && !(rowData.get("NOTAG_TG_YTD01").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD01").toString())/ng_local_tg_total_YTD01));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P02")){
    		if(ng_local_tg_total_YTD02 != 0 && !(rowData.get("NOTAG_TG_YTD02").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD02").toString())/ng_local_tg_total_YTD02));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P03")){
    		if(ng_local_tg_total_YTD03 != 0 && !(rowData.get("NOTAG_TG_YTD03").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD03").toString())/ng_local_tg_total_YTD03));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P03")){
    		if(ng_local_tg_total_YTD03 != 0 && !(rowData.get("NOTAG_TG_YTD03").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD03").toString())/ng_local_tg_total_YTD03));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P04")){
    		if(ng_local_tg_total_YTD04 != 0 && !(rowData.get("NOTAG_TG_YTD04").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD04").toString())/ng_local_tg_total_YTD04));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P05")){
    		if(ng_local_tg_total_YTD05 != 0 && !(rowData.get("NOTAG_TG_YTD05").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD05").toString())/ng_local_tg_total_YTD05));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P06")){
    		if(ng_local_tg_total_YTD06 != 0 && !(rowData.get("NOTAG_TG_YTD06").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD06").toString())/ng_local_tg_total_YTD06));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P07")){
    		if(ng_local_tg_total_YTD07 != 0 && !(rowData.get("NOTAG_TG_YTD07").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD07").toString())/ng_local_tg_total_YTD07));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P08")){
    		if(ng_local_tg_total_YTD08 != 0 && !(rowData.get("NOTAG_TG_YTD08").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD08").toString())/ng_local_tg_total_YTD08));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P09")){
    		if(ng_local_tg_total_YTD09 != 0 && !(rowData.get("NOTAG_TG_YTD09").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD09").toString())/ng_local_tg_total_YTD09));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P10")){
    		if(ng_local_tg_total_YTD10 != 0 && !(rowData.get("NOTAG_TG_YTD10").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD10").toString())/ng_local_tg_total_YTD10));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P11")){
    		if(ng_local_tg_total_YTD11 != 0 && !(rowData.get("NOTAG_TG_YTD11").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD11").toString())/ng_local_tg_total_YTD11));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P12")){
    		if(ng_local_tg_total_YTD12 != 0 && !(rowData.get("NOTAG_TG_YTD12").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString())/ng_local_tg_total_YTD12));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else{
			if(ng_local_tg_total_YTD12 != 0 && !(rowData.get("NOTAG_TG_YTD12").toString().equals(0))){
				noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString())/ng_local_tg_total_YTD12));
			}else{
				noteGDkTgYTD = 0.0;
			}
		}
		
    	if(periodChk_Param.equals("Y")){
			
			for(int i=4; i<42; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkOutP01);
        	row.getCell(5).setCellValue(noteGDkOutP02);
        	row.getCell(6).setCellValue(noteGDkOutP03);
        	row.getCell(7).setCellValue(noteGDkOutP04);
        	row.getCell(8).setCellValue(noteGDkOutP05);
        	row.getCell(9).setCellValue(noteGDkOutP06);
        	row.getCell(10).setCellValue(noteGDkOutP07);
        	row.getCell(11).setCellValue(noteGDkOutP08);
        	row.getCell(12).setCellValue(noteGDkOutP09);
        	row.getCell(13).setCellValue(noteGDkOutP10);
        	row.getCell(14).setCellValue(noteGDkOutP11);
        	row.getCell(15).setCellValue(noteGDkOutP12);
        	row.getCell(16).setCellValue(noteGDkOutQ01);
        	row.getCell(17).setCellValue(noteGDkOutQ02);
        	row.getCell(18).setCellValue(noteGDkOutQ03);
        	row.getCell(19).setCellValue(noteGDkOutQ04);
        	row.getCell(20).setCellValue(noteGDkOutH01);
        	row.getCell(21).setCellValue(noteGDkOutH02);
        	row.getCell(22).setCellValue(noteGDkOutYTD);
        	row.getCell(23).setCellValue(noteGDkTgP01);
        	row.getCell(24).setCellValue(noteGDkTgP02);
        	row.getCell(25).setCellValue(noteGDkTgP03);
        	row.getCell(26).setCellValue(noteGDkTgP04);
        	row.getCell(27).setCellValue(noteGDkTgP05);
        	row.getCell(28).setCellValue(noteGDkTgP06);
        	row.getCell(29).setCellValue(noteGDkTgP07);
        	row.getCell(30).setCellValue(noteGDkTgP08);
        	row.getCell(31).setCellValue(noteGDkTgP09);
        	row.getCell(32).setCellValue(noteGDkTgP10);
        	row.getCell(33).setCellValue(noteGDkTgP11);
        	row.getCell(34).setCellValue(noteGDkTgP12);
        	row.getCell(35).setCellValue(noteGDkTgQ01);
        	row.getCell(36).setCellValue(noteGDkTgQ02);
        	row.getCell(37).setCellValue(noteGDkTgQ03);
        	row.getCell(38).setCellValue(noteGDkTgQ04);
        	row.getCell(39).setCellValue(noteGDkTgH01);
        	row.getCell(40).setCellValue(noteGDkTgH02);
        	row.getCell(41).setCellValue(noteGDkTgYTD);
    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=4; i<16; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(noteGDkOutP01);
        	row.getCell(5).setCellValue(noteGDkOutP02);
        	row.getCell(6).setCellValue(noteGDkOutP03);
        	row.getCell(7).setCellValue(noteGDkOutQ01);
        	row.getCell(8).setCellValue(noteGDkOutH01);
        	row.getCell(9).setCellValue(noteGDkOutYTD);
        	row.getCell(10).setCellValue(noteGDkTgP01);
        	row.getCell(11).setCellValue(noteGDkTgP02);
        	row.getCell(12).setCellValue(noteGDkTgP03);
        	row.getCell(13).setCellValue(noteGDkTgQ01);
        	row.getCell(14).setCellValue(noteGDkTgH01);
        	row.getCell(15).setCellValue(noteGDkTgYTD);
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=4; i<18; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkOutP04);
        	row.getCell(5).setCellValue(noteGDkOutP05);
        	row.getCell(6).setCellValue(noteGDkOutP06);
        	row.getCell(7).setCellValue(noteGDkOutQ01);
        	row.getCell(8).setCellValue(noteGDkOutQ02);
        	row.getCell(9).setCellValue(noteGDkOutH01);
        	row.getCell(10).setCellValue(noteGDkOutYTD);
        	row.getCell(11).setCellValue(noteGDkTgP04);
        	row.getCell(12).setCellValue(noteGDkTgP05);
        	row.getCell(13).setCellValue(noteGDkTgP06);
        	row.getCell(14).setCellValue(noteGDkTgQ01);
        	row.getCell(15).setCellValue(noteGDkTgQ02);
        	row.getCell(16).setCellValue(noteGDkTgH01);
        	row.getCell(17).setCellValue(noteGDkTgYTD);
        	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkOutP07);
        	row.getCell(5).setCellValue(noteGDkOutP08);
        	row.getCell(6).setCellValue(noteGDkOutP09);
        	row.getCell(7).setCellValue(noteGDkOutQ02);
        	row.getCell(8).setCellValue(noteGDkOutQ03);
        	row.getCell(9).setCellValue(noteGDkOutH01);
        	row.getCell(10).setCellValue(noteGDkOutH02);
        	row.getCell(11).setCellValue(noteGDkOutYTD);
        	row.getCell(12).setCellValue(noteGDkTgP07);
        	row.getCell(13).setCellValue(noteGDkTgP08);
        	row.getCell(14).setCellValue(noteGDkTgP09);
        	row.getCell(15).setCellValue(noteGDkTgQ02);
        	row.getCell(16).setCellValue(noteGDkTgQ03);
        	row.getCell(17).setCellValue(noteGDkTgH01);
        	row.getCell(18).setCellValue(noteGDkTgH02);
        	row.getCell(19).setCellValue(noteGDkTgYTD);
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(noteGDkOutP10);
        	row.getCell(5).setCellValue(noteGDkOutP11);
        	row.getCell(6).setCellValue(noteGDkOutP12);
        	row.getCell(7).setCellValue(noteGDkOutQ03);
        	row.getCell(8).setCellValue(noteGDkOutQ04);
        	row.getCell(9).setCellValue(noteGDkOutH01);
        	row.getCell(10).setCellValue(noteGDkOutH02);
        	row.getCell(11).setCellValue(noteGDkOutYTD);
        	row.getCell(12).setCellValue(noteGDkTgP10);
        	row.getCell(13).setCellValue(noteGDkTgP11);
        	row.getCell(14).setCellValue(noteGDkTgP12);
        	row.getCell(15).setCellValue(noteGDkTgQ03);
        	row.getCell(16).setCellValue(noteGDkTgQ04);
        	row.getCell(17).setCellValue(noteGDkTgH01);
        	row.getCell(18).setCellValue(noteGDkTgH02);
        	row.getCell(19).setCellValue(noteGDkTgYTD);
		}
	}
	
	public void setRowValue23(HSSFRow row, CellStyle style, Map rowData, String styleTxt, List dataList, String dataLv2, String dataLv3, String team) {

		double ng_local_ac_total_P01 = 0.0; double ng_local_ac_total_P02 = 0.0; double ng_local_ac_total_P03 = 0.0; double ng_local_ac_total_P04 = 0.0; double ng_local_ac_total_P05 = 0.0; double ng_local_ac_total_P06 = 0.0; 
		double ng_local_ac_total_P07 = 0.0; double ng_local_ac_total_P08 = 0.0; double ng_local_ac_total_P09 = 0.0; double ng_local_ac_total_P10 = 0.0; double ng_local_ac_total_P11 = 0.0; double ng_local_ac_total_P12 = 0.0; 
		double ng_local_ac_total_Q01 = 0.0; double ng_local_ac_total_Q02 = 0.0; double ng_local_ac_total_Q03 = 0.0; double ng_local_ac_total_Q04 = 0.0; double ng_local_ac_total_H01 = 0.0; double ng_local_ac_total_H02 = 0.0;
		double ng_local_ac_total_YTD01 = 0.0; double ng_local_ac_total_YTD02 = 0.0; double ng_local_ac_total_YTD03 = 0.0; double ng_local_ac_total_YTD04 = 0.0; double ng_local_ac_total_YTD05 = 0.0; double ng_local_ac_total_YTD06 = 0.0; 
		double ng_local_ac_total_YTD07 = 0.0; double ng_local_ac_total_YTD08 = 0.0; double ng_local_ac_total_YTD09 = 0.0; double ng_local_ac_total_YTD10 = 0.0; double ng_local_ac_total_YTD11 = 0.0; double ng_local_ac_total_YTD12 = 0.0;
		
		double ng_local_for_total_P01 = 0.0; double ng_local_for_total_P02 = 0.0; double ng_local_for_total_P03 = 0.0; double ng_local_for_total_P04 = 0.0; double ng_local_for_total_P05 = 0.0; double ng_local_for_total_P06 = 0.0; 
		double ng_local_for_total_P07 = 0.0; double ng_local_for_total_P08 = 0.0; double ng_local_for_total_P09 = 0.0; double ng_local_for_total_P10 = 0.0; double ng_local_for_total_P11 = 0.0; double ng_local_for_total_P12 = 0.0; 
		double ng_local_for_total_Q01 = 0.0; double ng_local_for_total_Q02 = 0.0; double ng_local_for_total_Q03 = 0.0; double ng_local_for_total_Q04 = 0.0; double ng_local_for_total_H01 = 0.0; double ng_local_for_total_H02 = 0.0;
		double ng_local_for_total_YTD01 = 0.0; double ng_local_for_total_YTD02 = 0.0; double ng_local_for_total_YTD03 = 0.0; double ng_local_for_total_YTD04 = 0.0; double ng_local_for_total_YTD05 = 0.0; double ng_local_for_total_YTD06 = 0.0; 
		double ng_local_for_total_YTD07 = 0.0; double ng_local_for_total_YTD08 = 0.0; double ng_local_for_total_YTD09 = 0.0; double ng_local_for_total_YTD10 = 0.0; double ng_local_for_total_YTD11 = 0.0; double ng_local_for_total_YTD12 = 0.0;
		
		double ng_local_out_total_P01 = 0.0; double ng_local_out_total_P02 = 0.0; double ng_local_out_total_P03 = 0.0; double ng_local_out_total_P04 = 0.0; double ng_local_out_total_P05 = 0.0; double ng_local_out_total_P06 = 0.0; 
		double ng_local_out_total_P07 = 0.0; double ng_local_out_total_P08 = 0.0; double ng_local_out_total_P09 = 0.0; double ng_local_out_total_P10 = 0.0; double ng_local_out_total_P11 = 0.0; double ng_local_out_total_P12 = 0.0; 
		double ng_local_out_total_Q01 = 0.0; double ng_local_out_total_Q02 = 0.0; double ng_local_out_total_Q03 = 0.0; double ng_local_out_total_Q04 = 0.0; double ng_local_out_total_H01 = 0.0; double ng_local_out_total_H02 = 0.0;
		double ng_local_out_total_YTD01 = 0.0; double ng_local_out_total_YTD02 = 0.0; double ng_local_out_total_YTD03 = 0.0; double ng_local_out_total_YTD04 = 0.0; double ng_local_out_total_YTD05 = 0.0; double ng_local_out_total_YTD06 = 0.0; 
		double ng_local_out_total_YTD07 = 0.0; double ng_local_out_total_YTD08 = 0.0; double ng_local_out_total_YTD09 = 0.0; double ng_local_out_total_YTD10 = 0.0; double ng_local_out_total_YTD11 = 0.0; double ng_local_out_total_YTD12 = 0.0;
		
		double ng_local_tg_total_P01 = 0.0; double ng_local_tg_total_P02 = 0.0; double ng_local_tg_total_P03 = 0.0; double ng_local_tg_total_P04 = 0.0; double ng_local_tg_total_P05 = 0.0; double ng_local_tg_total_P06 = 0.0; 
		double ng_local_tg_total_P07 = 0.0; double ng_local_tg_total_P08 = 0.0; double ng_local_tg_total_P09 = 0.0; double ng_local_tg_total_P10 = 0.0; double ng_local_tg_total_P11 = 0.0; double ng_local_tg_total_P12 = 0.0; 
		double ng_local_tg_total_Q01 = 0.0; double ng_local_tg_total_Q02 = 0.0; double ng_local_tg_total_Q03 = 0.0; double ng_local_tg_total_Q04 = 0.0; double ng_local_tg_total_H01 = 0.0; double ng_local_tg_total_H02 = 0.0;
		double ng_local_tg_total_YTD01 = 0.0; double ng_local_tg_total_YTD02 = 0.0; double ng_local_tg_total_YTD03 = 0.0; double ng_local_tg_total_YTD04 = 0.0; double ng_local_tg_total_YTD05 = 0.0; double ng_local_tg_total_YTD06 = 0.0; 
		double ng_local_tg_total_YTD07 = 0.0; double ng_local_tg_total_YTD08 = 0.0; double ng_local_tg_total_YTD09 = 0.0; double ng_local_tg_total_YTD10 = 0.0; double ng_local_tg_total_YTD11 = 0.0; double ng_local_tg_total_YTD12 = 0.0;
		
		
		Double colSum = 0.0;
		for (int i=0; i < dataList.size(); i++) {
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P01 = ng_local_ac_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P02 = ng_local_ac_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P03 = ng_local_ac_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P04 = ng_local_ac_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P04").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P05 = ng_local_ac_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P05").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P06 = ng_local_ac_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P06").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P07 = ng_local_ac_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P07").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P08 = ng_local_ac_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P08").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P09 = ng_local_ac_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P09").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P10 = ng_local_ac_total_P10 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P10").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P11 = ng_local_ac_total_P11 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P11").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_P12 = ng_local_ac_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_P12").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_Q01 = ng_local_ac_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_Q01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_Q02 = ng_local_ac_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_Q02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_Q03 = ng_local_ac_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_Q03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_Q04 = ng_local_ac_total_Q04 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_Q04").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_H01 = ng_local_ac_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_H01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_H02 = ng_local_ac_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_H02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD01 = ng_local_ac_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD02 = ng_local_ac_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD03 = ng_local_ac_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD04 = ng_local_ac_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD04").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD05 = ng_local_ac_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD05").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD06 = ng_local_ac_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD06").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD07 = ng_local_ac_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD07").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD08 = ng_local_ac_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD08").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD09 = ng_local_ac_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD09").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD10 = ng_local_ac_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD10").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD11 = ng_local_ac_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD11").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_ac_total_YTD12 = ng_local_ac_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_AC_YTD12").toString());
			}

			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P01 = ng_local_for_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P02 = ng_local_for_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P03 = ng_local_for_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P04 = ng_local_for_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P04").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P05 = ng_local_for_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P05").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P06 = ng_local_for_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P06").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P07 = ng_local_for_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P07").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P08 = ng_local_for_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P08").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P09 = ng_local_for_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P09").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P01 = ng_local_for_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P12 = ng_local_for_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P12").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_Q01 = ng_local_for_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_Q01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_Q02 = ng_local_for_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_Q02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_Q03 = ng_local_for_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_Q03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_P01 = ng_local_for_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_P01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_H01 = ng_local_for_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_H01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_H02 = ng_local_for_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_H02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD01 = ng_local_for_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD02 = ng_local_for_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD03 = ng_local_for_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD04 = ng_local_for_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD04").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD05 = ng_local_for_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD05").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD06 = ng_local_for_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD06").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD07 = ng_local_for_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD07").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD08 = ng_local_for_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD08").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD09 = ng_local_for_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD09").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD10 = ng_local_for_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD10").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD11 = ng_local_for_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD11").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_for_total_YTD12 = ng_local_for_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_FOR_YTD12").toString());
			}

			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P01 = ng_local_out_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P02 = ng_local_out_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P03 = ng_local_out_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P04 = ng_local_out_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P04").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P05 = ng_local_out_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P05").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P06 = ng_local_out_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P06").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P07 = ng_local_out_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P07").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P08 = ng_local_out_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P08").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P09 = ng_local_out_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P09").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P10 = ng_local_out_total_P10 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P10").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P11 = ng_local_out_total_P11 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P11").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_P12 = ng_local_out_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_P12").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_Q01 = ng_local_out_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_Q01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_Q02 = ng_local_out_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_Q02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_Q03 = ng_local_out_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_Q03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_Q04 = ng_local_out_total_Q04 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_Q04").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_H01 = ng_local_out_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_H01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_H02 = ng_local_out_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_H02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD01 = ng_local_out_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD02 = ng_local_out_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD03 = ng_local_out_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD04 = ng_local_out_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD04").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD05 = ng_local_out_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD05").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD06 = ng_local_out_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD06").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD07 = ng_local_out_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD07").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD08 = ng_local_out_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD08").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD09 = ng_local_out_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD09").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD10 = ng_local_out_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD10").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD11 = ng_local_out_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD11").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_out_total_YTD12 = ng_local_out_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_OUT_YTD12").toString());
			}

			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P01 = ng_local_tg_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P02 = ng_local_tg_total_P02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P03 = ng_local_tg_total_P03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P04 = ng_local_tg_total_P04 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P04").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P05 = ng_local_tg_total_P05 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P05").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P06 = ng_local_tg_total_P06 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P06").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P07 = ng_local_tg_total_P07 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P07").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P08 = ng_local_tg_total_P08 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P08").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P09 = ng_local_tg_total_P09 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P09").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P01 = ng_local_tg_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P12 = ng_local_tg_total_P12 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P12").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_Q01 = ng_local_tg_total_Q01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_Q01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_Q02 = ng_local_tg_total_Q02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_Q02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_Q03 = ng_local_tg_total_Q03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_Q03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_P01 = ng_local_tg_total_P01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_P01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_H01 = ng_local_tg_total_H01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_H01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_H02 = ng_local_tg_total_H02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_H02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD01 = ng_local_tg_total_YTD01 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD01").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD02 = ng_local_tg_total_YTD02 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD02").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD03 = ng_local_tg_total_YTD03 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD03").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD04 = ng_local_tg_total_YTD04 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD04").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD05 = ng_local_tg_total_YTD05 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD05").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD06 = ng_local_tg_total_YTD06 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD06").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD07 = ng_local_tg_total_YTD07 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD07").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD08 = ng_local_tg_total_YTD08 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD08").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD09 = ng_local_tg_total_YTD09 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD09").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD10 = ng_local_tg_total_YTD10 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD10").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD11 = ng_local_tg_total_YTD11 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD11").toString());
			}
			
			if(((Map)dataList.get(i)).get("DATALV2").toString().equals(dataLv2) && ((Map)dataList.get(i)).get("DATALV1").toString().equals(dataLv3)) {
				ng_local_tg_total_YTD12 = ng_local_tg_total_YTD12 + Double.parseDouble(((Map)dataList.get(i)).get("NOTAG_TG_YTD12").toString());
			}
		}
		
		
		
		
		
		
		if(ng_local_ac_total_P01 != 0 && !(rowData.get("NOTAG_AC_P01").toString().equals(0))){
			noteGDkAcP01 = ((Double.parseDouble(rowData.get("NOTAG_AC_P01").toString())/ng_local_ac_total_P01));
    	}else{
    		noteGDkAcP01 = 0.0;
    	}
    	
		if(ng_local_ac_total_P02 != 0 && !(rowData.get("NOTAG_AC_P02").toString().equals(0))){
			noteGDkAcP02 = ((Double.parseDouble(rowData.get("NOTAG_AC_P02").toString())/ng_local_ac_total_P02));
    	}else{
    		noteGDkAcP02 = 0.0;
    	}
		
		if(ng_local_ac_total_P03 != 0 && !(rowData.get("NOTAG_AC_P03").toString().equals(0))){
			noteGDkAcP03 = ((Double.parseDouble(rowData.get("NOTAG_AC_P03").toString())/ng_local_ac_total_P03));
    	}else{
    		noteGDkAcP03 = 0.0;
    	}
		
		if(ng_local_ac_total_P04 != 0 && !(rowData.get("NOTAG_AC_P04").toString().equals(0))){
			noteGDkAcP04 = ((Double.parseDouble(rowData.get("NOTAG_AC_P04").toString())/ng_local_ac_total_P04));
    	}else{
    		noteGDkAcP04 = 0.0;
    	}
		
		if(ng_local_ac_total_P05 != 0 && !(rowData.get("NOTAG_AC_P05").toString().equals(0))){
			noteGDkAcP05 = ((Double.parseDouble(rowData.get("NOTAG_AC_P05").toString())/ng_local_ac_total_P05));
    	}else{
    		noteGDkAcP05 = 0.0;
    	}
		
		if(ng_local_ac_total_P06 != 0 && !(rowData.get("NOTAG_AC_P06").toString().equals(0))){
			noteGDkAcP06 = ((Double.parseDouble(rowData.get("NOTAG_AC_P06").toString())/ng_local_ac_total_P06));
    	}else{
    		noteGDkAcP06 = 0.0;
    	}
		
		if(ng_local_ac_total_P07 != 0 && !(rowData.get("NOTAG_AC_P07").toString().equals(0))){
			noteGDkAcP07 = ((Double.parseDouble(rowData.get("NOTAG_AC_P07").toString())/ng_local_ac_total_P07));
    	}else{
    		noteGDkAcP07 = 0.0;
    	}
		
		if(ng_local_ac_total_P08 != 0 && !(rowData.get("NOTAG_AC_P08").toString().equals(0))){
			noteGDkAcP08 = ((Double.parseDouble(rowData.get("NOTAG_AC_P08").toString())/ng_local_ac_total_P08));
    	}else{
    		noteGDkAcP08 = 0.0;
    	}
		
		if(ng_local_ac_total_P09 != 0 && !(rowData.get("NOTAG_AC_P09").toString().equals(0))){
			noteGDkAcP09 = ((Double.parseDouble(rowData.get("NOTAG_AC_P09").toString())/ng_local_ac_total_P09));
    	}else{
    		noteGDkAcP09 = 0.0;
    	}
		
		if(ng_local_ac_total_P10 != 0 && !(rowData.get("NOTAG_AC_P10").toString().equals(0))){
			noteGDkAcP10 = ((Double.parseDouble(rowData.get("NOTAG_AC_P10").toString())/ng_local_ac_total_P10));
    	}else{
    		noteGDkAcP10 = 0.0;
    	}
		
		if(ng_local_ac_total_P11 != 0 && !(rowData.get("NOTAG_AC_P11").toString().equals(0))){
			noteGDkAcP11 = ((Double.parseDouble(rowData.get("NOTAG_AC_P11").toString())/ng_local_ac_total_P11));
    	}else{
    		noteGDkAcP11 = 0.0;
    	}
		
		if(ng_local_ac_total_P12 != 0 && !(rowData.get("NOTAG_AC_P12").toString().equals(0))){
			noteGDkAcP12 = ((Double.parseDouble(rowData.get("NOTAG_AC_P12").toString())/ng_local_ac_total_P12));
    	}else{
    		noteGDkAcP12 = 0.0;
    	}
		
		if(ng_local_ac_total_Q01 != 0 && !(rowData.get("NOTAG_AC_Q01").toString().equals(0))){
			noteGDkAcQ01 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q01").toString())/ng_local_ac_total_Q01));
    	}else{
    		noteGDkAcQ01 = 0.0;
    	}
		
		if(ng_local_ac_total_Q02 != 0 && !(rowData.get("NOTAG_AC_Q02").toString().equals(0))){
			noteGDkAcQ02 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q02").toString())/ng_local_ac_total_Q02));
    	}else{
    		noteGDkAcQ02 = 0.0;
    	}
		
		if(ng_local_ac_total_Q03 != 0 && !(rowData.get("NOTAG_AC_Q03").toString().equals(0))){
			noteGDkAcQ03 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q03").toString())/ng_local_ac_total_Q03));
    	}else{
    		noteGDkAcQ03 = 0.0;
    	}
		
		if(ng_local_ac_total_Q04 != 0 && !(rowData.get("NOTAG_AC_Q04").toString().equals(0))){
			noteGDkAcQ04 = ((Double.parseDouble(rowData.get("NOTAG_AC_Q04").toString())/ng_local_ac_total_Q04));
    	}else{
    		noteGDkAcQ04 = 0.0;
    	}
		
		if(ng_local_ac_total_H01 != 0 && !(rowData.get("NOTAG_AC_H01").toString().equals(0))){
			noteGDkAcH01 = ((Double.parseDouble(rowData.get("NOTAG_AC_H01").toString())/ng_local_ac_total_H01));
    	}else{
    		noteGDkAcH01 = 0.0;
    	}
		
		if(ng_local_ac_total_H02 != 0 && !(rowData.get("NOTAG_AC_H02").toString().equals(0))){
			noteGDkAcH02 = ((Double.parseDouble(rowData.get("NOTAG_AC_H02").toString())/ng_local_ac_total_H02));
    	}else{
    		noteGDkAcH02 = 0.0;
    	}
		
		
    	if(ytd_Param.equals("P01")){
    		if(ng_local_ac_total_YTD01 != 0 && !(rowData.get("NOTAG_AC_YTD01").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD01").toString())/ng_local_ac_total_YTD01));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P02")){
    		if(ng_local_ac_total_YTD02 != 0 && !(rowData.get("NOTAG_AC_YTD02").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD02").toString())/ng_local_ac_total_YTD02));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P03")){
    		if(ng_local_ac_total_YTD03 != 0 && !(rowData.get("NOTAG_AC_YTD03").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD03").toString())/ng_local_ac_total_YTD03));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P04")){
    		if(ng_local_ac_total_YTD04 != 0 && !(rowData.get("NOTAG_AC_YTD04").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD04").toString())/ng_local_ac_total_YTD04));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P05")){
    		if(ng_local_ac_total_YTD05 != 0 && !(rowData.get("NOTAG_AC_YTD05").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD05").toString())/ng_local_ac_total_YTD05));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P06")){
    		if(ng_local_ac_total_YTD06 != 0 && !(rowData.get("NOTAG_AC_YTD06").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD06").toString())/ng_local_ac_total_YTD06));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P07")){
    		if(ng_local_ac_total_YTD07 != 0 && !(rowData.get("NOTAG_AC_YTD07").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD07").toString())/ng_local_ac_total_YTD07));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P08")){
    		if(ng_local_ac_total_YTD08 != 0 && !(rowData.get("NOTAG_AC_YTD08").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD08").toString())/ng_local_ac_total_YTD08));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P09")){
    		if(ng_local_ac_total_YTD09 != 0 && !(rowData.get("NOTAG_AC_YTD09").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD09").toString())/ng_local_ac_total_YTD09));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P10")){
    		if(ng_local_ac_total_YTD10 != 0 && !(rowData.get("NOTAG_AC_YTD10").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD10").toString())/ng_local_ac_total_YTD10));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P11")){
    		if(ng_local_ac_total_YTD11 != 0 && !(rowData.get("NOTAG_AC_YTD11").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD11").toString())/ng_local_ac_total_YTD11));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P12")){
    		if(ng_local_ac_total_YTD12 != 0 && !(rowData.get("NOTAG_AC_YTD12").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString())/ng_local_ac_total_YTD12));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}else{
    		if(ng_local_ac_total_YTD12 != 0 && !(rowData.get("NOTAG_AC_YTD12").toString().equals(0))){
    			noteGDkAcYTD = ((Double.parseDouble(rowData.get("NOTAG_AC_YTD12").toString())/ng_local_ac_total_YTD02));
        	}else{
        		noteGDkAcYTD = 0.0;
        	}
		}
    	

    	if(ng_local_for_total_P01 != 0 && !(rowData.get("NOTAG_FOR_P01").toString().equals(0))){
			noteGDkForP01 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P01").toString())/ng_local_for_total_P01));
    	}else{
    		noteGDkForP01 = 0.0;
    	}
    	
    	if(ng_local_for_total_P02 != 0 && !(rowData.get("NOTAG_FOR_P02").toString().equals(0))){
			noteGDkForP02 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P02").toString())/ng_local_for_total_P02));
    	}else{
    		noteGDkForP02 = 0.0;
    	}
    	
    	if(ng_local_for_total_P03 != 0 && !(rowData.get("NOTAG_FOR_P03").toString().equals(0))){
			noteGDkForP03 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P03").toString())/ng_local_for_total_P03));
    	}else{
    		noteGDkForP03 = 0.0;
    	}
    	
    	if(ng_local_for_total_P04 != 0 && !(rowData.get("NOTAG_FOR_P04").toString().equals(0))){
			noteGDkForP04 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P04").toString())/ng_local_for_total_P04));
    	}else{
    		noteGDkForP04 = 0.0;
    	}
    	
    	if(ng_local_for_total_P05 != 0 && !(rowData.get("NOTAG_FOR_P05").toString().equals(0))){
			noteGDkForP05 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P05").toString())/ng_local_for_total_P05));
    	}else{
    		noteGDkForP05 = 0.0;
    	}
    	
    	if(ng_local_for_total_P06 != 0 && !(rowData.get("NOTAG_FOR_P06").toString().equals(0))){
			noteGDkForP06 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P06").toString())/ng_local_for_total_P06));
    	}else{
    		noteGDkForP06 = 0.0;
    	}
    	
    	if(ng_local_for_total_P07 != 0 && !(rowData.get("NOTAG_FOR_P07").toString().equals(0))){
			noteGDkForP07 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P07").toString())/ng_local_for_total_P07));
    	}else{
    		noteGDkForP07 = 0.0;
    	}
    	
    	if(ng_local_for_total_P08 != 0 && !(rowData.get("NOTAG_FOR_P08").toString().equals(0))){
			noteGDkForP08 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P08").toString())/ng_local_for_total_P08));
    	}else{
    		noteGDkForP08 = 0.0;
    	}
    	
    	if(ng_local_for_total_P09 != 0 && !(rowData.get("NOTAG_FOR_P09").toString().equals(0))){
			noteGDkForP09 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P09").toString())/ng_local_for_total_P09));
    	}else{
    		noteGDkForP09 = 0.0;
    	}
    	
    	if(ng_local_for_total_P10 != 0 && !(rowData.get("NOTAG_FOR_P10").toString().equals(0))){
			noteGDkForP10 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P10").toString())/ng_local_for_total_P10));
    	}else{
    		noteGDkForP10 = 0.0;
    	}
    	
    	if(ng_local_for_total_P11 != 0 && !(rowData.get("NOTAG_FOR_P11").toString().equals(0))){
			noteGDkForP11 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P11").toString())/ng_local_for_total_P11));
    	}else{
    		noteGDkForP11 = 0.0;
    	}
    	
    	if(ng_local_for_total_P12 != 0 && !(rowData.get("NOTAG_FOR_P12").toString().equals(0))){
			noteGDkForP12 = ((Double.parseDouble(rowData.get("NOTAG_FOR_P12").toString())/ng_local_for_total_P12));
    	}else{
    		noteGDkForP12 = 0.0;
    	}
    	
    	if(ng_local_for_total_Q01 != 0 && !(rowData.get("NOTAG_FOR_Q01").toString().equals(0))){
			noteGDkForQ01 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q01").toString())/ng_local_for_total_Q01));
    	}else{
    		noteGDkForQ01 = 0.0;
    	}
    	
    	if(ng_local_for_total_Q02 != 0 && !(rowData.get("NOTAG_FOR_Q02").toString().equals(0))){
			noteGDkForQ02 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q02").toString())/ng_local_for_total_Q02));
    	}else{
    		noteGDkForQ02 = 0.0;
    	}
    	
    	if(ng_local_for_total_Q03 != 0 && !(rowData.get("NOTAG_FOR_Q03").toString().equals(0))){
			noteGDkForQ03 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q03").toString())/ng_local_for_total_Q03));
    	}else{
    		noteGDkForQ03 = 0.0;
    	}
    	
    	if(ng_local_for_total_Q04 != 0 && !(rowData.get("NOTAG_FOR_Q04").toString().equals(0))){
			noteGDkForQ04 = ((Double.parseDouble(rowData.get("NOTAG_FOR_Q04").toString())/ng_local_for_total_Q04));
    	}else{
    		noteGDkForQ04 = 0.0;
    	}
    	
    	if(ng_local_for_total_H01 != 0 && !(rowData.get("NOTAG_FOR_H01").toString().equals(0))){
			noteGDkForH01 = ((Double.parseDouble(rowData.get("NOTAG_FOR_H01").toString())/ng_local_for_total_H01));
    	}else{
    		noteGDkForH01 = 0.0;
    	}
    	
    	if(ng_local_for_total_H02 != 0 && !(rowData.get("NOTAG_FOR_H02").toString().equals(0))){
			noteGDkForH02 = ((Double.parseDouble(rowData.get("NOTAG_FOR_H02").toString())/ng_local_for_total_H02));
    	}else{
    		noteGDkForH02 = 0.0;
    	}

    	if(ytd_Param.equals("P01")){
    		if(ng_local_for_total_YTD01 != 0 && !(rowData.get("NOTAG_FOR_YTD01").toString().equals(0))){
    			noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD01").toString())/ng_local_for_total_YTD01));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P02")){
			if(ng_local_for_total_YTD02 != 0 && !(rowData.get("NOTAG_FOR_YTD02").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD02").toString())/ng_local_for_total_YTD02));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P03")){
			if(ng_local_for_total_YTD03 != 0 && !(rowData.get("NOTAG_FOR_YTD03").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD03").toString())/ng_local_for_total_YTD03));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P04")){
			if(ng_local_for_total_YTD04 != 0 && !(rowData.get("NOTAG_FOR_YTD04").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD04").toString())/ng_local_for_total_YTD04));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P05")){
			if(ng_local_for_total_YTD05 != 0 && !(rowData.get("NOTAG_FOR_YTD05").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD05").toString())/ng_local_for_total_YTD05));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P06")){
			if(ng_local_for_total_YTD06 != 0 && !(rowData.get("NOTAG_FOR_YTD06").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD06").toString())/ng_local_for_total_YTD06));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P07")){
			if(ng_local_for_total_YTD07 != 0 && !(rowData.get("NOTAG_FOR_YTD07").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD07").toString())/ng_local_for_total_YTD07));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P08")){
			if(ng_local_for_total_YTD08 != 0 && !(rowData.get("NOTAG_FOR_YTD08").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD08").toString())/ng_local_for_total_YTD08));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P09")){
			if(ng_local_for_total_YTD09 != 0 && !(rowData.get("NOTAG_FOR_YTD09").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD09").toString())/ng_local_for_total_YTD09));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P10")){
			if(ng_local_for_total_YTD10 != 0 && !(rowData.get("NOTAG_FOR_YTD10").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD10").toString())/ng_local_for_total_YTD10));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P11")){
			if(ng_local_for_total_YTD11 != 0 && !(rowData.get("NOTAG_FOR_YTD11").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD11").toString())/ng_local_for_total_YTD11));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P12")){
			if(ng_local_for_total_YTD11 != 0 && !(rowData.get("NOTAG_FOR_YTD12").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString())/ng_local_for_total_YTD11));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}else{
			if(ng_local_for_total_YTD12 != 0 && !(rowData.get("NOTAG_FOR_YTD12").toString().equals(0))){
				noteGDkForYTD = ((Double.parseDouble(rowData.get("NOTAG_FOR_YTD12").toString())/ng_local_for_total_YTD12));
        	}else{
        		noteGDkForYTD = 0.0;
        	}
		}
    	
    	if(ng_local_out_total_P01 != 0 && !(rowData.get("NOTAG_OUT_P01").toString().equals(0))){
			noteGDkOutP01 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P01").toString())/ng_local_out_total_P01));
    	}else{
    		noteGDkOutP01 = 0.0;
    	}
    	if(ng_local_out_total_P02 != 0 && !(rowData.get("NOTAG_OUT_P02").toString().equals(0))){
			noteGDkOutP02 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P02").toString())/ng_local_out_total_P02));
    	}else{
    		noteGDkOutP02 = 0.0;
    	}
    	if(ng_local_out_total_P03 != 0 && !(rowData.get("NOTAG_OUT_P03").toString().equals(0))){
			noteGDkOutP03 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P03").toString())/ng_local_out_total_P03));
    	}else{
    		noteGDkOutP03 = 0.0;
    	}
    	if(ng_local_out_total_P04 != 0 && !(rowData.get("NOTAG_OUT_P04").toString().equals(0))){
			noteGDkOutP04 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P04").toString())/ng_local_out_total_P04));
    	}else{
    		noteGDkOutP04 = 0.0;
    	}
    	if(ng_local_out_total_P05 != 0 && !(rowData.get("NOTAG_OUT_P05").toString().equals(0))){
			noteGDkOutP05 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P05").toString())/ng_local_out_total_P05));
    	}else{
    		noteGDkOutP05 = 0.0;
    	}
    	if(ng_local_out_total_P06 != 0 && !(rowData.get("NOTAG_OUT_P06").toString().equals(0))){
			noteGDkOutP06 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P06").toString())/ng_local_out_total_P06));
    	}else{
    		noteGDkOutP06 = 0.0;
    	}
    	if(ng_local_out_total_P07 != 0 && !(rowData.get("NOTAG_OUT_P07").toString().equals(0))){
			noteGDkOutP07 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P07").toString())/ng_local_out_total_P07));
    	}else{
    		noteGDkOutP07 = 0.0;
    	}
    	if(ng_local_out_total_P08 != 0 && !(rowData.get("NOTAG_OUT_P08").toString().equals(0))){
			noteGDkOutP08 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P08").toString())/ng_local_out_total_P08));
    	}else{
    		noteGDkOutP08 = 0.0;
    	}
    	if(ng_local_out_total_P09 != 0 && !(rowData.get("NOTAG_OUT_P09").toString().equals(0))){
			noteGDkOutP09 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P09").toString())/ng_local_out_total_P09));
    	}else{
    		noteGDkOutP09 = 0.0;
    	}
    	if(ng_local_out_total_P10 != 0 && !(rowData.get("NOTAG_OUT_P10").toString().equals(0))){
			noteGDkOutP10 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P10").toString())/ng_local_out_total_P10));
    	}else{
    		noteGDkOutP10 = 0.0;
    	}
    	if(ng_local_out_total_P11 != 0 && !(rowData.get("NOTAG_OUT_P11").toString().equals(0))){
			noteGDkOutP11 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P11").toString())/ng_local_out_total_P11));
    	}else{
    		noteGDkOutP11 = 0.0;
    	}
    	if(ng_local_out_total_P12 != 0 && !(rowData.get("NOTAG_OUT_P12").toString().equals(0))){
			noteGDkOutP12 = ((Double.parseDouble(rowData.get("NOTAG_OUT_P12").toString())/ng_local_out_total_P12));
    	}else{
    		noteGDkOutP12 = 0.0;
    	}
    	if(ng_local_out_total_Q01 != 0 && !(rowData.get("NOTAG_OUT_Q01").toString().equals(0))){
			noteGDkOutQ01 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q01").toString())/ng_local_out_total_Q01));
    	}else{
    		noteGDkOutQ01 = 0.0;
    	}
    	if(ng_local_out_total_Q02 != 0 && !(rowData.get("NOTAG_OUT_Q02").toString().equals(0))){
			noteGDkOutQ02 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q02").toString())/ng_local_out_total_Q02));
    	}else{
    		noteGDkOutQ02 = 0.0;
    	}
    	if(ng_local_out_total_Q03 != 0 && !(rowData.get("NOTAG_OUT_Q03").toString().equals(0))){
			noteGDkOutQ03 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q03").toString())/ng_local_out_total_Q03));
    	}else{
    		noteGDkOutQ03 = 0.0;
    	}
    	if(ng_local_out_total_Q04 != 0 && !(rowData.get("NOTAG_OUT_Q04").toString().equals(0))){
			noteGDkOutQ04 = ((Double.parseDouble(rowData.get("NOTAG_OUT_Q04").toString())/ng_local_out_total_Q04));
    	}else{
    		noteGDkOutQ04 = 0.0;
    	}
    	if(ng_local_out_total_H01 != 0 && !(rowData.get("NOTAG_OUT_H01").toString().equals(0))){
			noteGDkOutH01 = ((Double.parseDouble(rowData.get("NOTAG_OUT_H01").toString())/ng_local_out_total_H01));
    	}else{
    		noteGDkOutH01 = 0.0;
    	}
    	if(ng_local_out_total_H02 != 0 && !(rowData.get("NOTAG_OUT_H02").toString().equals(0))){
			noteGDkOutH02 = ((Double.parseDouble(rowData.get("NOTAG_OUT_H02").toString())/ng_local_out_total_H02));
    	}else{
    		noteGDkOutH02 = 0.0;
    	}
    	
    	if(ytd_Param.equals("P01")){
    		if(ng_local_out_total_YTD01 != 0 && !(rowData.get("NOTAG_OUT_YTD01").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD01").toString())/ng_local_out_total_YTD01));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P02")){
    		if(ng_local_out_total_YTD02 != 0 && !(rowData.get("NOTAG_OUT_YTD02").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD02").toString())/ng_local_out_total_YTD02));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P03")){
    		if(ng_local_out_total_YTD03 != 0 && !(rowData.get("NOTAG_OUT_YTD03").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD03").toString())/ng_local_out_total_YTD03));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P04")){
    		if(ng_local_out_total_YTD04 != 0 && !(rowData.get("NOTAG_OUT_YTD04").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD04").toString())/ng_local_out_total_YTD04));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P05")){
    		if(ng_local_out_total_YTD05 != 0 && !(rowData.get("NOTAG_OUT_YTD05").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD05").toString())/ng_local_out_total_YTD05));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P06")){
    		if(ng_local_out_total_YTD06 != 0 && !(rowData.get("NOTAG_OUT_YTD06").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD06").toString())/ng_local_out_total_YTD06));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P07")){
    		if(ng_local_out_total_YTD07 != 0 && !(rowData.get("NOTAG_OUT_YTD07").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD07").toString())/ng_local_out_total_YTD07));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P08")){
    		if(ng_local_out_total_YTD08 != 0 && !(rowData.get("NOTAG_OUT_YTD08").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD08").toString())/ng_local_out_total_YTD08));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P09")){
    		if(ng_local_out_total_YTD09 != 0 && !(rowData.get("NOTAG_OUT_YTD09").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD09").toString())/ng_local_out_total_YTD09));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P10")){
    		if(ng_local_out_total_YTD10 != 0 && !(rowData.get("NOTAG_OUT_YTD10").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD10").toString())/ng_local_out_total_YTD10));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P11")){
    		if(ng_local_out_total_YTD11 != 0 && !(rowData.get("NOTAG_OUT_YTD11").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD11").toString())/ng_local_out_total_YTD11));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P12")){
    		if(ng_local_out_total_YTD12 != 0 && !(rowData.get("NOTAG_OUT_YTD12").toString().equals(0))){
    			noteGDkOutYTD = ((Double.parseDouble(rowData.get("NOTAG_OUT_YTD12").toString())/ng_local_out_total_YTD12));
        	}else{
        		noteGDkOutYTD = 0.0;
        	}
		}
		
    	
    	
    	
    
    	if(ng_local_tg_total_P01 != 0 && !(rowData.get("NOTAG_TG_P01").toString().equals(0))){
			noteGDkTgP01 = ((Double.parseDouble(rowData.get("NOTAG_TG_P01").toString())/ng_local_tg_total_P01));
    	}else{
    		noteGDkTgP01 = 0.0;
    	}
    	if(ng_local_tg_total_P02 != 0 && !(rowData.get("NOTAG_TG_P02").toString().equals(0))){
			noteGDkTgP02 = ((Double.parseDouble(rowData.get("NOTAG_TG_P02").toString())/ng_local_tg_total_P02));
    	}else{
    		noteGDkTgP02 = 0.0;
    	}
    	if(ng_local_tg_total_P03 != 0 && !(rowData.get("NOTAG_TG_P03").toString().equals(0))){
			noteGDkTgP03 = ((Double.parseDouble(rowData.get("NOTAG_TG_P03").toString())/ng_local_tg_total_P03));
    	}else{
    		noteGDkTgP03 = 0.0;
    	}
    	if(ng_local_tg_total_P04 != 0 && !(rowData.get("NOTAG_TG_P04").toString().equals(0))){
			noteGDkTgP04 = ((Double.parseDouble(rowData.get("NOTAG_TG_P04").toString())/ng_local_tg_total_P04));
    	}else{
    		noteGDkTgP04 = 0.0;
    	}
    	if(ng_local_tg_total_P05 != 0 && !(rowData.get("NOTAG_TG_P05").toString().equals(0))){
			noteGDkTgP05 = ((Double.parseDouble(rowData.get("NOTAG_TG_P05").toString())/ng_local_tg_total_P05));
    	}else{
    		noteGDkTgP05 = 0.0;
    	}
    	if(ng_local_tg_total_P06 != 0 && !(rowData.get("NOTAG_TG_P06").toString().equals(0))){
			noteGDkTgP06 = ((Double.parseDouble(rowData.get("NOTAG_TG_P06").toString())/ng_local_tg_total_P06));
    	}else{
    		noteGDkTgP06 = 0.0;
    	}
    	if(ng_local_tg_total_P07 != 0 && !(rowData.get("NOTAG_TG_P07").toString().equals(0))){
			noteGDkTgP07 = ((Double.parseDouble(rowData.get("NOTAG_TG_P07").toString())/ng_local_tg_total_P07));
    	}else{
    		noteGDkTgP07 = 0.0;
    	}
    	if(ng_local_tg_total_P08 != 0 && !(rowData.get("NOTAG_TG_P08").toString().equals(0))){
			noteGDkTgP08 = ((Double.parseDouble(rowData.get("NOTAG_TG_P08").toString())/ng_local_tg_total_P08));
    	}else{
    		noteGDkTgP08 = 0.0;
    	}
    	if(ng_local_tg_total_P09 != 0 && !(rowData.get("NOTAG_TG_P09").toString().equals(0))){
			noteGDkTgP09 = ((Double.parseDouble(rowData.get("NOTAG_TG_P09").toString())/ng_local_tg_total_P09));
    	}else{
    		noteGDkTgP09 = 0.0;
    	}
    	if(ng_local_tg_total_P10 != 0 && !(rowData.get("NOTAG_TG_P10").toString().equals(0))){
			noteGDkTgP10 = ((Double.parseDouble(rowData.get("NOTAG_TG_P10").toString())/ng_local_tg_total_P10));
    	}else{
    		noteGDkTgP10 = 0.0;
    	}
    	if(ng_local_tg_total_P11 != 0 && !(rowData.get("NOTAG_TG_P11").toString().equals(0))){
			noteGDkTgP11 = ((Double.parseDouble(rowData.get("NOTAG_TG_P11").toString())/ng_local_tg_total_P11));
    	}else{
    		noteGDkTgP11 = 0.0;
    	}
    	if(ng_local_tg_total_P12 != 0 && !(rowData.get("NOTAG_TG_P12").toString().equals(0))){
			noteGDkTgP12 = ((Double.parseDouble(rowData.get("NOTAG_TG_P12").toString())/ng_local_tg_total_P12));
    	}else{
    		noteGDkTgP12 = 0.0;
    	}
    	if(ng_local_tg_total_Q01 != 0 && !(rowData.get("NOTAG_TG_Q01").toString().equals(0))){
			noteGDkTgQ01 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q01").toString())/ng_local_tg_total_Q01));
    	}else{
    		noteGDkTgQ01 = 0.0;
    	}
    	if(ng_local_tg_total_Q02 != 0 && !(rowData.get("NOTAG_TG_Q02").toString().equals(0))){
			noteGDkTgQ02 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q02").toString())/ng_local_tg_total_Q02));
    	}else{
    		noteGDkTgQ02 = 0.0;
    	}
    	if(ng_local_tg_total_Q03 != 0 && !(rowData.get("NOTAG_TG_Q03").toString().equals(0))){
			noteGDkTgQ03 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q03").toString())/ng_local_tg_total_Q03));
    	}else{
    		noteGDkTgQ03 = 0.0;
    	}
    	if(ng_local_tg_total_Q04 != 0 && !(rowData.get("NOTAG_TG_Q04").toString().equals(0))){
			noteGDkTgQ04 = ((Double.parseDouble(rowData.get("NOTAG_TG_Q04").toString())/ng_local_tg_total_Q04));
    	}else{
    		noteGDkTgQ04 = 0.0;
    	}
    	if(ng_local_tg_total_H01 != 0 && !(rowData.get("NOTAG_TG_H01").toString().equals(0))){
			noteGDkTgH01 = ((Double.parseDouble(rowData.get("NOTAG_TG_H01").toString())/ng_local_tg_total_H01));
    	}else{
    		noteGDkTgH01 = 0.0;
    	}
    	if(ng_local_tg_total_H02 != 0 && !(rowData.get("NOTAG_TG_H02").toString().equals(0))){
			noteGDkTgH02 = ((Double.parseDouble(rowData.get("NOTAG_TG_H02").toString())/ng_local_tg_total_H02));
    	}else{
    		noteGDkTgH02 = 0.0;
    	}
    	
    	
    	
    	if(ytd_Param.equals("P01")){
    		if(ng_local_tg_total_YTD01 != 0 && !(rowData.get("NOTAG_TG_YTD01").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD01").toString())/ng_local_tg_total_YTD01));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P02")){
    		if(ng_local_tg_total_YTD02 != 0 && !(rowData.get("NOTAG_TG_YTD02").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD02").toString())/ng_local_tg_total_YTD02));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P03")){
    		if(ng_local_tg_total_YTD03 != 0 && !(rowData.get("NOTAG_TG_YTD03").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD03").toString())/ng_local_tg_total_YTD03));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P03")){
    		if(ng_local_tg_total_YTD03 != 0 && !(rowData.get("NOTAG_TG_YTD03").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD03").toString())/ng_local_tg_total_YTD03));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P04")){
    		if(ng_local_tg_total_YTD04 != 0 && !(rowData.get("NOTAG_TG_YTD04").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD04").toString())/ng_local_tg_total_YTD04));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P05")){
    		if(ng_local_tg_total_YTD05 != 0 && !(rowData.get("NOTAG_TG_YTD05").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD05").toString())/ng_local_tg_total_YTD05));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P06")){
    		if(ng_local_tg_total_YTD06 != 0 && !(rowData.get("NOTAG_TG_YTD06").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD06").toString())/ng_local_tg_total_YTD06));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P07")){
    		if(ng_local_tg_total_YTD07 != 0 && !(rowData.get("NOTAG_TG_YTD07").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD07").toString())/ng_local_tg_total_YTD07));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P08")){
    		if(ng_local_tg_total_YTD08 != 0 && !(rowData.get("NOTAG_TG_YTD08").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD08").toString())/ng_local_tg_total_YTD08));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P09")){
    		if(ng_local_tg_total_YTD09 != 0 && !(rowData.get("NOTAG_TG_YTD09").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD09").toString())/ng_local_tg_total_YTD09));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P10")){
    		if(ng_local_tg_total_YTD10 != 0 && !(rowData.get("NOTAG_TG_YTD10").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD10").toString())/ng_local_tg_total_YTD10));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P11")){
    		if(ng_local_tg_total_YTD11 != 0 && !(rowData.get("NOTAG_TG_YTD11").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD11").toString())/ng_local_tg_total_YTD11));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else if(ytd_Param.equals("P12")){
    		if(ng_local_tg_total_YTD12 != 0 && !(rowData.get("NOTAG_TG_YTD12").toString().equals(0))){
    			noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString())/ng_local_tg_total_YTD12));
        	}else{
        		noteGDkTgYTD = 0.0;
        	}
		}else{
			if(ng_local_tg_total_YTD12 != 0 && !(rowData.get("NOTAG_TG_YTD12").toString().equals(0))){
				noteGDkTgYTD = ((Double.parseDouble(rowData.get("NOTAG_TG_YTD12").toString())/ng_local_tg_total_YTD12));
			}else{
				noteGDkTgYTD = 0.0;
			}
		}

		if(periodChk_Param.equals("Y")){
			
			for(int i=4; i<42; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkOutP01);
        	row.getCell(5).setCellValue(noteGDkOutP02);
        	row.getCell(6).setCellValue(noteGDkOutP03);
        	row.getCell(7).setCellValue(noteGDkOutP04);
        	row.getCell(8).setCellValue(noteGDkOutP05);
        	row.getCell(9).setCellValue(noteGDkOutP06);
        	row.getCell(10).setCellValue(noteGDkOutP07);
        	row.getCell(11).setCellValue(noteGDkOutP08);
        	row.getCell(12).setCellValue(noteGDkOutP09);
        	row.getCell(13).setCellValue(noteGDkOutP10);
        	row.getCell(14).setCellValue(noteGDkOutP11);
        	row.getCell(15).setCellValue(noteGDkOutP12);
        	row.getCell(16).setCellValue(noteGDkOutQ01);
        	row.getCell(17).setCellValue(noteGDkOutQ02);
        	row.getCell(18).setCellValue(noteGDkOutQ03);
        	row.getCell(19).setCellValue(noteGDkOutQ04);
        	row.getCell(20).setCellValue(noteGDkOutH01);
        	row.getCell(21).setCellValue(noteGDkOutH02);
        	row.getCell(22).setCellValue(noteGDkOutYTD);
        	row.getCell(23).setCellValue(noteGDkTgP01);
        	row.getCell(24).setCellValue(noteGDkTgP02);
        	row.getCell(25).setCellValue(noteGDkTgP03);
        	row.getCell(26).setCellValue(noteGDkTgP04);
        	row.getCell(27).setCellValue(noteGDkTgP05);
        	row.getCell(28).setCellValue(noteGDkTgP06);
        	row.getCell(29).setCellValue(noteGDkTgP07);
        	row.getCell(30).setCellValue(noteGDkTgP08);
        	row.getCell(31).setCellValue(noteGDkTgP09);
        	row.getCell(32).setCellValue(noteGDkTgP10);
        	row.getCell(33).setCellValue(noteGDkTgP11);
        	row.getCell(34).setCellValue(noteGDkTgP12);
        	row.getCell(35).setCellValue(noteGDkTgQ01);
        	row.getCell(36).setCellValue(noteGDkTgQ02);
        	row.getCell(37).setCellValue(noteGDkTgQ03);
        	row.getCell(38).setCellValue(noteGDkTgQ04);
        	row.getCell(39).setCellValue(noteGDkTgH01);
        	row.getCell(40).setCellValue(noteGDkTgH02);
        	row.getCell(41).setCellValue(noteGDkTgYTD);
    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=4; i<16; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(noteGDkOutP01);
        	row.getCell(5).setCellValue(noteGDkOutP02);
        	row.getCell(6).setCellValue(noteGDkOutP03);
        	row.getCell(7).setCellValue(noteGDkOutQ01);
        	row.getCell(8).setCellValue(noteGDkOutH01);
        	row.getCell(9).setCellValue(noteGDkOutYTD);
        	row.getCell(10).setCellValue(noteGDkTgP01);
        	row.getCell(11).setCellValue(noteGDkTgP02);
        	row.getCell(12).setCellValue(noteGDkTgP03);
        	row.getCell(13).setCellValue(noteGDkTgQ01);
        	row.getCell(14).setCellValue(noteGDkTgH01);
        	row.getCell(15).setCellValue(noteGDkTgYTD);
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=4; i<18; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkOutP04);
        	row.getCell(5).setCellValue(noteGDkOutP05);
        	row.getCell(6).setCellValue(noteGDkOutP06);
        	row.getCell(7).setCellValue(noteGDkOutQ01);
        	row.getCell(8).setCellValue(noteGDkOutQ02);
        	row.getCell(9).setCellValue(noteGDkOutH01);
        	row.getCell(10).setCellValue(noteGDkOutYTD);
        	row.getCell(11).setCellValue(noteGDkTgP04);
        	row.getCell(12).setCellValue(noteGDkTgP05);
        	row.getCell(13).setCellValue(noteGDkTgP06);
        	row.getCell(14).setCellValue(noteGDkTgQ01);
        	row.getCell(15).setCellValue(noteGDkTgQ02);
        	row.getCell(16).setCellValue(noteGDkTgH01);
        	row.getCell(17).setCellValue(noteGDkTgYTD);
        	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
        	row.getCell(4).setCellValue(noteGDkOutP07);
        	row.getCell(5).setCellValue(noteGDkOutP08);
        	row.getCell(6).setCellValue(noteGDkOutP09);
        	row.getCell(7).setCellValue(noteGDkOutQ02);
        	row.getCell(8).setCellValue(noteGDkOutQ03);
        	row.getCell(9).setCellValue(noteGDkOutH01);
        	row.getCell(10).setCellValue(noteGDkOutH02);
        	row.getCell(11).setCellValue(noteGDkOutYTD);
        	row.getCell(12).setCellValue(noteGDkTgP07);
        	row.getCell(13).setCellValue(noteGDkTgP08);
        	row.getCell(14).setCellValue(noteGDkTgP09);
        	row.getCell(15).setCellValue(noteGDkTgQ02);
        	row.getCell(16).setCellValue(noteGDkTgQ03);
        	row.getCell(17).setCellValue(noteGDkTgH01);
        	row.getCell(18).setCellValue(noteGDkTgH02);
        	row.getCell(19).setCellValue(noteGDkTgYTD);
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=4; i<20; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(4).setCellValue(noteGDkOutP10);
        	row.getCell(5).setCellValue(noteGDkOutP11);
        	row.getCell(6).setCellValue(noteGDkOutP12);
        	row.getCell(7).setCellValue(noteGDkOutQ03);
        	row.getCell(8).setCellValue(noteGDkOutQ04);
        	row.getCell(9).setCellValue(noteGDkOutH01);
        	row.getCell(10).setCellValue(noteGDkOutH02);
        	row.getCell(11).setCellValue(noteGDkOutYTD);
        	row.getCell(12).setCellValue(noteGDkTgP10);
        	row.getCell(13).setCellValue(noteGDkTgP11);
        	row.getCell(14).setCellValue(noteGDkTgP12);
        	row.getCell(15).setCellValue(noteGDkTgQ03);
        	row.getCell(16).setCellValue(noteGDkTgQ04);
        	row.getCell(17).setCellValue(noteGDkTgH01);
        	row.getCell(18).setCellValue(noteGDkTgH02);
        	row.getCell(19).setCellValue(noteGDkTgYTD);
	    	
		}
	}
	
	/*
	 * 불필요한 데이터 숨기기
	 * NoteG 사용
	 */
	
	public void setRowValueHide(HSSFRow row, CellStyle style, Map rowData) {
		
		if(periodChk_Param.equals("Y")){
			
			for(int i=43; i<62; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(43).setCellValue("");
	    	row.getCell(44).setCellValue("");
	    	row.getCell(45).setCellValue("");
	    	row.getCell(46).setCellValue("");
	    	row.getCell(47).setCellValue("");
	    	row.getCell(48).setCellValue("");
	    	row.getCell(49).setCellValue("");
	    	row.getCell(50).setCellValue("");
	    	row.getCell(51).setCellValue("");
	    	row.getCell(52).setCellValue("");
	    	row.getCell(53).setCellValue("");
	    	row.getCell(54).setCellValue("");
	    	row.getCell(55).setCellValue("");
	    	row.getCell(56).setCellValue("");
	    	row.getCell(57).setCellValue("");
	    	row.getCell(58).setCellValue("");
	    	row.getCell(59).setCellValue("");
	    	row.getCell(60).setCellValue("");
	    	row.getCell(61).setCellValue("");
    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=17; i<23; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(17).setCellValue("");
	    	row.getCell(18).setCellValue("");
	    	row.getCell(19).setCellValue("");
	    	row.getCell(20).setCellValue("");
	    	row.getCell(21).setCellValue("");
	    	row.getCell(22).setCellValue("");
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=19; i<26; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(19).setCellValue("");
	    	row.getCell(20).setCellValue("");
	    	row.getCell(21).setCellValue("");
	    	row.getCell(22).setCellValue("");
	    	row.getCell(23).setCellValue("");
	    	row.getCell(24).setCellValue("");
	    	row.getCell(25).setCellValue("");
	    	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=21; i<29; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(21).setCellValue("");
	    	row.getCell(22).setCellValue("");
	    	row.getCell(23).setCellValue("");
	    	row.getCell(24).setCellValue("");
	    	row.getCell(25).setCellValue("");
	    	row.getCell(26).setCellValue("");
	    	row.getCell(27).setCellValue("");
	    	row.getCell(28).setCellValue("");
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=21; i<29; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(21).setCellValue("");
	    	row.getCell(22).setCellValue("");
	    	row.getCell(23).setCellValue("");
	    	row.getCell(24).setCellValue("");
	    	row.getCell(25).setCellValue("");
	    	row.getCell(26).setCellValue("");
	    	row.getCell(27).setCellValue("");
	    	row.getCell(28).setCellValue("");
	    	
		}
		
	}
	
	/*
	 * Description: Note G Target (ON Channel) - Forecast Accuracy% vs. Actual 63~81번째 컬럼 셀 숨기기
	 */
	public void setRowValueHide2(HSSFRow row, CellStyle style, Map rowData) throws Exception {
		
		if(periodChk_Param.equals("Y")){
			
			for(int i=70; i<89; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(70).setCellValue("");
	    	row.getCell(71).setCellValue("");
	    	row.getCell(72).setCellValue("");
	    	row.getCell(73).setCellValue("");
	    	row.getCell(74).setCellValue("");
	    	row.getCell(75).setCellValue("");
	    	row.getCell(76).setCellValue("");
	    	row.getCell(77).setCellValue("");
	    	row.getCell(78).setCellValue("");
	    	row.getCell(79).setCellValue("");
	    	row.getCell(80).setCellValue("");
	    	row.getCell(81).setCellValue("");
	    	row.getCell(82).setCellValue("");
	    	row.getCell(83).setCellValue("");
	    	row.getCell(84).setCellValue("");
	    	row.getCell(85).setCellValue("");
	    	row.getCell(86).setCellValue("");
	    	row.getCell(87).setCellValue("");
	    	row.getCell(88).setCellValue("");
	    	
		}else if(period_Param.equals("P01") || period_Param.equals("P02") || period_Param.equals("P03")){
			
			for(int i=27; i<33; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(27).setCellValue("");
	    	row.getCell(28).setCellValue("");
	    	row.getCell(29).setCellValue("");
	    	row.getCell(30).setCellValue("");
	    	row.getCell(31).setCellValue("");
	    	row.getCell(32).setCellValue("");
	    	
		}else if(period_Param.equals("P04") || period_Param.equals("P05") || period_Param.equals("P06")){
			
			for(int i=31; i<38; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(31).setCellValue("");
	    	row.getCell(32).setCellValue("");
	    	row.getCell(33).setCellValue("");
	    	row.getCell(34).setCellValue("");
	    	row.getCell(35).setCellValue("");
	    	row.getCell(36).setCellValue("");
	    	row.getCell(37).setCellValue("");
	    	
		}else if(period_Param.equals("P07") || period_Param.equals("P08") || period_Param.equals("P09")){
			
			for(int i=35; i<43; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
	    	row.getCell(35).setCellValue("");
	    	row.getCell(36).setCellValue("");
	    	row.getCell(37).setCellValue("");
	    	row.getCell(38).setCellValue("");
	    	row.getCell(39).setCellValue("");
	    	row.getCell(40).setCellValue("");
	    	row.getCell(41).setCellValue("");
	    	row.getCell(42).setCellValue("");
	    	
		}else if(period_Param.equals("P10") || period_Param.equals("P11") || period_Param.equals("P12")){
			
			for(int i=35; i<43; i++){
				row.createCell(i).setCellType(HSSFCell.CELL_TYPE_NUMERIC);
				row.getCell(i).setCellStyle(style);
			}
			
			row.getCell(35).setCellValue("");
	    	row.getCell(36).setCellValue("");
	    	row.getCell(37).setCellValue("");
	    	row.getCell(38).setCellValue("");
	    	row.getCell(39).setCellValue("");
	    	row.getCell(40).setCellValue("");
	    	row.getCell(41).setCellValue("");
	    	row.getCell(42).setCellValue("");
	    	
		}
		
	}

}
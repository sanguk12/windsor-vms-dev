<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="ANL01010">
	
	<!-- 지급내역 리스트 조회 -->
	<select id="ANL0101001S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			rowNumber as "rowNum"
			, eventYM as "eventYM"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','DKMDTPCD',dkmdTpCD,null) as "dkmdTpCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ACTIVITYCD',activityCD,null) as "activityCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','RAGESPHERECD',rageSphereCD_reg,null) as "rageSphereCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','OFFICECD',officeCD_reg,null) as "officeCDName"
			<isPropertyAvailable property="grpID">
				<isNotEmpty property="grpID">
			, (case when (select dkmdtpcd from GEMP01MT where empID=t2.empID) != 'DK' then '' else (select empNm from GEMP01MT where empID=t2.empID) end) as "empNm"
				</isNotEmpty>
				<isEmpty property="grpID">
			, (select empNm from GEMP01MT where empID=t2.empID) as "empNm"
				</isEmpty>
			</isPropertyAvailable>
			, venueCD as "venueCD"
			, venueNm as "venueNm"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VENUEGRADCD',venueGradCD,null) as "venueGradCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SEGMENTCD',segmentCD,null) as "segmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBSEGMENTCD',subSegmentCD,null) as "subSegmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD1',addrTpCD1,null) as "addrTpCD1Name"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD2',addrTpCD2,null) as "addrTpCD2Name"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','KINDTPCD5',kindTpCD5,null) as "kindTpCD5Name"
			, prdNm as "prdNm"
			, eu as "eu"
			, factoryPrice as "factoryPrice"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','QTYUNITCD',qtyUnitCD,null) as "qtyUnitCDName"
			, planQty as "planQty"
			, planUnitAmt as "planUnitAmt"
			, rfidQty as "rfidQty"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','RESULTTPCD',resultTpCD,null) as "resultTpCDName"
			, resultQty as "resultQty"
			, resultUnitAmt as "resultUnitAmt"
			, guidAmt as "guidAmt"
			, payAmt as "payAmt"
			, targetQty as "targetQty"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SDXTPCD',sdxTpCD,null) as "sdxTpCDName"
			, targetRate as "targetRate"
			, gsvRate as "gsvRate"
			, commt as "commt"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VERIFYSTATECD',verifyStateCD,null) as "verifyStateCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','PAYSTATECD',payStateCD,null) as "payStateCDName"
			, transferDueDate as "transferDueDate"
			, transferDate as "transferDate"
			, keymanNm as "keymanName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','BANKCD',bankCD,null) as "bankCDName"
			, accountNo as "accountNo"
			, holderNm as "holderNm"
			, sdxTpCD as "sdxTpCD"
			, payCommt as "payCommt"
			<!-- 
			, nvl(mileagePayAmt,0) as "mileagePayAmt" -->
			, mileageYN as "mileageYN"
			<!-- 
			, nvl(payAmt,0)+nvl(mileagePayAmt,0) as "totalPayAmt" -->
		from (
			select
				t.*
				, rank() over(
					order by
						  dkmdTpCD
						, activityCD
						, rageSphereCD_reg
						, officeCD_reg
						, empID
						, venueCD
						, prdCD
						, eventYM
				) as rowNumber
				, floor((rank() over(
					order by
						  dkmdTpCD
						, activityCD
						, rageSphereCD_reg
						, officeCD_reg
						, empID
						, venueCD
						, prdCD
						, eventYM
					)-1)/#displayNum#+1) as pageNum
			from (
				select
					 t3.*
					 , (
						select attrib02
						from F_CODE
						where
							useYN='Y'
							and activeFlg='U'
							and codediv='OFFICECD'
							and comCode=t3.officeCD
					 ) as rageSphereCD
				from (
					select
						 t2.*
						 , (
							select attrib02
							from F_CODE
							where
								useYN='Y'
								and activeFlg='U'
								and codediv='TEAMCD'
								and comCode=t2.teamCD
						 ) as officeCD
					from (
						select
							 t1.*
							 , (
								select attrib02
								from F_CODE
								where
									useYN='Y'
									and activeFlg='U'
									and codediv='TERRITORYCD'
									and comCode=t1.territoryCD
							 ) as teamCD
						from (
							select
								a.dkmdTpCD
								, a.activityCD
								, a.rageSphereCD as rageSphereCD_reg
								, a.officeCD as officeCD_reg
								, a.empID
								, a.venueCD
								, b.venueNm
								, b.venueGradCD
								, b.segmentCD
								, b.subSegmentCD
								, b.addrTpCD1
								, b.addrTpCD2
								, d.kindTpCD5
								, d.prdNm
						        , d.eu
						        , c.factoryPrice
						        , d.qtyUnitCD
						        , e.planQty
								, e.planUnitAmt
								, c.rfidQty
								, c.resultTpCD
								, c.resultQty
								, c.resultUnitAmt
								, c.guidAmt
								, c.payAmt
						        , c.targetQty
						        , c.sdxTpCD
								, c.targetRate
								, c.gsvRate
						        , c.commt
								, c.verifyStateCD
								, c.payStateCD
								, c.transferDueDate
								, c.transferDate
								, f.keymanNm
								, c.bankCD
								, c.accountNo
								, c.holderNm
								, b.territoryCD
								, c.prdCD
								, c.payCommt
								, a.eventYM
								<!-- 
								, g.mileagePayAmt
								 -->
								, c.mileageYN
							from GRLT02MT a
							inner join GVEN01MT b
								on a.venueCD = b.venueCD
							inner join GRLT02DT c
								on a.eventYM = c.eventYM
								and a.venueCD = c.venueCD	
							inner join GPRD01MT	d
								on c.prdCD = d.prdCD
				      		inner join GPLN02DT e
								on c.eventYM = e.eventYM
								and c.venueCD = e.venueCD
								and c.prdCD = e.prdCD  
							left outer join GKEY01MT f
								on c.keymanID = f.keymanID
							<!-- 
							left outer join (
							select
							   t3.venueCD
							  , eventYM
							  , sum(t1.addPayAmt) as mileagePayAmt
                 			  , t1.prdCD
							from
							  GMIL02DT t1
							  inner join GMIL03MT t2
							  on t1.mileageID = t2.mileageID
							  inner join GMIL02MT t3
							  on t1.mileageID = t3.mileageID
							where
								t3.mileageStateCD = '50'
								<isPropertyAvailable property="verifyStateCD">
									<isNotEmpty prepend="and" property="verifyStateCD">
										t3.verifyStateCD = #verifyStateCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="payStateCD">
									<isNotEmpty prepend="and" property="payStateCD">
										t3.payStateCD = #payStateCD#
									</isNotEmpty>
								</isPropertyAvailable>
							  group by venueCD, eventYM, T1.prdCD
						) g
							on c.eventYM = g.eventYM
							and c.venueCD = g.venueCD
               				and c.prdCD = g.prdCD
               				 -->
							where
								a.eventYM between #eventFromYM# and #eventToYM#
								and a.programCD = 'G1'
								and c.apprStateCd = '50'
								<!--
								2015.01.23. taejoon.jang, 현재의 dkmd구분으로 조회된다. 
								 -->
								<isPropertyAvailable property="dkmdTpCD">
									<isNotEmpty prepend="and" property="dkmdTpCD">
										b.dkmdTpCD = #dkmdTpCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="activityCD">
									<isNotEmpty prepend="and" property="activityCD">
										a.activityCD = #activityCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="rageSphereCD">
									<isNotEmpty prepend="and" property="rageSphereCD">
										a.rageSphereCD = #rageSphereCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="officeCD">
									<isNotEmpty prepend="and" property="officeCD">
										a.officeCD = #officeCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="verifyStateCD">
									<isNotEmpty prepend="and" property="verifyStateCD">
										c.verifyStateCD = #verifyStateCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="payStateCD">
									<isNotEmpty prepend="and" property="payStateCD">
										c.payStateCD = #payStateCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="venueCD">
									<isNotEmpty prepend="and" property="venueCD">
										a.venueCD = #venueCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="prdNm_S">
									<isNotEmpty prepend="and" property="prdNm_S">
										d.prdNm like '%'||#prdNm_S#||'%'
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="prdCDs">
						        	<iterate property="prdCDs" open="and d.prdCD in (" close=")" conjunction=",">
						        		#prdCDs[]#
						        	</iterate>
						        </isPropertyAvailable>
						        <isPropertyAvailable property="mileageYN">
									<isNotEmpty prepend="and" property="mileageYN">
										c.mileageYN = #mileageYN#
									</isNotEmpty>
								</isPropertyAvailable>
						    union all
						    select
								max(a.dkmdTpCD)
								, '99' as activityCD
								, max(a.rageSphereCD) as rageSphereCD_reg
								, max(a.officeCD) as officeCD_reg
								, max(a.empID)
								, a.venueCD
								, b.venueNm
								, max(b.venueGradCD)
								, max(b.segmentCD)
								, max(b.subSegmentCD)
								, max(b.addrTpCD1)
								, max(b.addrTpCD2)
								, max(d.kindTpCD5)
								, d.prdNm
						        , max(d.eu)
						        , max(c.factoryPrice)
						        , max(d.qtyUnitCD)
						        , sum(C.plnenterQty)
								, max(C.plnaddenterUnitAmt)
								, 0
								, null
								, sum(c.rltenterQty)
								, max(c.addenterUnitAmt)
								, 0
								, sum(c.addpayAmt)
						        , sum(c.plnenterQty)
						        , null
								, decode(sum(c.rltenterQty),0,0,sum(c.rltenterQty)/sum(c.plnenterQty)*100)
								, avg(round(((c.rltenterUnitAmt*(1+0.0352)) / d.factoryPrice) *100))
						        , max(a.commt)
								, max(a.verifyStateCD)
								, max(a.payStateCD)
								, max(a.transferDueDate)
								, max(a.transferDate)
								, max(f.keymanNm)
								, max(f.bankCD)
								, max(f.accountNo)
								, max(f.holderNm)
								, max(b.territoryCD)
								, c.prdCD
								, max(a.payCommt)
								, max(a.contractdateto)
								, 'Y'
							from GMIL02MT a
							inner join GVEN01MT b
								on a.venueCD = b.venueCD
								and b.incnttpcd = 'PRD'
							inner join GMIL02DT c
								on a.mileageID = c.mileageID
							inner join GPRD01MT	d
								on c.prdCD = d.prdCD
				            inner join GMIL03MT e
				                on a.mileageID = e.mileageID
				            left outer join GKEY01MT f
								on e.keymanID = f.keymanID
							where
								a.contractdateto between #eventFromYM# and #eventToYM#
								and a.mileageStateCd = '50'
								<isPropertyAvailable property="dkmdTpCD">
									<isNotEmpty prepend="and" property="dkmdTpCD">
										b.dkmdTpCD = #dkmdTpCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="activityCD">
									<isNotEmpty prepend="and" property="activityCD">
										'99' = #activityCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="rageSphereCD">
									<isNotEmpty prepend="and" property="rageSphereCD">
										a.rageSphereCD = #rageSphereCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="officeCD">
									<isNotEmpty prepend="and" property="officeCD">
										a.officeCD = #officeCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="verifyStateCD">
									<isNotEmpty prepend="and" property="verifyStateCD">
										c.verifyStateCD = #verifyStateCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="payStateCD">
									<isNotEmpty prepend="and" property="payStateCD">
										c.payStateCD = #payStateCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="venueCD">
									<isNotEmpty prepend="and" property="venueCD">
										a.venueCD = #venueCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="prdNm_S">
									<isNotEmpty prepend="and" property="prdNm_S">
										d.prdNm like '%'||#prdNm_S#||'%'
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="prdCDs">
						        	<iterate property="prdCDs" open="and d.prdCD in (" close=")" conjunction=",">
						        		#prdCDs[]#
						        	</iterate>
						        </isPropertyAvailable>
						        <isPropertyAvailable property="mileageYN">
									<isNotEmpty prepend="and" property="mileageYN">
										'Y' = #mileageYN#
									</isNotEmpty>
								</isPropertyAvailable>
						    group by a.mileageID, a.venueCD
								, b.venueNm, c.prdCD, d.prdNm
						) t1
					) t2
				) t3
			) t
			where 1=1
				<isPropertyAvailable property="rageSphereCD">
					<isNotEmpty prepend="and" property="rageSphereCD">
						rageSphereCD = #rageSphereCD#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="officeCD">
					<isNotEmpty prepend="and" property="officeCD">
						officeCD = #officeCD#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="rageSphereCD_S">
					<isNotEmpty prepend="and" property="rageSphereCD_S">
						rageSphereCD = #rageSphereCD_S#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="officeCD_S">
					<isNotEmpty prepend="and" property="officeCD_S">
						officeCD = #officeCD_S#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="teamCD_S">
					<isNotEmpty prepend="and" property="teamCD_S">
						teamCD = #teamCD_S#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="territoryCD">
					<isNotEmpty prepend="and" property="territoryCD">
						territoryCD = #territoryCD#
					</isNotEmpty>
				</isPropertyAvailable>
		) t2
		where 1=1
			<isPropertyAvailable property="pageNum">
				<isNotEmpty prepend="and" property="pageNum">
					pageNum = #pageNum#
				</isNotEmpty>
			</isPropertyAvailable>
	</select>
	
	<select id="ANL0101002S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			count(*) as "totalCount"
		from (
			select
				 t3.*
				 , (
					select attrib02
					from F_CODE
					where
						useYN='Y'
						and activeFlg='U'
						and codediv='OFFICECD'
						and comCode=t3.officeCD
				 ) as rageSphereCD
			from (
				select
					 t2.*
					 , (
						select attrib02
						from F_CODE
						where
							useYN='Y'
							and activeFlg='U'
							and codediv='TEAMCD'
							and comCode=t2.teamCD
					 ) as officeCD
				from (
					select
						 t1.*
						 , (
							select attrib02
							from F_CODE
							where
								useYN='Y'
								and activeFlg='U'
								and codediv='TERRITORYCD'
								and comCode=t1.territoryCD
						 ) as teamCD
					from (
						select
							a.dkmdTpCD
							, a.activityCD
							, a.rageSphereCD as rageSphereCD_reg
							, a.officeCD as officeCD_reg
							, a.empID
							, a.venueCD
							, b.venueNm
							, b.venueGradCD
							, b.segmentCD
							, b.subSegmentCD
							, b.addrTpCD1
							, b.addrTpCD2
							, d.kindTpCD5
							, d.prdNm
					        , d.eu
					        , c.factoryPrice
					        , d.qtyUnitCD
					        , e.planQty
							, e.planUnitAmt
							, c.rfidQty
							, c.resultTpCD
							, c.resultQty
							, c.resultUnitAmt
							, c.guidAmt
							, c.payAmt
					        , c.targetQty
					        , c.sdxTpCD
							, c.targetRate
							, c.gsvRate
					        , c.commt
							, c.verifyStateCD
							, c.payStateCD
							, c.transferDate
							, f.keymanNm
							, c.bankCD
							, c.accountNo
							, c.holderNm
							, b.territoryCD
							, c.prdCD
						from GRLT02MT a
						inner join GVEN01MT b
							on a.venueCD = b.venueCD
						inner join GRLT02DT c
							on a.eventYM = c.eventYM
							and a.venueCD = c.venueCD	
						inner join GPRD01MT	d
							on c.prdCD = d.prdCD
			      		inner join GPLN02DT e
							on c.eventYM = e.eventYM
							and c.venueCD = e.venueCD
							and c.prdCD = e.prdCD  
						left outer join GKEY01MT f
							on c.keymanID = f.keymanID
						left outer join (
							select
							   t3.venueCD
							  , eventYM
							  , sum(t1.addPayAmt) as mileagePayAmt
                 			  , t1.prdCD
							from
							  GMIL02DT t1
							  inner join GMIL03MT t2
							  on t1.mileageID = t2.mileageID
							  inner join GMIL02MT t3
							  on t1.mileageID = t3.mileageID
							where
								t3.mileageStateCD = '50'
								<isPropertyAvailable property="verifyStateCD">
									<isNotEmpty prepend="and" property="verifyStateCD">
										t3.verifyStateCD = #verifyStateCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="payStateCD">
									<isNotEmpty prepend="and" property="payStateCD">
										t3.payStateCD = #payStateCD#
									</isNotEmpty>
								</isPropertyAvailable>
							  group by venueCD, eventYM, T1.prdCD
						) g
							on c.eventYM = g.eventYM
							and c.venueCD = g.venueCD
               				and c.prdCD = g.prdCD
						where
							a.eventYM between #eventFromYM# and #eventToYM#
							and a.programCD = 'G1'
							and c.apprStateCd = '50'
							<!--
							2015.01.23. taejoon.jang, 현재의 dkmd구분으로 조회된다. 
							 -->
							<isPropertyAvailable property="dkmdTpCD">
								<isNotEmpty prepend="and" property="dkmdTpCD">
									b.dkmdTpCD = #dkmdTpCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="activityCD">
								<isNotEmpty prepend="and" property="activityCD">
									a.activityCD = #activityCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="rageSphereCD">
								<isNotEmpty prepend="and" property="rageSphereCD">
									a.rageSphereCD = #rageSphereCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="officeCD">
								<isNotEmpty prepend="and" property="officeCD">
									a.officeCD = #officeCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="verifyStateCD">
								<isNotEmpty prepend="and" property="verifyStateCD">
									c.verifyStateCD = #verifyStateCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="payStateCD">
								<isNotEmpty prepend="and" property="payStateCD">
									c.payStateCD = #payStateCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="venueCD">
								<isNotEmpty prepend="and" property="venueCD">
									a.venueCD = #venueCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="prdNm_S">
								<isNotEmpty prepend="and" property="prdNm_S">
									d.prdNm like '%'||#prdNm_S#||'%'
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="prdCDs">
					        	<iterate property="prdCDs" open="and d.prdCD in (" close=")" conjunction=",">
					        		#prdCDs[]#
					        	</iterate>
					        </isPropertyAvailable>
					        <isPropertyAvailable property="mileageYN">
								<isNotEmpty prepend="and" property="mileageYN">
									c.mileageYN = #mileageYN#
								</isNotEmpty>
							</isPropertyAvailable>
					    union all
					    select
							max(a.dkmdTpCD)
							, '99' as activityCD
							, max(a.rageSphereCD) as rageSphereCD_reg
							, max(a.officeCD) as officeCD_reg
							, max(a.empID)
							, a.venueCD
							, b.venueNm
							, max(b.venueGradCD)
							, max(b.segmentCD)
							, max(b.subSegmentCD)
							, max(b.addrTpCD1)
							, max(b.addrTpCD2)
							, max(d.kindTpCD5)
							, d.prdNm
					        , max(d.eu)
					        , max(c.factoryPrice)
					        , max(d.qtyUnitCD)
					        , sum(C.plnenterQty)
							, max(C.plnaddenterUnitAmt)
							, 0
							, null
							, sum(c.rltenterQty)
							, max(c.addenterUnitAmt)
							, 0
							, sum(c.addpayAmt)
					        , sum(c.plnenterQty)
					        , null
							, decode(sum(c.rltenterQty),0,0,sum(c.rltenterQty)/sum(c.plnenterQty)*100)
							, avg(round(((c.rltenterUnitAmt*(1+0.0352)) / d.factoryPrice) *100))
					        , max(a.commt)
							, max(a.verifyStateCD)
							, max(a.payStateCD)
							, max(a.transferDate)
							, max(f.keymanNm)
							, max(f.bankCD)
							, max(f.accountNo)
							, max(f.holderNm)
							, max(b.territoryCD)
							, c.prdCD
						from GMIL02MT a
						inner join GVEN01MT b
							on a.venueCD = b.venueCD
							and b.incnttpcd = 'PRD'
						inner join GMIL02DT c
							on a.mileageID = c.mileageID
						inner join GPRD01MT	d
							on c.prdCD = d.prdCD
			            inner join GMIL03MT e
			                on a.mileageID = e.mileageID
			            left outer join GKEY01MT f
							on e.keymanID = f.keymanID
						where
							a.contractdateto between #eventFromYM# and #eventToYM#
							and a.mileageStateCd = '50'
							<isPropertyAvailable property="dkmdTpCD">
								<isNotEmpty prepend="and" property="dkmdTpCD">
									b.dkmdTpCD = #dkmdTpCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="activityCD">
								<isNotEmpty prepend="and" property="activityCD">
									'99' = #activityCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="rageSphereCD">
								<isNotEmpty prepend="and" property="rageSphereCD">
									a.rageSphereCD = #rageSphereCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="officeCD">
								<isNotEmpty prepend="and" property="officeCD">
									a.officeCD = #officeCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="verifyStateCD">
								<isNotEmpty prepend="and" property="verifyStateCD">
									c.verifyStateCD = #verifyStateCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="payStateCD">
								<isNotEmpty prepend="and" property="payStateCD">
									c.payStateCD = #payStateCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="venueCD">
								<isNotEmpty prepend="and" property="venueCD">
									a.venueCD = #venueCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="prdNm_S">
								<isNotEmpty prepend="and" property="prdNm_S">
									d.prdNm like '%'||#prdNm_S#||'%'
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="prdCDs">
					        	<iterate property="prdCDs" open="and d.prdCD in (" close=")" conjunction=",">
					        		#prdCDs[]#
					        	</iterate>
					        </isPropertyAvailable>
					        <isPropertyAvailable property="mileageYN">
								<isNotEmpty prepend="and" property="mileageYN">
									'Y' = #mileageYN#
								</isNotEmpty>
							</isPropertyAvailable>
					    group by a.mileageID, a.venueCD
							, b.venueNm, c.prdCD, d.prdNm
					) t1
				) t2
			) t3
		) t
		where 1=1
			<isPropertyAvailable property="rageSphereCD">
				<isNotEmpty prepend="and" property="rageSphereCD">
					rageSphereCD = #rageSphereCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="officeCD">
				<isNotEmpty prepend="and" property="officeCD">
					officeCD = #officeCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="rageSphereCD_S">
				<isNotEmpty prepend="and" property="rageSphereCD_S">
					rageSphereCD = #rageSphereCD_S#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="officeCD_S">
				<isNotEmpty prepend="and" property="officeCD_S">
					officeCD = #officeCD_S#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="teamCD_S">
				<isNotEmpty prepend="and" property="teamCD_S">
					teamCD = #teamCD_S#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="territoryCD">
				<isNotEmpty prepend="and" property="territoryCD">
					territoryCD = #territoryCD#
				</isNotEmpty>
			</isPropertyAvailable>
	</select>
	
</sqlMap>
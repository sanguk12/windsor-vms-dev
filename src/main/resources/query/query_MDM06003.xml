<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="MDM06003">
	
	<!--임시업소[승인] 조회 -->
	<select id="MDM0600301S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			rowNumber as "rowNum"
			, TO_CHAR(TO_DATE(t.requestDate , 'YYYYMMDD'), 'YYYY.MM.DD')as "requestDate"
			, t.venueCD as "venueCD"
			, t.venueNm as "venueNm"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','TERRITORYCD', t.territoryCD,null) as "territoryCDName"
			, t.phoneNo as "phoneNo"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','FASCIACD', t.fascia,null) as "fasciaCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VENUEGRADCD', t.venueGradCD,null) as "venueGradCDName"
			, getLangDesc(#companyID#, #languageCD#, 'F_CODE', 'ADDRTPCD1', t.addrTpCD1, null) as "addrTpCD1Name" 
			, getLangDesc(#companyID#, #languageCD#, 'F_CODE', 'ADDRTPCD2', t.addrTpCD2, null) as "addrTpCD2Name" 
			, getLangDesc(#companyID#, #languageCD#, 'F_CODE', 'ADDRTPCD3', t.addrTpCD3, null) as "addrTpCD3Name" 
			, getLangDesc(#companyID#, #languageCD#, 'F_CODE', 'ADDRTPCD4', t.addrTpCD4, null) as "addrTpCD4Name" 
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SITECD', t.siteCD,null) as "siteCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','CHANNELCD', t.channelCD,null) as "channelCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBCHANNELCD', t.subChannelCD,null) as "subChannelCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SEGMENTCD', t.segmentCD,null) as "segmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBSEGMENTCD', t.subSegmentCD,null) as "subSegmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','RESERVESEGMENTCD', t.reserveSegmentCD,null) as "reserveSegmentCDName"
 			, getLangDesc(#companyID#,#languageCD#,'F_CODE','AGEINGCD', t.ageingCD, null) as "ageingCDName" 
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ACTIVEYN', t.kegYN, null) as "kegYN"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ACTIVEYN', t.activeYN, null) as "activeYN"
			, t.ws1SapCD as "ws1SapCD"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws1SapCD,null) as "ws1SapCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSCD',t.ws1CD,null) as "branch1"
			, t.ws2SapCD as "ws2SapCD"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws2SapCD,null) as "ws2SapCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSCD',t.ws2CD,null) as "branch2"
			, t.ws3SapCD as "ws3SapCD"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws3SapCD,null) as "ws3SapCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSCD',t.ws3CD,null) as "branch3"
			, t.ws4SapCD as "ws4SapCD"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws4SapCD,null) as "ws4SapCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSCD',t.ws4CD,null) as "branch4"
			, t.apprCommt as "apprCommt"
			, t.commt as "commt"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','APPRSTATECD',t.apprStateCD,null) as "apprStateCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','APPRSTATECD',t.requestStateCD,null) as "requestStateCDName"
			, t.apprStateCD as "apprStateCD"
			, t.requestStateCD as "requestStateCD"
			, t.levelno as "levelNo"
			,  (case when t.lapprLevelNo = t.levelNo then 'Y'
				  else 'N' end) as "lastApprYN"
			, t.lapprlevelno as "lapprlevelno"
			, t.apprTpID as "apprTpID"
			, t.empID as "empID"
			, t.postCD as "postCD"
			, t.newAddr2 as "newAddr2"
			, t.oldAddr2 as "oldAddr2"
			, t.printYN as "printYN"
			, TO_CHAR(t.printDate, 'YYYY.MM.DD')as "printDate"
		from (
			select
				rank() over(order by b.requestDate ,b.venueCD desc) as rowNumber
				, floor((rank() over(order by b.requestDate, b.venueCD desc)-1)/#displayNum#+1) as pageNum
				, b.requestDate
    			, b.mdDupYN
    			, b.venueGradCD
    			, b.venueCD
    			, b.venueNm
    			, b.territoryCD
    			, b.phoneNo
    			, b.fascia
    			, b.addrTpCD1
    			, b.addrTpCD2
    			, b.addrTpCD3
    			, b.addrTpCD4
    			, b.siteCD
    			, b.segmentCD
    			, b.subSegmentCD
    			, b.channelCD
    			, b.subChannelCD
    			, b.reserveSegmentCD
    			, b.ageingCD
    			, b.kegYN
    			, b.locationCD
    			, b.ws1CD
    			, b.ws1SapCD
    			, b.ws2CD
    			, b.ws2SapCD
    			, b.ws3CD
    			, b.ws3SapCD
    			, b.ws4CD
    			, b.ws4SapCD
    			, b.venueDivCD
    			, b.incntTpCD
    			, b.activeYN
    			, b.mdVenueCD
    			, a.commt	as apprCommt
    			, a.apprStateCD
    			, b.commt 	as commt
    			, b.requestStateCD
    			, a.levelno
    			, b.lapprlevelno
    			, a.empID
    			, a.apprTpID
    			, b.postCD
    			, b.newAddr2
    			, b.oldAddr2
    			, b.printYN
    			, b.printDate
			from GVEN04MT a
			inner join GVEN06MT b
				on a.venueCD = b.venueCD
				and a.requestDate = b.requestDate
			where 1=1
			and a.gbn = 'U'
			and a.empID = #empID#
			and b.requestDate between #requestDateFrom# and #requestDateTo#
			<isPropertyAvailable property="apprStateCD">
				<isNotEmpty prepend="and" property="apprStateCD">
					a.apprStateCD = #apprStateCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="venueGradCD" >
				<isNotEmpty prepend="and" property="venueGradCD">
					b.venueGradCD = #venueGradCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="venueNm" >
				<isNotEmpty prepend="and" property="venueNm">
					upper(b.venueNm) like '%'||upper(#venueNm#)||'%'
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="territoryCD" >
				<isNotEmpty prepend="and" property="territoryCD">
					b.territoryCD = #territoryCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="printYN" >
				<isNotEmpty prepend="and" property="printYN">
					b.printYN = #printYN#
				</isNotEmpty>
			</isPropertyAvailable>
		) t
		where 1=1
			<isPropertyAvailable property="pageNum">
				and pageNum = #pageNum#
			</isPropertyAvailable>
	</select>
	
	<!-- 업소[승인] 상세조회 -->
	<select id="MDM0600302S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			count(*) as "totalCount"
		from  GVEN04MT a
		inner join GVEN06MT b
			on a.venueCD = b.venueCD
		and a.requestDate =  b.requestDate
		where 1=1
		and a.empID = #empID#
		and a.gbn = 'U'
		and b.requestDate between #requestDateFrom# and #requestDateTo#
		<isPropertyAvailable property="apprStateCD">
			<isNotEmpty prepend="and" property="apprStateCD">
				b.requestStateCD = #apprStateCD#
			</isNotEmpty>
		</isPropertyAvailable>
		<isPropertyAvailable property="venueGradCD" >
			<isNotEmpty prepend="and" property="venueGradCD">
				b.venueGradCD = #venueGradCD#
			</isNotEmpty>
		</isPropertyAvailable>
		<isPropertyAvailable property="venueNm" >
			<isNotEmpty prepend="and" property="venueNm">
				upper(b.venueNm) like '%'||upper(#venueNm#)||'%'
			</isNotEmpty>
		</isPropertyAvailable>
		<isPropertyAvailable property="territoryCD" >
			<isNotEmpty prepend="and" property="territoryCD">
				b.territoryCD = #territoryCD#
			</isNotEmpty>
		</isPropertyAvailable>
	</select>
	
	<!-- 임시업소[승인] 반려시 메일보낼 하위승인자들 정보(상태가 비어있거나, 승인요청인 사람 제외) -->
	<select id="MDM0600303S" parameterClass="com.kia.mdm.model.GVEN02MT" resultClass="java.util.LinkedHashMap">
		select
			empID as "empID"
			, max(empNm) as "empNm"
			, max(emailAddr) as "emailAddr"
		from (
			select
				b.empID
				, c.empNm
				, c.emailAddr
				, b.apprStateCD
			from GVEN06MT a
			inner join GVEN04MT b
				on a.venueCD  = b.venueCD
			and a.requestDate = b.requestDate
			inner join GEMP01MT c
				on b.empID = c.empID
			where
				a.venueCD = #venueCD#
		     	and b.apprTpID in
				<iterate property="apprTpIDs" open="(" close=")" conjunction=",">
					#apprTpIDs[]#
		     	</iterate>
				and (b.apprStateCD is not null and b.apprStateCD != '20')
				and b.empID != #empID#
				and b.gbn = 'U'
		)
		group by empID
	</select>
	
		
	<!--임시업소[승인] 조회 -->
	<select id="MDM0600304S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
		   (case when t.checkOutlet = 'true' then t.customerid || '_' || t.territoryID
        		 else t.legacyfrontofficeaccountno || '_' || t.territoryID end) "DataLoadID",
        	t.territoryID as "territoryID"     ,
           (case when t.checkOutlet = 'true' then t.customerid 
        		else t.legacyfrontofficeaccountno end) "outletID",
        	'Active' as "activeYNName"    ,
        	'KR' as "country"   
		from (
			 select
            (case when b.activeYN  = 'Y' and d.activeYN = 'N' then 'true'
                  else 'false' end ) as checkOutlet ,
            (case    when TO_NUMBER(to_char(sysdate,
                'MM')) <![CDATA[>]]>  6            then TO_NUMBER(to_char(sysdate,
                'YY'))+1             
                when TO_NUMBER(to_char(sysdate,
                'MM')) <![CDATA[<]]>  7              then TO_NUMBER(to_char(sysdate,
                'YY')) 
            end) as venueKey          ,
            c.territoryID          ,
            b.excelKeyCD  ,
            d.legacyfrontofficeaccountno,
            d.customerid  ,
            b.territorycd as territoryCD_after,
            d.territorycd as territoryCD_before
	        from
    	        GVEN04MT a    
        	inner join GVEN06MT b     
        		on a.venueCD = b.venueCD   
        	and a.requestDate = b.requestDate
        	left outer join gter01mt c     
            	on b.territoryCD = c.territoryCD      
        	left outer join gven02mt d
	            on b.venueCD = d.venueCD
			where 
				1=1
			and a.empID = #empID#
			and a.gbn = 'U'
			and b.requestDate between #requestDateFrom# and #requestDateTo#
        	and b.requestStateCD = #requestStateCD#
			order by b.requestDate desc, b.venueCD desc
			) t
		where 
			not t.territorycd_before = t.territorycd_after
			
	</select>
	
		<!--임시업소[승인] 조회 -->
	<select id="MDM0600305S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			 t.sellingAreaID as "sellingAreaID"
			, t.customerID as "outletID"
			, t.refNo as "outletRef"
			, t.venueCD as "sellingAreaRef"
			, decode(t.activeYN, 'Y', 'Active', 'N', 'Closed') as "status"
			, t.venueNm as "customerNm"
			, t.venueNm as "sellingAreaNm"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','LEGALCD', t.legalCD,null) as "legal"
			, nvl2(t.channelCD, getLangDesc(#companyID#,#languageCD#,'F_CODE','CHANNELCD',t.channelCD,null) || '[KR]', '')  as "channel"
			, nvl2(t.subChannelCD, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBCHANNELCD',t.subChannelCD,null) || '[KR]', '')  as "subChannel"
			, nvl2(t.segmentCD, getLangDesc(#companyID#,#languageCD#,'F_CODE','SEGMENTCD',t.segmentCD,null) || '[KR]', '')  as "segment"
			, nvl2(t.subSegmentCD, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBSEGMENTCD',t.subSegmentCD,null) || '[KR]', '')  as "subSegment"
			, nvl2(t.reserveSegmentCD, getLangDesc(#companyID#,#languageCD#,'F_CODE','RESERVESEGMENTCD',t.reserveSegmentCD,null) || '[KR]' , '')  as "reserveSegment"
			, decode(t.kegYN, 'Y', '케그', 'N', '') as "store"
			, nvl2(t.reserveSegmentCD, getLangDesc(#companyID#,#languageCD#,'F_CODE','AGEINGCD',t.ageingCD, null) || '[KR]'  , '')  as "secondaryCDOS"
			, nvl2(t.siteCD, getLangDesc(#companyID#,#languageCD#,'F_CODE','SITECD', t.siteCD,null) || '[KR]'  , '')  as "site"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VENUEGRADCD', t.venueGradCD,null) as "salesGrade"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD1',t.addrTpCD1,null) as "region" 
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD2',t.addrTpCD2,null) as "city" 
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD3',t.addrTpCD3,null) as "suburb" 
			, t.newAddr1 as "streetAddr2"
			, t.oldAddr2 as "streetAddr1"
			, t.postCD as "postalCode"
			, t.phoneNo as "phone"
			, nvl2(t.fascia, getLangDesc(#companyID#,#languageCD#,'F_CODE','FASCIACD', t.fascia,null) || '[KR]'  , '')  as "fascia"
			, t.legacyFrontOfficeAccountNo as "legacyFrontOfficeAccountNo"
			, t.legacyBackOfficeAccountNo as "legacyBackOfficeAccountNo"
			, nvl2(t.ws1SapCD, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws1SapCD,null) || '[KR]'  , '')  as "draught"
			, nvl2(t.ws2SapCD, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws2SapCD,null) || '[KR]'  , '')  as "spirits"
			, nvl2(t.ws3SapCD, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws3SapCD,null) || '[KR]'  , '')  as "wine"
			, nvl2(t.ws4SapCD, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws4SapCD,null) || '[KR]'  , '')  as "packaged"
			, t.license as "license"
		from (
			select
    			 c.sellingAreaID
		       , c.customerID
		       , c.refNo
		       , b.venueCD
		       , b.venueNm
		       , b.activeYN
		       , b.customerNm
		       , b.sellingAreaNm
		       , b.legalCD
		       , b.channelCD
		       , b.subchannelCD
		       , b.segmentCD
		       , b.subsegmentCD
		       , b.reservesegmentCD
		       , b.kegYN
		       , b.ageingCD
		       , b.siteCD
		       , b.venueGradCD
		       , b.addrTpCD1
		       , b.addrTpCD2
		       , b.addrTpCD3
		       , b.newAddr1
		       , b.oldAddr2
		       , b.postCD
		       , b.phoneNo
		       , b.fascia
		       , c.legacyFrontOfficeAccountNo
		       , c.legacyBackOfficeAccountNo
		       , b.ws1SapCD
		       , b.ws2SapCD
		       , b.ws3SapCD
		       , b.ws4SapCD
		       , b.license
			from GVEN04MT a
			inner join GVEN06MT b
				on a.venueCD = b.venueCD
				and a.requestDate = b.requestDate
			left outer join GVEN02MT c
				on b.venueCD = c.venueCD	
			where 1=1
			and a.empID = #empID#
			and a.gbn = 'U'
			<isPropertyAvailable property="venueCD">
				<isNotEmpty prepend="and" property="venueCD">
					b.venueCD = #venueCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="venueCDs">
				<isNotEmpty prepend="and" property="venueCDs">
					b.venueCD in
    				<iterate property="venueCDs" open="(" close=")" conjunction=",">
      					#venueCDs[]#
    				</iterate>
    			</isNotEmpty>
			</isPropertyAvailable>	
			<isPropertyAvailable property="requestDate">
				<isNotEmpty prepend="and" property="requestDate">
					b.requestDate = #requestDate#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="requestDates">
				<isNotEmpty prepend="and" property="requestDates">
					b.requestDate in
    				<iterate property="requestDates" open="(" close=")" conjunction=",">
      					#requestDates[]#
    				</iterate>
    			</isNotEmpty>
			</isPropertyAvailable>
			order by b.requestDate desc, b.venueCD desc
		) t
		where 1=1
	</select>
	
		<!--임시업소[승인] 조회 -->
	<select id="MDM0600306S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		  select 
    		t.customerid  as "outletID",   
    		t.currentTerritoryID as "currentTerritoryID",
    		'Waiting Removal'  as "oldActive_c",
    		t.newTerritoryID as "newTerritoryID",
    		'Waiting Activation' as "newActive_c",
    		t.country as "country"
   		  from
   		  (
    		select
        		b.customerid     ,
        		b.activeyn,
        		(select
            		territoryID     
        		from
            		gter01mt     
        		where
            		territoryCD = b.territoryCD) as currentTerritoryID, 
       			b.territoryCD  as territoryCD_before,
         		a.activeyn,
         		(select
            		territoryID     
        		from
            		gter01mt     
        		where
            	territoryCD = a.territoryCD) as newTerritoryID   ,
         		a.territoryCD  as territoryCD_after,
		        b.country as country
    		from
        		gven06mt a   
    		inner join	gven02mt b    
            on a.venueCD = b.venueCD   
    		where	
        		1=1        
        	and a.requestDate between #requestDateFrom# and #requestDateTo#
        	and a.requestStateCD = #requestStateCD#
        ) t
    	 where not t.territorycd_before = t.territorycd_after
	</select>
	
		<!--임시업소[승인] 조회 -->
	<select id="MDM0600307S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			  TO_CHAR(TO_DATE(t.requestDate , 'YYYYMMDD'), 'YYYY.MM.DD')as "requestDate"
			, t.venueCD as "venueCD"
			, t.venueNm as "venueNm"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','TERRITORYCD', t.territoryCD,null) as "territoryCDName"
			, t.phoneNo as "phoneNo"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','FASCIACD', t.fascia,null) as "fasciaCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VENUEGRADCD', t.venueGradCD,null) as "venueGradCDName"
			, getLangDesc(#companyID#, #languageCD#, 'F_CODE', 'ADDRTPCD1', t.addrTpCD1, null) as "addrTpCD1Name" 
			, getLangDesc(#companyID#, #languageCD#, 'F_CODE', 'ADDRTPCD2', t.addrTpCD2, null) as "addrTpCD2Name" 
			, getLangDesc(#companyID#, #languageCD#, 'F_CODE', 'ADDRTPCD3', t.addrTpCD3, null) as "addrTpCD3Name" 
			, getLangDesc(#companyID#, #languageCD#, 'F_CODE', 'ADDRTPCD4', t.addrTpCD4, null) as "addrTpCD4Name" 
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SITECD', t.siteCD,null) as "siteCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','CHANNELCD', t.channelCD,null) as "channelCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBCHANNELCD', t.subChannelCD,null) as "subChannelCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SEGMENTCD', t.segmentCD,null) as "segmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBSEGMENTCD', t.subSegmentCD,null) as "subSegmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','RESERVESEGMENTCD', t.reserveSegmentCD,null) as "reserveSegmentCDName"
 			, getLangDesc(#companyID#,#languageCD#,'F_CODE','AGEINGCD', t.ageingCD, null) as "ageingCDName" 
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ACTIVEYN', t.kegYN, null) as "kegYN"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ACTIVEYN', t.activeYN, null) as "activeYN"
			, t.ws1SapCD as "ws1SapCD"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws1SapCD,null) as "ws1SapCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSCD',t.ws1CD,null) as "branch1"
			, t.ws2SapCD as "ws2SapCD"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws2SapCD,null) as "ws2SapCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSCD',t.ws2CD,null) as "branch2"
			, t.ws3SapCD as "ws3SapCD"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws3SapCD,null) as "ws3SapCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSCD',t.ws3CD,null) as "branch3"
			, t.ws4SapCD as "ws4SapCD"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws4SapCD,null) as "ws4SapCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSCD',t.ws4CD,null) as "branch4"
			, t.apprCommt as "apprCommt"
			, t.commt as "commt"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','APPRSTATECD',t.apprStateCD,null) as "apprStateCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','APPRSTATECD',t.requestStateCD,null) as "requestStateCDName"
			, t.apprStateCD as "apprStateCD"
			, t.requestStateCD as "requestStateCD"
			, t.levelno as "levelNo"
			,  (case when t.lapprLevelNo = t.levelNo then 'Y'
				  else 'N' end) as "lastApprYN"
			, t.lapprlevelno as "lapprlevelno"
			, t.apprTpID as "apprTpID"
			, t.empID as "empID"
			, t.postCD as "postCD"
			, t.newAddr1 as "newAddr1"
			, t.newAddr2 as "newAddr2"
			, t.oldAddr2 as "oldAddr2"
			, t.printYN as "printYN"
			, TO_CHAR(t.printDate, 'YYYY.MM.DD')as "printDate"
		from (
			select
				  b.requestDate
    			, b.mdDupYN
    			, b.venueGradCD
    			, b.venueCD
    			, b.venueNm
    			, b.territoryCD
    			, b.phoneNo
    			, b.fascia
    			, b.addrTpCD1
    			, b.addrTpCD2
    			, b.addrTpCD3
    			, b.addrTpCD4
    			, b.siteCD
    			, b.segmentCD
    			, b.subSegmentCD
    			, b.channelCD
    			, b.subChannelCD
    			, b.reserveSegmentCD
    			, b.ageingCD
    			, b.kegYN
    			, b.locationCD
    			, b.ws1CD
    			, b.ws1SapCD
    			, b.ws2CD
    			, b.ws2SapCD
    			, b.ws3CD
    			, b.ws3SapCD
    			, b.ws4CD
    			, b.ws4SapCD
    			, b.venueDivCD
    			, b.incntTpCD
    			, b.activeYN
    			, b.mdVenueCD
    			, a.commt	as apprCommt
    			, a.apprStateCD
    			, b.commt 	as commt
    			, b.requestStateCD
    			, a.levelno
    			, b.lapprlevelno
    			, a.empID
    			, a.apprTpID
    			, b.postCD
    			, b.newAddr2
    			, b.oldAddr2
    			, b.newAddr1
    			, b.printYN
    			, b.printDate
			from GVEN04MT a
			inner join GVEN06MT b
				on a.venueCD = b.venueCD
				and a.requestDate = b.requestDate
			where 1=1
			and a.gbn = 'U'
			and a.empID = #empID#
			and b.requestDate between #requestDateFrom# and #requestDateTo#
			<isPropertyAvailable property="apprStateCD">
				<isNotEmpty prepend="and" property="apprStateCD">
					a.apprStateCD = #apprStateCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="venueGradCD" >
				<isNotEmpty prepend="and" property="venueGradCD">
					b.venueGradCD = #venueGradCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="venueNm" >
				<isNotEmpty prepend="and" property="venueNm">
					upper(b.venueNm) like '%'||upper(#venueNm#)||'%'
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="territoryCD" >
				<isNotEmpty prepend="and" property="territoryCD">
					b.territoryCD = #territoryCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="printYN" >
				<isNotEmpty prepend="and" property="printYN">
					b.printYN = #printYN#
				</isNotEmpty>
			</isPropertyAvailable>
			order by b.requestDate ,b.venueCD desc
		) t
		where 1=1
	</select>
	
	<!-- 임시업소[승인] 전체 승인상태 갱신 -->
	<update id="MDM0600301U" parameterClass="com.kia.mdm.model.GVEN02MT">
		update GVEN06MT
		set
			requestStateCD = #apprStateCD#
			, chgID = #userID#
			, chgDate = sysdate
		where
			venueCD = #venueCD#
		and requestDate = #requestDate# 	
	</update>
	
	<!-- 임시업소[승인/반려] 승인상태 갱신 -->
	<update id="MDM0600302U" parameterClass="com.kia.mdm.model.GVEN02MT">
		update GVEN04MT
		set
			apprStateCD = '50'
			, commt = #apprCommt#
			, apprDate = sysdate
			, chgID = #userID#
			, chgDate = sysdate
		where
			venueCD = #venueCD#
		and levelNo = #levelNo#
		and requestDate = #requestDate#
		and gbn = 'U' 
	</update>
	
	<!-- 임시업소[승인] 상위자 승인요청처리 -->
	<update id="MDM0600303U" parameterClass="com.kia.mdm.model.GVEN02MT">
		update GVEN04MT
		set
			apprStateCD = '20'
			, chgID = #userID#
			, chgDate = sysdate
		where
			venueCD = #venueCD#
		and levelNo = #levelNo#+1
		and requestDate = #requestDate#
		and gbn = 'U' 
	</update>
	
	<!-- 임시업소[반려] 상태 갱신 -->
	<update id="MDM0600304U" parameterClass="com.kia.mdm.model.GVEN02MT">
		update GVEN06MT
		set
			requestStateCD = #apprStateCD#
			, chgID = #userID#
			, commt = #commt#
			, chgDate = sysdate
		where
			venueCD = #venueCD#
		and requestDate = #requestDate#
	</update>
	
	<!-- 임시업소[반려] 승인상태 갱신 -->
	<update id="MDM0600305U" parameterClass="com.kia.mdm.model.GVEN02MT">
		update GVEN04MT
		set
			apprStateCD = #apprStateCD#
			, commt = #apprCommt#
			, apprDate = sysdate
			, chgID = #userID#
			, chgDate = sysdate
		where
			venueCD = #venueCD#
		and levelNo = #levelNo#
		and requestDate = #requestDate#
		and gbn = 'U'
	</update>
	
	<!-- 임시업소[반려] 승인상태 갱신 -->
	<update id="MDM0600306U" parameterClass="com.kia.mdm.model.GVEN02MT">
		update GVEN06MT
		set
			requestStateCD = #apprStateCD#
			, apprDate = sysdate
			, chgID = #userID#
			, chgDate = sysdate
		where
			venueCD = #venueCD#
		and requestDate = #requestDate#
	</update>
	
	<update id="MDM0600307U" parameterClass="com.kia.mdm.model.GVEN03MT">
		update GVEN06MT
		set
			printYN = 'Y'
			, printDate = sysdate
			, chgID = #userID#
			, chgDate = sysdate
		where
			venueCD = #venueCD#
		and requestDate = #requestDate#
	</update>
	
	<update id="MDM0600308U" parameterClass="com.kia.mdm.model.GVEN02MT">
		update GVEN06MT
		set
			requestStateCD = #apprStateCD#
 			, excelSeq = excelSeq.NEXTVAL 
			, excelKeyCD = to_char(sysdate, 'YYYYMMDD') || '_' || excelSeq.NEXTVAL 
			, chgID = #userID#
			, chgDate = sysdate
		where
			venueCD = #venueCD#
		and requestDate = #requestDate#
	</update>
	
	<!-- 임시업소[승인요청] 반려 삭제 -->
	<delete id="MDM0600301D" parameterClass="com.kia.mdm.model.GVEN02MT">
		delete from GVEN04MT
		where
			venueCD = #venueCD#
		and requestDate = #requestDate#	
		and gbn = 'U'
	</delete>
	
</sqlMap>
<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="system">
	  
	<!-- Paging 구현쿼리 Header 조각 -->
    <sql id="system.paging.header">
    	<isPropertyAvailable property="pageNum">
        select p.* from (
            select
    		    ROWNUM as "rowNum",
    	        FLOOR((ROWNUM-1)/#displayNum#+1) as pageNum,
    	        COUNT(*) OVER() as "totalCount",
    	</isPropertyAvailable>
    	<isNotPropertyAvailable property="pageNum">
    		select
    	</isNotPropertyAvailable>
    </sql>
    
    <!-- Paging 구현쿼리 Header 조각 -->
    <sql id="system.paging.footer">
    	<isPropertyAvailable property="pageNum">
        ) p
		where
			p.pageNum = #pageNum#
		</isPropertyAvailable>
    </sql>
    
    <!-- 공통: 코드목록 조회 -->
    <select id="SYS0001S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
     select /**SYS0001S*/ 
        	t1.comCode  as "comCode", 
            t1.codeName as "codeName",
            t1.attrib01 as "attrib01",
            t1.attrib02 as "attrib02",
            t1.attrib03 as "attrib03",
            t1.attrib04 as "attrib04",
            t1.attrib05 as "attrib05",
            t1.attrib06 as "attrib06",
            t1.attrib07 as "attrib07",
            t1.attrib08 as "attrib08",
            t1.attrib09 as "attrib09",
            t1.attrib10 as "attrib10",
            t1.attrib11 as "attrib11",
            t1.attrib12 as "attrib12"
       from F_Code t1
      where	t1.codeDiv = #codeDiv#
        <isPropertyAvailable property="attrib01">
        	<isNotEmpty prepend="and" property="attrib01">
        		attrib01 = #attrib01#
        	</isNotEmpty>
        </isPropertyAvailable>
        <isPropertyAvailable property="attrib02">
        	<isNotEmpty prepend="and" property="attrib02">
        		attrib02 = #attrib02#
        	</isNotEmpty>
        </isPropertyAvailable>
        <isPropertyAvailable property="attrib03">
        	<isNotEmpty prepend="and" property="attrib03">
        		attrib03 = #attrib03#
        	</isNotEmpty>
        </isPropertyAvailable>
        <isPropertyAvailable property="attrib04">
        	<isNotEmpty prepend="and" property="attrib04">
        		attrib04 = #attrib04#
        	</isNotEmpty>
        </isPropertyAvailable>
        <isPropertyAvailable property="attrib05">
        	<isNotEmpty prepend="and" property="attrib05">
        		attrib05 = #attrib05#
        	</isNotEmpty>
        </isPropertyAvailable>
        <isPropertyAvailable property="notInCodes1">
        	<isNotEmpty prepend="and" property="notInCodes1">
			t1.comCode != #notInCodes1#
			</isNotEmpty>
		</isPropertyAvailable>
		<isPropertyAvailable property="notInCodes2">
        	<isNotEmpty prepend="and" property="notInCodes2">
			t1.comCode != #notInCodes2#
			</isNotEmpty>
		</isPropertyAvailable>
        <isPropertyAvailable property="comCode">
        	<isNotEmpty prepend="and" property="comCode">
        		comCode = #comCode#
        	</isNotEmpty>
        </isPropertyAvailable>
        and t1.useYN = 'Y'
        and t1.activeFlg = 'U'
        order by
            t1.seq, t1.comCode
    </select>
    
    <select id="SYS000102S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
     select	/**SYS000102S*/ 
            t1.comCode as "comCode", 
            t1.codeName as "codeName",
            t1.attrib01 as "attrib01",
            t1.attrib02 as "attrib02",
            t1.attrib03 as "attrib03",
            t1.attrib04 as "attrib04",
            t1.attrib05 as "attrib05",
            t1.attrib06 as "attrib06",
            t1.attrib07 as "attrib07",
            t1.attrib08 as "attrib08",
            t1.attrib09 as "attrib09",
            t1.attrib10 as "attrib10",
            t1.attrib11 as "attrib11",
            t1.attrib12 as "attrib12"
       from	F_Code t1
      where	t1.codeDiv = #codeDiv#
        <isPropertyAvailable property="attrib01">
        	<isNotEmpty prepend="and" property="attrib01">
        		attrib01 = #attrib01#
        	</isNotEmpty>
        </isPropertyAvailable>
        <isPropertyAvailable property="attrib02">
        	<isNotEmpty prepend="and" property="attrib02">
        		attrib02 = #attrib02#
        	</isNotEmpty>
        </isPropertyAvailable>
        <isPropertyAvailable property="attrib03">
        	<isNotEmpty prepend="and" property="attrib03">
        		attrib03 = #attrib03#
        	</isNotEmpty>
        </isPropertyAvailable>
        <isPropertyAvailable property="attrib04">
        	<isNotEmpty prepend="and" property="attrib04">
        		attrib04 = #attrib04#
        	</isNotEmpty>
        </isPropertyAvailable>
        <isPropertyAvailable property="attrib05">
        	<isNotEmpty prepend="and" property="attrib05">
        		attrib05 = #attrib05#
        	</isNotEmpty>
        </isPropertyAvailable>
        and t1.useYN = 'Y'
        and t1.activeFlg = 'U'
        order by
            NVL(t2.pkDesc,t1.codeName)
    </select>
    
    <!-- 로그인: 사용자 상세정보 조회 -->    
   	<select id="SYS0002S" parameterClass="kr.co.nis.waf.system.auth.model.User" resultClass="java.util.LinkedHashMap">
   		<![CDATA[
   		select  
        	t1.userID as "userID", 
            t1.userName as "userName", 
            NVL(t2.grpID, '') as "grpID",
            case when t1.mnuConstructID is null or t1.mnuConstructID = '' then
                t3.mnuConstructID
            else 
                t1.mnuConstructID
            end as "mnuConstructID",
            case when t1.mnuConstructID is null or t1.mnuConstructID = '' then 
                'GROUP'
            else 
                'USER'
            end as "authType",
            t4.authLevelCD as "authLevelCD",
            t1.companyID as "companyID",
            t4.themeCD as "themeCD",
            t4.languageCD as "languageCD",
            t4.dateFormatCD as "dateFormatCD",
            'N' as "saasYN"
            , (case when t5.dkmdTpCD is null then t3.dkmdTpCD else t5.dkmdTpCD end) as "dkmdTpCD"
            , t1.initPasswdYN as "initPasswdYN"
            , t5.empID as "empID"
            , t5.empNm as "empNm"
            , t5.empTpCD as "empTpCD"
            , t5.rageSphereCD as "rageSphereCD"
            , t5.officeCD as "officeCD"
            , t5.teamCD as "teamCD"
            , t5.territoryCD as "territoryCD"
            , t5.emailAddr as "emailAddr"
            , getLangDesc(#companyID#,#languageCD#,'F_CODE','RAGESPHERECD',t5.rageSphereCD,null) as "rageSphereCDName"
            , getLangDesc(#companyID#,#languageCD#,'F_CODE','OFFICECD',t5.officeCD,null) as "officeCDName"
            , getLangDesc(#companyID#,#languageCD#,'F_CODE','TEAMCD',t5.teamCD,null) as "teamCDName"
            , getLangDesc(#companyID#,#languageCD#,'F_CODE','TERRITORYCD',t5.territoryCD,null) as "territoryCDName"
            , (select decode(sum(cnt),null,0,sum(cnt)) cnt 
				 from (
				       select count(*) cnt         
				         from GPLN01MT       
				        where empID =  #userID#         
				          and apprStateCD = '40'  and eventym >= '201608'
				        union all
				       select count(*) cnt         
				         from GPLN02MT a               
				         left outer join
				              GPLN02DT d                     
				                on a.venueCD = d.venueCD                    
				                and a.eventYM = d.eventYM        
				        where a.empID =   #userID#     
				          and d.apprStateCD = '40' and a.eventym >= '201608'     
				        union all        
				       select count(*) cnt        
				         from GRLT01MT a        
				        where a.empID           =  #userID#  and a.eventym >= '201607'
				          and ( a.apprStateCD   =  '40'
				           or   a.verifyStateCD =  'ERR'  
				           or   a.payStateCD    =  '20' ) 
				        union all       
				       select count(*) cnt       
				         from GRLT02MT a               
				         left outer join
				              GRLT02DT d                     
				              on a.venueCD = d.venueCD                    
				              and a.eventYM = d.eventYM        
				        where a.empID =   #userID#       and a.eventym >= '201607' 
				          and ( d.apprStateCD   =  '40'
				           or   d.verifyStateCD =  'ERR') 
				        union all      
				       select count(*) cnt                  
				         from GSUP01MT a                     
				        where a.empID  =  #userID#            
				          and a.supportStateCD = '40'  
				        union all 
				       select count(*) cnt              
				         from GSUP02MT a                     
				        where a.empID =   #userID#            
				          and a.supportStateCD = '40'
				        union all       
				       select count(*) cnt       
				         from GPLN03MT a         
				        where a.empID =   #userID#    and a.eventym >= '201608' 
				          and a.apprStateCD = '20'       
				        union all
				       select count(*) cnt        
				         from GPLN04MT a  inner join GPLN02DT b       
				         on a.venueCD = b.venueCD                              
			            and a.eventYM = b.eventYM     
			            and a.prdcd =b.prdcd
				        where a.empID =   #userID#  and a.eventym >= '201608'
				          and a.apprStateCD = '20'  
				        union all 
				       select count(*) cnt       
				         from GRLT07MT a      
				        where a.empID =   #userID# and a.eventym >= '201607'
				          and a.apprStateCD = '20'      
				          and a.apprTpID    in ( '000000','000002') 
				        union all
				       select count(*) cnt       
				         from GRLT08MT a       
				        where a.empID =  #userID# and a.eventym >= '201607'
				          and a.apprStateCD = '20'       
				          and a.apprTpID   in ( '000000','000002') 
				        union all
				       select count(*) cnt       
				         from GKEY03MT a      
				         inner join     GKEY02MT b     
                on a.keymanID = b.keymanID     
                and a.requestDate = b.requestDate     
                and a.requestSeq = b.requestSeq      
				        where a.empID       =  #userID#
				          and a.apprStateCD = '20'
				       	union all
		       		   select count(*) cnt       
		         	     from GLTC02MT a        
			            where a.empID       =  #userID#
		    	          and a.apprStateCD = '20'
			            union all
			           select count(*) cnt       
			             from GLTC01MT a        
		        	    where a.empID       =  #userID#
		          	      and a.apprStateCD = '40'   
		          	    union all  
	     	   	       select count(*) cnt      
	     		 	     from gad01mt  a    
	     			    inner join gad03mt b
			               on a.adsupportid = b.adsupportid
	    		 	    where b.empID =  #userID#      
	        		      and b.apprStateCD = '20'    
		   			    union all 
    		   	       select count(*) cnt     
    			 	     from gad01mt a           
    			        inner join  gad03mt b          
    			           on a.adsupportid = b.adsupportid
    			           and a.regId = b.empId       
    			        where a.regID = #userID#                 
        		          and a.apprStateCD = '40'
        		        union all  
	     	   	       select count(*) cnt      
	     		 	     from gad04mt  a    
	     			    inner join gad06mt b
			               on a.adsupportid = b.adsupportid
			               and a.adSeq = b.adSeq 
	    		 	    where b.empID =  #userID#      
	        		      and b.apprStateCD = '20'
	        		      and b.adContractDivCD in ('20', '30')   
		   			    union all 
    		   	       select count(*) cnt     
    			 	     from gad04mt a           
    			        inner join  gad06mt b          
    			           on a.adsupportid = b.adsupportid
    			           and a.adSeq = b.adSeq        
    			           and a.regId = b.empId
    			        where a.regID = #userID#                 
        		          and a.apprStateCD = '40'
        		          and b.adContractDivCD in ('20', '30')
				) ) appCount
        from
        	F_User t1
            right outer join F_GroupUser t2
                on  t1.companyID = t2.companyID
                and t1.userID = t2.userID
            right outer join F_Group t3
                on t2.companyID = t3.companyID
                and t2.grpID = t3.grpID
            inner join F_User_X_Package t4
                on  t1.companyID = t4.companyID
                and t1.userID = t4.userID
			left outer join GEMP01MT t5
				on t4.empID = t5.empID
        where
        	t1.companyID = #companyID#
        and t1.userID = #userID#
        and ROWNUM = 1
         ]]>
        
		<!-- 
		select  
        	t1.userID as "userID", 
            t1.userName as "userName", 
            NVL(t2.grpID, '') as "grpID",
            case when t1.mnuConstructID is null or t1.mnuConstructID = '' then
                t3.mnuConstructID
            else 
                t1.mnuConstructID
            end as "mnuConstructID",
            case when t1.mnuConstructID is null or t1.mnuConstructID = '' then 
                'GROUP'
            else 
                'USER'
            end as "authType",
            t4.authLevelCD as "authLevelCD",
            t1.companyID as "companyID",
            t4.orgID as "orgID",
            t4.partnerDivCD as "partnerDivCD",
            t4.partnerID as "partnerID",
            t4.empID as "empID",
            t13.firstNm||' '||t13.lastNm as "empNm",
            t4.salOrgCD as "salOrgCD",
			(case when t4.partnerDivCD = 'AC' then t12.salOffCD else t4.salOffCD end) as "salOffCD",
            t4.prtnrID as "prtnrID",
            t12.prtnrNm as "prtnrNm",
            t4.themeCD as "themeCD",
            t4.timezoneCD as "timezoneCD",
            t11.codeDesc as "timezoneDesc",
            t15.codeDesc as "officeTimezoneDesc",
            t4.languageCD as "languageCD",
            t4.currencyCD as "currencyCD",
            t14.currencyCD as "currencyCD",
            t4.localeCD as "localeCD",
            t4.dateFormatCD as "dateFormatCD",
            t4.amtFormatCD as "amtFormatCD",
            t6.orgName as "orgName",
            t5.partnerName as "partnerName",
            NVL(t10.blockYN,'N') as "blockYN",
            (case when t10.companyID is null then 'N' else 'Y' end) as "saasYN",
            'N' as "saasYN",
            t6.orgCD as "orgCD",
            t5.partnerCD as "partnerCD",
            t5.partnerName as "partnerName",
            t7.rpartnerID as "rpartnerID",
            t4.siteID as "siteID", 
            (case when t5.partnerDivCD = 'HQ' then ''
                  when t5.partnerDivCD = 'AC' then t5.partnerID
                  when t5.partnerDivCD = 'SL' then t8.partnerID
                  else '' end) as "agencyID",
            (case when t5.partnerDivCD = 'HQ' then ''
                  when t5.partnerDivCD = 'AC' then t5.partnerCD
                  when t5.partnerDivCD = 'SL' then t8.partnerCD
                  else '' end) as "agencyCD",
            (case when t5.partnerDivCD = 'HQ' then ''
                  when t5.partnerDivCD = 'AC' then TO_CHAR(t5.partnerName)
                  when t5.partnerDivCD = 'SL' then TO_CHAR(t8.partnerName)
                  else '' end) as "agencyName",
            (case when t5.partnerDivCD = 'HQ' then t4.partnerID
                  when t5.partnerDivCD = 'AC' then t7.rpartnerID
                  when t5.partnerDivCD = 'SL' then t9.rpartnerID
                  else '' end) as "hqID"
        from
        	F_User t1
            right outer join F_GroupUser t2
                on  t1.companyID = t2.companyID
                and t1.userID = t2.userID
            right outer join F_Group t3
                on t2.companyID = t3.companyID
                and t2.grpID = t3.grpID
            inner join F_User_X_Package t4
                on  t1.companyID = t4.companyID
                and t1.userID = t4.userID
            left outer join P_Partner t5
                on  t4.companyID = t5.companyID
                and t4.partnerID = t5.partnerID
            left outer join F_Organization t6
                on  t4.companyID = t6.companyID
                and t4.orgID = t6.orgID
            left outer join P_Relation t7
                on  t4.companyID = t7.companyID
                and t4.partnerID = t7.partnerID
            left outer join P_Partner t8
                on t7.companyID = t8.companyID
                and t7.rpartnerID = t8.partnerID
            left outer join P_Relation t9
                on t8.companyID = t9.companyID
                and t8.partnerID = t9.partnerID
            left outer join S_Contract t10
                on t4.companyID = t10.companyID
            left outer join (select * from F_Code where companyID = #companyID# and codeDiv = '1805') t11
                on  t4.timezoneCD = t11.comCode
            left outer join GPRT01MT t12
                on t4.prtnrID = t12.prtnrID
            left outer join GEMP01MT t13
                on t4.empID = t13.empID
            left outer join GDPT01MT t14
            	on t4.salOrgCD = t14.salOrgCD
            left outer join (select * from F_Code where companyID = #companyID# and codeDiv = '1805') t15
                on  t14.tmzoneCD = t15.comCode	
        where
        	t1.companyID = #companyID#
        and t1.userID = #userID#
        and ROWNUM = 1
		 -->
    </select>
   
    <!-- 로그인: 사용자 등록여부 조회 -->
	<select id="SYS0003S" parameterClass="kr.co.nis.waf.system.auth.model.User" resultClass="java.lang.Integer">
		select
			count(*) as "count"
		from (
			select
				(case when t6.dkmdTpCD is null then t5.dkmdTpCD else t6.dkmdTpCD end) as dkmdTpCD
			from F_User t1
			inner join F_User_X_Package t2
				on t1.companyID = t2.companyID
				and t1.userID = t2.userID
			inner join F_GROUPUSER t4
				on t1.companyID = t4.companyID
				and t1.userID = t4.userID
			inner join F_GROUP t5
				on t4.companyID = t5.companyID
				and t4.grpID = t5.grpID
			left outer join F_Company t3
				on t2.companyID = t3.companyID
			left outer join GEMP01MT t6
				on t2.empID = t6.empID
			where
				t1.companyID = #companyID#
				and t1.userID = #userID#
				<isPropertyAvailable prepend="and" property="passwd" >
					t1.passwd =  F_MD5_CRIPT(#passwd#)
				</isPropertyAvailable>
				and t1.useYN = 'Y'
				and nvl(t3.closeYN, 'N') != 'Y'
		)
		where
			dkmdTpCD = #dkmdTpCD#
	</select>
    
    <!-- 로그인실패 횟수 조회 -->
	<select id="SYS0003S01S" parameterClass="kr.co.nis.waf.system.auth.model.User" resultClass="java.util.LinkedHashMap">
		select
			passwdErrCnt as "passwdErrCnt"
		from F_USER
		where
			companyID = #companyID#
			and userID = #userID#
	</select>
	
	<!-- 로그인실패 세팅횟수 조회 -->
	<select id="SYS0003S02S" parameterClass="kr.co.nis.waf.system.auth.model.User" resultClass="java.util.LinkedHashMap">
		select
			accountBlockRuleYN as "accountBlockRuleYN"
			, accountBlockCnt as "accountBlockCnt"
		from F_PASSWORDPOLICY
		where
			companyID = #companyID#
	</select>
	
    <!-- 로그인실패 횟수 업데이트 -->
	<update id="SYS0003S01U" parameterClass="kr.co.nis.waf.system.auth.model.User">
		update F_USER
		set
			passwdErrCnt = passwdErrCnt + 1
		where
			companyID = #companyID#
			and userID = #userID#
	</update>
	
	<!-- 로그인실패 횟수 초기화 업데이트 -->
	<update id="SYS0003S02U" parameterClass="kr.co.nis.waf.system.auth.model.User">
		update F_USER
		set
			passwdErrCnt = 0
		where
			companyID = #companyID#
			and userID = #userID#
	</update>
	
	<!-- 오늘부터 비밀번호변경일자 날짜수 -->
	<select id="SYS0003S03S" parameterClass="kr.co.nis.waf.system.auth.model.User" resultClass="java.lang.Integer">
		select
			nvl(trunc(sysdate - to_date(passwdChgDate, 'YYYYMMDD')), 0)
		from F_USER
		where
			companyID = #companyID#
			and userID = #userID#
	</select>
	
	<!-- 비밀번호변경 주기일수 조회 -->
	<select id="SYS0003S04S" parameterClass="kr.co.nis.waf.system.auth.model.User" resultClass="java.util.LinkedHashMap">
		select
			passwdChgRuleYN as "passwdChgRuleYN"
			, passwdChgCnt as "passwdChgCnt"
		from F_PASSWORDPOLICY
		where
			companyID = #companyID#
	</select>
    
    <!-- 첨부파일관리: 첨부파일 목록 조회 -->
    <select id="SYS0004S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select
        	docLinkID as "docLinkID", 
            fileName as "fileName", 
            fileURL as "fileURL", 
            UUID as "UUID",
            SUBSTR(fileName, LENGTH(fileName)-2, LENGTH(fileName)) as "fileTypeCD",
            TO_CHAR(TO_NUMBER(ROUND(fileSize/1024,2)))||'k' as "fileSize"
        from
			F_DocLink
        where
            companyID = #companyID#
        and linkDivCD = #linkDivCD#
        and linkID = #linkID#
        <isPropertyAvailable property="linkID1">
	        <isNotEmpty prepend="and" property="linkID1">
	        	linkID1 = #linkID1#
	        </isNotEmpty>
        </isPropertyAvailable>
        <isPropertyAvailable property="linkID2">
	        <isNotEmpty prepend="and" property="linkID2">
	        	linkID2 = #linkID2#
	        </isNotEmpty>
	    </isPropertyAvailable>
	    <isPropertyAvailable property="linkID3">
	        <isNotEmpty prepend="and" property="linkID3">
	        	linkID3 = #linkID3#
	        </isNotEmpty>
	    </isPropertyAvailable>
	    <isPropertyAvailable property="linkID4">
	        <isNotEmpty prepend="and" property="linkID4">
	        	linkID4 = #linkID4#
	        </isNotEmpty>
	    </isPropertyAvailable>
	    <isPropertyAvailable property="linkID5">
	        <isNotEmpty prepend="and" property="linkID5">
	        	linkID5 = #linkID5#
	        </isNotEmpty>
	    </isPropertyAvailable>
    </select>
    
    <!-- ID관리: ID Creation Rule 수정 -->
    <update id="SYS0005U" parameterClass="kr.co.nis.waf.system.biz.model.Code">
        update F_IDCreationRule
        set
			lastSeq = lastSeq + interval
        where
			companyID = #companyID#
        and bizID = #seqDiv#
        and useYN = 'Y'
    </update>
    
    <!-- ID관리: ID Creation Rule 조회 -->
    <select id="SYS0006S" parameterClass="kr.co.nis.waf.system.biz.model.Code" resultClass="java.util.LinkedHashMap">
        select
			case when IDType = 'number' then TO_CHAR(lastSeq)
                else
                    NVL(prefix,'')||
                    SUBSTR(IDCreationRule,1,LENGTH(IDCreationRule)-LENGTH(TO_CHAR(lastSeq)))||
                    TO_CHAR(lastSeq)||
                    NVL(suffix,'')
                end as "seqID"
        from
			F_IDCreationRule
        where
			companyID = #companyID#
        and bizID = #seqDiv#
        and useYN = 'Y'
    </select>
    
    <!-- ID관리: ID Creation Rule 수정 -->
    <update id="SYS0005U02" parameterClass="kr.co.nis.waf.system.biz.model.Code">
        update F_IDCreationRule
        set
			lastSeq = lastSeq + interval
        where
			bizID = #seqDiv#
        and useYN = 'Y'
    </update>
    
    <!-- ID관리: ID Creation Rule 조회 -->
    <select id="SYS0006S02" parameterClass="kr.co.nis.waf.system.biz.model.Code" resultClass="java.util.LinkedHashMap">
        select
			case when IDType = 'number' then TO_CHAR(lastSeq)
                else
                    NVL(prefix,'')||
                    SUBSTR(IDCreationRule,1,LENGTH(IDCreationRule)-LENGTH(TO_CHAR(lastSeq)))||
                    TO_CHAR(lastSeq)||
                    NVL(suffix,'')
                end as "seqID"
        from
			F_IDCreationRule
        where
			bizID = #seqDiv#
        and useYN = 'Y'
    </select>
    
    <!-- 개인정보 변경: 비빌번호 -->
    <update id="SYS0007S" parameterClass="kr.co.nis.waf.system.auth.model.User">
        update
        	F_User
        set
        	passwd = F_MD5_CRIPT(#passwd#)
        	, passwdChgDate = TO_CHAR(SYSDATE,'YYYYMMDD')
        	, chgDate = SYSDATE
        	, chgID = #workerID#
        	, passwdErrCnt = 0
        	, initPasswdYn = #initPasswdYN#
        where
			userID = #userID#
    </update>
    
    <!-- 사용자비밀번호이력 -->
	<insert id="SYS0016I" parameterClass="kr.co.nis.waf.system.auth.model.User">
        insert into F_PASSWORDHISTORY (
        	companyID
        	, userID
        	, createDate
        	, passwd
        )
        values (
        	#companyID#
        	, #userID#
        	, sysdate
        	, f_md5_cript(#passwd#)
        )
    </insert>
    
    <!-- 비밀번호 최소자릿수 -->
    <select id="SYS0015S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			passwdMinNumbers
		from F_PASSWORDPOLICY
		where
			companyID = #companyID#
    </select>
    
    <!-- 비밀번호 변경 이력 -->
    <select id="SYS0016S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			min(
				case when passwdUsageLimitRuleYN='Y' then (
					case when passwd=f_md5_cript(#passwd#) then 'N'
					else 'Y'
					end
				)
				else 'Y'
				end
			) as passYN
		from (
			select  
				userID
				, createDate
				, passwd
				, row_number() over (order by createDate desc) as rn
				, passwdUsageLimitCnt
				, passwdUsageLimitRuleYN
			from F_PasswordHistory a, F_PASSWORDPOLICY b
			where
				a.companyID = b.companyID
				and a.companyID = #companyID#
				and userID = #userID#
		)
		where
			rn <![CDATA[<=]]> passwdUsageLimitCnt
    </select>
    
    <!-- 비밀번호 존재 여부  -->
    <select id="SYS0018S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		 select
		 	(case when passwd = f_md5_cript(#nowPasswd#) then 'Y'
		 		else 'N'
		 		end) as "passWD"
	 	from F_User
	 	where
	 		userID = #userID#
	</select>
    
    <!-- 사용자 비밀번호 변경 히스토리 조회(최근 ?건)
    <select id="SYS0015S" parameterClass="kr.co.nis.waf.system.auth.model.UserExtend" resultClass="java.util.LinkedHashMap">
		select * from (
	        select  
	        	userID as "userID", 
	            createDate as "createDate", 
	            passwd as "passwd"
	            , row_number() over (order by createDate desc) as rn
	        from
				F_PasswordHistory
	        where   
	        	companyID = #companyID#
	        and userID = #userID#
		)
		where
			rn <![CDATA[<=]]> 10
    </select>
     -->
    
    <!-- 사용자 비밀번호 유효기간 검사(변경 후 3개월) 
    <select id="SYS0017S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select
		    case when TIMESTAMPDIFF(64, CHAR(CURRENT TIMESTAMP) - TIMESTAMP(t1.createDate)) > t2.passwdChgMonthCnt then
		        'Y' else 'N' end as "passwdChgYN"
		from
		    F_PasswordHistory t1,
		    F_PasswordPolicy t2
		where
		    t1.companyID = #companyID#
		and t1.userID = #userID#
		and t2.companyID = #companyID#
		and t2.passwdChgMonthRuleYN = 'Y'
		order by
		    t1.createDate desc
		fetch first 1 row only
    </select>
    -->
    
    <!-- 사용자 계정 3개월 접속이력 없을 시 자동 잠금 
    <update id="SYS0018U" parameterClass="java.util.Map">
        update F_User
		set
		    useYN = 'N',
		    chgDate = CURRENT TIMESTAMP,
		    chgID = 'SYSTEM'
		where
		    userID in (
		        select
		            z.userID
		        from
		            (
		            select
		                t1.userID as userID,
		                case when TIMESTAMPDIFF(64, CHAR(CURRENT TIMESTAMP) - TIMESTAMP(MAX(t1.connectDate))) > t2.accountBlockMonthCnt then
		                    'Y' else 'N' end as accountBlockYN
		            from
		                F_SystemUseLog t1,
		                F_PasswordPolicy t2
		            where
		                t1.companyID = #companyID#
		            and t2.companyID = #companyID#
		            and t2.accountBlockMonthRuleYN = 'Y'
		            group by
		                t1.userID,
		                t2.accountBlockMonthCnt
		            ) z
		        where
		            z.accountBlockYN = 'Y'
		    )
    </update>
    -->
    
    <!-- 개인정보 변경: 일자포맷, 언어, 타임존 -->
    <update id="SYS0008U" parameterClass="kr.co.nis.waf.system.auth.model.UserExtend">
        update
        	F_User_X_Package
        set
        	timezoneCD = #timezoneCD_info#,
        	languageCD = #languageCD_info#,
        	dateFormatCD = #dateFormatCD_info#
        where
			companyID = #companyID#
        and userID = #userID#
    </update>
    
    <update id="SYS0009U" parameterClass="kr.co.nis.waf.system.auth.model.UserExtend">
        update F_USER
        set
        	passwdErrCnt = 0
        where
        	companyID = #companyID#
        	and userID = #userID#
    </update>
    
    <!-- 권한별 메뉴구조/그룹 조회 -->
    <select id="SYS0009S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        <!-- 2008.04.08 이전 -->
        select  z.kind as "kind",
                z.pcode as "pcode",
                z.code as "code",
                z.name as "name",
                z.URL as "URL"
        from  (
            select  'G' as kind,
                    pmnuGrpID as pcode,
                    mnuGrpID as code,
                    getLangDesc(#companyID#,#languageCD#, 'F_MENUCONSTRUCTGROUP', #mnuConstructID#, mnuGrpID, NULL) as name,
                    URL,
                    seq
            from    F_MenuConstructGroup
            where   companyID = #companyID#
            and     mnuConstructID = #mnuConstructID#
            and     pmnuGrpID = #mnuGrpID#
            and     useYN = 'Y'
            and     displayYN = 'Y'
            <isPropertyAvailable property="displayMnuTp">
            	<isNotEmpty prepend="AND" property="displayMnuTp">
					displayMnuTp = #displayMnuTp#            	
            	</isNotEmpty>
			</isPropertyAvailable>
            union
            select  'M' as kind,
                    a.mnuGrpID as pcode,
                    a.pgmID as code,
                    getLangDesc(#companyID#,#languageCD#, 'F_PROGRAM', a.pgmID, NULL, NULL) as name,
                    b.pgmURL as URL,
                    a.seq
			from    F_MenuConstructDetail a
                    inner join F_Program b
            			on  a.companyID = b.companyID
            			and a.pgmID = b.pgmID
            where   a.companyID = #companyID#
            and     a.mnuConstructID = #mnuConstructID#
            and     a.mnuGrpID = #mnuGrpID#
            and     a.useYN = 'Y'
            and     b.useYN = 'Y'
			<!-- 
			<isEqual property="saasYN" compareValue="N">
			from    F_MenuConstructDetail a
                    inner join F_Program b
            			on  a.companyID = b.companyID
            			and a.pgmID = b.pgmID
            where   a.companyID = #companyID#
            and     a.mnuConstructID = #mnuConstructID#
            and     a.mnuGrpID = #mnuGrpID#
            and     a.useYN = 'Y'
            and     b.useYN = 'Y'
			</isEqual>
			<isEqual property="saasYN" compareValue="Y">
            from    F_MenuConstructDetail a
            		inner join F_Program b
            			on  a.companyID = b.companyID
            			and a.pgmID = b.pgmID
            		inner join S_UseProgram c
            			on  a.companyID = c.companyID
            			and a.pgmID = c.pgmID
            where   a.mnuConstructID = #mnuConstructID#
            and     a.mnuGrpID = #mnuGrpID#
            and     a.useYN = 'Y'
            and     b.useYN = 'Y'
            and	    c.companyID = #companyID#
            </isEqual>
             -->
            ) z
        order by
                z.kind,
                z.seq
        
        <!-- 2008.04.08, SeungHyo Ko, 속도 개선
        with MenuConstructGroupMap
        (mnuConstructID, pmnuGrpID, mnuGrpID, mnuGrpName, url, seq)
        as
	    (   
	      select  mnuConstructID,
	              pmnuGrpID,
	              mnuGrpID,
	              mnuGrpName,
	              url,
	              seq
	      from    F_MenuConstructGroup
	      where   mnuConstructID = #mnuConstructID#
	      and     pMnuGrpID = #mnuGrpID#
	      and     useYN = 'Y'
	      union all
	      select  t1.mnuConstructID,
	              t1.pmnuGrpID,
	              t1.mnuGrpID,
	              t1.mnuGrpName,
	              t1.url,
	              t1.seq
	      from    F_MenuConstructGroup t1
	              inner join MenuConstructGroupMap t2
	                  on  t1.mnuConstructID = t2.mnuConstructID
	                  and t1.pMnuGrpID = t2.mnuGrpID
	      where   t1.useYN = 'Y'
	    )
	    select mnuConstructID, pmnuGrpID, mnuGrpID, 'Group' as type, mnuGrpName, '' as pgmID, '' as pgmName, url, seq
	    from   MenuConstructGroupMap
	    union
	    select  a.mnuConstructID, c.pmnuGrpID, a.mnuGrpID, 'Menu' as type, '' as mnuName, a.pgmID, b.pgmName, b.pgmURL as url, a.seq
	    from    F_MenuConstructDetail a 
	                inner join F_Program b on a.pgmID = b.pgmID
	                inner join F_MenuConstructGroup c on a.mnuConstructID = c.mnuConstructID and a.mnuGrpID = c.mnuGrpID
	    where   a.mnuConstructID = #mnuConstructID#
	    and     a.useYN = 'Y'
	    and     b.useYN = 'Y'
	    -->
    </select>
    
    <!-- 메뉴하위그룹 조회 -->
    <select id="SYS0010S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  
        	pmnuGrpID as "pmnuGrpID",
        	mnuGrpID as "mnuGrpID",
        	getLangDesc(#companyID#,#languageCD#, 'F_MENUCONSTRUCTGROUP', #mnuConstructID#, mnuGrpID, NULL) as "mnuGrpName",
        	seq as "seq"
        from    
        	F_MenuConstructGroup
        where   
        	companyID = #companyID#
        and	mnuConstructID = #mnuConstructID#
        and mnuGrpID = #mnuGrpID#
        <!-- 
        with menuConstructGroupPath as
        (
            select  pmnuGrpID, mnuGrpID, mnuGrpName, seq
            from    F_MenuConstructGroup
            where   mnuConstructID = #mnuConstructID#
            and     mnuGrpID = #mnuGrpID#
            union all
            select  a.pmnuGrpID, a.mnuGrpID, a.mnuGrpname, a.seq
            from    F_MenuConstructGroup a
                    inner join menuConstructGroupPath b
            on      a.mnuGrpID = b.pmnuGrpID
            where   a.mnuConstructID = #mnuConstructID#
        )
        select  pmnuGrpID as "pmnuGrpID", 
                mnuGrpID as "mnuGrpID", 
                mnuGrpName as "mnuGrpName", 
                seq as "seq"
        from    menuConstructGroupPath
        order by
                replace(pmnugrpid,'ROOT',''), mnuGrpID
         -->
    </select>
    
    <!-- 권한별 메뉴상세 조회 -->
    <select id="SYS0011S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">        
        select  
        	a.pgmID as "pgmID", 
            a.viewID as "viewID", 
            getLangDesc(#companyID#,#languageCD#, 'F_VIEW', a.viewID, NULL, NULL) as "viewName",
            <!-- NVL(a.viewTitle,getLangDesc(#companyID#,#languageCD#, 'F_VIEW', a.viewID, NULL, NULL)) as "viewTitle", -->
            (case when a.viewTitle is null then getLangDesc(#companyID#,#languageCD#, 'F_VIEW', a.viewID, NULL, NULL)
            	 else getLangDesc(#companyID#,#languageCD#, 'F_PROGRAMVIEW', a.pgmID, a.viewID, NULL)
            	 end) as "viewTitle",
            b.viewURL as "viewURL",
            c.mnuGrpID as "mnuGrpID",
            NVL(b.appPositionCD,'ALL') as "appPositionCD",
            NVL(b.appDisRate, '100') as "appDisRate",
            NVL(b.appDisUnitCD,'P') as "appDisUnitCD"
        from
			F_ProgramView a
            right outer join F_View b
            	on  a.companyID = b.companyID
            	and a.viewID = b.viewID
            left outer join F_MenuConstructDetail c
            	on  a.companyID = c.companyID
            	and a.pgmID = c.pgmID
        where
			a.companyID = #companyID#
        and c.mnuConstructID = #mnuConstructID#
        and c.mnuGrpID = #mnuGrpID#
        and c.pgmID = #pgmID#
        and c.useYN = 'Y'
        <isNotEmpty prepend="AND" property="viewID">
            b.viewID = #viewID#
        </isNotEmpty>
        <isEmpty prepend="AND" property="viewID">
            a.introYN = 'Y'
        </isEmpty>
    </select>
    
    <!-- 권한별 기능 조회 -->
    <select id="SYS0012S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  
        	b.funcCode as "funcCode", 
            getLangDesc(#companyID#,#languageCD#, 'F_FUNCTION', b.funcID, NULL, NULL) as "funcName", 
            a.seq as "seq", 
            b.icon as "icon",
            NVL(a.pfuncCode,'') as "pfuncCode", 
            SUBSTR(TO_CHAR(a.seq),1,1) as "p", 
            SUBSTR(TO_CHAR(a.seq),2,1) as "r",
            a.command as "command"
        from
			F_ViewFunction a
            inner join F_Function b
            	on  a.companyID = b.companyID
            	and a.funcID = b.funcID
        where   
        	a.companyID = #companyID#
        and a.viewID = #viewID#
        and a.funcID not in
            (
            select  funcID
        <isEqual prepend="" property="authType" compareValue="GROUP">
                from    F_GroupAuth
                where   grpID = #grpID#
        </isEqual>
        <isNotEqual prepend="" property="authType" compareValue="GROUP">
                from    F_UserAuth
                where   userID = #userID#
        </isNotEqual>
        	    and     companyID = #companyID#
                and     mnuConstructID = #mnuConstructID#
                and     mnuGrpID = #mnuGrpID#
                and     pgmID = #pgmID#
                and     viewID = #viewID#
                )
        order by
                a.seq
    </select>
    
    <!-- 권한별 메뉴리스트 -->
    <select id="SYS0013S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">        
        select  
            a.viewID as "viewID"
            <!-- 
            , a.pgmID as "pgmID" 
            , getLangDesc(#companyID#,#languageCD#, 'F_VIEW', a.viewID, NULL, NULL) as "viewName",
             -->
        from
			F_ProgramView a
            right outer join F_View b
            	on  a.companyID = b.companyID
            	and a.viewID = b.viewID
            left outer join F_MenuConstructDetail c
            	on  a.companyID = c.companyID
            	and a.pgmID = c.pgmID
        where
			a.companyID = #companyID#
	        and c.mnuConstructID = #mnuConstructID#
	        and c.mnuGrpID = #mnuGrpID#
	        and c.pgmID = #pgmID#
	        and c.useYN = 'Y'
    </select>
    
    <!-- SMS 테이블 입력 -->
    <insert id="system.sms.insert" parameterClass="kr.co.nis.waf.system.biz.model.SmsSend">
   		<isEqual property="companyID" compareValue="000001">
		insert into uds_msg@babymeal_link (
	        MSG_TYPE, CMID, REQUEST_TIME, SEND_TIME,
	        DEST_PHONE, SEND_PHONE, MSG_BODY   
	    ) values (
			0, TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'), SYSDATE, 
			<isEqual property="schedule_type" compareValue="0">
				SYSDATE,
			</isEqual>
			<isEqual property="schedule_type" compareValue="1">
				TO_DATE(#send_date#,'YYYYMMDDHH24MISS'),
			</isEqual> 
			#dest_info#, #callback#, #sms_msg#   
	    )
   		</isEqual>
   		<isEqual property="companyID" compareValue="000002">
		insert into sms (
	        CLIENT, CAMPAIGN_ID, MEMBER_SEQ, MEMBER_NAME, MSG,
	        DESTEL1, DESTEL2, DESTEL3, SRCTEL1, SRCTEL2, SRCTEL3, RESERVETIME, SENDRESULT
	    ) values (
			'3', TO_CHAR(SYSDATE, 'yyyymmdd'), SMS_SEQ.NEXTVAL, #dest_info#, #sms_msg#,
			#desTel1#, #desTel2#, #desTel3#, #srcTel1#, #srcTel2#, #srcTel3#,
			<isEqual property="schedule_type" compareValue="0">
				to_char(SYSDATE,'yyyy-mm-dd hh24:mi:ss'),
			</isEqual>
			<isEqual property="schedule_type" compareValue="1">
				to_char(TO_DATE(#send_date#,'YYYYMMDDHH24MISS'),'yyyy-mm-dd hh24:mi:ss'),
			</isEqual> 
			'00000'   
	    )
   		</isEqual>
	</insert>
    
    <!-- 공유대상자 찾기: 공유대상자 목록 조회 -->
    <select id="COM0100201S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
    	select
    		'' as "porgID", 
		    'ROOT' as "orgID", 
		    'Organization' as "orgName", 
		    #companyID# as "companyID", 
		    '' as "partnerID", 
		    '' as "checkYN", 
		    '' as "class"
		from
			dual
		<!--판매조직-->
        union all
	    select
	        'ROOT' as "porgID",
	        salOrgCD as "orgID",
	        salOrgNm||' ['||salOrgCD||']' as "orgName",
	        #companyID# as "companyID",
	        salOrgCD as "partnerID",
	        'Y' as "checkYN",
	        'H' as "class"   
	    from
	        GDPT01MT
	    where
	        agncStatCD = '10'
	    <!--Office (HQ, BR)-->
        union all
	    select
	        salOrgCD as "porgID",
	        'O'||salOrgCD as "orgID",
	        'Office' as "orgName",
	        #companyID# as "companyID",
	        'O' as "partnerID",
	        'Y' as "checkYN",
	        'O' as "class"   
	    from
	        GDPT01MT
	    where
	        agncStatCD = '10'
	    <!--Office 법인 사용자-->    
	    union all     
	    select
	        'O'||salOrgCD as "porgID",
	        'E'||empID as "orgID",
	        firstNm||' ['||empID||']' as "orgName",
	        #companyID# as "companyID",
	        empID as "partnerID",
	        'Y' as "checkYN",
	        'U' as "class"  
	    from
	        GEMP01MT   
	    where
	        workStatCD = '1108001'
	    and prtnrTp = '1105001'
	    <!--Office 지사-->    
	    union all
	    select
	        'O'||salOrgCD as "porgID",
	        'O'||salOffCD as "orgID",
	        salOffNm||' ['||salOffCD||']' as "orgName",
	        #companyID# as "companyID",
	        salOffCD as "partnerID",
	        'Y' as "checkYN",
	        'B' as "class"
	    from
	        GDPT02MT    
	    where
	        agncStatCD = '10'
	    <!--Office 지사 사용자-->    
	    union all     
	    select
	        'O'||salOffCD as "porgID",
	        'E'||empID as "orgID",
	        firstNm||' ['||empID||']' as "orgName",
	        #companyID# as "companyID",
	        empID as "partnerID",
	        'Y' as "checkYN",
	        'U' as "class"  
	    from
	        GEMP01MT   
	    where
	        workStatCD = '1108001'
	    and prtnrTp = '1105002'
	    <!--매장 (AC)-->
        union all
	    select
	        salOrgCD as "porgID",
	        'T'||salOrgCD as "orgID",
	        'Store' as "orgName",
	        #companyID# as "companyID",
	        'T' as "partnerID",
	        'Y' as "checkYN",
	        'T' as "class"   
	    from
	        GDPT01MT
	    where
	        agncStatCD = '10'
	    <!--지사-->    
	    union all
	    select
	        'T'||salOrgCD as "porgID",
	        'T'||salOffCD as "orgID",
	        salOffNm||' ['||salOffCD||']' as "orgName",
	        #companyID# as "companyID",
	        salOffCD as "partnerID",
	        'Y' as "checkYN",
	        'S' as "class"
	    from
	        GDPT02MT    
	    where
	        agncStatCD = '10'  
	    <!--매장-->    
	    union all            
	    select
	        'T'||salOffCD as "porgID",
	        prtnrID as "orgID",
	        prtnrNm||' ['||prtnrID||']' as "orgName",
	        #companyID# as "companyID",
	        prtnrID as "partnerID",
	        'Y' as "checkYN",
	        'A' as "class"  
	    from
	        GPRT01MT
	    where
	        agncStatCD = '10'
        
        <!-- 기존쿼리
        ROOT -
		select  t1.porgID as "porgID", 
		        t1.orgID as "orgID", 
		        t1.orgName as "orgName", 
		        t1.companyID as "companyID", 
		        NVL(t1.partnerID,'') as "partnerID", 
		        '' as "checkYN", 
		        '' as "class"
		from    F_Organization t1
		where   t1.companyID = #companyID#
		and     t1.activeFlg = 'U'
		and     t1.orgClassCD is null
		union all
		- Company -
		select  t1.porgID, t1.orgID, t1.orgName, t1.companyID, NVL(t1.partnerID,''), 'Y', 'H'
		from    F_Organization t1
		where   t1.companyID = #companyID#
		and     t1.activeFlg = 'U'
		and     t1.orgClassCD = 'HQ'
		union all
		- Team Group -
		select  t1.orgID, 'T'||t1.orgID, 'Team ['||t1.orgName||']', t1.companyID, NVL(t1.partnerID,''), 'Y', 'TA'
		from    F_Organization t1
		where   t1.companyID = #companyID#
		and     t1.activeFlg = 'U'
		and     t1.orgClassCD = 'HQ'
		union all
		- Agency Group -
		select  t1.orgID, 'A'||t1.partnerID, 'Agency ['||t1.orgName||']', t1.companyID, NVL(t1.partnerID,''), 'Y', 'AA'
		from    F_Organization t1
		where   t1.companyID = #companyID#
		and     t1.activeFlg = 'U'
		and     t1.orgClassCD = 'HQ'
		union all
		- Team -
		select  'T'||t1.porgID, 'T'||t1.orgID, t1.orgName, t1.companyID, NVL(t1.orgID,''), 'Y', 'T'
		from    F_Organization t1
		where   t1.companyID = #companyID#
		and     t1.activeFlg = 'U'
		and     t1.orgClassCD = 'TEAM'
		union all
		- Agency -
		select  'A'||t2.rpartnerID, 'A'||t1.partnerID, t1.partnerName, t1.companyID, NVL(t1.partnerID,''), 'Y', 'A'
		from    P_Partner t1
		        inner join P_Relation t2
		            on  t1.companyID = t2.companyID
		            and t1.partnerID = t2.partnerID
		where   t1.companyID = #companyID#
		and     t1.activeFlg = 'U'
		and     t1.partnerDivCD = 'AC'
		and     t1.closeYN = 'N'
		union all
		- User -
		select  case when t2.empID != '' then 'T'||t2.orgID else 'A'||t2.partnerID end, t1.userID, t1.userName, t2.companyID, NVL(t1.userID,''), 'Y', 'U'
		from    F_User t1
		        inner join F_User_X_Package t2
		            on  t1.companyID = t2.companyID
		            and t1.userID = t2.userID
		        inner join F_Organization t3
		            on  t2.companyID = t3.companyID
		            and t2.orgID = t3.orgID
		where   t1.companyID = #companyID#
		and     t1.activeFlg = 'U'
		-->
    </select>
    
    <!-- 기능관리: 기능목록 조회 -->
    <select id="CMP0100101S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select
			funcID as "funcID",
            funcCode as "funcCode", 
            funcName as "funcName", 
            seq as "seq",
            icon as "icon",
            getLangDesc(#companyID#,#languageCD#, 'F_CODE', 'USETYPE2CD', standardYN, NULL) as "standardYNDesc", 
            remark as "remark",
            standardYN as "standardYN",
            command as "command"
        from
			F_Function
        where
			companyID = #companyID#
        and (funcCode like '%'||NVL(#searchWord#,'')||'%' or funcName like '%'||NVL(#searchWord#,'')||'%')
        order by
            funcCode
    </select>
    
    <select id="CMP0100101ST" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select
        	*
        from
			(
        	select
				page.*, rownum as "rn"
        	from
				(    
		        select
					funcID as "funcID",
		            funcCode as "funcCode", 
	                funcName as "funcName", 
	                seq as "seq",
	                icon as "icon",
	                getLangDesc(#companyID#,#languageCD#, 'F_CODE', 'USETYPE2CD', standardYN, NULL) as "standardYNDesc", 
	                remark as "remark",
	                standardYN as "standardYN",
	                command as "command"
		        from    F_Function,
		        		(select level  from dual connect by level <![CDATA[<=]]> 100) test
		        where   companyID = #companyID#
		        and     (funcCode like '%'||NVL(#searchWord#,'')||'%' or funcName like '%'||NVL(#searchWord#,'')||'%')
		        order by
		                funcCode
                ) page
			where
        		rownum <![CDATA[<= ]]> #max_record#
        	)
        where
        	rn <![CDATA[ >= ]]> #min_record#
    </select>
    
    <!-- 기능관리: 기능코드 중복체크 조회 -->
    <select id="CMP0100102S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  count(*) as "count"
        from    F_Function
        where   companyID = #companyID#
        and     funcCode = #funcCode#
    </select>
    
    <!-- 기능관리: 기능 추가 -->
    <insert id="CMP0100103I" parameterClass="kr.co.nis.waf.system.cms.model.Function">
        insert into F_Function (
            companyID, funcID, funcCode, funcName, seq, icon, standardYN, command, remark
        ) values (
            #companyID#, #funcID#, #funcCode#, #funcName#, #seq#, #icon#, #standardYN#, #command#, #remark#
        )
    </insert>
    
    <!-- 기능관리: 기능 수정 -->
    <update id="CMP0100104U" parameterClass="kr.co.nis.waf.system.cms.model.Function">
        update  F_Function
        set     funcName = #funcName#,
                seq = #seq#,
                icon = #icon#,
                standardYN = #standardYN#,
                command = #command#,
                remark = #remark#
        where   companyID = #companyID#
        and     funcID = #funcID#
    </update>
    
    <!-- 기능관리: 기능 삭제 -->
    <delete id="CMP0100105D" parameterClass="kr.co.nis.waf.system.cms.model.Function">
        delete from F_Function
        where  companyID = #companyID#
        and    funcID = #funcID#
    </delete>
    
    <!-- 뷰관리: 뷰 등록여부 조회 -->
    <select id="CMP0100201S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  count(*) as "count"
        from    F_View
        where   companyID = #companyID#
        and     viewID = #viewID#
    </select>
    
    <select id="CMP0100202S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  funcID as "funcID", 
                funcCode as "funcCode", 
                funcName as "funcName", 
                seq as "seq", 
                command as "command"
        from    F_Function
        where   companyID = #companyID#
        and     standardYN = 'N'
        order by
                seq
    </select>
    
    <select id="CMP0100203S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">    
        select  funcID as "funcID", 
                funcCode as "funcCode", 
                funcName as "funcName", 
                seq as "seq", 
                '' as "pfuncCode", 
                command as "command"
        from    F_Function
        where   companyID = #companyID#
        and     standardYN = 'Y'
        order by
                seq, funcName
    </select>
    
    <!-- 뷰관리: 뷰 목록 조회 -->
    <select id="CMP0100204S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  viewID as "viewID", 
                viewName as "viewName", 
                viewURL as "viewURL", 
                remark as "remark", 
                getLangDesc(#companyID#,#languageCD#, 'F_CODE', 'USETYPE1CD', useYN, NULL) as "useYNDesc",
                useYN as "useYN",
                appPositionCD as "appPositionCD",
                appDisRate as "appDisRate",
                appDisUnitCD as "appDisUnitCD"
        from    F_View
        where   companyID = #companyID#
        and     (viewID like '%'||NVL(#searchWord#,'')||'%' or viewName like '%'||NVL(#searchWord#,'')||'%')
        order by
                viewID
    </select>
    
    <!-- 뷰관리: 뷰 비할당 기능목록 조회 -->
    <select id="CMP0100205S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">    
        select  funcID as "funcID", 
                funcCode as "funcCode", 
                funcName as "funcName", 
                seq as "seq",
                command as "command"
        from    F_Function
        where   companyID = #companyID#
        and     funcID not in (select funcID from F_ViewFunction where companyID = #companyID# and viewID = #viewID#)
        order by
                seq
    </select>
    
    <!-- 뷰관리: 뷰 할당 기능목록 조회 -->
    <select id="CMP0100206S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  a.funcID as "funcID", 
                a.funcCode as "funcCode", 
                a.funcName as "funcName", 
                b.seq as "seq",
                b.pfuncCode as "pfuncCode",
                b.command as "command"
        from    F_Function a
        		inner join F_ViewFunction b
        			on  a.companyID = b.companyID
        			and a.funcID = b.funcID
        where   a.companyID = #companyID#
        and     b.viewID = #viewID#
        order by
                b.seq
    </select>
    
    <!-- 뷰관리: 뷰 추가 -->
    <insert id="CMP0100207I" parameterClass="kr.co.nis.waf.system.cms.model.View">
        insert into F_View (
            companyID, viewID, viewURL, viewName, remark, useYN, appPositionCD, appDisRate, appDisUnitCD, regID, regDate
        ) values (
            #companyID#, #viewID#, #viewURL#, #viewName#, #remark#, #useYN#, #appPositionCD#, #appDisRate#, #appDisUnitCD#, #userID#, SYSDATE
        )
    </insert>
    
    <!-- 뷰관리: 뷰 할당 기능 추가 -->
    <insert id="CMP0100208I" parameterClass="kr.co.nis.waf.system.cms.model.ViewFunction">
        insert into F_ViewFunction(
            companyID, viewID, funcID, seq, pfuncCode, command
        ) values (
            #companyID#, #viewID#, #funcID#, #seq#, #pfuncCode#, #command#
        )
    </insert>
    
    <!-- 뷰관리: 뷰 수정 -->
    <update id="CMP0100209U" parameterClass="kr.co.nis.waf.system.cms.model.View">
        update  F_View
        set     viewURL = #viewURL#,
                viewName = #viewName#,
                useYN = #useYN#,
                remark = #remark#,
                appPositionCD = #appPositionCD#,
                appDisRate = #appDisRate#,
                appDisUnitCD = #appDisUnitCD#,
                chgDate = SYSDATE,
                chgID = #userID#
        where   companyID = #companyID#
        and     viewID = #viewID#
    </update>
    
    <!-- 뷰관리: 뷰 할당 기능 삭제 -->
    <delete id="CMP0100210D" parameterClass="kr.co.nis.waf.system.cms.model.View">
        delete from F_ViewFunction
        where companyID = #companyID#
        and   viewID = #viewID#
    </delete>
    
    <!-- 뷰관리: 뷰 삭제 -->    
    <delete id="CMP0100211D" parameterClass="kr.co.nis.waf.system.cms.model.View">
        delete from F_View
        where companyID = #companyID#
        and   viewID = #viewID#
    </delete>
    
    <!-- 코드관리: 코드목록 조회 -->
    <select id="CMP0100301S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select
        	codeDiv as "codeDiv",
            comCode as "comCode", 
            codeName as "codeName", 
            codeDesc as "codeDesc", 
            seq as "seq", 
            remark as "remark", 
            useYN as "useYN",
            attrib01 as "attrib01", 
            attrib02 as "attrib02", 
            attrib03 as "attrib03", 
            attrib04 as "attrib04", 
            attrib05 as "attrib05", 
            attrib06 as "attrib06",
            attrib07 as "attrib07", 
            attrib08 as "attrib08", 
            attrib09 as "attrib09", 
            attrib10 as "attrib10", 
            attrib11 as "attrib11", 
            attrib12 as "attrib12"
        from
			F_Code
        where 1=1
<!--         <isEqual property="codeAll" compareValue="N"> -->
			and codeDiv = #codeDiv#
<!--         </isEqual> -->
        <isNotPropertyAvailable property="useYN">
        	and useYN = 'Y'
        </isNotPropertyAvailable>
        and activeFlg = 'U'
        <isPropertyAvailable property="codeName">
            <isNotEmpty prepend="and" property="codeName">
                  (codeName like '%'||NVL(#codeName#,'') || '%' or comCode like '%'||NVL(#codeName#,'') || '%')
            </isNotEmpty>
        </isPropertyAvailable>
        order by
        	seq,
        	codeName
    </select>
    
    <!-- 코드관리: 코드중복체크 조회 -->
    <select id="CMP0100302S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  case when count(*) = 0 then 'NOTEXIST' else 'EXIST' end as "comCode"
        from    F_Code
        where   codeDiv = #codeDiv#
        and 	comCode = #comCode#
        and activeFlg='U'
    </select>
    
    <select id="CMP0100303S" parameterClass="kr.co.nis.waf.system.biz.model.Code" resultClass="java.lang.Integer">
        select  count(*)
        from    F_Code
        where   codeDiv = #codeDiv#
        and 	comCode = #comCode#
    </select>
    
    <!-- 코드관리: 코드 추가 -->
    <insert id="CMP0100303I" parameterClass="kr.co.nis.waf.system.biz.model.Code">
        insert into F_Code
            (codeDiv, comCode, codeName, codeDesc, seq, remark, useYN,
            attrib01, attrib02, attrib03, attrib04, attrib05, attrib06,
            attrib07, attrib08, attrib09, attrib10, attrib11, attrib12, activeFlg)
        values
            (#codeDiv#, #comCode#, #codeName#, #codeDesc#, #seq#, #remark#, #useYN#,
            #attrib01#, #attrib02#, #attrib03#, #attrib04#, #attrib05#, #attrib06#,
            #attrib07#, #attrib08#, #attrib09#, #attrib10#, #attrib11#, #attrib12#, #activeFlg#)
    </insert>
    
    <!-- 코드관리: 코드 수정 -->        
    <update id="CMP0100304U" parameterClass="kr.co.nis.waf.system.biz.model.Code">
        update  F_Code
        set     
        	comCode = #comCode#,
        	codeName = #codeName#,
                codeDesc = #codeDesc#,
                seq = #seq#,
                remark = #remark#,
                useYN = #useYN#,
                attrib01 = #attrib01#,
                attrib02 = #attrib02#,
                attrib03 = #attrib03#,
                attrib04 = #attrib04#,
                attrib05 = #attrib05#,
                attrib06 = #attrib06#,
                attrib07 = #attrib07#,
                attrib08 = #attrib08#,
                attrib09 = #attrib09#,
                attrib10 = #attrib10#,
                attrib11 = #attrib11#,
                attrib12 = #attrib12#
                , activeFlg = 'U'
        where   comCode = #orgComCode#
        and     codeDiv = #codeDiv#
    </update>
    
    <!-- 코드관리: 코드 삭제 -->
    <update id="CMP0100305U" parameterClass="kr.co.nis.waf.system.biz.model.Code">
        update F_Code 
        set    activeFlg = #activeFlg# 
        where  comCode = #comCode# 
        and    codeDiv = #codeDiv#
    </update>
    
    <!-- 코드관리: 코드상세 조회 -->
    <select id="CMP0100306S" parameterClass="kr.co.nis.waf.system.biz.model.Code" resultClass="java.util.LinkedHashMap">
        select
        	codeDiv as "codeDiv",
            case when codeDiv = 'ROOT' then 'ROOT' else getLangDesc(#companyID#,#languageCD#, 'F_CODE', 'ROOT', codeDiv, NULL) end as "codeDivName",
            comCode as "comCode", 
            codeName as "codeName", 
            codeDesc as "codeDesc", 
            seq as "seq", 
            remark as "remark", 
            useYN as "useYN",
            attrib01 as "attrib01", 
            attrib02 as "attrib02", 
            attrib03 as "attrib03", 
            attrib04 as "attrib04", 
            attrib05 as "attrib05", 
            attrib06 as "attrib06",
            attrib07 as "attrib07", 
            attrib08 as "attrib08", 
            attrib09 as "attrib09", 
            attrib10 as "attrib10", 
            attrib11 as "attrib11", 
            attrib12 as "attrib12"
        from
        	F_Code
        where
			comCode = #comCode#
        and codeDiv = #codeDiv#
    </select>
    
    <!-- 코드관리: 코드구분 조회 -->
    <select id="CMP0100307S" parameterClass="kr.co.nis.waf.system.biz.model.Code" resultClass="java.util.LinkedHashMap">
        select
			case when #codeDiv# = 'ROOT' then 'ROOT' else TO_CHAR(codeName) end as "codeDivName"
        from
			F_Code
        where
			codeDiv = 'ROOT'
        and comCode = #codeDiv#
        and ROWNUM = 1
    </select>
    
    <!-- 코드관리: 코드 Tree 조회 -->
    <select id="CMP0100308S" parameterClass="kr.co.nis.waf.system.biz.model.Code" resultClass="java.util.LinkedHashMap">
        select
        	z.comCode as "comCode",
            z.codeDiv as "codeDiv",
            z.codeName as "codeName",
            case z.codeDiv when 'ROOT' then 1
                    else 2 end as "levelCnt",
            case z.codeDiv when 'ROOT' then 'Y'
                     else 'N' end as "selectYN"
        from
			(
            select
            	comCode, 
            	codeDiv, 
            	codeName, 
            	seq
            from    
            	F_Code
            where   
            	useYN = 'Y'
            and activeFlg = 'U'
            ) z
        where
        	z.codeDiv = #codeDiv#
        order by
            z.codeName
    </select>
    
    <!-- 조직관리: 조직 조회 -->
    <select id="CMP0100401S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  t1.orgCD as "orgCD",
                t1.orgName as "orgName",
                t1.seq as "seq",
                t1.remark as "remark",
                t1.orgID as "orgID",
                t1.porgID as "porgID",
                t1.activeFlg as "activeFlg",
                (
                select  orgName
                from    F_Organization s1
                where   s1.companyID = t1.companyID
                and     s1.orgID = t1.porgID
                ) as "porgName",
                t1.orgClassCD as "orgClassCD",
                getLangDesc(#companyID#,#languageCD#, 'F_CODE', 'ORGCLASSCD', t1.orgClassCD, NULL) as "orgClassName",
                t1.partnerID as "partnerID",
                t2.partnerName as "partnerName",
                t1.companyID as "companyID"
        from    F_Organization t1
                   left outer join P_Partner t2
                       on  t1.companyID = t2.companyID
                       and t1.partnerID = t2.partnerID
        where  t1.companyID = #companyID# 
        and    t1.porgID like #porgID#||'%'
        and    t1.activeFlg = 'U'
        order by
                t1.porgID, t1.seq
    </select>
    
    <!-- 조직관리: 조직연결 파트너 조회 -->
    <select id="CMP0100402S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  t1.partnerID as "partnerID",
                t1.partnerName||' ['||t1.partnerCD||']' as "partnerName",
                t1.companyID as "companyID"
        from    P_Partner t1
        where   t1.companyID = #companyID#
        and     t1.partnerDivCD = #partnerDivCD#
        and     t1.activeFlg = 'U'
        order by
                t1.partnerName
    </select>
    
    <!-- 프로그램 관리: 프로그램 중복검사 조회 -->
    <select id="CMP0100601S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
	    select  count(*) as "count"
	    from    F_Program
	    where   companyID = #companyID#
	    and     pgmID = #pgmIDs#
    </select>
    
    <!-- 프로그램 관리: 프로그램 목록 조회 -->
    <select id="CMP0100602S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  pgmID as "pgmID", 
                pgmName as "pgmName", 
                pgmURL as "pgmURL", 
                remark as "remark",
                openWindowYN as "openWindowYN"
        from    F_Program
        where   companyID = #companyID#
        and     useYN = 'Y'
        and     (pgmID like '%'||NVL(#searchWord#,'')||'%' or pgmName like '%'||NVL(#searchWord#,'') || '%')
        order by
                pgmID
    </select>
    
    <!-- 프로그램 관리: 비적용 뷰목록 조회 -->
    <select id="CMP0100603S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  viewID as "viewID", 
                viewName as "viewName"
        from    F_View
        where   companyID = #companyID#
        and     viewID not in (select viewID from F_ProgramView where companyID = #companyID# and pgmID = #pgmIDs#)
        order by
                viewID
    </select>
    
    <!-- 프로그램 관리: 적용 뷰목록 조회 -->
    <select id="CMP0100604S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  b.viewID as "viewID", 
                b.viewName as "viewName", 
                a.introYN as "introYN", 
                a.viewTitle as "viewTitle"
        from    F_ProgramView a
        		inner join F_View b
        			on  a.companyID = b.companyID
        			and a.viewID = b.viewID
        where   a.companyID = #companyID#
        and     a.pgmID = #pgmIDs#
        and     b.useYN = 'Y'
        order by
                b.viewID
    </select>
    
    <select id="CMP0100605S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  b.viewID as "viewID", 
                b.viewName as "viewName", 
                a.introYN as "introYN", 
                a.viewTitle as "viewTitle"
        from    F_ProgramView a
        		inner join F_View b
        			on  a.companyID = b.companyID
        			and a.viewID = b.viewID
        where   a.companyID = #companyID#
        and     a.pgmID = #pgmIDs#
        and     b.useYN = 'Y'
        order by
                b.viewID
    </select>
    
    <!-- 프로그램 관리: 프로그램 추가 -->
    <insert id="CMP0100605I" parameterClass="kr.co.nis.waf.system.cms.model.Program">
        insert into F_Program (
            companyID, pgmID, pgmName, pgmURL, remark, useYN, openWindowYN, regID
        ) values (
            #companyID#, #pgmIDs#, #pgmName#, #pgmURL#, #remark#, #useYN#, #openWindowYN#, #userID#
        )
    </insert>
    
    <!-- 프로그램 관리: 프로그램 적용뷰 추가 -->
    <insert id="CMP0100606I" parameterClass="kr.co.nis.waf.system.cms.model.ProgramView">    
        insert into F_ProgramView (
            companyID, pgmID, viewID, introYN, viewTitle
         ) values (
            #companyID#, #pgmIDs#, #viewID#, #introYN#, #viewTitle#
         )
    </insert>
    
    <!-- 프로그램 관리: 프로그램 수정 -->
    <update id="CMP0100607U" parameterClass="kr.co.nis.waf.system.cms.model.Program">
        update  F_Program
        set     pgmName = #pgmName#,
                pgmURL = #pgmURL#,
                remark = #remark#,
                openWindowYN = #openWindowYN#,
                chgDate = SYSDATE,
                chgID = #userID#
        where   companyID = #companyID#
        and     pgmID = #pgmIDs#
    </update>
    
    <!-- 프로그램 관리: 프로그램 적용뷰 전체삭제 -->
    <delete id="CMP0100608D" parameterClass="kr.co.nis.waf.system.cms.model.Program">
        delete from F_ProgramView
        where companyID = #companyID#
        and   pgmID = #pgmIDs#
    </delete>
    
    <!-- 프로그램 관리: 프로그램 삭제 -->
    <delete id="CMP0100609D" parameterClass="kr.co.nis.waf.system.cms.model.Program">
        delete from F_Program
        where companyID = #companyID#
        and   pgmID = #pgmIDs#
    </delete>
    
    <!-- 메뉴관리: 메뉴구조도 조회 -->
    <select id="CMP0100701S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  mnuConstructID as "mnuConstructID", 
                mnuConstructName as "mnuConstructName", 
                getLangDesc(#companyID#,#languageCD#, 'F_CODE', 'USETYPE1CD', useYN, NULL) as "useYN", 
                remark as "remark"
        from    F_MenuConstruct
        where   companyID = #companyID#
        and     useYN = 'Y'
        order by
                mnuConstructName
    </select>
    
    <!-- 메뉴관리: 메뉴그룹 조회 -->
    <select id="CMP0100702S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select   mnuGrpID as "mnuGrpID", 
                 mnuGrpName as "mnuGrpName", 
                 seq as "seq", 
                 pmnuGrpID as "pmnuGrpID", 
                 URL as "URL",
                 getLangDesc(#companyID#,#languageCD#, 'F_CODE', 'USETYPE1CD', useYN, NULL) as "useYN",
                 getLangDesc(#companyID#,#languageCD#, 'F_CODE', 'USETYPE2CD', displayYN, NULL) as "displayYN"
        from     F_MenuConstructGroup
        where    companyID = #companyID#
        and      mnuConstructID = #mnuConstructID#
        and      pmnuGrpID = #pmnuGrpID#
        order by
                 mnuConstructID, seq
    </select>
    
    <!-- 메뉴관리: 메뉴구조도 목록 조회 -->
    <select id="CMP0100703S" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct" resultClass="java.util.LinkedHashMap">
        select  mnuConstructID as "mnuConstructID", 
                mnuConstructName as "mnuConstructName", 
                getLangDesc(#companyID#,#languageCD#, 'F_CODE', 'USETYPE1CD', useYN, NULL) as "useYN", 
                remark as "remark"
        from    F_MenuConstruct
        where   companyID = #companyID#
        and     useYN = 'Y'
    </select>
    
    <!-- 메뉴관리: 메뉴그룹 By Model 조회 -->
    <select id="CMP0100704S" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct" resultClass="java.util.LinkedHashMap">
        select  mnuGrpID as "mnuGrpID", 
                mnuGrpName as "mnuGrpName", 
                seq as "seq", 
                pmnuGrpID as "pmnuGrpID", 
                URL as "URL",
                getLangDesc(#companyID#,#languageCD#, 'F_CODE', 'USETYPE1CD', useYN, NULL) as "useYN",
                getLangDesc(#companyID#,#languageCD#, 'F_CODE', 'USETYPE2CD', displayYN, NULL) as "displayYN"
        from    F_MenuConstructGroup
        where   companyID = #companyID#
        and     mnuConstructID = #mnuConstructID#
        and     pMnuGrpID = #pmnuGrpID#
        order by
                mnuConstructID, seq
    </select>
    
    <!-- 메뉴관리: 메뉴구조도 상세 조회 -->
    <select id="CMP0100705S" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct" resultClass="java.util.LinkedHashMap">
        select  mnuConstructID as "mnuConstructID", 
                mnuConstructName as "mnuConstructName", 
                useYN as "useYN", 
                remark as "remark"
        from    F_MenuConstruct
        where   companyID = #companyID#
        and     mnuConstructID = #mnuConstructID#
    </select>
    
    <!-- 메뉴관리: 메뉴그룹 상세 조회 -->
    <select id="CMP0100706S" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct" resultClass="java.util.LinkedHashMap">    
        select  
        	a.mnuGrpID as "mnuGrpID2",
            a.mnuGrpName as "mnuGrpName", 
            a.seq as "seq", 
            a.useYN as "useYN",
            a.displayYN as "displayYN", 
            a.url as "url",
            a.mnuConstructID as "mnuConstructID",
            (
            select  s1.mnuConstructName
            from    F_MenuConstruct s1
            where s1.companyID = a.companyID  
            and   s1.mnuConstructID = a.mnuConstructID
            ) as "mnuConstructName",
            a.pmnuGrpID as "pmnuGrpID",
            NVL((
            select  s2.mnuGrpName
            from    F_MenuConstructGroup s2
            where   s2.companyID = a.companyID
            and     s2.mnuConstructID = a.mnuConstructID
            and     s2.mnuGrpID = a.pmnuGrpID
            ), 'ROOT') as "pmnuGrpName"
        from
			F_MenuConstructGroup a
        where
			a.companyID = #companyID#
        and a.mnuConstructID = #mnuConstructID#
        and a.mnuGrpID = #mnuGrpID#
    </select>
    
    <!-- 메뉴관리: 메뉴구조 트리 조회 -->
    <select id="CMP0100707S" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct" resultClass="java.util.LinkedHashMap">
        select  mnuConstructID as "mnuConstructID", 
                mnuConstructName as "mnuConstructName", 
                mnuConstructID as "code",
                mnuConstructName as "name", 
                'ROOT' as "pcode",  
                '' as "mnuGrpID", 
                0 as "seq"
        from    F_MenuConstruct
        where   companyID = #companyID#
        and     useYN = 'Y'
        and     mnuConstructID like #mnuConstructID#||'%'
        union all
        select  a.mnuConstructID,
        		b.mnuConstructName,
                a.mnuConstructID||a.mnuGrpID as code,
                a.mnuGrpName as name,
                case when a.pmnuGrpID = 'ROOT' then 
                		a.mnuConstructID
                	else a.mnuConstructID||a.pmnuGrpID
                end as pcode,
                a.mnuGrpID,
                a.seq
        from    F_MenuConstructGroup a
        		inner join F_MenuConstruct b
        			on  a.companyID = b.companyID
        			and a.mnuConstructID = b.mnuConstructID
        where   a.companyID = #companyID#
        and     a.mnuConstructID like #mnuConstructID#||'%'
        and     a.useYN = 'Y'
        order by 
        	"seq"
    </select>
    
    <select id="CMP0100708S" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct" resultClass="java.util.LinkedHashMap">
        select  mnuConstructID as "mnuConstructID", 
                mnuConstructName as "mnuConstructName", 
                mnuConstructID as "code",
                mnuConstructName as "name", 
                'ROOT' as "pcode",  
                '' as "mnuGrpID", 
                0 as "seq"
        from    F_MenuConstruct
        where   companyID = #companyID#
        and     useYN = 'Y'
        and     mnuConstructID like #mnuConstructID#||'%'
        union all
        select  a.mnuConstructID,
        		b.mnuConstructName,
                a.mnuConstructID||a.mnuGrpID as code,
                a.mnuGrpName as name,
                case when a.pmnuGrpID = 'ROOT' then 
                		a.mnuConstructID
                	else a.mnuConstructID||a.pmnuGrpID
                end as pcode,
                a.mnuGrpID,
                a.seq
        from    F_MenuConstructGroup a
        		inner join F_MenuConstruct b
        			on  a.companyID = b.companyID
        			and a.mnuConstructID = b.mnuConstructID
        where   a.companyID = #companyID#
        and     a.mnuConstructID like #mnuConstructID#||'%'
        and     a.useYN = 'Y'
        order by 
        	"seq"
    </select>
    
    <!-- 메뉴관리: 메뉴구조도 추가 -->
    <insert id="CMP0100708I" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct">
        insert into F_MenuConstruct
            (companyID, mnuConstructID, mnuConstructName, useYN, remark, regDate, regID, chgDate, chgID)
        values
            (#companyID#, #mnuConstructID#, #mnuConstructName#, #useYN#, #remark#, SYSDATE, #regID#, SYSDATE, #regID#)
    </insert>
    
    <!-- 메뉴관리: 메뉴그룹 추가 -->
    <insert id="CMP0100709I" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct">
        insert into F_MenuConstructGroup
            (companyID, mnuConstructID, mnuGrpID, mnuGrpName, seq, useYN, displayYN, pmnuGrpID, URL, regDate, regID, chgDate, chgID)
        values
            (#companyID#, #mnuConstructID#, #mnuGrpID#, #mnuGrpName#, #seq#, #useYN#, #displayYN#, #pmnuGrpID#, #url#, SYSDATE, #regID#, SYSDATE, #regID#)
    </insert>
    
    <!-- 메뉴관리: 메뉴 비할당 프로그램 목록 조회 -->
    <select id="CMP0100710S" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct" resultClass="java.util.LinkedHashMap">
        select  pgmID as "pgmID", 
                pgmName as "pgmName"
        from    F_Program
        where   companyID = #companyID#
        and     pgmID not in 
                   (select pgmID 
                    from   F_MenuConstructDetail 
                    where  companyID = #companyID#
                    and    mnuGrpID = #pmnuGrpID# 
                    and    mnuConstructID = #mnuConstructID#)
        order by
                pgmID
    </select>
    
    <!-- 메뉴관리: 메뉴 할당 프로그램 목록 조회 -->
    <select id="CMP0100711S" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct" resultClass="java.util.LinkedHashMap">
        select  b.pgmID as "pgmID", 
                b.pgmName as "pgmName", 
                a.seq as "seq", 
                a.useYN as "useYN"
        from    F_MenuConstructDetail a
        		inner join F_Program b
        			on  a.companyID = b.companyID
        			and a.pgmID = b.pgmID
        where   a.companyID = #companyID#
        and     a.mnuGrpID = #pmnuGrpID#
        and     a.mnuConstructID = #mnuConstructID#
        order by
                a.seq
    </select>
    
    <!-- 메뉴관리: 메뉴구조별 메뉴그룹 조회 -->
    <select id="CMP0100712S" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct" resultClass="java.util.LinkedHashMap">
        select  z.mnuGrpID as "mnuGrpID", 
                z.mnuGrpName as "mnuGrpName", 
                z.pmnuGrpID as "pmnuGrpID", 
                z.URL as "URL", 
                z.pgmID as "pgmID", 
                z.mnuType as "mnuType"
        from    (
                select  a.mnuGrpID, a.mnuGrpName, a.pmnuGrpID, a.URL, '' as pgmID,
                        case when a.pmnuGrpID = 'ROOT' then 'ROOT'
                            else 'MENUGROUP'
                        end as mnuType, a.seq
                from    F_MenuConstructGroup a
                where   a.companyID = #companyID#
                and     a.mnuConstructID = #mnuConstructID#
                and     a.useYN = 'Y'
                and     a.displayYN = 'Y'
                union all
                select  '' as mnuGrpID, b.pgmName as mnuGrpName, mnuGrpID as pmnuGrpID, b.pgmURL, b.pgmID, 'menu', a.seq
                from    F_MenuConstructDetail a
                        inner join F_Program b
                        	on  a.companyID = b.compayID
                        	and a.pgmID = b.pgmID
                where   a.companyID = #companyID#
                and     a.mnuConstructID = #mnuConstructID#
                and     a.useYN = 'Y'
                ) z
    </select>
    
    <!-- 메뉴관리: 메뉴구조도 복사 추가 -->
    <insert id="CMP0100713I" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct">
        insert into F_MenuConstruct (
            companyID, mnuConstructID, mnuConstructName, useYN, remark, regDate, regID, chgDate, chgID
        )
        select  companyID, #copyMenuConstructID#, #mnuConstructName#, useYN, remark, SYSDATE, #userID#, SYSDATE, #userID#
        from    F_MenuConstruct
        where   companyID = #companyID#
        and     mnuConstructID = #mnuConstructID#
    </insert>
    
    <!-- 메뉴관리: 메뉴그룹 복사 추가 -->
    <insert id="CMP0100714I" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct">
        insert into F_MenuConstructGroup (
            companyID, mnuConstructID, mnuGrpID, mnuGrpName, seq, useYN, displayYN, pmnuGrpID, URL, regDate, regID, chgDate, chgID
        )
        select  companyID, #copyMenuConstructID#, mnuGrpID, mnuGrpName, seq, useYN, displayYN, pmnuGrpID, URL, SYSDATE, #userID#, SYSDATE, #userID#
        from    F_MenuConstructGroup
        where   companyID = #companyID#
        and     mnuConstructID = #mnuConstructID#
    </insert>
    
    <!-- 메뉴관리: 메뉴상세 복사 추가 -->
    <insert id="CMP0100715I" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct">
        insert into F_MenuConstructDetail (
            companyID, mnuConstructID, mnuGrpID, pgmID, seq, useYN, regDate, regID, chgDate, chgID
        )
        select  companyID, #copyMenuConstructID#,  mnuGrpID, pgmID, seq, useYN, SYSDATE, #userID#, SYSDATE, #userID#
        from    F_MenuConstructDetail
        where   companyID = #companyID#
        and     mnuConstructID = #mnuConstructID#
    </insert>
    
    <!-- 메뉴관리: 메뉴상세 삭제 -->
    <delete id="CMP0100716D" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct">
        delete from F_MenuConstructDetail
        where companyID = #companyID#
        and   mnuConstructID = #mnuConstructID#
    </delete>
    
    <!-- 메뉴관리: 메뉴그룹 전체 삭제 -->
	<delete id="CMP0100717D" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct">
        delete from F_MenuConstructGroup
        where companyID = #companyID#
        and   mnuConstructID = #mnuConstructID#
    </delete> 
    
    <!-- 메뉴관리: 메뉴구조도 삭제 -->
    <delete id="CMP0100718D" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct">
        delete from F_MenuConstruct
        where companyID = #companyID#
        and   mnuConstructID = #mnuConstructID#
    </delete>
    
    <!-- 메뉴관리: 메뉴그룹 개별 삭제 -->
    <delete id="CMP0100719D" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct">
        delete from F_MenuConstructGroup
        where companyID = #companyID#
        and   mnuConstructID = #mnuConstructID#
        and   mnuGrpID = #mnuGrpID#
    </delete>
    
    <!-- 메뉴관리: 메뉴상세 메뉴그룹별 삭제 -->
	<delete id="CMP0100720D" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct">
        delete from F_MenuConstructDetail
        where   companyID = #companyID#
        and     mnuConstructID = #mnuConstructID#
        and     mnuGrpID = #pmnuGrpID#
    </delete>
    
    <!-- 메뉴관리: 메뉴상세 추가 -->
    <insert id="CMP0100721I" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct">
        insert into F_MenuConstructDetail
            (companyID, mnuConstructID, mnuGrpID, pgmID, useYN, seq, regDate, regID, chgDate, chgID)
        values
            (#companyID#, #mnuConstructID#, #pmnuGrpID#, #pgmID#, #useYN#, #seq#, SYSDATE, #regID#, SYSDATE, #regID#)
    </insert>
    
    <!-- 메뉴관리: 최상위 메뉴그룹 조회 -->
    <select id="CMP0100722S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  z.kind as "kind",
                z.code as "code",
                z.name as "name",
                z.URL as "URL"
        from    (
                select  'G' as kind,
                        mnuGrpID as code,
                        getLangDesc(#companyID#,#languageCD#, 'F_MENUCONSTRUCTGROUP', #mnuConstructID#, mnuGrpID, NULL) as name,
                        URL,
                        seq
                from    F_MenuConstructGroup
                where   companyID = #companyID#
                and     mnuConstructID = #mnuConstructID#
                and     mnuGrpID = #mnuGrpID#
                and     useYN = 'Y'
                ) z
        order by
                z.kind,
                z.seq
    </select>
    
    <!-- 메뉴관리: 메뉴트리 구조 조회 -->
	<select id="CMP0100723S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  z.kind as "kind",
                z.code as "code",
                z.name as "name",
                z.URL as "URL",
                z.openWindowYN as "openWindowYN"
        from    (
                select  'G' as kind,
                        mnuGrpID as code,
                        getLangDesc(#companyID#,#languageCD#, 'F_MENUCONSTRUCTGROUP', #mnuConstructID#, mnuGrpID, NULL) as name,
                        URL,
                        seq,
                        '' as openWindowYN
                from    F_MenuConstructGroup
                where   companyID = #companyID#
                and     mnuConstructID = #mnuConstructID#
                and     pmnuGrpID = #mnuGrpID#
                and     useYN = 'Y'
                and     displayYN = 'Y'
                union
                select  'M' as kind,
                        a.pgmID as code,
                        getLangDesc(#companyID#,#languageCD#, 'F_PROGRAM', a.pgmID, NULL, NULL) as name,
                        b.pgmURL as URL,
                        a.seq,
                        b.openWindowYN
				<isEqual property="saasYN" compareValue="N">
				from    F_MenuConstructDetail a
	                    inner join F_Program b
	            			on  a.companyID = b.companyID
	            			and a.pgmID = b.pgmID
	            where   a.companyID = #companyID#
	            and     a.mnuConstructID = #mnuConstructID#
	            and     a.mnuGrpID = #mnuGrpID#
	            and     a.useYN = 'Y'
	            and     b.useYN = 'Y'
				</isEqual>
				<isEqual property="saasYN" compareValue="Y">
	            from    F_MenuConstructDetail a
	            		inner join F_Program b
	            			on  a.companyID = b.companyID
	            			and a.pgmID = b.pgmID
	            		inner join S_UseProgram c
	            			on  a.companyID = c.companyID
	            			and a.pgmID = c.pgmID
	            where   a.mnuConstructID = #mnuConstructID#
	            and     a.mnuGrpID = #mnuGrpID#
	            and     a.useYN = 'Y'
	            and     b.useYN = 'Y'
	            and	    c.companyID = #companyID#
	            </isEqual>                        
                ) z
        order by
                z.kind,
                z.seq
    </select>
    
    <!-- 사용자 관리: 사용자중복체크 조회 -->
    <select id="CMP0100801S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  count(*) as "count"
        from    F_User
        where   companyID = #companyID#
        and     userID = #regUserID#
    </select>
    
    <!-- 사용자 관리: 사용자 목록 조회 -->
    <select id="CMP0100802S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select
        	a.userID as "userID", 
            a.userName as "userName", 
            d.grpName as "grpName", 
            b.mnuConstructName as "mnuConstructName",
            getLangDesc(#companyID#,#languageCD#, 'F_CODE', 'USETYPE1CD', a.useYN, NULL) as "useYN", 
            a.passwd as "passwd",
            a.mnuConstructID as "mnuConstructID"
        from    
        	F_User a
            left outer join F_MenuConstruct b
            	on  a.companyID = b.companyID
            	and a.mnuConstructID = b.mnuConstructID
            left outer join F_GroupUser c
            	on  a.companyID = c.companyID
            	and a.userID = c.userID
            left outer join F_Group d
            	on  c.companyID = d.companyID
            	and c.grpID = d.grpID
            inner join F_User_X_Package e
                on  a.companyID = e.companyID
                and a.userID = e.userID
        where   
        	a.companyID = #companyID#
        and (a.userID like '%'||RTRIM(NVL(#searchWord#,''))||'%' or a.userName like '%'||RTRIM(NVL(#searchWord#,''))||'%')
        and a.activeFlg = 'U' 
        order by
            a.userName
    </select>
    
    <!-- 사용자 관리: 사용자 상세 조회 -->
    <select id="CMP0100803S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
    	select
			t1.userID as "userID", 
            t1.userName as "userName", 
            t1.passwd as "passwd", 
            t1.useYN as "useYN", 
            t1.mnuConstructID as "mnuConstructID", 
            t2.grpID as "grpID",
            t3.authLevelCD as "authLevelCD",
            t3.themeCD as "themeCD",
            t3.timezoneCD as "timezoneCD",
            t3.languageCD as "languageCD",
            t3.localeCD as "localeCD",
            t3.dateFormatCD as "dateFormatCD"
            , currentClientIp as "currentClientIp"
        from
        	F_User t1
            left outer join F_GroupUser t2
                on  t1.companyID = t2.companyID
                and t1.userID = t2.userID
            inner join F_User_X_Package t3
                on  t1.companyID = t3.companyID
                and t1.userID = t3.userID
        where 
        	t1.companyID = #companyID#
        <isPropertyAvailable property="userID_con">
        	<isNotEmpty prepend="and" property="userID_con">
        		t1.userID = #userID_con#
        	</isNotEmpty>
        </isPropertyAvailable>
        <isNotPropertyAvailable prepend="and" property="userID_con">
        	t1.userID = #userID#
        </isNotPropertyAvailable>
    	<!--  
        select
			t1.userID as "userID", 
            t1.userName as "userName", 
            t1.passwd as "passwd", 
            t1.useYN as "useYN", 
            t1.mnuConstructID as "mnuConstructID", 
            t2.grpID as "grpID",
            t3.authLevelCD as "authLevelCD",
            t3.companyID as "companyID",
            t3.partnerDivCD as "partnerDivCD",
            t3.orgID as "orgID",
            t4.orgName as "orgName",
            t3.partnerID as "partnerID",
            t5.partnerName as "partnerName",
            t3.empID as "empID",
            t6.empName as "empName",
            t3.salOrgCD as "salOrgCD",
            t3.salOffCD as "salOffCD",
            t3.prtnrID as "prtnrID",
            t7.prtnrNm as "prtnrNm",
            t8.firstNm||' '||t8.lastNm as "empNm",
            t3.themeCD as "themeCD",
            t3.timezoneCD as "timezoneCD",
            t3.languageCD as "languageCD",
            t3.currencyCD as "currencyCD",
            t3.localeCD as "localeCD",
            t1.currentClientIp as "currentClientIp",
            t4.orgCD as "orgCD",
            t5.partnerCD as "partnerCD",
            t6.empCD as "empCD"
            t3.dateFormatCD as "dateFormatCD",
            t3.amtFormatCD as "amtFormatCD"
        from
        	F_User t1
            left outer join F_GroupUser t2
                on  t1.companyID = t2.companyID
                and t1.userID = t2.userID
            inner join F_User_X_Package t3
                on  t1.companyID = t3.companyID
                and t1.userID = t3.userID
            left outer join F_Organization t4
                on  t3.companyID = t4.companyID
                and t3.orgID = t4.orgID
            left outer join P_Partner t5
                on  t3.companyID = t5.companyID
                and t3.partnerID = t5.partnerID
            left outer join P_Employee t6
                on  t3.companyID = t6.companyID
                and t3.empID = t6.empID
             
             left outer join GPRT01MT t7
                 on t3.prtnrID = t7.prtnrID
             left outer join GEMP01MT t8
                 on t3.empID = t8.empID
        where 
        	t1.companyID = #companyID#
        <isPropertyAvailable property="userID_con">
        	<isNotEmpty prepend="and" property="userID_con">
        		t1.userID = #userID_con#
        	</isNotEmpty>
        </isPropertyAvailable>
        <isNotPropertyAvailable prepend="and" property="userID_con">
        	t1.userID = #userID#
        </isNotPropertyAvailable>
        -->
    </select>
    
    <!-- 사용자 관리: 사용자 중복 체크 조회 -->
    <select id="CMP0100804S" parameterClass="kr.co.nis.waf.system.auth.model.User" resultClass="java.lang.Integer">
        select
        	count(*) as "count"
        from
			F_User
        where
			companyID = #companyID#
        and userID = #userID#
        <isNotEmpty prepend="and" property="passwd" >
				passwd = #passwd#
        </isNotEmpty>
    </select>
    
    <!-- 사용자 관리: 사용자정보 수정 -->
    <update id="CMP0100805U" parameterClass="kr.co.nis.waf.system.auth.model.User">
        update
			F_User
        set 
			userName = #userName#,
			<isNotEmpty property="passwd" >
            passwd = F_MD5_CRIPT(#passwd#),
            </isNotEmpty>
            mnuConstructID = #mnuConstructID#,
            useYN = #useYN#,
            chgDate = SYSDATE,
            chgID = #workerID#
        where
            companyID = #companyID#
        and userID = #userID#
    </update>
    
    <!-- 사용자 관리: 사용자정보 추가 -->
    <insert id="CMP0100806I" parameterClass="kr.co.nis.waf.system.auth.model.User">
        insert into F_User (
        	companyID, userID, userName, passwd, useYN, mnuConstructID, activeFlg, regDate, regID
        	, passwdErrCnt, initPasswdYn
        ) values (
        	#companyID#, #userID#, #userName#, F_MD5_CRIPT(#passwd#), #useYN#, #mnuConstructID#, #activeFlg#, SYSDATE, #workerID#
        	, 0, 'Y'
        )
    </insert>
    
    <!-- 사용자 관리: 사용자확장정보 추가 -->
    <insert id="CMP0100807I" parameterClass="kr.co.nis.waf.system.auth.model.UserExtend">
    	insert into F_User_X_Package (
        	companyID, userID, authLevelCD
        	, themeCD, timezoneCD, languageCD, localeCD,
        	dateFormatCD
        ) values (
        	#companyID#, #userID#, #authLevelCD# 
        	, #themeCD#, #timezoneCD_info#, #languageCD_info#, #localeCD_info#, 
        	#dateFormatCD_info#
        )
    	<!-- 
        insert into F_User_X_Package (
        	companyID, userID, authLevelCD, partnerDivCD, orgID, partnerID, empID, 
        	themeCD, timezoneCD, languageCD, currencyCD, localeCD,
        	dateFormatCD, amtFormatCD, siteID, salOrgCD, salOffCD, prtnrID
        ) values (
        	#companyID#, #userID#, #authLevelCD#, #partnerDivCD#, #orgID#, #partnerID#, #empID#, 
        	#themeCD#, #timezoneCD_info#, #languageCD_info#, #currencyCD_info#, #localeCD_info#, 
        	#dateFormatCD_info#, #amtFormatCD_info#, #siteID#, #salOrgCD#, #salOffCD#, #prtnrID#
        )
         -->
    </insert>
    
    <!-- 사용자 관리: 사용자확장정보 수정 -->
    <update id="CMP0100808U" parameterClass="kr.co.nis.waf.system.auth.model.UserExtend">
    	 update
        	F_User_X_Package
        set 
        	authLevelCD = #authLevelCD#,
            themeCD = #themeCD#,
            timezoneCD = #timezoneCD_info#,
            languageCD = #languageCD_info#,
            localeCD = #localeCD_info#,
            dateFormatCD = #dateFormatCD_info#
        where
        	companyID = #companyID#
        and userID = #userID#
    	<!-- 
        update
        	F_User_X_Package
        set 
        	authLevelCD = #authLevelCD#,
        	partnerDivCD = #partnerDivCD#, 
            orgID = #orgID#,
            partnerID = #partnerID#,
            empID = #empID#,
            themeCD = #themeCD#,
            timezoneCD = #timezoneCD_info#,
            languageCD = #languageCD_info#,
            currencyCD = #currencyCD_info#,
            localeCD = #localeCD_info#,
            dateFormatCD = #dateFormatCD_info#,
            amtFormatCD = #amtFormatCD_info#,
            siteID = #siteID#,
            salOrgCD = #salOrgCD#,
            salOffCD = #salOffCD#,
            prtnrID = #prtnrID#
        where
        	companyID = #companyID#
        and userID = #userID#
         -->
    </update>
    
    <!-- 사용자 관리: 사용자정보 삭제 -->
    <update id="CMP0100809U" parameterClass="kr.co.nis.waf.system.auth.model.User">           
        update
        	F_User
        set activeFlg = #activeFlg#,
            chgDate = SYSDATE,
            chgID = #workerID# 
        where
        	companyID = #companyID#
        and userID = #userID#
    </update>
    
    <!-- 사용자 관리: 그룹사용자정보 추가 -->
    <insert id="CMP0100810I" parameterClass="kr.co.nis.waf.system.auth.model.GroupUser">
        insert into F_GroupUser (
        	companyID, grpID, userID
        ) values (
        	#companyID#, #grpID#, #userID#
        )
    </insert>
    
    <!-- 사용자 관리: 그룹사용자정보 삭제 -->
    <delete id="CMP0100811D" parameterClass="kr.co.nis.waf.system.auth.model.GroupUser">
        delete from F_GroupUser 
        where 
        	companyID = #companyID# 
        and userID = #userID#
    </delete>
    
    
    
    <!-- 그룹관리: 그룹 목록 조회 -->
    <select id="CMP0100901S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select
        	a.grpID as "grpID", 
            a.grpName as "grpName", 
            b.mnuConstructName as "mnuConstructName", 
            a.remark as "remark", 
            a.mnuConstructID as "mnuConstructID"
            , getLangDesc(#companyID#,#languageCD#, 'F_CODE', 'DKMDTPCD', a.dkmdTpCD, NULL) as "dkmdTpCDName"
        from
			F_Group a
            left outer join F_MenuConstruct b
                on  a.companyID = b.companyID
                and a.mnuConstructID = b.mnuConstructID
        where
        	a.companyID = #companyID#
	        <isPropertyAvailable property="grpName">
	            <isNotEmpty prepend="and" property="grpName">
	                a.grpName like '%'||#grpName#||'%'
	            </isNotEmpty> 
	        </isPropertyAvailable>
	        <isPropertyAvailable property="attrib01">
	            <isNotEmpty prepend="and" property="attrib01">
	                a.attrib01 = #attrib01#
	            </isNotEmpty> 
	        </isPropertyAvailable>
	        <isPropertyAvailable property="attrib02">
	            <isNotEmpty prepend="and" property="attrib02">
	                a.attrib02 = #attrib02#
	            </isNotEmpty> 
	        </isPropertyAvailable>
        order by
        	a.grpName
    </select>
    
    <!-- 그룹관리: 그룹/사용자 메뉴권한 등록: 프로그램 목록 조회 -->
    <select id="CMP0100902S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">        
        select
        	a.pgmID as "pgmID", 
            a.pgmName as "pgmName", 
            a.pgmURL as "pgmURL"
        from
			F_Program a
            inner join F_MenuConstructDetail b
            	on  a.companyID = b.companyID
                and a.pgmID = b.pgmID
        where
			a.companyID = #companyID#
        and a.useYN = 'Y'
        and b.mnuConstructID = #mnuConstructID#
        and b.mnuGrpID = #mnuGrpID#
        order by
            b.seq
    </select>
    
    <!-- 그룹관리: 그룹/사용자 메뉴권한 등록: 기능 목록 조회 -->
    <select id="CMP0100903S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select
        	t1.funcID as "funcID", 
            t1.funcCode as "funcCode", 
            t1.funcName as "funcName",
            case when t2.useYN is null then 'Y' else 'N' end as "useYN",
            getLangDesc(#companyID#,#languageCD#, 'F_CODE', 'USETYPE1CD', NVL(t2.useYN,'Y'), NULL) as "useYNDesc"
        from
        	(
            select
				a.funcID, a.funcCode, a.funcName, a.seq
            from
				F_Function a
                inner join F_ViewFunction b
                	on a.companyID = b.companyID
                	and a.funcID = b.funcID
                where
					b.viewID = #viewPageID#
                and a.companyID = #companyID#
            ) t1
            left outer join (
            	select  funcID, 'N' as useYN
        		<isEqual prepend="" property="authType" compareValue="USER">
                	from F_UserAuth where userID = #userID#
        		</isEqual>
        		<isNotEqual prepend="" property="authType" compareValue="USER">
                	from F_GroupAuth where grpID = #grpID#
        		</isNotEqual>
        		and companyID = #companyID#
                and mnuConstructID = #menuConstructID#
                and mnuGrpID = #menuGroupID#
                and pgmID = #programID#
                and viewID = #viewPageID#
            ) t2
            	on t1.funcID = t2.funcID
        order by
        	t1.seq
    </select>
    
    
    
    <!-- 그룹관리: 그룹 추가 -->
    <insert id="CMP0100904I" parameterClass="kr.co.nis.waf.system.auth.model.Group">
        insert into F_Group (
        	companyID, grpID, grpName, remark, mnuConstructID , dkmdTpCD
        ) values (
        	#companyID#, #grpID#, #grpName#, #remark#, #mnuConstructID#, #dkmdTpCD#
        )
    </insert>
    
    <!-- 그룹관리: 그룹 수정 -->
    <update id="CMP0100905U" parameterClass="kr.co.nis.waf.system.auth.model.Group">
        update F_Group
        set
        	grpName = #grpName#,
            mnuConstructID = #mnuConstructID#,
            remark = #remark#,
            dkmdTpCD = #dkmdTpCD#
        where
        	companyID = #companyID#
        and grpID = #grpID#
    </update>
    
    <!-- 그룹관리: 그룹 삭제 -->
    <delete id="CMP0100906D" parameterClass="kr.co.nis.waf.system.auth.model.Group">
        delete from F_Group
        where
        	companyID = #companyID#
        and grpID = #grpID#     
    </delete>

    <!-- 그룹관리: 그룹목록 조회 -->
    <select id="CMP0100907S" parameterClass="kr.co.nis.waf.system.auth.model.Group" resultClass="java.util.LinkedHashMap">
        select
			a.grpID as "grpID", 
            a.grpName as "grpName", 
            b.mnuConstructName as "mnuConstructName", 
            a.remark as "remark", 
            a.mnuConstructID as "mnuConstructID"
            , dkmdTpCD as "dkmdTpCD"
        from
        	F_Group a
            left outer join F_MenuConstruct b
            	on  a.companyID = b.companyID
                and a.mnuConstructID = b.mnuConstructID
        where
        	a.companyID = #companyID# 
        and a.grpName like '%'||#grpName#||'%'
    </select>
    
    <!-- 그룹관리: 그룹정보 조회 -->
    <select id="CMP0100908S" parameterClass="kr.co.nis.waf.system.auth.model.Group" resultClass="java.util.LinkedHashMap">
        select  grpID as "grpID", 
                grpName as "grpName_view", 
                remark as "remark", 
                mnuConstructID as "mnuConstructID",
                dkmdTpCD as "dkmdTpCD_I"
        from    F_Group
        where   grpID = #grpID#
    </select>
    
    <!-- 그룹사용자관리: 그룹사용자 목록 조회 -->
    <select id="CMP0101001S" parameterClass="java.util.HashMap" resultClass="java.util.LinkedHashMap">
        select  a.grpID as "grpID", 
                a.userID as "userID", 
                b.userName as "userName"
        from    F_GroupUser a
        		inner join F_User b
        			on  a.companyID = b.companyID
        			and a.userID = b.userID
        where   a.companyID = #companyID#
        and     b.useYN = 'Y'
        and     a.grpID = #grpID#
    </select>
        
    
    
    
    
	
    
	
    
    
    
    


    
    
    
    
    
    	
           
   
    
    <!-- 게시판관리: 게시판목록 조회 -->
    <select id="CMP0101101S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">    
        select  a.boardID as "boardID",
                a.boardName as "boardName",
                a.boardTitle as "boardTitle",
                (select s1.userName from F_User s1 where s1.companyID = a.companyID and s1.userID = a.mgtUserID) as "mgtUserName",
                a.useYN as "useYN",
                a.isBulletinTerm as "isBulletinTerm",
                a.isAttachFile as "isAttachFile",
                a.isAnswer as "isAnswer",
                a.isReply as "isReply",
                getLangDesc(#companyID#,#languageCD#, 'F_CODE', 'BOARDTYPECD', a.boardTypeCD, NULL) as "boardTypeCD",
                a.isView as "isView",
                a.isTop as "isTop",
                a.isHot as "isHot",
                a.isRecommend as "isRecommend",
                a.isPublic as "isPublic",
                TO_CHAR(a.regDate,'YYYYMMDD') as "regDate"
        from    F_Board a
        where   a.companyID = #companyID#
        and     a.boardName like #boardName#||'%'
        order by
                a.boardID, a.boardName
    </select>
    
    <!-- 게시판관리: 게시판상세 조회 -->
    <select id="CMP0101102S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select
        	a.boardID as "boardID",
            a.boardName as "boardName",
            a.boardTitle as "boardTitle",
            a.boardTypeCD as "boardTypeCD",
            a.remark as "remark",
            a.useYN as "useYN",
            a.mgtUserID as "mgtUserID",
            (select s1.userName from F_User s1 where s1.companyID = a.companyID and s1.userID = a.mgtUserID) as "mgtUserName",
            a.isBulletinTerm as "isBulletinTerm",
            a.isAttachFile as "isAttachFile",
            a.isAnswer as "isAnswer",
            a.isReply as "isReply",
            a.isView as "isView",
            a.isTop as "isTop",
            a.isHot as "isHot",
            a.isRecommend as "isRecommend",
            a.isPublic as "isPublic"
        from
            F_Board a
        where
            a.companyID = #companyID#
        and a.boardID = #boardID#
    </select>
    
    <!-- 게시판관리: 게시판쓰기 권한자 조회 -->
    <select id="CMP0101103S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  publicID as "publicID",
                publicClassCD as "publicClassCD",
                publicName as "publicName"
        from    F_BoardAuthority
        where   companyID = #companyID#
        and     boardID = #boardID#     
    </select>
    
    <!-- 게시판관리: 게시판 설정정보 조회 -->
    <select id="CMP0101104S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  
        	isBulletinTerm as "isBulletinTerm",
            isAttachFile as "isAttachFile", 
            isAnswer as "isAnswer", 
            isReply as "isReply", 
            boardTypeCD as "boardTypeCD", 
            isView as "isView", 
            isTop as "isTop", 
            isHot as "isHot", 
            isPublic as "isPublic",
            getPublicAuthority(#companyID#,#boardID#,'',#userID#) as "authYN",
            boardName as "boardName",
            getLangDesc(#companyID#,#languageCD#, 'F_BOARD', boardID, NULL, NULL) as "boardNameLang"
        from
        	F_Board
        where
			companyID = #companyID#
        and useYN = 'Y' 
        and boardID = #boardID#
    </select>
    
    <!-- 게시판관리: 게시판 등록 -->
    <insert id="CMP0101105I" parameterClass="kr.co.nis.waf.system.biz.model.Board">
        insert into F_Board
            (companyID, boardID, boardName, boardTitle, boardTypeCD, remark, useYN,
             mgtUserID,isBulletinTerm, isAttachFile,
             isAnswer, isReply, isView, isTop, isHot,
             isRecommend, isPublic, regDate, regID)
        values
            (#companyID#, #boardID#, #boardName#, #boardTitle#, #boardTypeCD#, #remark#, #useYN#,
             #mgtUserID#, #isBulletinTerm#, #isAttachFile#,
             #isAnswer#, #isReply#, #isView#, #isTop#, #isHot#,
             #isRecommend#, #isPublic#, SYSDATE, #userID#)
    </insert>
    
    <!-- 게시판관리: 게시판 쓰기권한자 등록 -->
    <insert id="CMP0101106I" parameterClass="kr.co.nis.waf.system.biz.model.BoardAuthority">
        insert into F_BoardAuthority
            (companyID, boardID, publicID, publicClassCD, publicName)
        values
        	(#companyID#, #boardID#, #publicID#, #publicClassCD#, #publicName#)
    </insert>
    
    <!-- 게시판관리: 게시판 쓰기권한자 삭제 -->
    <delete id="CMP0101107D" parameterClass="kr.co.nis.waf.system.biz.model.Board">
        delete from F_BoardAuthority  
        where companyID = #companyID#
        and   boardID =  #boardID#       
    </delete>
    
    <!-- 게시판관리: 게시판 수정 -->
    <update id="CMP0101108U" parameterClass="kr.co.nis.waf.system.biz.model.Board">
        update  F_Board
        set     boardName = #boardName#,
                boardTitle = #boardTitle#,
                boardTypeCD = #boardTypeCD#,
                remark = #remark#,
                mgtUserID = #mgtUserID#,
                useYN = #useYN#,
                isBulletinTerm = #isBulletinTerm#,
                isAttachFile = #isAttachFile#,
                isAnswer = #isAnswer#,
                isReply = #isReply#,
                isView = #isView#,
                isTop = #isTop#,
                isHot = #isHot#,
                isRecommend = #isRecommend#,
                isPublic = #isPublic#,
                chgDate = SYSDATE,
                chgID = #userID#
        where   companyID = #companyID#
        and     boardID = #boardID#
    </update>
    
         
    
    
    
    
    
    
    
    
    
    

    
                
    
    
    
    
  
    
    
    
    
    
    
    
    

    
    
    
    
    
    

	
    
    


    
        

    
    
    
    
    
    
        
    

    
    
    
    
   
    
    

    
    
    
    
    
        
    
    
    
    

    
    
    
    <!-- 뉴스티커 관리: 뉴스티커 보기 조회 -->
    <select id="CMP0101301S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  newsText as "newsText",
		        URL as "URL"
		from    F_NewsTicker
		where   companyID = #companyID#
		and     activeFlg = 'U'
		and     useYN = 'Y'
		and     #currentDate# between newsStartDate and newsEndDate
    </select>
    
    <!-- 뉴스티커 관리: 뉴스티커 목록 조회 -->
    <select id="CMP0101302S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  newsID as "newsID",
		        newsText as "newsText",
		        newsStartDate as "newsStartDate",
		        newsEndDate as "newsEndDate",
		        URL as "URL",
		        useYN as "useYN"
		from    F_NewsTicker
		where   companyID = #companyID#
		and     activeFlg = 'U'
		and     newsText like '%'||NVL(#searchWord#,'')||'%'
		<isNotEmpty prepend="and" property="dateFrom">
		<![CDATA[
		        ((newsStartDate <= #dateFrom# and newsEndDate >= #dateFrom#) or
		         (newsStartDate <= #dateTo# and newsEndDate >= #dateTo#))
		 ]]>         
		</isNotEmpty>
		<isNotEmpty prepend="and" property="useYN">
		        useYN = #useYN#
		</isNotEmpty>
		order by
		        newsID desc
    </select>
    
    <!-- 뉴스티커 관리: 뉴스티커 추가 -->
    <insert id="CMP0101303I" parameterClass="kr.co.nis.waf.system.biz.model.NewsTicker">
        insert into F_NewsTicker 
			(companyID, newsID, newsText, newsStartDate, newsEndDate, URL, useYN, activeFlg, regID) 
		values 
			(#companyID#, #newsID#, #newsText#, #newsStartDate#, #newsEndDate#, #URL#, #useYN#, 'U', #userID#)
    </insert>
    
    <!-- 뉴스티커 관리: 뉴스티커 수정 -->
    <update id="CMP0101304U" parameterClass="kr.co.nis.waf.system.biz.model.NewsTicker">
        update  F_NewsTicker
		set     newsText = #newsText#,
		        newsStartDate = #newsStartDate#,
		        newsEndDate = #newsEndDate#,
		        URL = #URL#,
		        useYN = #useYN#,
		        activeFlg = 'U',
		        chgDate = SYSDATE,
		        chgID = #userID#
		where   companyID = #companyID#
		and     newsID = #newsID#
    </update>
    
    <!-- 뉴스티커 관리: 뉴스티커 삭제 -->
    <update id="CMP0101305U" parameterClass="kr.co.nis.waf.system.biz.model.NewsTicker">
        update  F_NewsTicker
		set     activeFlg = 'D',
		        chgDate = SYSDATE,
		        chgID = #userID#
		where   companyID = #companyID#
		and     newsID = #newsID#
    </update>
    
    
    

	

        
    
    <resultMap id="CMP0101401SM" class="java.util.LinkedHashMap">
	  <result property="widgetID" column="widgetID"/>
	  <result property="widgetName" column="widgetName"/>
	  <result property="titleScript" column="titleScript"/>
	  <result property="bodyScript" column="bodyScript" jdbcType="CLOB" javaType="java.lang.String" />
	  <result property="width" column="width"/>
	  <result property="height" column="height"/>
	  <result property="x" column="x"/>
	  <result property="y" column="y"/>
	  <result property="refreshYN" column="refreshYN"/>
	  <result property="interval" column="interval"/>
	  <result property="useYN" column="useYN"/>
	  <result property="remark" column="remark"/>
	  <result property="activeFlg" column="activeFlg"/>
	  <result property="loadMethod" column="loadMethod"/>
	</resultMap>
	<!-- 위젯관리: 위젯상세 조회 -->
    <select id="CMP0101401S" parameterClass="java.util.Map" resultMap="CMP0101401SM">
    	select  t1.widgetID as "widgetID",
				getLangDesc(#companyID#,#languageCD#, 'F_WIDGET', t1.widgetID, NULL, NULL) as "widgetName",
				t1.titleScript as "titleScript",
				t1.bodyScript as "bodyScript",
				t1.width as "width",
				t1.height as "height",
				t1.x as "x",
				t1.y as "y",
				t1.refreshYN as "refreshYN",
				t1.interval as "interval",
				t1.useYN as "useYN",
				t1.remark as "remark",
				'U' as "activeFlg",
				t1.loadMethod as "loadMethod"
	     from   F_Widget t1
	     where  t1.activeFlg = 'U'
	     		and t1.companyID = #companyID#
         <isPropertyAvailable property="widgetID">
            <isNotEmpty prepend="and" property="widgetID">
                t1.widgetID = #widgetID#
            </isNotEmpty> 
         </isPropertyAvailable>
         <isPropertyAvailable property="searchWord">
            <isNotEmpty prepend="and" property="searchWord">
                t1.widgetName like '%'||#searchWord#||'%'
            </isNotEmpty> 
         </isPropertyAvailable>
	     order by
	            t1.widgetID
    	<!-- 
        select  t1.widgetID as "widgetID",
				getLangDesc(#companyID#,#languageCD#, 'F_WIDGET', t1.widgetID, NULL, NULL) as "widgetName",
				t1.titleScript as "titleScript",
				t1.bodyScript as "bodyScript",
				NVL(t2.width,t1.width) as "width",
				NVL(t2.height,t1.height) as "height",
				NVL(t2.x,t1.x) as "x",
				NVL(t2.y,t1.y) as "y",
				t1.refreshYN as "refreshYN",
				t1.interval as "interval",
				t1.useYN as "useYN",
				t1.remark as "remark",
				(case when t2.widgetID is null then 'D' else 'U' end) as "activeFlg",
				t1.loadMethod as "loadMethod"
	     from   F_Widget t1
	            left outer join F_UserWidget t2
	                on t1.companyID = t2.companyID
	                and t1.widgetID = t2.widgetID
        <isPropertyAvailable property="userID">
                    and t2.userID = #userID#
        </isPropertyAvailable>
        <isNotPropertyAvailable property="userID">
                    and NVL(t2.userID,'') = ''
        </isNotPropertyAvailable>
	     where  t1.activeFlg = 'U'
	     		and t1.companyID = #companyID#
         <isPropertyAvailable property="partnerID">
            <isNotEmpty prepend="and" property="partnerID">
                (NVL(t1.partnerID,'') = '' or t1.partnerID = #partnerID#)
            </isNotEmpty> 
         </isPropertyAvailable>
         <isPropertyAvailable property="widgetID">
            <isNotEmpty prepend="and" property="widgetID">
                t1.widgetID = #widgetID#
            </isNotEmpty> 
         </isPropertyAvailable>
         <isPropertyAvailable property="searchWord">
            <isNotEmpty prepend="and" property="searchWord">
                t1.widgetName like '%'||#searchWord#||'%'
            </isNotEmpty> 
         </isPropertyAvailable>
	     order by
	            t1.widgetID
		-->
    </select>
    
    <!-- 위젯관리: 위젯 삭제 -->
    <update id="CMP0101402U" parameterClass="kr.co.nis.waf.system.biz.model.Widget">
        update  F_Widget 
        set     activeFlg  = 'D',
                chgDate    = SYSDATE,
                chgID      = #userID#
        where   companyID = #companyID#
   		and		widgetID = #widgetID#
    </update>
    
    <!-- 위젯관리: 위젯 추가 -->
    <insert id="CMP0101403I" parameterClass="kr.co.nis.waf.system.biz.model.Widget">
        insert into F_Widget (
            widgetID, widgetName, titleScript, bodyScript, width,
			height, x, y, refreshYN, interval,
			useYN, remark, loadMethod, activeFlg, regDate,
			regID, companyID, partnerID
		) values (
		    #widgetID#, #widgetName#, #titleScript#, #bodyScript#, #width#,
			#height#, #x#, #y#, #refreshYN#, #interval#,
			#useYN#, #remark#, #loadMethod#, #activeFlg#, SYSDATE,
			#userID#, #companyID#, #partnerID#
		)
    </insert>
    
    <!-- 위젯관리: 위젯 수정 -->
    <update id="CMP0101404U" parameterClass="kr.co.nis.waf.system.biz.model.Widget">
        update  F_Widget 
        set     widgetName = #widgetName#,
                titleScript = #titleScript#,
				bodyScript = #bodyScript#,
				width      = #width#,
				height     = #height#,
				x          = #x#,
				y          = #y#,
				refreshYN  = #refreshYN#,
				interval   = #interval#,
				useYN      = #useYN#,
				remark     = #remark#,
				loadMethod = #loadMethod#,
				activeFlg  = #activeFlg#,
				chgDate    = SYSDATE,
				chgID      = #userID#
		where   companyID = #companyID#
		and		widgetID = #widgetID#
    </update>
    
    
    <!-- 사용자위젯관리: 사용자 위젯 추가 -->
    <insert id="CMP0101501I" parameterClass="kr.co.nis.waf.system.biz.model.UserWidget">
        insert into F_UserWidget (
        	companyID, userID, widgetID, width, height,
            x, y
        ) values (
        	#companyID#, #userID#, #widgetID#, #width#, #height#,
            #x#, #y#
        )
    </insert>
    
    <insert id="CMP0101502I" parameterClass="kr.co.nis.waf.system.auth.model.User">
        insert into F_UserWidget (
        	companyID, userID, widgetID, width, height, x, y
        )
        select
        	companyID, #userID#, widgetID, width, height, x, y
        from F_Widget
        where
			companyID = #companyID#
			and activeFlg = 'U'
			and useYN = 'Y'
    </insert>
    
    <!-- 사용자위젯관리: 사용자 위젯 수정 -->
    <update id="CMP0101502U" parameterClass="kr.co.nis.waf.system.biz.model.UserWidget">
        update  F_UserWidget 
        set     width      = #width#,
                height     = #height#,
                x          = #x#,
                y          = #y#
        where	companyID = #companyID#
        and		userID = #userID#
        and     widgetID = #widgetID#
    </update>
        
    <!-- 사용자위젯관리: 사용자 위젯 삭제 -->
    <delete id="CMP0101503D" parameterClass="kr.co.nis.waf.system.biz.model.UserWidget">
        delete  F_UserWidget 
        where   companyID = #companyID#
        and		userID = #userID#
        and     widgetID = #widgetID#
    </delete>
    
    <resultMap id="CMP0101504SM" class="java.util.LinkedHashMap">
	  <result property="widgetID" column="widgetID"/>
	  <result property="widgetName" column="widgetName"/>
	  <result property="titleScript" column="titleScript"/>
	  <result property="titleScriptLang" column="titleScriptLang"/>
	  <result property="bodyScript" column="bodyScript" jdbcType="CLOB" javaType="java.lang.String" />
	  <result property="width" column="width"/>
	  <result property="height" column="height"/>
	  <result property="x" column="x"/>
	  <result property="y" column="y"/>
	  <result property="refreshYN" column="refreshYN"/>
	  <result property="interval" column="interval"/>
	  <result property="useYN" column="useYN"/>
	  <result property="remark" column="remark"/>
	  <result property="loadMethod" column="loadMethod"/>
	</resultMap>
	<!-- 사용자위젯관리: 사용자 위젯 조회 
	gtf, 사용자위젯설정안씀
	-->
    <select id="CMP0101504S" parameterClass="kr.co.nis.waf.system.auth.model.User" resultMap="CMP0101504SM">
    	select  
			t1.widgetID as "widgetID",
            t1.widgetName as "widgetName",
            getLangDesc(#companyID#,#languageCD#, 'F_WIDGET', t1.widgetID, NULL, NULL) as "titleScriptLang",
            t1.titleScript as "titleScript",
            t1.bodyScript as "bodyScript",
            t1.width as "width",
            t1.height as "height",
            t1.x as "x",
            t1.y as "y",
            t1.refreshYN as "refreshYN",
            t1.interval as "interval",
            t1.useYN as "useYN",
            t1.remark as "remark",
            t1.loadMethod as "loadMethod"
		from
         	F_Widget t1
		where
			t1.companyID = #companyID#
        and t1.activeFlg = 'U'
        and t1.useYN = 'Y'
        order by
			t1.y
    <!-- 
        select  
			t1.widgetID as "widgetID",
            t2.widgetName as "widgetName",
            getLangDesc(#companyID#,#languageCD#, 'F_WIDGET', t1.widgetID, NULL, NULL) as "titleScriptLang",
            t2.titleScript as "titleScript",
            t2.bodyScript as "bodyScript",
            t2.width as "width",
            t2.height as "height",
            t2.x as "x",
            t2.y as "y",
            t2.refreshYN as "refreshYN",
            t2.interval as "interval",
            t2.useYN as "useYN",
            t2.remark as "remark",
            t2.loadMethod as "loadMethod"
		from
         	F_UserWidget t1
            inner join F_Widget t2
             	on t1.companyID = t2.companyID
                and t1.widgetID = t2.widgetID  
		where
			t1.companyID = #companyID#
        and t2.activeFlg = 'U'
        and t2.useYN = 'Y'
        and t1.userID = #userID#
        order by
			t1.y
	 -->
    </select>
    
    <!-- 언어관리: 기준/대상 언어 Description 조회 -->
    <select id="CMP0101901S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select
        	t1.companyID as "companyID",
			t1.tableID as "tableID",
            t1.pkID1 as "pkID1",
            t1.pkID2 as "pkID2",
            t1.pkID3 as "pkID3",
			t1.languageCD as "stdLanguageCD",
            t1.pkDesc as "stdPkDesc",
            NVL(t2.languageCD,#targetLanguageCD#) as "targetLanguageCD",
            t2.pkDesc as "targetPkDesc",
            (case when t1.companyID='000001' then 'admin'
             when t1.companyID='000002' then 'cos'
             when t1.companyID='000000' then 'common'
             end
            ) as "companyDiv"
		from
         	F_LangDescription t1
            left outer join (
	             	select
	             		*
	             	from
	             		F_LangDescription
	             	where
	             		languageCD = #targetLanguageCD#
	             	<isPropertyAvailable property="tableID">
			        	<isNotEmpty prepend="and" property="tableID">
			        		tableID = #tableID#
			        	</isNotEmpty>
			        </isPropertyAvailable>
	             ) t2
            	 <!-- on t1.companyID = t2.companyID -->
            	 on t1.tableID = t2.tableID
                 and t1.pkID1 = t2.pkID1
                 and t1.pkID2 = t2.pkID2
                 and t1.pkID3 = t2.pkID3  
        where
            t1.languageCD = #stdLanguageCD#
        <isPropertyAvailable property="tableID">
        	<isNotEmpty prepend="and" property="tableID">
        		t1.tableID = #tableID#
        	</isNotEmpty>
        </isPropertyAvailable>
        <isPropertyAvailable property="searchWord">
        	<isNotEmpty prepend="and" property="searchWord">
        		(t1.pkDesc like '%'||#searchWord#||'%'
        		or t1.pkID1 like '%'||#searchWord#||'%')
        	</isNotEmpty>
        </isPropertyAvailable>
        order by
         	t1.tableID,
         	t1.pkID1,
         	t1.pkID2,
         	t1.pkID3
    </select>
    
    <!-- 언어관리: 대상언어 Description 저장여부 조회 -->
    <select id="CMP0101902S" parameterClass="kr.co.nis.waf.system.biz.model.LangDescription" resultClass="java.lang.Integer">
        select
        	count(*) as "cnt"
		from
         	F_LangDescription
        where 1=1
        <!-- companyID = #companyID# -->
        and languageCD = #languageCD_info#
		and tableID = #tableID#
        and pkID1 = #pkID1#
        and pkID2 = #pkID2#
        and pkID3 = #pkID3#
    </select>
    
    <!-- 언어관리: 대상언어 Description 추가 -->
    <insert id="CMP0101903I" parameterClass="kr.co.nis.waf.system.biz.model.LangDescription">
        insert into F_LangDescription (
        	companyID, languageCD, tableID, pkID1, pkID2, pkID3, pkDesc,
        	regID, regTimezoneCD, regDate
        ) values (
        	#companyID#, #languageCD_info#, #tableID#, #pkID1#, #pkID2#, #pkID3#, #pkDesc#,
        	#userID#, #timezoneCD#, SYSDATE
        )
    </insert>
    
    <!-- 언어관리: 대상언어 Description 수정 -->
    <update id="CMP0101904U" parameterClass="kr.co.nis.waf.system.biz.model.LangDescription">
        update F_LangDescription
        set pkDesc = #pkDesc#,
        	chgID = #userID#,
        	chgTimezoneCD = #timezoneCD#,
        	chgDate = SYSDATE
        where 1=1
        <!-- companyID = #companyID# -->
        and languageCD = #languageCD_info#
        and tableID = #tableID#
        and pkID1 = #pkID1#
        and pkID2 = #pkID2#
        and pkID3 = #pkID3#
    </update>
    
    <parameterMap id="CMP0101905PM" class="kr.co.nis.waf.system.biz.model.SystemLangDescription">
        <parameter property="systemLanguageCD" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
        <parameter property="companyID" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
        <parameter property="userID" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
        <parameter property="timezoneCD" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
        <parameter property="resultCode" javaType="java.lang.String" jdbcType="VARCHAR" mode="INOUT" />
        <parameter property="resultMessage" javaType="java.lang.String" jdbcType="VARCHAR" mode="INOUT" />
    </parameterMap>    
    <!-- 언어관리: 시스템언어 기준 Description 생성 -->
    <procedure id="CMP0101905P" parameterMap="CMP0101905PM">
        { call P_CMP0101905P (?,?,?,?,?,?) }
    </procedure>
    
    <!-- 비밀번호 정책관리: 비밀번호 정책 조회 -->
    <select id="CMP0102301S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
    	<!-- 
    	select
    		passwdMinNumbers1 as "passwdMinNumbers1", 
    		upperCaseYN1 as "upperCaseYN1",
    		lowerCaseYN1 as "lowerCaseYN1", 
    		numberYN1 as "numberYN1", 
    		specialLettersYN1 as "specialLettersYN1",
    		compositionCnt1 as "compositionCnt1", 
    		passwdRuleYN1 as "passwdRuleYN1", 
    		passwdMinNumbers2 as "passwdMinNumbers2", 
    		upperCaseYN2 as "upperCaseYN2", 
    		lowerCaseYN2 as "lowerCaseYN2", 
    		numberYN2 as "numberYN2", 
    		specialLettersYN2 as "specialLettersYN2", 
    		compositionCnt2 as "compositionCnt2", 
    		passwdRuleYN2 as "passwdRuleYN2", 
    		passwdUsageLimitCnt as "passwdUsageLimitCnt",
    		passwdUsageLimitRuleYN as "passwdUsageLimitRuleYN", 
    		passwdChgMonthCnt as "passwdChgMonthCnt", 
    		passwdChgMonthRuleYN as "passwdChgMonthRuleYN", 
    		accountBlockMonthCnt as "accountBlockMonthCnt", 
    		accountBlockMonthRuleYN as "accountBlockMonthRuleYN"
    	from
    		F_PasswordPolicy
    	where
    		companyID = #companyID#
		-->
    	select
    		passwdMinNumbers as "passwdMinNumbers", 
    		passwdUsageLimitCnt as "passwdUsageLimitCnt",
    		passwdUsageLimitRuleYN as "passwdUsageLimitRuleYN", 
    		passwdChgCnt as "passwdChgCnt", 
    		passwdChgRuleYN as "passwdChgRuleYN", 
    		accountBlockCnt as "accountBlockCnt", 
    		accountBlockRuleYN as "accountBlockRuleYN"
    	from
    		F_PasswordPolicy
    	where
    		companyID = #companyID#
    </select>
    
    <!-- 비밀번호 정책관리: 비밀번호 정책 등록 -->
    <insert id="CMP0102302I" parameterClass="kr.co.nis.waf.system.auth.model.PasswordPolicy">
    	<!-- 
    	insert into F_PasswordPolicy (
    		companyID, passwdMinNumbers1, upperCaseYN1, lowerCaseYN1, numberYN1, 
    		specialLettersYN1, compositionCnt1, passwdRuleYN1, passwdMinNumbers2, 
    		upperCaseYN2, lowerCaseYN2, numberYN2, specialLettersYN2, 
    		compositionCnt2, passwdRuleYN2, passwdUsageLimitCnt, passwdUsageLimitRuleYN, 
    		passwdChgMonthCnt, passwdChgMonthRuleYN, accountBlockMonthCnt, accountBlockMonthRuleYN
    	) values (
    		#companyID#, #passwdMinNumbers1#, #upperCaseYN1#, #lowerCaseYN1#, #numberYN1#, 
    		#specialLettersYN1#, #compositionCnt1#, #passwdRuleYN1#, #passwdMinNumbers2#, 
    		#upperCaseYN2#, #lowerCaseYN2#, #numberYN2#, #specialLettersYN2#, 
    		#compositionCnt2#, #passwdRuleYN2#, #passwdUsageLimitCnt#, #passwdUsageLimitRuleYN#, 
    		#passwdChgMonthCnt#, #passwdChgMonthRuleYN#, #accountBlockMonthCnt#, #accountBlockMonthRuleYN#
    	)
    	 -->
    	insert into F_PasswordPolicy (
    		companyID, passwdMinNumbers, passwdUsageLimitCnt, passwdUsageLimitRuleYN, 
    		passwdChgCnt, passwdChgRuleYN, accountBlockCnt, accountBlockRuleYN
    	) values (
    		#companyID#, #passwdMinNumbers#, #passwdUsageLimitCnt#, #passwdUsageLimitRuleYN#, 
    		#passwdChgCnt#, #passwdChgRuleYN#, #accountBlockCnt#, #accountBlockRuleYN#
    	)
    </insert>
    
    <!-- 비밀번호 정책관리: 비밀번호 정책 수정 -->
    <update id="CMP0102303U" parameterClass="kr.co.nis.waf.system.auth.model.PasswordPolicy">
    	<!-- 
    	update F_PasswordPolicy set
    		passwdMinNumbers1 = #passwdMinNumbers1#, 
    		upperCaseYN1 = #upperCaseYN1#, 
    		lowerCaseYN1 = #lowerCaseYN1#, 
    		numberYN1 = #numberYN1#,  
    		specialLettersYN1 = #specialLettersYN1#, 
    		compositionCnt1 = #compositionCnt1#, 
    		passwdRuleYN1 = #passwdRuleYN1#, 
    		passwdMinNumbers2 = #passwdMinNumbers2#,  
    		upperCaseYN2 = #upperCaseYN2#, 
    		lowerCaseYN2 = #lowerCaseYN2#,
    		numberYN2 = #numberYN2#, 
    		specialLettersYN2 = #specialLettersYN2#, 
    		compositionCnt2 = #compositionCnt2#, 
    		passwdRuleYN2 = #passwdRuleYN2#,
    		passwdUsageLimitCnt = #passwdUsageLimitCnt#,
    		passwdUsageLimitRuleYN = #passwdUsageLimitRuleYN#,
    		passwdChgMonthCnt = #passwdChgMonthCnt#,
    		passwdChgMonthRuleYN = #passwdChgMonthRuleYN#,
    		accountBlockMonthCnt = #accountBlockMonthCnt#, 
    		accountBlockMonthRuleYN = #accountBlockMonthRuleYN#
    	where
    		companyID = #companyID#
    	 -->
    	update F_PasswordPolicy
    	set
    		passwdMinNumbers = #passwdMinNumbers#, 
    		passwdUsageLimitCnt = #passwdUsageLimitCnt#,
    		passwdUsageLimitRuleYN = #passwdUsageLimitRuleYN#,
    		passwdChgCnt = #passwdChgCnt#,
    		passwdChgRuleYN = #passwdChgRuleYN#,
    		accountBlockCnt = #accountBlockCnt#, 
    		accountBlockRuleYN = #accountBlockRuleYN#
    	where
    		companyID = #companyID#
    </update>
    
    <!-- 비밀번호 정책관리: 비밀번호 정책 카운트 -->
    <select id="CMP0102304S" parameterClass="kr.co.nis.waf.system.auth.model.PasswordPolicy" resultClass="java.lang.Integer">
    	select
    		count(*) as "cnt"
    	from
    		F_PasswordPolicy
    	where
    		companyID = #companyID#
    </select>
    
    <!-- 비밀번호 정책관리: 비밀번호 정책 조회 - Return PasswordPolicy Object -->
    <select id="CMP0102305S" parameterClass="java.lang.String" resultClass="kr.co.nis.waf.system.auth.model.PasswordPolicy">
    	<!-- 
    	select
    		passwdMinNumbers1 as "passwdMinNumbers1", 
    		upperCaseYN1 as "upperCaseYN1",
    		lowerCaseYN1 as "lowerCaseYN1", 
    		numberYN1 as "numberYN1", 
    		specialLettersYN1 as "specialLettersYN1",
    		compositionCnt1 as "compositionCnt1", 
    		passwdRuleYN1 as "passwdRuleYN1", 
    		passwdMinNumbers2 as "passwdMinNumbers2", 
    		upperCaseYN2 as "upperCaseYN2", 
    		lowerCaseYN2 as "lowerCaseYN2", 
    		numberYN2 as "numberYN2", 
    		specialLettersYN2 as "specialLettersYN2", 
    		compositionCnt2 as "compositionCnt2", 
    		passwdRuleYN2 as "passwdRuleYN2", 
    		passwdUsageLimitCnt as "passwdUsageLimitCnt",
    		passwdUsageLimitRuleYN as "passwdUsageLimitRuleYN", 
    		passwdChgMonthCnt as "passwdChgMonthCnt", 
    		passwdChgMonthRuleYN as "passwdChgMonthRuleYN", 
    		accountBlockMonthCnt as "accountBlockMonthCnt", 
    		accountBlockMonthRuleYN as "accountBlockMonthRuleYN"
    	from
    		F_PasswordPolicy
    	where
    		companyID = #companyID#
    	 -->
		select
    		passwdMinNumbers as "passwdMinNumbers", 
    		passwdUsageLimitCnt as "passwdUsageLimitCnt",
    		passwdUsageLimitRuleYN as "passwdUsageLimitRuleYN", 
    		passwdChgCnt as "passwdChgCnt", 
    		passwdChgRuleYN as "passwdChgRuleYN", 
    		accountBlockCnt as "accountBlockCnt", 
    		accountBlockRuleYN as "accountBlockRuleYN"
    	from
    		F_PasswordPolicy
    	where
    		companyID = #companyID#
    </select>
    
    <!-- 게시글관리: 게시글 연결목록 조회 -->
    <select id="CMP0200101S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        <![CDATA[
        select  a.articleID as "articleID", 
                a.title as "title", 
                a.ref as "ref", 
                a.refStep as "refStep", 
                a.refNo as "refNo", 
                a.reading as "reading",
                (
                select  s1.userName
                from    F_User s1
                where   s1.companyID = a.companyID
                and     s1.userID = a.writeUserID
                ) as "writeUserID",
                TO_CHAR(a.writeDate, 'YYYYMMDD') as "writeDate",
                a.writeIP as "writeIP",
                a.bulletinTermCD as "bulletinTermCD",
                (
                case when SYSDATE-a.writeDate < 1 then 'Y' else 'N' end
                ) as "isNew",
                b.boardTypeCD as "boardTypeCD"
        ]]>             
        from    F_Article a
        		inner join F_Board b
        			on a.companyID = b.companyID
        			and a.boardID = b.boardID
        where   a.companyID = #companyID#
        and     a.viewYN = 'Y'
        and     a.activeFlg = 'U'
        and     a.ref = #ref#
        and     a.writeDate+a.bulletinTermCD <![CDATA[>=]]> SYSDATE
        order by
                a.ref desc, a.refNo
    </select>
    
    <!-- 게시글관리: 게시글 참조번호 수정 -->
    <update id="CMP0200102U" parameterClass="kr.co.nis.waf.system.biz.model.Article">
        update F_Article
        set 	
        	refNo = refNo+1
        where 	
        	companyID = #companyID#
        and ref = #ref#
        and refNo <![CDATA[>=]]> #refNo#
    </update>
    
    <!-- 게시글관리: 게시글 댓글 추가 -->
    <insert id="CMP0200103I" parameterClass="kr.co.nis.waf.system.biz.model.ArticleReply">
        insert into F_ArticleReply (
        	companyID, replyID, articleID, boardID, content, writeUserID, writeDate, writeIP, activeFlg
        ) values (
        	#companyID#, #replyID#, #articleID#, #boardID#, #content#, #writeUserID#, SYSDATE, #writeIP#, #activeFlg#
        )
    </insert>
    
    
    <resultMap id="CMP0200104SM" class="java.util.LinkedHashMap">
		<result property="articleID" column="articleID"/>
	  	<result property="articleTitle" column="articleTitle"/>
		<result property="articleContent" column="articleContent" jdbcType="CLOB" javaType="java.lang.String" />
		<result property="boardID" column="boardID"/>
	  	<result property="ref" column="ref"/>
	  	<result property="refStep" column="refStep"/>
	  	<result property="refNo" column="refNo"/>
	  	<result property="bulletinTermCD" column="bulletinTermCD"/>
	  	<result property="bulletinTermName" column="bulletinTermName"/>
	  	<result property="reading" column="reading"/>
	  	<result property="writeIP" column="writeIP"/>
	  	<result property="email" column="email"/>
	  	<result property="homepage" column="homepage"/>
	  	<result property="writeUserID" column="writeUserID"/>
	  	<result property="viewYN" column="viewYN"/>
	  	<result property="topYN" column="topYN"/>
	  	<result property="hotYN" column="hotYN"/>
	  	<result property="writeUserName" column="writeUserName"/>
	  	<result property="writeDate" column="writeDate"/>
	  	<result property="boardName" column="boardName"/>
	  	<result property="isBulletinTerm" column="isBulletinTerm"/>
	  	<result property="isAttachFile" column="isAttachFile"/>
	  	<result property="isAnswer" column="isAnswer"/>
	  	<result property="isReply" column="isReply"/>
	  	<result property="boardTypeCD" column="boardTypeCD"/>
	</resultMap>
	<!-- 게시글관리: 게시글 조회 -->
    <select id="CMP0200104S" parameterClass="kr.co.nis.waf.system.biz.model.Article" resultMap="CMP0200104SM">    
        select  a.articleID as "articleID",
                a.title as "articleTitle",
                a.content as "articleContent",
                a.boardID as "boardID",
                a.ref as "ref",
                a.refStep as "refStep",
                a.refNo as "refNo",
                a.bulletinTermCD as "bulletinTermCD",
                getLangDesc(#companyID#,#languageCD#, 'F_CODE', 'BULLETINTERMCD', a.bulletinTermCD, NULL) as "bulletinTermName",
                a.reading as "reading",
                a.writeIP as "writeIP",
                a.email as "email",
                a.homepage as "homepage",
                a.writeUserID as "writeUserID",
                a.viewYN as "viewYN",
                a.topYN as "topYN",
                a.hotYN as "hotYN",
                (select c.userName from F_User c where c.companyID = a.companyID and c.userID = a.writeUserID) as "writeUserName",
                TO_CHAR( a.writeDate, 'YYYY.MM.DD')||' '||TO_CHAR( a.writeDate, 'HH24:MI:SS') as "writeDate",
                b.boardName as "boardName",
                b.isBulletinTerm as "isBulletinTerm",
                b.isAttachFile as "isAttachFile",
                b.isAnswer as "isAnswer",
                b.isReply "isReply",
                b.boardTypeCD as "boardTypeCD"
        from    F_Article a
                inner join F_Board b
                	on  a.companyID = b.companyID
                	and a.boardID = b.boardID
        where   a.companyID = #companyID#
        <!--  and     a.viewYN = 'Y'-->
        and     a.activeFlg = 'U'
        and     a.articleID = #articleID#
    </select>
    
    
    <resultMap id="CMP0200105SM" class="java.util.LinkedHashMap">
	  <result property="replyID" column="replyID"/>
	  <result property="content" column="content" jdbcType="CLOB" javaType="java.lang.String" />
	  <result property="writeUserID" column="writeUserID"/>
	  <result property="writeUserName" column="writeUserName"/>
	  <result property="writeDate" column="writeDate"/>
	  <result property="writeIP" column="writeIP"/>
	</resultMap>
	
	<!-- 게시글관리: 댓글 목록 조회 -->
    <select id="CMP0200105S" parameterClass="kr.co.nis.waf.system.biz.model.Article" resultMap="CMP0200105SM">
        select  a.replyID as "replyID", 
                a.content as "content", 
                a.writeUserID as "writeUserID", 
                b.userName as "writeUserName",
                TO_CHAR( a.writeDate, 'YYYY.MM.DD')||' '||SUBSTR(TO_CHAR( a.writeDate, 'HH24:MI:SS'),1,5) as "writeDate", 
                a.writeIP as "writeIP"
        from    F_ArticleReply a
        		inner join F_User b
        			on  a.companyID = b.companyID
        			and a.writeUserID = b.userID
        where   a.companyID = #companyID#
        and     a.articleID = #articleID#
        and     a.boardID = #boardID#
        and     a.activeFlg = 'U'
        order by
                a.writeDate desc
    </select>
    
    <!-- 게시글관리: 게시글 공유대상 조회 -->
    <select id="CMP0200106S" parameterClass="kr.co.nis.waf.system.biz.model.Article" resultClass="java.util.LinkedHashMap">
        select  publicID as "publicID",
                publicClassCD as "publicClassCD",
                publicName as "publicName"
        from    F_ArticleAuthority
        where   companyID = #companyID#
        and     boardID =  #boardID#
        and     articleID = #articleID#
    </select>
    
    <!-- 게시글관리: 게시글 목록 조회 -->
    <select id="CMP0200107S" parameterClass="java.util.HashMap" resultClass="java.util.LinkedHashMap">
        <![CDATA[       
        select  c.articleID as "articleID",
                case when LEN(c.title) > 12 then SUBSTR(c.title,0,12)||'...'  else c.title end  as "title",
                c.ref as "ref",
                c.refStep as "refStep",
                c.refNo as "refNo",
                c.reading as "reading",
                c.writeUserID as "writeUserID", 
                TO_CHAR(c.writeDate, 'YYYYMMDD') as "writeDate",
                c.writeIP as "writeIP",
                c.bulletinTermCD as "bulletinTermCD",
                c.isNew as "isNew",
                c.boardTypeCD as "boardTypeCD",
                c.topYN as "topYN",
                c.hotYN as "hotYN",
                c.viewYN as "viewYN",
                case sign(TO_NUMBER(TO_CHAR(SYSDATE-6,'YYYYMMDD')) - TO_NUMBER((TO_CHAR(c.writeDate,'YYYYMMDD'))))   
                    when -1 then 'Y'else 'N' end as "imageFlag"
        from    (
                select  a.articleID, a.title, a.ref, a.refStep, a.refNo, a.reading,
                        (
                        select  s1.userName
                        from    F_User s1
                        where   s1.companyID = a.companyID
                        and     s1.userID = a.writeUserID
                        ) as writeUserID,
                        a.writeDate,
                        a.writeIP,
                        a.bulletinTermCD,
                        (
                        case when SYSDATE-a.writeDate < 1 then 'Y' else 'N' end
                        ) as isNew,
        ]]>            
                        b.boardTypeCD,
                        a.topYN,
                        a.hotYN,                         
                        a.viewYN
                from    F_Article a
						inner join F_Board b
							on  a.companyID = b.companyID
							and a.boardID = b.boardID
                where   a.companyID = #companyID#                    
                and     a.viewYN = 'Y'
                and     a.activeFlg = 'U'
                and     a.boardID = #boardID#
                and     a.writeDate+a.bulletinTermCD >= SYSDATE
                and (a.writeUserID =#userID# or (a.use_yn = 'Y' and getPublicAuthority(#companyID#,#boardID#,a.articleID,#userID#)='Y'))  
        <isEqual prepend="" property="viewYN" compareValue="Y">
                and  a.articleID in 
                     (
                     select articleID
                     from   F_Article d
                     		inner join F_User e
                     			on  d.companyID = e.companyID
                     			and d.writeUserID = e.userID                   
                     where  d.companyID = #companyID#
                     and    d.refstep = 0 
                     and    d.refno = 0 
                     and    d.boardID = #boardID#
                     and    d.writeUserID = #userID#
                     )
        </isEqual> 
                 )c
        where
        		 <![CDATA[ 
        		 ROWNUM <=  $e_seq$
                 ]]>
        order by c.topYN desc,
                 c.ref desc,
                 c.refNo     
    </select>
    
    <!-- 게시글관리: 게시글 수 조회 -->
    <select id="CMP0200108S" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
        select count(articleID) as "listCount"
        from   F_Article
        where  companyID = #companyID#
        and    viewYN = 'Y' 
        and    activeFlg = 'U'
        and    boardID = #boardID# 
        and    (title like '%'||NVL(#keyWord#,'')||'%' or content like '%'||NVL(#keyWord#,'')||'%')
        and    writeDate+bulletinTermCD >= SYSDATE
        <isEqual prepend="" property="isPublic" compareValue="Y">
            and (writeUserID  = #writeUserID# or
            		getPublicAuthority(#companyID#,boardID, articleID, #userID#) = 'Y' )
        </isEqual>
        <isEqual prepend="" property="isView" compareValue="Y">
        	and  (writeUserID = #writeUserID# or viewYN = 'Y' )
        </isEqual>
     </select>
     
     <!-- 게시글관리: 게시글 추천수 수정 -->
     <update id="CMP0200109U" parameterClass="kr.co.nis.waf.system.biz.model.Article">
         update F_Article
         set    recommendCount = recommendCount + 1
         where  companyID = #companyID#
         and    articleID = #articleID#
         and    boardID = #boardID#
    </update>
    
    <!-- 게시글관리: 게시글 삭제 -->
    <update id="CMP0200110U" parameterClass="kr.co.nis.waf.system.biz.model.Article">
        update  F_Article
        set     activeFlg = 'D',
                chgID = #userID#,
                chgDate = SYSDATE        
        where   companyID = #companyID#
        and     articleID = #articleID#
        and     boardID = #boardID#
    </update>
    
    <!-- 게시글관리: 댓글 수정 -->
    <delete id="CMP0200111U" parameterClass="kr.co.nis.waf.system.biz.model.ArticleReply">
        update F_ArticleReply 
        set    activeFlg = #activeFlg#  
        where  companyID = #companyID#
        and    replyID = #replyID#
    </delete>
    
    <!-- 게시글관리: 게시글 추가 -->
    <insert id="CMP0200112I" parameterClass="kr.co.nis.waf.system.biz.model.Article">
        insert into F_Article
            (companyID, articleID, boardID, title, content, ref, refStep, refNo, 
             bulletinTermCD, reading, writeUserID, writeDate, writeIP,
             viewYN, topYN, hotYN, activeFlg)
        values
            (#companyID#, #articleID#, #boardID#, #title#, #content#, #ref#, #refStep#, #refNo#,
             #bulletinTermCD#, 0, #writeUserID#, SYSDATE, #writeIP#, 
             #viewYN#, #topYN#, #hotYN#, #activeFlg#)
    </insert>
    
    <!-- 게시글관리: 게시글 공유대상자 삭제 -->
    <delete id="CMP0200113D" parameterClass="kr.co.nis.waf.system.biz.model.Article">
        delete from F_ArticleAuthority  
        where   companyID = #companyID#
        and     boardID =  #boardID#
        and     articleID = #articleID#
    </delete>
    
    <!-- 게시글관리: 게시글 공유대상자 추가 -->
    <insert id="CMP0200114I" parameterClass="kr.co.nis.waf.system.biz.model.ArticleAuthority">
        insert into F_ArticleAuthority
			(companyID, boardID, articleID, publicID, publicClassCD, publicName)
        values 
        	(#companyID#, #boardID#, #articleID#, #publicID#, #publicClassCD#, #publicName#)
    </insert>
    
    <!-- 게시글관리: 게시글 목록 조회 -->
    <select id="CMP0200115S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        <![CDATA[
         select d.articleID as "articleID",
                case when length(d.title) > 30 then SUBSTR(d.title,0,30)||'...' else d.title end as "title",
                d.title as "fullTitle",
                d.ref as "ref",
                d.refStep as "refStep",
                d.refNo as "refNo",
                d.reading as "reading",
                d.writeUserID as "writeUserID",
                TO_CHAR( d.writeDate, 'YYYYMMDD') as "writeDate",
                d.writeIP as "writeIP",
                d.bulletinTermCD as "bulletinTermCD",
                d.isNew as "isNew",
                d.boardTypeCD as "boardTypeCD",
                d.topYN as "topYN",
                d.hotYN as "hotYN",
                d.viewYN as "viewYN",
                case sign(TO_NUMBER(TO_CHAR(SYSDATE-6,'YYYYMMDD')) - TO_NUMBER((TO_CHAR(d.writeDate,'YYYYMMDD'))))   
                    when -1 then 'Y'else 'N' end as "imageFlag"                   
        from    (          
               
                   select  
                   		   row_number() over 
                   		   (
                   		   order by
			               a.topYN desc,
			               a.ref desc,
			               a.refNo  
			               ) as num,
                   		   a.articleID,
                           a.title,
                           a.ref,
                           a.refStep,
                           a.refNo,
                           a.reading,
                           (
                           select  s1.userName
                           from    F_User s1
                           where s1.companyID = a.companyID  
                           and   s1.userID = a.writeUserID
                           ) as writeUserID,
                           a.writeDate,
                           a.writeIP,
                           a.bulletinTermCD,
                           case when SYSDATE-a.writeDate < 1 then 'Y' else 'N' end as isNew,
   		]]>            
                           b.boardTypeCD,
                           a.topYN,
                           a.hotYN,                         
                           a.viewYN
                   from    F_Article a
                   		inner join F_Board b
                   			on a.companyID = b.companyID
                   			and a.boardID = b.boardID
                   where   a.companyID = #companyID#                    
                  <!--  and     a.viewYN = 'Y' -->
                   and     a.activeFlg = 'U'
                   and     a.boardID = #boardID#
                   and     (a.title like '%'||NVL(#keyWord#,'')||'%' or a.content like '%'||NVL(#keyWord#,'')||'%')
                   and     a.writeDate+a.bulletinTermCD >= SYSDATE
                   <isEqual prepend="" property="isPublic" compareValue="Y">
                       and (a.writeUserID  = #writeUserID# or
                       		getPublicAuthority(#companyID#,a.boardID, a.articleID, #userID#) = 'Y' )
                   </isEqual>
                   <isEqual prepend="" property="isView" compareValue="Y">
                   	   and  (a.writeUserID = #writeUserID# or a.viewYN = 'Y' )
                   </isEqual>
                   
        <!-- 쿼리 수정 필요  
        isEqual prepend="" property="isView" compareValue="Y"
                        and     a.articleID in 
                                (
                                select  articleID
                                from    F_Article d
                                		inner join F_User e
                                			on d.companyID = e.companyID
                                			and d.writeUserID = e.userID                   
                                where   d.companyID = #companyID#
                                and     d.refstep = 0 
                                and     d.refno = 0 
                                and     d.boardID = #boardID#
                                and     d.writeUserID=#userID#
                                )
        isEqual--> 
                          
                   
                )d
		<![CDATA[
		        where num > ($page$)*$recordPerPage$
		        and   num <= ($page$+1)*$recordPerPage$
		        order by num
		]]>
    </select>

    
    <resultMap id="CMP0200116SM" class="java.util.LinkedHashMap">
	  <result property="articleID" column="articleID"/>
	  <result property="articleTitle" column="articleTitle"/>
	  <result property="articleContent" column="articleContent" jdbcType="CLOB" javaType="java.lang.String" />
	  <result property="boardID" column="boardID"/>
	  <result property="ref" column="ref"/>
	  <result property="refStep" column="refStep"/>
	  <result property="refNo" column="refNo"/>
	  <result property="bulletinTermCD" column="bulletinTermCD"/>
	  <result property="bulletinTermName" column="bulletinTermName"/>
	  <result property="reading" column="reading"/>
	  <result property="writeIP" column="writeIP"/>
	  <result property="email" column="email"/>
	  <result property="homepage" column="homepage"/>
	  <result property="writeUserID" column="writeUserID"/>
	  <result property="writeUserName" column="writeUserName"/>
	  <result property="writeDate" column="writeDate"/>
	  <result property="boardName" column="boardName"/>
	  <result property="isBulletinTerm" column="isBulletinTerm"/>
	  <result property="isAttachFile" column="isAttachFile"/>
	  <result property="isAnswer" column="isAnswer"/>
	  <result property="isReply" column="isReply"/>
	  <result property="boardTypeCD" column="boardTypeCD"/>
	  <result property="replyCount" column="replyCount"/>
	  <result property="recommendCount" column="recommendCount"/>
	  <result property="topYN" column="topYN"/>
	  <result property="hotYN" column="hotYN"/>
	  <result property="viewYN" column="viewYN"/>
	  <result property="isView" column="isView"/>
	  <result property="isTop" column="isTop"/>
	  <result property="isHot" column="isHot"/>
	  <result property="isRecommend" column="isRecommend"/>
	  <result property="isPublic" column="isPublic"/>
	  <result property="replyID" column="replyID"/>
	  <result property="content" column="content" jdbcType="CLOB" javaType="java.lang.String" />
	  <result property="writeReplyUserID" column="writeReplyUserID"/>
	  <result property="writeReplyUserName" column="writeReplyUserName"/>
	  <result property="writeReplyDate" column="writeReplyDate"/>
	</resultMap>
	<!-- 게시글관리: 게시글 상세 조회 -->
    <select id="CMP0200116S" parameterClass="java.util.HashMap" resultMap="CMP0200116SM">
        <![CDATA[                               
        select  d.articleID as "articleID",
                d.articleTitle as "articleTitle",
                d.articleContent as "articleContent",
                d.boardID as "boardID",
                d.ref as "ref",
                d.refStep as "refStep",
                d.refNo as "refNo",
                d.bulletinTermCD as "bulletinTermCD",
                d.bulletinTermName as "bulletinTermName",
                d.reading as "reading",
                d.writeIP as "writeIP",
                d.email as "email",
                d.homepage as "homepage",
                d.writeUserID as "writeUserID",
                d.writeUserName as "writeUserName",
                d.writeDate as "writeDate",
                d.boardName as "boardName",
                d.isBulletinTerm as "isBulletinTerm",
                d.isAttachFile as "isAttachFile",
                d.isAnswer as "isAnswer",
                d.isReply as "isReply",
                d.boardTypeCD as "boardTypeCD",                
                d.replyCount as "replyCount",
                d.recommendCount as "recommendCount",
                d.topYN as "topYN",
                d.hotYN as "hotYN",
                d.viewYN as "viewYN",   
                d.isView as "isView",
                d.isTop as "isTop",
                d.isHot as "isHot",
                d.isRecommend as "isRecommend",
                d.isPublic as "isPublic",  
                e.replyID as "replyID",
                e.content as "content",
                e.writeReplyUserID as "writeReplyUserID",
                e.writeReplyUserName as "writeReplyUserName",
                e.writeReplyDate as "writeReplyDate"     
        from    (
                  select  b.articleID,
                          b.articleTitle,
                          b.articleContent,
                          b.boardID,
                          b.ref,
                          b.refStep,
                          b.refNo,
                          b.bulletinTermCD,
                          b.bulletinTermName,
                          b.reading,
                          b.writeIP,
                          b.email,
                          b.homepage,
                          b.writeUserID,
                          b.writeUserName,
                          b.writeDate,
                          b.boardName,
                          b.isBulletinTerm,
                          b.isAttachFile,
                          b.isAnswer,
                          b.isReply,
                          b.boardTypeCD,                  
                          (
                          select  count(abr.replyID)
                          from    F_ArticleReply abr
                          		inner join F_User au
                          			on  abr.companyID = au.companyID
                          			and abr.writeUserID = au.userID
                          where   abr.companyID = #companyID#
                          and     abr.boardID =  #boardID#
                          and     abr.articleID =  b.articleID
                          ) as replyCount,
                          b.recommendCount,
                          b.topYN,
                          b.hotYN,
                          b.viewYN,    
                          b.isView,
                          b.isTop,
                          b.isHot,
                          b.isRecommend,
                          b.isPublic                  
                  from   (
                           select
                       			row_number() over (
                       			order by
					                t1.topYN desc,
					                t1.ref desc,
					                t1.refNo  
				                ) as num,
                       			t1.*
		                   from   
                                (
                                 select a.articleID,
                                        a.title as articleTitle,
                                        a.content as articleContent,
                                        a.boardID,
                                        a.ref,
                                        a.refStep,
                                        a.refNo,
                                        a.bulletinTermCD,
                                        getLangDesc(#companyID#,#languageCD#, 'F_CODE', 'BULLETINTERMCD', a.bulletinTermCD, NULL) as bulletinTermName,
                                        a.reading,
                                        a.writeIP,
                                        a.email,
                                        a.homepage,
                                        a.writeUserID,
                                        (
                                        select  c.userName
                                        from    F_User c
                                        where   c.companyID = a.companyID
                                        and     c.userID = a.writeUserID
                                        ) as writeUserName,
                                        TO_CHAR( a.writeDate, 'YYYY.MM.DD')||' '||TO_CHAR( a.writeDate, 'HH24:MI:SS') as writeDate,
                                        b.boardName,
                                        b.isBulletinTerm,
                                        b.isAttachFile,
                                        b.isAnswer,
                                        b.isReply,
                                        b.boardTypeCD,                              
                                        a.recommendCount,
                                        a.topYN,
                                        a.hotYN,
                                        a.viewYN,
                                        b.isView,
                                        b.isTop,
                                        b.isHot,
                                        b.isRecommend,
                                        b.isPublic            
                                from    F_Article a
                                        inner join F_Board b
                                        	on  a.companyID = b.companyID
                                        	and a.boardID = b.boardID
                                where   a.companyID = #companyID#
                                and     a.viewYN = 'Y'  
                                and     a.activeFlg = 'U'                                                                  
                                and     a.boardID = #boardID#
                                and     (a.title like '%'||NVL(#keyWord#,'')||'%' or a.content like '%'||NVL(#keyWord#,'')||'%')
                                and     a.writeDate+a.bulletinTermCD >= SYSDATE
        ]]>  
                                )t1
                        )b
<![CDATA[
			        where num > ($page$)*$recordPerPage$
			        and   num <= ($page$+1)*$recordPerPage$
			        order by num
]]>
                )d
                left outer join 
                    (
                    select  a.replyID,
                            a.content,
                            a.writeUserID as writeReplyUserID,
                            b.userName as writeReplyUserName,
                            a.boardID,
                            a.articleID,
                            TO_CHAR( a.writeDate, 'YYYY.MM.DD')||' '||SUBSTR(TO_CHAR( a.writeDate, 'HH24:MI:SS'),1,5) as writeReplyDate,
                            a.writeIP
                    from    F_ArticleReply a
                    		inner join F_User b
                    			on  a.companyID = b.companyID
                    			and a.writeUserID = b.userID
                    where   a.companyID = #companyID#
                    and     a.boardID = #boardID#
                    and     a.activeFlg = 'U'
                    order by a.replyID 
                    )e
                    on d.articleID = e.articleID            
    </select>
    
    <!-- 게시글관리: 게시글 수정 -->
    <update id="CMP0200117U" parameterClass="kr.co.nis.waf.system.biz.model.Article">
        update  F_Article
        set     title = #title#,
                content = #content#,
                bulletinTermCD = #bulletinTermCD#,
                writeIP = #writeIP#,
                email = #email#,
                homepage = #homepage#,
                viewYN = #viewYN#,
                topYN = #topYN#,
                hotYN = #hotYN#,
                chgDate = SYSDATE,
                chgID = #userID#
        where   companyID = #companyID#
        and     articleID = #articleID#
    </update>
    
    <!-- 게시글관리: 게시글 조회수 수정 -->
    <update id="CMP0200118U" parameterClass="kr.co.nis.waf.system.biz.model.Article">
        update 	F_Article
        set 	reading = reading+1
        where 	companyID = #companyID#
        and		articleID = #articleID#
    </update>

	<!-- 게시글관리: 게시글 조회수 조회 -->
    <select id="CMP0200119S" parameterClass="kr.co.nis.waf.system.biz.model.Article" resultClass="java.lang.String">
        select  count(boardID) as "cnt"
        from    F_ArticleReadLog
        where   companyID = #companyID#
        and     articleID = #articleID#
        and     boardID = #boardID#
        and     userID = #writeUserID# 
    </select>  

	<!-- 게시글관리: 게시글 조회자 수정 -->
   	<update id="CMP0200120U" parameterClass="kr.co.nis.waf.system.biz.model.ArticleReadLog">
        update   F_ArticleReadLog
        set      readDate = SYSDATE
        where    companyID = #companyID#
        and      articleID = #articleID#
        and      boardID = #boardID#
        and      userID = #userID#
    </update>
    
    <!-- 게시글관리: 게시글 조회자 추가 -->
    <insert id="CMP0200121I" parameterClass="kr.co.nis.waf.system.biz.model.ArticleReadLog">
         insert into F_ArticleReadLog
         	(companyID, boardID, articleID, userID, readDate, downloadDate )
         values
         	(#companyID#, #boardID#, #articleID#, #userID#, SYSDATE, '')
    </insert>
    
    <select id="system.userWidgetCount.select" parameterClass="kr.co.nis.waf.system.biz.model.UserWidget" resultClass="java.lang.Integer">
        select  count(*) as "count"
         from   F_UserWidget
         where  companyID = #companyID#
         and	widgetID = #widgetID#
         and    userID = #userID#
    </select>
    
    
    <update id="system.helpContents.delete" parameterClass="kr.co.nis.waf.system.common.model.HelpContents">
        update  F_HelpContents
        set     activeFlg = #activeFlg#,
                chgDate = SYSDATE,
                chgID = #userID#
        where   companyID = #companyID#
        and		helpContentsID = #helpContentsID# 
    </update> 
        
    <insert id="system.helpContents.insert" parameterClass="kr.co.nis.waf.system.common.model.HelpContents"> 
        insert into F_HelpContents (
        	companyID,
        	helpContentsID, 
        	helpContentsName, 
        	helpContentsCD, 
        	seq, 
        	phelpContentsID,
        	content, 
        	remark, 
        	useYN, 
        	activeFlg, 
        	regDate, 
        	regID
        ) values (
        	#companyID#,
        	#helpContentsID#, 
        	#helpContentsName#, 
        	#helpContentsCD#, 
        	#seq#, 
        	#phelpContentsID#,
        	#content#, 
        	#remark#, 
        	#useYN#, 
        	#activeFlg#, 
        	SYSDATE, 
        	#userID#
        )
    </insert>
    
    <select id="system.helpContentsChart.select" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
    	select  helpContentsID as "helpContentsID", 
                phelpContentsID as "phelpContentsID", 
                helpContentsName as "helpContentsName", 
                seq as "seq", 
                helpContentsCD as "helpContentsCD"
        from    F_HelpContents
        where	companyID = #companyID#
        and		activeFlg = 'U'
        <isPropertyAvailable property="helpContentsCD">
            <isNotEmpty prepend="and" property="helpContentsCD">
                helpContentsCD = #helpContentsCD#
            </isNotEmpty>
        </isPropertyAvailable>
        order by
                phelpContentsID, helpContentsID, seq
    	<!-- 
        with helpContentsChart as
        (
            select  phelpContentsID, helpContentsID, helpContentsName, seq, helpContentsCD
            from    F_HelpContents
            where   1 = 1
            <isPropertyAvailable property="phelpContentsID">
            and     phelpContentsID = ''
            </isPropertyAvailable>             
            <isPropertyAvailable property="helpContentsCD">
                <isNotEmpty prepend="and" property="helpContentsCD">
                    helpContentsCD = #helpContentsCD#
                </isNotEmpty>
            </isPropertyAvailable>
            and     activeFlg = 'U'
            union all
            select  a.phelpContentsID, a.helpContentsID, a.helpContentsName, a.seq, a.helpContentsCD
            from    F_HelpContents a
                    inner join helpContentsChart b
                        on a.phelpContentsID = b.helpContentsID
            where   a.activeFlg = 'U'
            <isPropertyAvailable property="useYN">
                <isNotEmpty prepend="and" property="useYN">
                    a.useYN = 'Y'
                </isNotEmpty>
            </isPropertyAvailable>
        )
        select  helpContentsID as "helpContentsID", 
                phelpContentsID as "phelpContentsID", 
                helpContentsName as "helpContentsName", 
                seq as "seq", 
                helpContentsCD as "helpContentsCD"
        from    helpContentsChart
        order by
                helpContentsID, seq
         -->
    </select>
    
    <select id="system.helpContentsCount.select" parameterClass="kr.co.nis.waf.system.common.model.HelpContents" resultClass="java.lang.Integer">            
        select  count(*) as "count"
        from    F_HelpContents
        where   companyID = #companyID#
        and		helpContentsID = #helpContentsID#
    </select>
    <!-- CLOB처리 resultMap 생성 -->
    <resultMap id="rmClob" class="java.util.LinkedHashMap">
	  <result property="helpContentsID" column="helpContentsID"/>
	  <result property="helpContentsName" column="helpContentsName"/>
	  <result property="seq" column="seq"/>
	  <result property="remark" column="remark"/>
	  <result property="phelpContentsID" column="phelpContentsID"/>
	  <result property="helpContentsCD" column="helpContentsCD"/>
	  <result property="content" column="content" jdbcType="CLOB" javaType="java.lang.String" />
	  <result property="useYN" column="useYN"/>
	  <result property="activeFlg" column="activeFlg"/>
	  <result property="companyID" column="companyID"/>
	  <result property="phelpContentsName" column="phelpContentsName"/>
	</resultMap>
    <select id="system.helpContentsList.select" parameterClass="java.util.Map" resultMap="rmClob">
        select  t1.helpContentsID as "helpContentsID", 
                t1.helpContentsName as "helpContentsName", 
                t1.seq as "seq", 
                t1.remark as "remark", 
                t1.phelpContentsID as "phelpContentsID", 
                t1.helpContentsCD as "helpContentsCD",
                t1.content as "content", 
                t1.useYN as "useYN", 
                t1.activeFlg as "activeFlg",
                t1.companyID as "companyID",
                t2.helpContentsName as "phelpContentsName"
        from    F_HelpContents t1
          		left outer join F_HelpContents t2
          		    on t1.companyID = t2.companyID
          		    and t1.phelpContentsID = t2.helpContentsID
        where   t1.companyID = #companyID#
        and		t1.activeFlg = 'U'
        <isPropertyAvailable property="helpContentsID">
        and t1.helpContentsID = #helpContentsID#
        </isPropertyAvailable>
        <isPropertyAvailable property="phelpContentsID">
        and t1.phelpContentsID = #phelpContentsID#
        </isPropertyAvailable>             
        <isPropertyAvailable property="helpContentsCD">
            <isNotEmpty prepend="and" property="helpContentsCD">
                t1.phelpContentsID = (select top 1 helpContentsID from F_HelpContents where helpContentsCD = #helpContentsCD#)
            </isNotEmpty>
        </isPropertyAvailable>
        order by
                t1.seq 
    </select>
    
    <update id="system.helpContents.update" parameterClass="kr.co.nis.waf.system.common.model.HelpContents">
        update  F_HelpContents
        set     helpContentsName = #helpContentsName#,
                seq = #seq#,
                content = #content#,
                remark = #remark#,
                phelpContentsID = #phelpContentsID#,
                helpContentsCD = #helpContentsCD#,
                useYN = #useYN#,
                activeFlg = #activeFlg#,
                chgDate = SYSDATE,
                chgID = #userID#
        where   companyID = #companyID#
        and		helpContentsID = #helpContentsID#
    </update>
    
    <insert id="commonservice.auth.groupAuth.insert" parameterClass="kr.co.nis.waf.system.auth.model.Auth">
        insert into F_GroupAuth
            (companyID, grpID, mnuConstructID, mnuGrpID, pgmID, viewID, funcID)
        values
            (#companyID#, #grpID#, #menuConstructID#, #menuGroupID#, #programID#, #viewPageID#, #funcID#)
    </insert>
  
    <insert id="commonservice.auth.userAuth.insert" parameterClass="kr.co.nis.waf.system.auth.model.Auth">
        insert into F_UserAuth
            (companyID, userID, mnuConstructID, mnuGrpID, pgmID, viewID, funcID)
        values
            (#companyID#, #userID#, #menuConstructID#, #menuGroupID#, #programID#, #viewPageID#, #funcID#)
    </insert>
    



    
    <delete id="commonservice.auth.groupAuth.delete" parameterClass="kr.co.nis.waf.system.auth.model.Auth">
        delete from F_GroupAuth
        where   companyID = #companyID#
        and     grpID = #grpID#
        and     mnuConstructID = #menuConstructID#
        and     mnuGrpID = #menuGroupID#
        and     pgmID = #programID#
        and     viewID = #viewPageID#
    </delete>
    
    <delete id="commonservice.auth.userAuth.delete" parameterClass="kr.co.nis.waf.system.auth.model.Auth">
        delete from F_Userauth
        where   companyID = #companyID#
        and     userID = #userID#
        and     mnuConstructID = #menuConstructID#
        and     mnuGrpID = #menuGroupID#
        and     pgmID = #programID#
        and     viewID = #viewPageID#
    </delete>
    
    <select id="commonservice.auth.groupAuthNotExistUserList.select" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  userID as "userID", 
                userName as "userName"
        from    F_User
        where   companyID = #companyID#
        and     useYN = 'Y'
        and     userID not in (select userID from F_GroupUser)
    </select>
     
    <select id="commonservice.auth.userAuthList.select" parameterClass="kr.co.nis.waf.system.auth.model.Auth" resultClass="java.util.LinkedHashMap">
        select  userID as "userID", 
                userName as "userName", 
                mnuConstructID as "mnuConstructID"
        from    F_User
        where   useYN = 'Y'
        and     companyID = #companyID#
    </select>
    
    <update id="commonservice.auth.groupAuthMenuConstruct.update" parameterClass="kr.co.nis.waf.system.auth.model.Auth">
        update F_Group set mnuConstructID = #mnuConstructID# where companyID = #companyID# and grpID = #grpID#
    </update>
    
    <update id="commonservice.auth.userAuthMenuConstruct.update" parameterClass="kr.co.nis.waf.system.auth.model.Auth">
        update F_User set mnuConstructID = #mnuConstructID# where companyID = #companyID# and userID = #userID#     
    </update>

    <update id="commonservice.auth.userCurrentClientIp.update" parameterClass="kr.co.nis.waf.system.auth.model.User">
        update 	F_User 
        set 	currentClientIp = #currentClientIp# 
        where 	companyID = #companyID#
        and     userID = #userID#     
    </update>
    
    <update id="commonservice.auth.userTheme.update" parameterClass="kr.co.nis.waf.system.auth.model.UserExtend">
        update 	F_User_X_Package 
        set 	themeCD = #themeCD# 
        where 	companyID = #companyID#
        and     userID = #userID#     
    </update>
    
    <select id="commonservice.auth.groupTreeView.select" parameterClass="kr.co.nis.waf.system.auth.model.Group" resultClass="java.util.LinkedHashMap">
        select  grpID as "grpID", 
                grpName as "grpName", 
                'ROOT' as "pgrpID", 
                1 as "levelCnt"
        from    F_Group
        where   companyID = #companyID#
    </select>

    <update id="commonservice.auth.groupUser.update" parameterClass="kr.co.nis.waf.system.auth.model.GroupUser">
        update
            F_GroupUser
        set
            grpID = #grpID#
        where
        	companyID = #companyID#
        and userID = #userID#
    </update>       
    
    
    <delete id="commonservice.auth.groupUserAll.delete" parameterClass="kr.co.nis.waf.system.auth.model.Group">
        delete from F_GroupUser where companyID = #companyID# and grpID = #grpID#
    </delete>
    
    <!-- FM 전용 -->
    <select id="commonservice.fm.auth.user.select" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">    
        select  t1.userID as "userID", 
                t1.userName as "userName", 
                t1.passwd as "passwd", 
                t1.useYN as "useYN", 
                t1.mnuConstructID as "mnuConstructID", 
                t2.grpID as "grpID",
                t3.authLevelCD as "authLevelCD",
                t3.companyID as "companyID",
               	t3.siteID as "siteID",
                t3.themeCD as "themeCD",
                t3.timezoneCD as "timezoneCD",
                t3.languageCD as "languageCD",
                t3.currencyCD as "currencyCD",
                t3.localeCD as "localeCD",
                t1.currentClientIp as "currentClientIp"
                <!-- 
                , t3.empID as "empID"
                , t6.empName as "empName"
                , t6.empCD as "empCD"
                 -->
        from    F_User t1
                   left outer join F_GroupUser t2
                       on  t1.companyID = t2.companyID
                       and t1.userID = t2.userID
                   inner join F_User_X_Package t3
                       on  t1.companyID = t3.companyID
                       and t1.userID = t3.userID
                       <!-- 
                   left outer join P_Employee t6
                       on  t3.companyID = t6.companyID
                       and t3.empID = t6.empID
                        -->
        where t1.companyID = #companyID#
        <isPropertyAvailable property="userID_con">
        	<isNotEmpty prepend="and" property="userID_con">
        		t1.userID = #userID_con#
        	</isNotEmpty>
        </isPropertyAvailable>
        <isNotPropertyAvailable prepend="and" property="userID_con">
        	t1.userID = #userID#
        </isNotPropertyAvailable>
    </select>
    
    <insert id="commonservice.auth.company.insert" parameterClass="kr.co.nis.waf.system.auth.model.Company">
        insert into F_Company (
            companyID, companyCD, companyName, reprName, bizRegNo,
            sangho, bizCond, bizItem, zipCode, addr1, 
            addr2, telNo1, telNo2, faxNo, homepageURL,
            remark, closeYN, activeFlg, regDate, regID
        ) values (
            #companyID#, #companyCD#, #companyName#, #reprName#, #bizRegNo#, 
            #sangho#, #bizCond#, #bizItem#, #zipCode#, #addr1#, 
            #addr2#, #telNo1#, #telNo2#, #faxNo#, #homepageURL#, 
            #remark#, #closeYN#, #activeFlg#, SYSDATE, #userID#
        )
    </insert>
    
    <update id="commonservice.auth.company.update" parameterClass="kr.co.nis.waf.system.auth.model.Company">
        update F_Company
        set    companyCD = #companyCD#, 
               companyName = #companyName#, 
               reprName = #reprName#, 
               bizRegNo = #bizRegNo#,
               sangho = #sangho#, 
               bizCond = #bizCond#, 
               bizItem = #bizItem#, 
               zipCode = #zipCode#, 
               addr1 = #addr1#, 
               addr2 = #addr2#, 
               telNo1 = #telNo1#, 
               telNo2 = #telNo2#, 
               faxNo = #faxNo#, 
               homepageURL = #homepageURL#,
               remark = #remark#, 
               closeYN = #closeYN#, 
               activeFlg = #activeFlg#, 
               chgDate = SYSDATE, 
               chgID = #userID#
        where  companyID = #companyID#
    </update>
    
    <update id="commonservice.auth.company.delete" parameterClass="kr.co.nis.waf.system.auth.model.Company">
        update F_Company
        set    activeFlg = #activeFlg#, 
               chgDate = SYSDATE, 
               chgID = #userID#
        where  companyID = #companyID#
    </update>
    
    <select id="commonservice.auth.company.select" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  companyID as "companyID", 
                companyCD as "companyCD", 
                companyName as "companyName", 
                reprName as "reprName", 
                bizRegNo as "bizRegNo",
                sangho as "sangho", 
                bizCond as "bizCond", 
                bizItem as "bizItem", 
                zipCode as "zipCode", 
                addr1 as "addr1", 
                addr2 as "addr2", 
                telNo1 as "telNo1", 
                telNo2 as "telNo2", 
                faxNo as "faxNo", 
                homepageURL as "homepageURL",
                closeYN as "closeYN", 
                remark as "remark"
        from    F_Company
        <isPropertyAvailable prepend="where" property="companyID">
               companyID = #companyID#
        </isPropertyAvailable>
        <isPropertyAvailable property="companyCD">
        	<isNotPropertyAvailable prepend="where" property="companyID">
        		companyCD = #companyCD#
        	</isNotPropertyAvailable>
        </isPropertyAvailable>
    </select>
    
    <select id="commonservice.auth.companyList.select" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  a.companyID as "companyID",
                a.companyCD as "companyCD",
                a.companyName as "companyName",
                a.reprName as "reprName",
                a.bizRegNo as "bizRegNo",
                a.telNo1 as "telNo1",
                a.telNo2 as "telNo2",
                a.zipCode as "zipCode",
                a.addr1 || a.addr2 as "addr"
        from    F_Company a
        where   a.activeFlg = 'U'
        <isPropertyAvailable property="searchWord">
            <isNotEmpty prepend="searchWord" property="searchWord">
                a.companyName like '%'||NVL(#searchWord#,'')||'%'
            </isNotEmpty>
        </isPropertyAvailable>
        order by
                a.companyCD
    </select>
    
    <select id="commonservice.auth.companyCombo.select" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  a.companyID as "companyID",
                a.companyName as "companyName"
        from    F_Company a
        where   a.activeFlg = 'U'
        order by
                a.companyName
    </select>
        	
	<insert id="commonservice.auth.programUseLog.insert" parameterClass="kr.co.nis.waf.system.auth.model.ProgramUseLog">
		insert into F_ProgramUseLog (
			companyID, userID, pgmID, useDate, useCount
		) values (
			#companyID#, #userID#, #pgmID#, TO_CHAR(SYSDATE,'YYYYMMDD'), 1
		)		
	</insert>
	        	
	<update id="commonservice.auth.programUseLog.update" parameterClass="kr.co.nis.waf.system.auth.model.ProgramUseLog">
		update 	F_ProgramUseLog
		set    	useCount = useCount + 1
		where  	companyID = #companyID#
		and     userID = #userID#
		and    	pgmID = #pgmID#
		and    	useDate = TO_CHAR(SYSDATE,'YYYYMMDD')
	</update>

	<select id="commonservice.auth.programUseLog.select" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select 	t2.companyID as "companyID",
				t1.pgmID as "pgmID",
				t1.useDate as "useDate",
				sum(t1.useCount) as "useCount"
		from	F_ProgramUseLog t1
				inner join F_User_X_Package t2
				    on  t1.companyID = t2.companyID
				    and t1.userID = t2.userID
		where	t2.companyID = #companyID#
		group by
				t2.companyID, t1.pgmID, t1.useDate
	</select>
	
	<select id="commonservice.auth.programUseLogCount.select" parameterClass="kr.co.nis.waf.system.auth.model.ProgramUseLog" resultClass="java.lang.Integer">
		select 	count(*) as "count"
		from	F_ProgramUseLog
		where  	companyID = #companyID#
		and     userID = #userID#
		and    	pgmID = #pgmID#
		and    	useDate = TO_CHAR(SYSDATE,'YYYYMMDD')
	</select>
	
	<insert id="commonservice.auth.systemUseLog.insert" parameterClass="kr.co.nis.waf.system.auth.model.SystemUseLog">
		insert into F_SystemUseLog (
			companyID, userID, loginOutCD, connectDate, ip
		) values (
			#companyID#, #userID#, #loginOutCD#, SYSDATE, #ip#
		) 
	</insert>
    
    <select id="commonservice.biz.articleViewCount.select" parameterClass="java.util.Map" resultClass="java.lang.Integer">
        select 
        	count(articleID) as "count" 
        from
        	F_Article
        where
        	companyID = #companyID#
        and	viewYN = 'Y' 
        and boardID = #boardID#
        and activeFlg = 'U'
    </select>
    
    <select id="commonservice.biz.codeForMap.select" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  codeDiv as "codeDiv",
                case when codeDiv = 'ROOT' then 'ROOT' else getLangDesc(#companyID#,#languageCD#, 'F_CODE', 'ROOT', codeDiv, NULL) end as "codeDivName",
                comCode as "comCode", 
                codeName as "codeName", 
                codeDesc as "codeDesc", 
                seq as "seq", 
                remark as "remark", 
                useYN as "useYN",
                attrib01 as "attrib01", 
                attrib02 as "attrib02", 
                attrib03 as "attrib03", 
                attrib04 as "attrib04", 
                attrib05 as "attrib05", 
                attrib06 as "attrib06",
                attrib07 as "attrib07", 
                attrib08 as "attrib08", 
                attrib09 as "attrib09", 
                attrib10 as "attrib10", 
                attrib11 as "attrib11", 
                attrib12 as "attrib12"
        from    F_Code
        where   companyID = #companyID#
        and     comCode = #comCode#
        and     codeDiv = #codeDiv#
    </select>  
   
   <select id="commonservice.biz.smsRecSelector.select" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        <!-- ROOT -->
        select  'ROOT' as "porgID",
            partnerID as "orgID",
            partnerName as "orgName",
            partnerDivCD as "companyID",
            'Y' as "checkYN",
            '' as "class",
            '' as "hpNo"
		from    P_Partner 
		where   companyID = #companyID#
		and     activeFlg = 'U'
		and     partnerDivCD = 'HQ'
	    union all
	    <!-- Organization Group -->
	    <!-- 
	    select  partnerID as "porgID",
           'ORG'||partnerID as "orgID",
            'Organization['||partnerName||']' as "orgName",
            partnerDivCD as "companyID",
            'Y' as "checkYN",
            'ORG' as "class",
            '' as "hpNo"
		from    P_Partner 
		where   companyID = #companyID#
		and     activeFlg = 'U'
		and     partnerDivCD = 'HQ'
	    union all
	     -->
	    <!-- ORG -->
	    <!-- 
	    select
            'ORG'||porgID as "porgID", 
            'ORG'||orgID as "orgID", 
	        orgName as "orgName", 
	        companyID as "companyID", 
	        'Y' as "checkYN", 
	        orgClassCD as "class",
            '' as "hpNo"
		from    F_Organization 
		where   companyID = #companyID#
		and     activeFlg = 'U'
		and     orgClassCD = 'HQ'
	    union all
	     --> 
	    <!-- ORG Employee -->
	    select  
	    	t1.partnerID as "porgID", 
            'EMP'||t1.empID as "orgID",
            t1.empName as "orgName",
            t1.companyID as "companyID",
            'Y' as "checkYN",
            'EMP' as "class",
            t1.hpNo as "hpNo"
		from
		    P_Employee t1
			inner join P_Partner t2
				on t1.companyID = t2.companyID
				and t1.partnerID = t2.partnerID
		where   t1.companyID = #companyID#
		and     t2.activeFlg = 'U'
		and 	t2.partnerDivCD = 'HQ'
		union all
	    <!-- Agency Group -->
	    <!-- 
	    select  partnerID as "porgID",
            'AC'||partnerID as "orgID",
            'Agency['||partnerName||']' as "orgName",
            partnerDivCD as "companyID",
            'Y' as "checkYN",
            'ACG' as "class",
            '' as "hpNo"
		from    P_Partner 
		where   companyID = #companyID#
		and     activeFlg = 'U'
		and     partnerDivCD = 'HQ'
	    union all
	     -->
		<!-- Agency -->
		select  
			t2.rpartnerID as "porgID", 
            t1.partnerID as "orgID",
            t1.partnerName as "orgName",
            t1.companyID as "companyID",
            'Y' as "checkYN",
            t1.partnerDivCD as "class",
            hpNo as "hpNo"
		from
		    P_Partner t1
		    inner join P_Relation t2
		    	on  t1.companyID = t2.companyID
		        and t1.partnerID = t2.partnerID
		where   t1.companyID = #companyID#
		and     t1.activeFlg = 'U'
		and     t1.partnerDivCD = 'AC'
		and     t1.closeYN = 'N'
		union all
		<!-- AGENCY Employee -->
	    select  
	    	t1.partnerID as "porgID", 
            'EMP'||t1.empID as "orgID",
            t1.empName as "orgName",
            t1.companyID as "companyID",
            'Y' as "checkYN",
            'EMP' as "class",
            t1.hpNo as "hpNo"
		from
		    P_Employee t1
			inner join P_Partner t2
				on t1.companyID = t2.companyID
				and t1.partnerID = t2.partnerID
		where   t1.companyID = #companyID#
		and     t2.activeFlg = 'U'
		and 	t2.partnerDivCD = 'AC'
        
        <!-- ROOT
		select  t1.porgID as "porgID", 
		        t1.orgID as "orgID", 
		        t1.orgName as "orgName", 
		        t1.companyID as "companyID", 
		        NVL(t1.partnerID,'') as "partnerID", 
		        '' as "checkYN", 
		        '' as "class"
		from    F_Organization t1
		where   t1.companyID = #companyID#
		and     t1.activeFlg = 'U'
		and     t1.orgClassCD is null
		union all
		 - Company -
		select  t1.porgID, t1.orgID, t1.orgName, t1.companyID, NVL(t1.partnerID,''), 'Y', 'H'
		from    F_Organization t1
		where   t1.companyID = #companyID#
		and     t1.activeFlg = 'U'
		and     t1.orgClassCD = 'HQ'
		union all
		- Team -
		select  'T'||t1.porgID, 'T'||t1.orgID, t1.orgName, t1.companyID, NVL(t1.orgID,''), 'Y', 'T'
		from    F_Organization t1
		where   t1.companyID = #companyID#
		and     t1.activeFlg = 'U'
		and     t1.orgClassCD = 'TEAM'
		union all
		- Branch -
		select  'B'||t1.porgID, 'B'||t1.orgID, t1.orgName, t1.companyID, NVL(t1.orgID,''), 'Y', 'B'
		from    F_Organization t1
		where   t1.companyID = #companyID#
		and     t1.activeFlg = 'U'
		and     t1.orgClassCD = 'BRANCH'
		union all
		- Agency -
		select  'A'||t2.rpartnerID, 'A'||t1.partnerID, t1.partnerName, t1.companyID, NVL(t1.partnerID,''), 'Y', 'A'
		from    P_Partner t1
		        inner join P_Relation t2
		            on  t1.companyID = t2.companyID
		            and t1.partnerID = t2.partnerID
		where   t1.companyID = #companyID#
		and     t1.activeFlg = 'U'
		and     t1.partnerDivCD = 'AC'
		and     t1.closeYN = 'N'
		union all
		- User -
		select  case when t2.empID != '' then 'T'||t2.orgID else 'A'||t2.partnerID end, t1.userID, t1.userName, t2.companyID, NVL(t1.userID,''), 'Y', 'U'
		from    F_User t1
		        inner join F_User_X_Package t2
		            on  t1.companyID = t2.companyID
		            and t1.userID = t2.userID
		        inner join F_Organization t3
		            on  t2.companyID = t3.companyID
		            and t2.orgID = t3.orgID
		where   t1.companyID = #companyID#
		and     t1.activeFlg = 'U'
		-->
    </select>

	<select id="common.partnerPopup.select" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">        
        select    t1.partnerCD as "partnerCD", 
                  t1.partnerName as "partnerName", 
                  t1.partnerID as "partnerID",
                  getLangDesc(#companyID#,#languageCD#, 'F_CODE', 'PARTNERDIVCD', t1.partnerDivCD, NULL) as "partnerDivCDName"
        from      P_Partner t1
        <isPropertyAvailable property="rpartnerID">
            <isNotEmpty prepend="" property="rpartnerID">
                   inner join P_Relation t2
                      on t1.companyID = t2.companyID
                      and t1.partnerID = t2.partnerID
            </isNotEmpty>
        </isPropertyAvailable>
        where     t1.activeFlg = 'U'
	    <isPropertyAvailable property="companyID_con">
	    	<isNotEmpty prepend="and" property="companyID_con">
	    		t1.companyID = #companyID_con#
	    	</isNotEmpty>
	    </isPropertyAvailable>
	    <isNotPropertyAvailable prepend="and" property="companyID_con">
	    	t1.companyID = #companyID#
	    </isNotPropertyAvailable>
	    <isPropertyAvailable property="searchWord">
	    	<isNotEmpty prepend="and" property="searchWord">
	    		(t1.partnerCD like '%'||NVL(#searchWord#,'')||'%' or t1.partnerName like '%'||NVL(#searchWord#,'')||'%')
	    	</isNotEmpty>
	    </isPropertyAvailable>
        <isPropertyAvailable property="rpartnerID">
            <isNotEmpty prepend="and" property="rpartnerID">
                   t2.rpartnerID = #rpartnerID#
            </isNotEmpty>
        </isPropertyAvailable>
        <isPropertyAvailable property="partnerDivCD">
            <isNotEmpty prepend="and" property="partnerDivCD">
                    t1.partnerDivCD = #partnerDivCD#
            </isNotEmpty>
        </isPropertyAvailable>
        <isPropertyAvailable property="partnerCD">
            <isNotEmpty prepend="and" property="partnerCD">
                    t1.partnerCD = #partnerCD#
            </isNotEmpty>
        </isPropertyAvailable>
        order by
                    t1.partnerName
    </select>
    
    <select id="common.employeePopup.select" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">        
        select    t1.empCD as "empCD",
                  t1.empName as "empName", 
                  t1.empID as "empID", 
                  t1.partnerID as "partnerID", 
                  t2.partnerCD as "partnerCD", 
                  t2.partnerName as "partnerName" 
        from      P_Employee t1
                  inner join P_Partner t2
                        on t1.companyID = t2.companyID
                        and t1.partnerID = t2.partnerID
        where     t1.activeFlg = 'U'
        <isPropertyAvailable property="companyID_con">
	    	<isNotEmpty prepend="and" property="companyID_con">
	    		t1.companyID = #companyID_con#
	    	</isNotEmpty>
	    </isPropertyAvailable>
	    <isNotPropertyAvailable prepend="and" property="companyID_con">
	    	t1.companyID = #companyID#
	    </isNotPropertyAvailable>
	    <isPropertyAvailable property="searchWord">
	    	<isNotEmpty prepend="and" property="searchWord">
	    		(t1.empCD like '%'||NVL(#searchWord#,'')||'%' or t1.empName like '%'||NVL(#searchWord#,'')||'%')
	    	</isNotEmpty>
	    </isPropertyAvailable>
        <isPropertyAvailable property="partnerID">
            <isNotEmpty prepend="and" property="partnerID">
                  t1.partnerID = #partnerID#
            </isNotEmpty>
        </isPropertyAvailable>
        <isPropertyAvailable property="empCD">
            <isNotEmpty prepend="and" property="empCD">
                  t1.empCD = #empCD#
            </isNotEmpty>
        </isPropertyAvailable>
        order by
                  t1.empName
    </select>
    
    <select id="common.sysdate.select" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">        
        select to_char(sysdate, #format#) as "sysdate" from dual
    </select>
    
    <select id="system.runQuery" remapResults="true" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        $sql$
    </select>
    
    <select id="commonservice.common.organizationPopup.select" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">        
        select   orgCD as "orgCD", 
                 orgName as "orgName", 
                 orgID as "orgID"
        from     F_Organization
        where    activeFlg = 'U'
        <isPropertyAvailable property="companyID_con">
	    	<isNotEmpty prepend="and" property="companyID_con">
	    		companyID = #companyID_con#
	    	</isNotEmpty>
	    </isPropertyAvailable>
	    <isNotPropertyAvailable prepend="and" property="companyID_con">
	    	companyID = #companyID#
	    </isNotPropertyAvailable>
	    <isPropertyAvailable property="orgCD">
	    	<isNotEmpty prepend="and" property="orgCD">
	    		orgCD = #orgCD#
	    	</isNotEmpty>
	    </isPropertyAvailable>
	    <isPropertyAvailable property="searchWord">
	    	<isNotEmpty prepend="and" property="searchWord">
	    		orgname like '%'||NVL(#searchWord#,'')||'%'
	    	</isNotEmpty>
	    </isPropertyAvailable>
        order by
                orgID, seq
    </select>
    
    <select id="commonservice.cms.menuConstructProgramList.select" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  pgmID as "pgmID", 
                pgmName as "pgmName", 
                pgmURL as "pgmURL", 
                remark as "remark"
        from    F_Program
        where   companyID = #companyID#
        and     useYN = 'Y'
        and     pgmID in
                (
                select  pgmID
                from    F_MenuConstructDetail
                where   companyID = #companyID#
                and     mnuConstructID = #mnuConstructID#
                and     mnuGrpID = #mnuGrpID#
                )
    </select>
    
    <update id="commonservice.biz.class.delete" parameterClass="java.util.Map">
        update  F_Class
        set     activeFlg = 'D',
                chgDate = SYSDATE,
                chgID = #userID#
        where   companyID = #companyID#
        and     pclassID = #pclassID_con# 
    </update> 
        
    <insert id="commonservice.biz.class.insert" parameterClass="kr.co.nis.waf.system.biz.model.Classification"> 
        insert into F_Class
            (companyID, classID, className, classCD, seq, pclassID, remark, useYN, activeFlg, regDate, regID)
        values
            (#companyID#, #classID#, #className#, #classCD#, #seq#, #pclassID#, #remark#, #useYN#, #activeFlg#, SYSDATE, #userID#)
    </insert>
    
    <select id="commonservice.biz.classChart.select" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
    	select
    		classID as "classID", 
            pclassID as "pclassID", 
            getLangDesc(#companyID#,#languageCD#,'F_CLASS',classID,NULL,NULL) as "className", 
            seq as "seq", 
            classCD as "classCD"
		from
			F_Class
		where
			companyID = #companyID#
		and	activeFlg = 'U'
		<isPropertyAvailable property="classCD">
            <isNotEmpty prepend="and" property="classCD">
                classCD = #classCD#
            </isNotEmpty>
        </isPropertyAvailable>
        order by
        	classCD, seq
    	<!-- 
        with classChart as
        (
            select  pclassID, classID, className, seq, classCD
            from    F_Class
            where   1 = 1
            <isPropertyAvailable property="pclassID">
            and     pclassID = ''
            </isPropertyAvailable>             
            <isPropertyAvailable property="classCD">
                <isNotEmpty prepend="and" property="classCD">
                    classCD = #classCD#
                </isNotEmpty>
            </isPropertyAvailable>
            and     activeFlg = 'U'
            union all
            select  a.pclassID, a.classID, a.className, a.seq, a.classCD
            from    F_Class a
                    inner join classChart b
                        on a.pclassID = b.classID
            where   a.activeFlg = 'U'
        )
        select  classID as "classID", 
                pclassID as "pclassID", 
                className as "className", 
                seq as "seq", 
                classCD as "classCD"
        from    classChart
        order by
                classID, seq
         -->
    </select>
    
    <select id="commonservice.biz.classCount.select" parameterClass="kr.co.nis.waf.system.biz.model.Classification" resultClass="java.lang.Integer">            
        select  count(*) as "count"
        from    F_Class
        where   companyID = #companyID#
        and		classID = #classID#
    </select>
    
    <!-- commonservice.biz.classList.select -->
    <select id="CMP0101201S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        select  classID as "classID", 
                getLangDesc(#companyID#,#languageCD#,'F_CLASS',classID,NULL,NULL) as "className",
                seq as "seq", 
                remark as "remark", 
                pclassID as "pclassID", 
                classCD as "classCD", 
                useYN as "useYN", 
                activeFlg as "activeFlg"
        from    F_Class
        where   companyID = #companyID#
        and     activeFlg = 'U'
        <isPropertyAvailable property="pclassID">
        and pclassID = #pclassID#
        </isPropertyAvailable>             
       	<isNotEqual property="classCD" compareValue="ROOT">
        	and classCD = #classCD#
       	</isNotEqual>
       	<!-- 
        <isPropertyAvailable property="classCD">
            <isNotEmpty prepend="and" property="classCD">
                pclassID = (select classID from F_Class where companyID = #companyID# and classCD = #classCD# and ROWNUM = 1)
            </isNotEmpty>
        </isPropertyAvailable>
            -->
        order by
                seq 
    </select>
    
    <update id="commonservice.biz.class.update" parameterClass="kr.co.nis.waf.system.biz.model.Classification">
        update  F_Class
        set     className = #className#,
                seq = #seq#,
                remark = #remark#,
                classCD = #classCD#,
                useYN = #useYN#,
                activeFlg = #activeFlg#,
                chgDate = SYSDATE,
                chgID = #userID#
        where   companyID = #companyID#
        and     classID = #classID#
    </update>
    
    <update id="commonservice.biz.organization.delete" parameterClass="java.util.Map">
        update  F_Organization
        set     activeFlg = 'D',
                chgDate = SYSDATE,
                chgID = #userID#
        where   companyID = #companyID#
        and     porgID = #porgID_con#
    </update>
     
    <insert id="commonservice.biz.organization.insert" parameterClass="kr.co.nis.waf.system.biz.model.Organization">  
        insert into F_Organization (
        	companyID, orgID, orgCD, orgName, seq, porgID, orgClassCD, remark, activeFlg, regDate, regID, partnerID
        ) values (
        	#companyID#, #orgID#, #orgCD#, #orgName#, #seq#, #porgID#, #orgClassCD#, #remark#, #activeFlg#, SYSDATE, #userID#,#partnerID#
        ) 
    </insert>
                
    <select id="commonservice.biz.organizationChart.select" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
    	select
    		orgID as "orgID", 
            (case when porgID = 'ROOT' then ' ' else porgID end) as "porgID", 
            orgName as "orgName",
            seq as "seq", 
            orgCD as "orgCD"
    	from
    		F_Organization
    	where
    		companyID = #companyID#
    	and	activeFlg = 'U'
	    order by
			(case when porgID = 'ROOT' then ' ' else porgID end),
			orgID,
			seq
    	<!-- 
        with orgChart as
        (
            select  porgID, orgID, orgName, seq, orgCD
            from    F_Organization
            where   porgID = ''
            and     activeFlg = 'U'
            union all
            select  a.porgID, a.orgID, a.orgName, a.seq, a.orgCD
            from    F_Organization a
                    inner join orgChart b
                        on a.porgID = b.orgID
            where   a.activeFlg = 'U'
			<isPropertyAvailable property="companyID">
				<isNotEmpty prepend="and" property="companyID">
					a.companyID = #companyID#
				</isNotEmpty>
			</isPropertyAvailable>
        )
        select  orgID as "orgID", 
                porgID as "porgID", 
                orgName as "orgName", 
                seq as "seq", 
                orgCD as "orgCD"
        from    orgChart
        order by
                orgID, seq
         -->
    </select>
    
    <select id="commonservice.biz.organizationSelector.select" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
    	<!-- 
        with orgChart as
        (
            select  porgID, orgID, orgName, seq, orgCD, companyID, partnerID
            from    F_Organization
            where   activeFlg = 'U'
            and     porgID = ''
            union all
            select  a.porgID, a.orgID, a.orgName, a.seq, a.orgCD, 
                    NVL((
                    select s1.companyID
                    from   P_Partner s1
                    where  s1.partnerDivCD = 'HQ'
                    and    s1.activeFlg = 'U'
                    and    s1.partnerID = a.partnerID
                    ),a.companyID), 
                    a.partnerID
            from    F_Organization a
                    inner join orgChart b
                        on a.porgID = b.orgID
            where   a.activeFlg = 'U'
            <isPropertyAvailable property="companyID">
                <isNotEmpty prepend="and" property="companyID">
                    a.companyID = #companyID#
                </isNotEmpty>
            </isPropertyAvailable>
            <isPropertyAvailable property="partnerID">
                <isNotEmpty prepend="and" property="partnerID">
                    a.partnerID = #partnerID#
                </isNotEmpty>
            </isPropertyAvailable>
        )
        select  orgID as "orgID", 
                porgID as "porgID", 
                orgName as "orgName", 
                seq as "seq", 
                orgCD as "orgCD", 
                companyID as "companyID", 
                partnerID as "partnerID"
        from    orgChart
        union all
        select  t1.partnerID, t2.orgID, t1.partnerName||' ['||t1.partnerCD||']', 99, t1.partnerCD, t1.companyID, t1.partnerID
        from    P_Partner t1
                inner join P_Agency t2
                    on t1.partnerID = t2.partnerID
                inner join 
                    (
                    select  orgID, porgID, orgName, seq, orgCD, companyID, partnerID
                    from    orgChart
                    ) t3
                    on t2.orgID = t3.orgID
         where  (t1.partnerCD like '%'||NVL(#orgName#,'')||'%' or t1.partnerName like '%'||NVL(#orgName#,'')||'%')
         and    t1.activeFlg = 'U'
          -->
    </select>
    
    <select id="commonservice.biz.organizationCount.select" parameterClass="kr.co.nis.waf.system.biz.model.Organization" resultClass="java.lang.Integer">            
        select  count(*) as "count"
        from    F_Organization
        where   companyID = #companyID#
        and     orgID = #orgID#
    </select>
    
    <update id="commonservice.biz.organization.update" parameterClass="kr.co.nis.waf.system.biz.model.Organization">
        update  F_Organization
        set     orgClassCD = #orgClassCD#,
                orgCD = #orgCD#,
                orgName = #orgName#,
                seq = #seq#,
                remark = #remark#,
                porgID = #porgID#,
                activeFlg = #activeFlg#,
                chgDate = SYSDATE,
                chgID = #userID#,
                partnerID = #partnerID#
        where   companyID = #companyID#
        and     orgID = #orgID#
    </update>    
    
	    <insert id="commonservice.docLink.insert" parameterClass="kr.co.nis.waf.system.cms.model.DocLink">
        insert into F_DocLink (
            companyID, docLinkID, fileName, fileTypeCD, fileSize, fileURL, linkDivCD, 
            linkID, linkID1, linkID2, linkID3, linkID4, linkID5, remark, UUID
        ) values (
        	#companyID#, #docLinkID#, #fileName#, #fileTypeCD#, #fileSize#, #fileUrl#, #linkDivCD#, 
        	#linkID#, #linkID1#, #linkID2#, #linkID3#, #linkID4#, #linkID5#, #remark#, #uuID#
        )
    </insert>

    <update id="commonservice.docLink.update" parameterClass="kr.co.nis.waf.system.cms.model.DocLink">
        update
        	F_DocLink
       	set
			linkDivCD = #linkDivCD#,
       		linkID = #linkID#,
       		linkID1 = #linkID1#,
       		linkID2 = #linkID2#,
       		linkID3 = #linkID3#,
       		linkID4 = #linkID4#,
       		linkID5 = #linkID5#
        where
        	companyID = #companyID#
        and docLinkID = #docLinkID#
    </update>

    <delete id="commonservice.docLink.delete" parameterClass="kr.co.nis.waf.system.cms.model.DocLink">
        delete from F_DocLink 
        where
        	companyID = #companyID#
        and docLinkID = #docLinkID#
    </delete>
        
    <select id="commonservice.docLinkList.select" parameterClass="kr.co.nis.waf.system.cms.model.DocLink" resultClass="java.util.LinkedHashMap">
        select
        	docLinkID as "docLinkID", 
            fileName as "fileName", 
            fileURL as "fileURL", 
            UUID as "UUID",
            SUBSTR(fileName, LENGTH(fileName)-2, LENGTH(fileName)) as "fileTypeCD",
            TO_CHAR(TO_NUM(ROUND(fileSize/1024,2)))||'k' as "fileSize"
        from
        	F_DocLink
        where
        	companyID = #companyID#
        and linkDivCD = #linkDivCD#
        and linkID = #linkID#
        <isNotEmpty prepend="and" property="linkID1">
        	linkID1 = #linkID1#
        </isNotEmpty>
        <isNotEmpty prepend="and" property="linkID2">
        	linkID2 = #linkID2#
        </isNotEmpty>
        <isNotEmpty prepend="and" property="linkID3">
        	linkID3 = #linkID3#
        </isNotEmpty>
        <isNotEmpty prepend="and" property="linkID4">
        	linkID4 = #linkID4#
        </isNotEmpty>
        <isNotEmpty prepend="and" property="linkID5">
        	linkID5 = #linkID5#
        </isNotEmpty>
    </select>
    

<select id="commonservice.docLink.selectCount" parameterClass="kr.co.nis.waf.system.cms.model.DocLink" resultClass="java.lang.Integer">
        select count(*)
        from    F_DocLink 
        where   companyID = #companyID#
        and     docLinkID = #docLinkID#
    </select>
    
    <select id="commonservice.docLink.select" parameterClass="kr.co.nis.waf.system.cms.model.DocLink" resultClass="java.util.LinkedHashMap">
        select docLinkID as "docLinkID", 
                fileUrl as "fileUrl", 
                fileName as "fileName", 
                uuID as "uuID"
        from    F_DocLink 
        where   companyID = #companyID#
        and     docLinkID = #docLinkID#
    </select>
    
        <select id="commonservice.cms.topMenu.select" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct" resultClass="java.util.LinkedHashMap">    
        select a.mnuGrpID as "mnuGrpID", 
               a.mnuGrpName as "mnuGrpName", 
               a.URL as "URL"
        from   F_MenuConstructGroup a
        where  a.companyID = #companyID#
        and    a.mnuConstructID = #mnuConstructID#
        and    a.pmnuGrpID = 'ROOT'
        and    a.useYN = 'Y'
        and    a.displayYN = 'Y'
        order by
               a.seq
    </select>
    
    <select id="commonservice.cms.totalMenu.select" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct" resultClass="java.util.LinkedHashMap">
        select  z.mnuGrpID as "mnuGrpID", 
                z.mnuGrpName as "mnuGrpName", 
                z.pMnuGrpID as "pMnuGrpID", 
                z.URL as "URL", 
                z.pgmID as "pgmID"
        from    (
                select  a.mnuGrpID, a.mnuGrpName, a.pmnuGrpID, a.URL, '' as pgmID
                from    F_MenuConstructGroup a
                where   a.companyID = #companyID#
                and     a.mnuConstructID = #mnuConstructID#
                and     a.useYN = 'Y'
                and     a.displayYN = 'Y'
                union all
                select  '' as mnuGrpID, b.pgmName as mnuGrpName, mnuGrpID as pmnuGrpID, b.pgmURL, b.pgmID
                from    F_MenuConstructDetail a
                        inner join F_Program b
                        	on  a.companyID = b.companyID
                        	and a.pgmID = b.pgmID
                where   a.companyID = #companyID#
                and     a.mnuConstructID = #mnuConstructID#
                and     a.useYN = 'Y'
                ) z
    </select>
    
    <select id="CMP0100724S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
	    select  case when count(*)=0 then 'NOTEXIST'
	                else 'EXIST'
	            end  as "result"
	    from    F_MenuConstructGroup
	    where   companyID = #companyID#
	    and     mnuConstructID = #mnuConstructID#
	    and     mnuGrpID = #mnuGrpID#
    </select>
    
    <update id="commonservice.cms.menuConstruct.update" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct">
        update  F_MenuConstruct
        set     mnuConstructName = #mnuConstructName#,
                useYN = #useYN#,
                remark = #remark#,
                chgDate = SYSDATE,
                chgID = #userID#
        where   companyID = #companyID#
        and     mnuConstructID = #mnuConstructID#
    </update>
    
    <update id="commonservice.cms.menuConstructGroup.update" parameterClass="kr.co.nis.waf.system.cms.model.MenuConstruct">
        update  F_MenuConstructGroup
        set     mnuGrpName = #mnuGrpName#,
                seq = #seq#,
                useYN = #useYN#,
                displayYN = #displayYN#,
                pmnuGrpID = #pmnuGrpID#,
                url = #url#,
                chgDate = SYSDATE,
                chgID = #userID#
        where   companyID = #companyID#
        and     mnuConstructID = #mnuConstructID#
        and     mnuGrpID = #mnuGrpID#
    </update>
    
    <select id="CMP04001A01S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			max(notify_name) as "notify_name"
			, listagg(receipt_name,', ') within group (order by null) as "receipt_name"
			, max(post_period) as "post_period"
			, notify_code as "notify_code"
		from (	
			select
				notify_name
				, receipt_division
				, receipt
				, getLangDesc(#companyID#,#languageCD#,'F_CODE','RECEIPT_DIVISION',receipt_division,NULL)||'-'||
					(
					case when receipt_division='01' then (
						select userName
						from F_USER A inner join F_USER_X_PACKAGE B
							on A.companyID=B.companyID
							and A.userID=B.userID
							and A.activeflg='U'
							and A.useYN='Y'
						where
							A.companyID=#companyID#
							and B.user_no=t2.receipt
					)
					when receipt_division='02' then (
						getLangDesc(#companyID#,#languageCD#,'F_CLASS',receipt,NULL,NULL)
					)
					when receipt_division='03' then (
						getLangDesc(#companyID#,#languageCD#,'F_GROUP',receipt,NULL,NULL)
					)
					end
				) as receipt_name
				, post_period
				, t1.notify_code
			from NOTIFY_MASTER t1
			left outer join NOTIFY_RCV_SETUP t2
				on t1.notify_code = t2.notify_code
				and t2.delete_yn='N'
			where
				t1.delete_yn='N'
		)
		group by notify_code
    </select>
    
    <select id="CMP04001A02S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			getLangDesc(#companyID#,#languageCD#,'F_CODE','RECEIPT_DIVISION',receipt_division,NULL) as "receipt_division_name"
			, (
				case when receipt_division='01' then (
					select userName
					from F_USER A inner join F_USER_X_PACKAGE B
						on A.companyID=B.companyID
						and A.userID=B.userID
						and A.activeflg='U'
						and A.useYN='Y'
					where
						A.companyID=#companyID#
						and B.user_no=t1.receipt
				)
				when receipt_division='02' then (
					getLangDesc(#companyID#,#languageCD#,'F_CLASS',t1.receipt,NULL,NULL)
				)
				when receipt_division='03' then (
					getLangDesc(#companyID#,#languageCD#,'F_GROUP',t1.receipt,NULL,NULL)
				)
				end
			) as "receipt_name"
			, receipt_division as "receipt_division"
			, receipt as "receipt"
			, receipt_division as "org_receipt_division"
			, receipt as "org_receipt"
		from NOTIFY_RCV_SETUP t1
		where
			delete_yn='N'
			and notify_code = #notify_code#
    </select>
    
    <select id="CMP04001A03S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
    	select
    		user_no as "user_no"
    		, userName as "userName"
   		from F_USER A
   		inner join F_USER_X_PACKAGE B
			on A.companyID=B.companyID
			and A.userID=B.userID
   		where
			A.companyID=#companyID#
   			and A.activeFlg='U'
   			and A.useYN='Y'
			and user_no is not null
		order by userName
    </select>
    
    <select id="CMP04001A04S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
    	select
			classID as "classID"
			, className as "className"
		from (
			select
				classID
				, getLangDesc(#companyID#,#languageCD#,'F_CLASS',classID,NULL,NULL) as className
				, level as levelCnt
			from F_CLASS
			where
				classCD='DP'
				and activeFlg='U'
   				and useYN='Y'
			connect by prior classID = pclassID
			start with pclassID='ROOT'
		)
		where levelCnt = 3
    </select>
    
    <select id="CMP04001A05S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
    	select
    		grpID as "grpID"
    		, getLangDesc(#companyID#,#languageCD#,'F_GROUP',grpID,NULL,NULL) as "grpName"
   		from F_GROUP
   		where
   			companyID=#companyID#
	   		<isPropertyAvailable property="dkmdTpCD">
	   			<isNotEqual prepend="and" property="dkmdTpCD" compareValue="DK">
	   				dkmdTpCD != 'DK'
	   			</isNotEqual>
			</isPropertyAvailable>
    </select>
    
    <update id="CMP04001A02U" parameterClass="kr.co.nis.waf.system.biz.model.Notify">
    	update NOTIFY_MASTER
    	set
    		notify_name = #notify_name#
    		, post_period = #post_period#
    		, modifier = #userID#
    		, mod_dtm = sysdate
   		where
   			notify_code = #notify_code#
    </update>
    
    <insert id="CMP04001A01I" parameterClass="kr.co.nis.waf.system.biz.model.Notify">
    	merge into NOTIFY_RCV_SETUP t1
		using dual
		on (notify_code = #notify_code#
			and receipt_division = #receipt_division#
			and receipt = #receipt#
		)
		when not matched then
			insert (
	    		notify_code, receipt_division, receipt, delete_yn, register, reg_dtm
	    	)
	    	values (
	    		#notify_code#, #receipt_division#, #receipt#, 'N', #userID#, sysdate
	    	)
		when matched then
		update set
			delete_yn = 'N'
        	, modifier = #userID#
    		, mod_dtm = sysdate
    </insert>
    
    <update id="CMP04001A01U" parameterClass="kr.co.nis.waf.system.biz.model.Notify">
    	update NOTIFY_RCV_SETUP
    	set	
    		receipt_division = #receipt_division#
    		, receipt = #receipt#
    		, modifier = #userID#
    		, mod_dtm = sysdate
   		where
   			notify_code = #notify_code#
   			and receipt_division = #org_receipt_division#
    		and receipt = #org_receipt#
    </update>
    
    <update id="CMP04001A01D" parameterClass="kr.co.nis.waf.system.biz.model.Notify">
    	update NOTIFY_RCV_SETUP
    	set
    		delete_yn = 'Y'
    		, remover = #userID#
    		, rm_dtm = sysdate
   		where
   			notify_code = #notify_code#
   			and receipt_division = #org_receipt_division#
    		and receipt = #org_receipt#
    </update>
    
    <insert id="CMP04001A02I" parameterClass="kr.co.nis.waf.system.biz.model.Notify">
    	insert into NOTIFY (
    		notify_code, notify_no, subject, msg, url, delete_yn, register, reg_dtm
    	)
    	values (
    		#notify_code#, #notify_no#, #subject#, #msg#, #url#, 'N', #userID#, sysdate
    	)
    </insert>
    
    <insert id="CMP04001A03I" parameterClass="kr.co.nis.waf.system.biz.model.Notify">
    	insert into NOTIFY_RECEIPT (
    		notify_code, notify_no, receipt, rcv_dtm, delete_yn, register, reg_dtm
    	)
    	select
    		#notify_code#, #notify_no#, receipt, sysdate, 'N', #userID#, sysdate 
		from (
			select
				receipt
			from NOTIFY_RCV_SETUP
			where
				notify_code=#notify_code#
				and delete_yn='N'
				and receipt_division='01'
			union all
			select user_no
			from STAFF
			where
				department_code in (
					select
						receipt
					from NOTIFY_RCV_SETUP
					where
						notify_code=#notify_code#
						and delete_yn='N'
						and receipt_division='02'
				)
			union all
			select user_no
			from F_USER_X_PACKAGE
			where
				userID in (
					select userID
					from F_GROUPUSER
					where
						companyID=#companyID#
						and grpID in (
							select
								receipt
							from NOTIFY_RCV_SETUP
							where
								notify_code=#notify_code#
								and delete_yn='N'
								and receipt_division='03'
						)
				)
				and user_no is not null
		)
		group by receipt
    </insert>
    
    <select id="CMP04001A06S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
    	select *
    	from (
	    	select
	    		rank() over(order by t2.notify_no DESC) as row_Num
				, floor((rank() over(order by t2.notify_no desc)-1)/#displayNum#+1) as pageNum
				, notify_name as "notify_name"
				, subject as "subject"
				, rcv_dtm as "rcv_dtm"
				, nvl(url, ' ') as "url"
				, t3.notify_code as "notify_code"
				, t3.notify_no as "notify_no"
				, t3.receipt as "receipt"
			from NOTIFY_MASTER t1
			left outer join NOTIFY t2
				on t1.notify_code = t2.notify_code
			left outer join NOTIFY_RECEIPT t3
				on t2.notify_code = t3.notify_code
				and t2.notify_no = t3.notify_no
			where
				t3.receipt = #user_no#
				and confirm_dtm is null
				and to_char(rcv_dtm+7,'YYYYMMDD') > to_char(sysdate,'YYYYMMDD')
			order by t2.notify_no desc
		)
		where
			pageNum = #selectPageNum#
    </select>
    
    <select id="CMP04001A07S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
    	select
			pageNum as "pageNum"
		from (
			select
				floor((rank() over(order by t2.notify_no desc)-1)/#displayNum#+1) as pageNum
			from NOTIFY_MASTER t1
			left outer join NOTIFY t2
				on t1.notify_code = t2.notify_code
			left outer join NOTIFY_RECEIPT t3
				on t2.notify_code = t3.notify_code
				and t2.notify_no = t3.notify_no
			where
				t3.receipt = #user_no#
				and confirm_dtm is null
				and to_char(rcv_dtm+7,'YYYYMMDD') > to_char(sysdate,'YYYYMMDD')
			order by t2.notify_no desc
		)
		where
			pageNum between #startGroupPage# and #endGroupPage#
		group by pageNum
		order by pageNum
    </select>
    
    <update id="CMP04001A04I" parameterClass="kr.co.nis.waf.system.biz.model.Notify">
    	update NOTIFY_RECEIPT
    	set
    		confirm_dtm = sysdate
    		, modifier = #userID#
    		, mod_dtm = sysdate
   		where
   			notify_code = #notify_code# 
   			and notify_no = #notify_no#
   			and receipt = #receipt#
    </update>
    
    <select id="CMP04002A01S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			(case when topYN = 'Y' then 'N.T'
				else to_char(row_Num)
				end
			) as "noName"
			, title as "title"
			, (select userName from F_USER where userID=t.writeUserID) as "writerName"
			, hotYN as "hotYN"
			, (case when regDate + 2 > sysdate then 'NEW'
				else 'OLD' 
				end
			) as "chk_new"
			, row_Num as "row_Num"
			, articleID as "articleID"
			, to_char(regDate, 'yyyy.mm.dd') as "regDate"
		from (
			select * 
			from (
				select
					0 as row_Num
					, 0 as pageNum
					, 999999999999 as noseq
					, t2.articleID
					, t2.title
					, t2.writeUserID
					, t2.hotYN
					, t2.topYN
					, t2.regDate
				from F_BOARD t1
				inner join F_ARTICLE t2
					on t1.companyID = t2.companyID
					and t1.boardID = t2.boardID
				where
					t1.boardID = #boardID#
					and t2.topYN = 'Y'
					and t2.regDate+to_number(t2.bulletinTermCD) > sysdate
					and t2.activeFlg = 'U'
				order by articleID desc
			)
			union all
			select * 
			from (
				select
					rank() over(order by t2.articleID desc) as row_Num
					, floor((rank() over(order by t2.articleID desc)-1)/#displayNum#+1) as pageNum
					, rank() over(order by t2.articleID desc) as noseq
					, t2.articleID
					, t2.title
					, t2.writeUserID
					, t2.hotYN
					, t2.topYN
					, t2.regDate
				from F_BOARD t1
				inner join F_ARTICLE t2
					on t1.companyID = t2.companyID
					and t1.boardID = t2.boardID
				where
					t1.boardID = #boardID#
					and t2.topYN = 'N'
					and t2.regDate+to_number(t2.bulletinTermCD) > sysdate
					and t2.activeFlg = 'U'
				order by articleID desc
			)
			where
				pageNum = #selectPageNum#
		) t
		order by noseq desc
    </select>
    
    <select id="CMP04002A02S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
    	select
			pageNum as "pageNum"
		from (
			select
				floor((rank() over(order by articleID desc)-1)/#displayNum#+1) as pageNum
			from (
				select
					t2.articleID
					, t2.title
					, t2.writeUserID
					, t2.hotYN
					, t2.topYN
					, t2.regDate
				from F_BOARD t1
				inner join F_ARTICLE t2
					on t1.companyID = t2.companyID
					and t1.boardID = t2.boardID
				where
					t1.boardID = #boardID#
					and t2.topYN = 'N'
					and t2.regDate+to_number(t2.bulletinTermCD) > sysdate
					and t2.activeFlg = 'U'
				order by articleID desc
			)
		)
		where
			pageNum between #startGroupPage# and #endGroupPage#
		group by pageNum
		order by pageNum
    </select>
    
	<select id="CMP0500101S" parameterClass="kr.co.nis.waf.system.auth.model.Attend" resultClass="java.lang.Integer">
		 select
		 	count(*) as "count"
	 	from ATTEND
	 	where
	 		attend_date=#attend_date#
			and user_no=#user_no#
	</select>
	
	<insert id="CMP0500101I" parameterClass="kr.co.nis.waf.system.auth.model.Attend">
		insert into ATTEND (
			attend_date, user_no, goto_work_time, delete_yn, register, reg_dtm
			, modifier, mod_dtm
		)
		 values (
			#attend_date#, #user_no#, #goto_work_time#, 'N', #userID#, sysdate
			, #userID#, sysdate
		)
	</insert>
	
	<update id="CMP0500101U" parameterClass="kr.co.nis.waf.system.auth.model.Attend">
		update ATTEND
		set
			leave_work_time=#leave_work_time#
			, modifier=#userID#
			, mod_dtm=sysdate
		where
			attend_date=#attend_date#
			and user_no=#user_no#
	</update>
	
	
<!-- 	okta -->
	
	<!-- 로그인: 사용자 등록여부 조회 -->
	<select id="SYS0003S2" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		select
			count(*) as "count"
		from (
			select
				(case when t6.dkmdTpCD is null then t5.dkmdTpCD else t6.dkmdTpCD end) as dkmdTpCD
			from F_User t1
			inner join F_User_X_Package t2
				on t1.companyID = t2.companyID
				and t1.userID = t2.userID
			inner join F_GROUPUSER t4
				on t1.companyID = t4.companyID
				and t1.userID = t4.userID
			inner join F_GROUP t5
				on t4.companyID = t5.companyID
				and t4.grpID = t5.grpID
			left outer join F_Company t3
				on t2.companyID = t3.companyID
			left outer join GEMP01MT t6
				on t2.empID = t6.empID
			where
				t1.companyID = #companyID#
				and t6.emailaddr = #email#
				and t1.useYN = 'Y'
				and nvl(t3.closeYN, 'N') != 'Y'
		)
		where
			dkmdTpCD = #dkmdTpCD#
	</select>
	
	<!-- 로그인: 사용자 상세정보 조회 -->    
   	<select id="SYS0002S2" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
   		<![CDATA[
   		select  
        	t1.userID as "userID", 
            t1.userName as "userName", 
            NVL(t2.grpID, '') as "grpID",
            case when t1.mnuConstructID is null or t1.mnuConstructID = '' then
                t3.mnuConstructID
            else 
                t1.mnuConstructID
            end as "mnuConstructID",
            case when t1.mnuConstructID is null or t1.mnuConstructID = '' then 
                'GROUP'
            else 
                'USER'
            end as "authType",
            t4.authLevelCD as "authLevelCD",
            t1.companyID as "companyID",
            t4.themeCD as "themeCD",
            t4.languageCD as "languageCD",
            t4.dateFormatCD as "dateFormatCD",
            'N' as "saasYN"
            , (case when t5.dkmdTpCD is null then t3.dkmdTpCD else t5.dkmdTpCD end) as "dkmdTpCD"
            , 'N' as "initPasswdYN"
            , t5.empID as "empID"
            , t5.empNm as "empNm"
            , t5.empTpCD as "empTpCD"
            , t5.rageSphereCD as "rageSphereCD"
            , t5.officeCD as "officeCD"
            , t5.teamCD as "teamCD"
            , t5.territoryCD as "territoryCD"
            , t5.emailAddr as "emailAddr"
            , getLangDesc(#companyID#,#languageCD#,'F_CODE','RAGESPHERECD',t5.rageSphereCD,null) as "rageSphereCDName"
            , getLangDesc(#companyID#,#languageCD#,'F_CODE','OFFICECD',t5.officeCD,null) as "officeCDName"
            , getLangDesc(#companyID#,#languageCD#,'F_CODE','TEAMCD',t5.teamCD,null) as "teamCDName"
            , getLangDesc(#companyID#,#languageCD#,'F_CODE','TERRITORYCD',t5.territoryCD,null) as "territoryCDName"
            , (select decode(sum(cnt),null,0,sum(cnt)) cnt 
				 from (
				       select count(*) cnt         
				         from GPLN01MT       
				        where empID =  #userID#         
				          and apprStateCD = '40'  and eventym >= '201608'
				        union all
				       select count(*) cnt         
				         from GPLN02MT a               
				         left outer join
				              GPLN02DT d                     
				                on a.venueCD = d.venueCD                    
				                and a.eventYM = d.eventYM        
				        where a.empID =   #userID#     
				          and d.apprStateCD = '40' and a.eventym >= '201608'     
				        union all        
				       select count(*) cnt        
				         from GRLT01MT a        
				        where a.empID           =  #userID#  and a.eventym >= '201607'
				          and ( a.apprStateCD   =  '40'
				           or   a.verifyStateCD =  'ERR'  
				           or   a.payStateCD    =  '20' ) 
				        union all       
				       select count(*) cnt       
				         from GRLT02MT a               
				         left outer join
				              GRLT02DT d                     
				              on a.venueCD = d.venueCD                    
				              and a.eventYM = d.eventYM        
				        where a.empID =   #userID#       and a.eventym >= '201607' 
				          and ( d.apprStateCD   =  '40'
				           or   d.verifyStateCD =  'ERR') 
				        union all      
				       select count(*) cnt                  
				         from GSUP01MT a                     
				        where a.empID  =  #userID#            
				          and a.supportStateCD = '40'  
				        union all 
				       select count(*) cnt              
				         from GSUP02MT a                     
				        where a.empID =   #userID#            
				          and a.supportStateCD = '40'
				        union all       
				       select count(*) cnt       
				         from GPLN03MT a         
				        where a.empID =   #userID#    and a.eventym >= '201608' 
				          and a.apprStateCD = '20'       
				        union all
				       select count(*) cnt        
				         from GPLN04MT a  inner join GPLN02DT b       
				         on a.venueCD = b.venueCD                              
			            and a.eventYM = b.eventYM     
			            and a.prdcd =b.prdcd
				        where a.empID =   #userID#  and a.eventym >= '201608'
				          and a.apprStateCD = '20'  
				        union all 
				       select count(*) cnt       
				         from GRLT07MT a      
				        where a.empID =   #userID# and a.eventym >= '201607'
				          and a.apprStateCD = '20'      
				          and a.apprTpID    in ( '000000','000002') 
				        union all
				       select count(*) cnt       
				         from GRLT08MT a       
				        where a.empID =  #userID# and a.eventym >= '201607'
				          and a.apprStateCD = '20'       
				          and a.apprTpID   in ( '000000','000002') 
				        union all
				       select count(*) cnt       
				         from GKEY03MT a      
				         inner join     GKEY02MT b     
                on a.keymanID = b.keymanID     
                and a.requestDate = b.requestDate     
                and a.requestSeq = b.requestSeq      
				        where a.empID       =  #userID#
				          and a.apprStateCD = '20'
				       	union all
		       		   select count(*) cnt       
		         	     from GLTC02MT a        
			            where a.empID       =  #userID#
		    	          and a.apprStateCD = '20'
			            union all
			           select count(*) cnt       
			             from GLTC01MT a        
		        	    where a.empID       =  #userID#
		          	      and a.apprStateCD = '40'   
		          	    union all  
	     	   	       select count(*) cnt      
	     		 	     from gad01mt  a    
	     			    inner join gad03mt b
			               on a.adsupportid = b.adsupportid
	    		 	    where b.empID =  #userID#      
	        		      and b.apprStateCD = '20'    
		   			    union all 
    		   	       select count(*) cnt     
    			 	     from gad01mt a           
    			        inner join  gad03mt b          
    			           on a.adsupportid = b.adsupportid
    			           and a.regId = b.empId       
    			        where a.regID = #userID#                 
        		          and a.apprStateCD = '40'
        		        union all  
	     	   	       select count(*) cnt      
	     		 	     from gad04mt  a    
	     			    inner join gad06mt b
			               on a.adsupportid = b.adsupportid
			               and a.adSeq = b.adSeq 
	    		 	    where b.empID =  #userID#      
	        		      and b.apprStateCD = '20'
	        		      and b.adContractDivCD in ('20', '30')   
		   			    union all 
    		   	       select count(*) cnt     
    			 	     from gad04mt a           
    			        inner join  gad06mt b          
    			           on a.adsupportid = b.adsupportid
    			           and a.adSeq = b.adSeq        
    			           and a.regId = b.empId
    			        where a.regID = #userID#                 
        		          and a.apprStateCD = '40'
        		          and b.adContractDivCD in ('20', '30')
				) ) appCount
        from
        	F_User t1
            right outer join F_GroupUser t2
                on  t1.companyID = t2.companyID
                and t1.userID = t2.userID
            right outer join F_Group t3
                on t2.companyID = t3.companyID
                and t2.grpID = t3.grpID
            inner join F_User_X_Package t4
                on  t1.companyID = t4.companyID
                and t1.userID = t4.userID
			left outer join GEMP01MT t5
				on t4.empID = t5.empID
        where
        	t1.companyID = #companyID#
        and t5.emailaddr = #email#
        and ROWNUM = 1
         ]]>
        
		<!-- 
		select  
        	t1.userID as "userID", 
            t1.userName as "userName", 
            NVL(t2.grpID, '') as "grpID",
            case when t1.mnuConstructID is null or t1.mnuConstructID = '' then
                t3.mnuConstructID
            else 
                t1.mnuConstructID
            end as "mnuConstructID",
            case when t1.mnuConstructID is null or t1.mnuConstructID = '' then 
                'GROUP'
            else 
                'USER'
            end as "authType",
            t4.authLevelCD as "authLevelCD",
            t1.companyID as "companyID",
            t4.orgID as "orgID",
            t4.partnerDivCD as "partnerDivCD",
            t4.partnerID as "partnerID",
            t4.empID as "empID",
            t13.firstNm||' '||t13.lastNm as "empNm",
            t4.salOrgCD as "salOrgCD",
			(case when t4.partnerDivCD = 'AC' then t12.salOffCD else t4.salOffCD end) as "salOffCD",
            t4.prtnrID as "prtnrID",
            t12.prtnrNm as "prtnrNm",
            t4.themeCD as "themeCD",
            t4.timezoneCD as "timezoneCD",
            t11.codeDesc as "timezoneDesc",
            t15.codeDesc as "officeTimezoneDesc",
            t4.languageCD as "languageCD",
            t4.currencyCD as "currencyCD",
            t14.currencyCD as "currencyCD",
            t4.localeCD as "localeCD",
            t4.dateFormatCD as "dateFormatCD",
            t4.amtFormatCD as "amtFormatCD",
            t6.orgName as "orgName",
            t5.partnerName as "partnerName",
            NVL(t10.blockYN,'N') as "blockYN",
            (case when t10.companyID is null then 'N' else 'Y' end) as "saasYN",
            'N' as "saasYN",
            t6.orgCD as "orgCD",
            t5.partnerCD as "partnerCD",
            t5.partnerName as "partnerName",
            t7.rpartnerID as "rpartnerID",
            t4.siteID as "siteID", 
            (case when t5.partnerDivCD = 'HQ' then ''
                  when t5.partnerDivCD = 'AC' then t5.partnerID
                  when t5.partnerDivCD = 'SL' then t8.partnerID
                  else '' end) as "agencyID",
            (case when t5.partnerDivCD = 'HQ' then ''
                  when t5.partnerDivCD = 'AC' then t5.partnerCD
                  when t5.partnerDivCD = 'SL' then t8.partnerCD
                  else '' end) as "agencyCD",
            (case when t5.partnerDivCD = 'HQ' then ''
                  when t5.partnerDivCD = 'AC' then TO_CHAR(t5.partnerName)
                  when t5.partnerDivCD = 'SL' then TO_CHAR(t8.partnerName)
                  else '' end) as "agencyName",
            (case when t5.partnerDivCD = 'HQ' then t4.partnerID
                  when t5.partnerDivCD = 'AC' then t7.rpartnerID
                  when t5.partnerDivCD = 'SL' then t9.rpartnerID
                  else '' end) as "hqID"
        from
        	F_User t1
            right outer join F_GroupUser t2
                on  t1.companyID = t2.companyID
                and t1.userID = t2.userID
            right outer join F_Group t3
                on t2.companyID = t3.companyID
                and t2.grpID = t3.grpID
            inner join F_User_X_Package t4
                on  t1.companyID = t4.companyID
                and t1.userID = t4.userID
            left outer join P_Partner t5
                on  t4.companyID = t5.companyID
                and t4.partnerID = t5.partnerID
            left outer join F_Organization t6
                on  t4.companyID = t6.companyID
                and t4.orgID = t6.orgID
            left outer join P_Relation t7
                on  t4.companyID = t7.companyID
                and t4.partnerID = t7.partnerID
            left outer join P_Partner t8
                on t7.companyID = t8.companyID
                and t7.rpartnerID = t8.partnerID
            left outer join P_Relation t9
                on t8.companyID = t9.companyID
                and t8.partnerID = t9.partnerID
            left outer join S_Contract t10
                on t4.companyID = t10.companyID
            left outer join (select * from F_Code where companyID = #companyID# and codeDiv = '1805') t11
                on  t4.timezoneCD = t11.comCode
            left outer join GPRT01MT t12
                on t4.prtnrID = t12.prtnrID
            left outer join GEMP01MT t13
                on t4.empID = t13.empID
            left outer join GDPT01MT t14
            	on t4.salOrgCD = t14.salOrgCD
            left outer join (select * from F_Code where companyID = #companyID# and codeDiv = '1805') t15
                on  t14.tmzoneCD = t15.comCode	
        where
        	t1.companyID = #companyID#
        and t1.userID = #userID#
        and ROWNUM = 1
		 -->
    </select>
	
</sqlMap>
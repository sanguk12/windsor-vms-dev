<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="MDM05003">
	
	<!-- 신규업소[승인] 조회 -->
	<select id="MDM0500301S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			rowNumber as "rowNum"
			, TO_CHAR(TO_DATE(t.requestDate , 'YYYYMMDD'), 'YYYY.MM.DD')as "requestDate"
			, TO_CHAR(t.printDate, 'YYYY.MM.DD')as "printDate"
			, t.mdDupYN as "mdDupYN"
			, t.venueCD as "venueCD"
			, t.venueNm as "venueNm"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','TERRITORYCD', t.territoryCD,null) as "territoryCDName"
			, t.phoneNo as "phoneNo"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','FASCIACD', t.fascia,null) as "fasciaCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VENUEGRADCD', t.venueGradCD,null) as "venueGradCDName"
			, (select attrib04 from f_code where codediv = 'ADDRTPCD1' and comcode = t.addrTpCD1) as "addrTpCD1Name"
			, (select attrib04 from f_code where codediv = 'ADDRTPCD2' and comcode = t.addrTpCD2) as "addrTpCD2Name"
			, (select attrib04 from f_code where codediv = 'ADDRTPCD3' and comcode = t.addrTpCD3) as "addrTpCD3Name"
			, (select attrib04 from f_code where codediv = 'ADDRTPCD4' and comcode = t.addrTpCD4) as "addrTpCD4Name"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SITECD', t.siteCD,null) as "siteCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','CHANNELCD', t.channelCD,null) as "channelCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBCHANNELCD', t.subChannelCD,null) as "subChannelCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SEGMENTCD', t.segmentCD,null) as "segmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBSEGMENTCD', t.subSegmentCD,null) as "subSegmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','RESERVESEGMENTCD', t.reserveSegmentCD,null) as "reserveSegmentCDName"
 			, getLangDesc(#companyID#,#languageCD#,'F_CODE','AGEINGCD', t.ageingCD, null) as "ageingCDName" 
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ACTIVEYN', t.kegYN, null) as "kegYNName"
			, t.mdVenueCD as "mdVenueCD"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','LOCATIONCD', t.locationCD,null) as "locationCDName"
			, t.ws1SapCD as "ws1SapCD"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws1SapCD,null) as "ws1SapCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSCD',t.ws1CD,null) as "branch1"
			, t.ws2SapCD as "ws2SapCD"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws2SapCD,null) as "ws2SapCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSCD',t.ws2CD,null) as "branch2"
			, t.ws3SapCD as "ws3SapCD"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws3SapCD,null) as "ws3SapCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSCD',t.ws3CD,null) as "branch3"
			, t.ws4SapCD as "ws4SapCD"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws4SapCD,null) as "ws4SapCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSCD',t.ws4CD,null) as "branch4"
			, t.apprCommt as "apprCommt"
			, t.commt as "commt"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','APPRSTATECD',t.apprStateCD,null) as "apprStateCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','APPRSTATECD',t.requestStateCD,null) as "requestStateCDName"
			, t.apprStateCD as "apprStateCD"
			, t.requestStateCD as "requestStateCD"
			, t.levelno as "levelNo"
			,  (case when t.lapprLevelNo = t.levelNo then 'Y'
				  else 'N' end) as "lastApprYN"
			, t.lapprlevelno as "lapprlevelno"
			, t.apprTpID as "apprTpID"
			, t.tmpVenueCD as "tmpVenueCD"
			, t.empID as "empID"
			, t.postCD as "postCD"
			, t.newAddr2 as "newAddr2"
			, t.oldAddr2 as "oldAddr2"
			, t.printYN as "printYN"
		from (
			select
				rank() over(order by b.requestDate desc, a.tmpVenueCD desc) as rowNumber
				, floor((rank() over(order by b.requestDate desc, a.tmpVenueCD desc)-1)/#displayNum#+1) as pageNum
				, b.requestDate
    			, b.mdDupYN
    			, b.venueGradCD
    			, b.venueCD
    			, b.venueNm
    			, b.territoryCD
    			, b.phoneNo
    			, b.fascia
    			, b.addrTpCD1
    			, b.addrTpCD2
    			, b.addrTpCD3
    			, b.addrTpCD4
    			, b.siteCD
    			, b.segmentCD
    			, b.subSegmentCD
    			, b.channelCD
    			, b.subChannelCD
    			, b.reserveSegmentCD
    			, b.ageingCD
    			, b.kegYN
    			, b.locationCD
    			, b.ws1CD
    			, b.ws1SapCD
    			, b.ws2CD
    			, b.ws2SapCD
    			, b.ws3CD
    			, b.ws3SapCD
    			, b.ws4CD
    			, b.ws4SapCD
    			, b.venueDivCD
    			, b.incntTpCD
    			, b.activeYN
    			, b.mdVenueCD
    			, b.tmpVenueCD
    			, a.commt	as apprCommt
    			, a.apprStateCD
    			, b.commt 	as commt
    			, b.requestStateCD
    			, a.levelno
    			, b.lapprlevelno
    			, a.empID
    			, a.apprTpID
    			, b.postCD
    			, b.newAddr2
    			, b.oldAddr2
    			, b.printDate
    			, b.printYN
			from GVEN04MT a
			inner join GVEN03MT b
				on a.tmpVenueCD = b.tmpVenueCD
			where 1=1
			and a.empID = #empID#
			and a.gbn = 'I'
			and b.requestDate between replace(#requestDateFrom#, '.', '') and replace(#requestDateTo#, '.', '')
			<isPropertyAvailable property="apprStateCD">
				<isNotEmpty prepend="and" property="apprStateCD">
					a.apprStateCD = #apprStateCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="venueGradCD" >
				<isNotEmpty prepend="and" property="venueGradCD">
					b.venueGradCD = #venueGradCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="venueNm" >
				<isNotEmpty prepend="and" property="venueNm">
					upper(b.venueNm) like '%'||upper(#venueNm#)||'%'
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="territoryCD" >
				<isNotEmpty prepend="and" property="territoryCD">
					b.territoryCD = #territoryCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="printYN" >
				<isNotEmpty prepend="and" property="printYN">
					b.printYN = #printYN#
				</isNotEmpty>
			</isPropertyAvailable>
		) t
		where 1=1
			<isPropertyAvailable property="pageNum">
				and pageNum = #pageNum#
			</isPropertyAvailable>
	</select>
	
	<!-- 신규업소[승인] 조회 count -->
	<select id="MDM0500302S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			count(*) as "totalCount"
		from  GVEN04MT a
		inner join GVEN03MT b
			on a.tmpVenueCD = b.tmpVenueCD
		where 1=1
		and a.empID = #empID#
		and b.requestDate between replace(#requestDateFrom#, '.', '') and replace(#requestDateTo#, '.', '')
		and a.gbn = 'I'
			<isPropertyAvailable property="apprStateCD">
				<isNotEmpty prepend="and" property="apprStateCD">
					a.apprStateCD = #apprStateCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="venueGradCD" >
				<isNotEmpty prepend="and" property="venueGradCD">
					b.venueGradCD = #venueGradCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="venueNm" >
				<isNotEmpty prepend="and" property="venueNm">
					upper(b.venueNm) like '%'||upper(#venueNm#)||'%'
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="territoryCD" >
				<isNotEmpty prepend="and" property="territoryCD">
					b.territoryCD = #territoryCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="printYN" >
				<isNotEmpty prepend="and" property="printYN">
					b.printYN = #printYN#
				</isNotEmpty>
			</isPropertyAvailable>
	</select>
	
	<!-- 신규업소[승인] 반려시 메일보낼 하위승인자들 정보(상태가 비어있거나, 승인요청인 사람 제외) -->
	<select id="MDM0500303S" parameterClass="com.kia.mdm.model.GVEN03MT" resultClass="java.util.LinkedHashMap">
		select
			empID as "empID"
			, max(empNm) as "empNm"
			, max(emailAddr) as "emailAddr"
		from (
			select
				b.empID
				, c.empNm
				, c.emailAddr
				, b.apprStateCD
			from GVEN03MT a
			inner join GVEN04MT b
				on a.tmpVenueCD  = b.tmpVenueCD 
			inner join GEMP01MT c
				on b.empID = c.empID
			where
				a.tmpVenueCD = #tmpVenueCD#
		     	and b.apprTpID in
				<iterate property="apprTpIDs" open="(" close=")" conjunction=",">
					#apprTpIDs[]#
		     	</iterate>
				and (b.apprStateCD is not null and b.apprStateCD != '20')
				and b.empID != #empID#
				and b.gbn = 'I'
		)
		group by empID
	</select>
	
	<!--신규업소[승인] Outlet Excel -->
	<select id="MDM0500304S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			'005D0000125sjoiIAA' as "customerOwner"
			, t.venueNm as "venueNm"
			, decode(t.activeYN, 'Y', 'Active', 'N', 'Closed') as "activeYNName"
			, 'Independent' as "outletOwner"
			, 'Independent' as "operator"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','LEGALCD', t.legalCD,null) as "venueDivCDName"
			, t.venueCD as "venueCD"
			, decode(t.kegYN, 'Y', '케그', 'N', '') as "kegYNName"
			, (case when t.fascia is not null 
					then (getLangDesc(#companyID#,#languageCD#,'F_CODE','FASCIACD', t.fascia,null) || '[KR]')
					else ' '
			  end) as "fasciaCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VENUEGRADCD', t.venueGradCD,null) as "venueGradCDName"
			, (case when t.siteCD is not null
					then getLangDesc(#companyID#,#languageCD#,'F_CODE','SITECD', t.siteCD,null) || '[KR]'  
					else ' '
				end
			  ) as "siteCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SITECD', t.siteCD,null) || '[KR]'  as "siteCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD1', t.addrTpCD1,null)  as "addrTpCD1Name"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD2', t.addrTpCD2,null)  as "addrTpCD2Name"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD3', t.addrTpCD3,null)  as "addrTpCD3Name"
			, t.postCD as "postCD"
			, 'KR' as "country"
			, t.phoneNo as "phoneNo"
			, 'DKF' || t.venueKey || '_load_' || t.excelKeyCD || '_'  
				|| getLangDesc(#companyID#,#languageCD#,'F_CODE','VENUEDIVEXCELCD', t.legalCD,null)  as "venueKeyCD"
			, (case when t.ws1SapCD is not null
					then getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws1SapCD,null) || '[KR]'  
					else ' '
				end
			  ) as "ws1SapCDName"
			, (case when t.ws2SapCD is not null
					then getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws2SapCD,null) || '[KR]'  
					else ' '
				end
			  ) as "ws2SapCDName"
			, (case when t.ws3SapCD is not null
					then getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws3SapCD,null) || '[KR]'  
					else ' '
				end
			  ) as "ws3SapCDName"   
			, (case when t.ws4SapCD is not null
					then getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws4SapCD,null) || '[KR]'  
					else ' '
				end
			  ) as "ws4SapCDName"
			, 'TRUE' as "masterSellingArea"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SEGMENTCD',t.segmentCD,null) || '[KR]'  as "segmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','CHANNELCD',t.channelCD,null) || '[KR]' as "channelCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBSEGMENTCD',t.subSegmentCD,null) || '[KR]' as "subSegmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBCHANNELCD',t.subChannelCD,null) || '[KR]' as "subChannelCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','RESERVESEGMENTCD',t.reserveSegmentCD,null) || '[KR]' as "reserveSegmentCDName"
 			, getLangDesc(#companyID#,#languageCD#,'F_CODE','AGEINGCD',t.ageingCD, null) || '[KR]' as "ageingCDName"
 			, (select attrib04 from f_code where codediv = 'ADDRTPCD4' and comcode = t.addrTpCD4) || t.newAddr2  as "newAddr2"
 			, t.oldAddr2 as "oldAddr2"  
 			, t.newAddr1 as "newAddr1"  
 			, t.rnum as "rowNum"
		from (
			select
    			  b.venueGradCD
    			, b.venueCD
    			, b.venueNm
    			, b.territoryCD
    			, b.phoneNo
    			, b.fascia
    			, b.addrTpCD1
    			, b.addrTpCD2
    			, b.addrTpCD3
    			, b.addrTpCD4
    			, b.siteCD
    			, b.segmentCD
    			, b.subSegmentCD
    			, b.channelCD
    			, b.subChannelCD
    			, b.reserveSegmentCD
    			, b.ageingCD
    			, b.kegYN
    			, b.locationCD
    			, b.ws1CD
    			, b.ws1SapCD
    			, b.ws2CD
    			, b.ws2SapCD
    			, b.ws3CD
    			, b.ws3SapCD
    			, b.ws4CD
    			, b.ws4SapCD
    			, b.venueDivCD
    			, b.incntTpCD
    			, b.activeYN
    			, b.mdVenueCD
    			, b.tmpVenueCD
    			, a.levelno
    			, b.lapprlevelno
    			, a.empID
    			, b.postCD
    			, b.newAddr1
    			, b.oldAddr1
    			, b.newAddr2
    			, b.oldAddr2
    			, b.excelKeyCD
    			, b.legalCD
<!--     			, (case when b.legalCD = '30' then '20' -->
<!--     			 		when b.legalCD = '40' then '30' -->
<!--     					else b.legalCD end) as  outletLegalCD -->
    			, (case when  TO_NUMBER(to_char(sysdate, 'MM')) <![CDATA[>]]> 6 
    						then TO_NUMBER(to_char(sysdate, 'YY'))+1
      					when TO_NUMBER(to_char(sysdate, 'MM')) <![CDATA[<]]> 7 
      						then TO_NUMBER(to_char(sysdate, 'YY')) end) as venueKey
      			, ROW_NUMBER() OVER (PARTITION BY b.venueCD ORDER BY b.tmpVenueCD) as rnum 
			from GVEN04MT a
			inner join GVEN03MT b
				on a.tmpVenueCD = b.tmpVenueCD
			where 1=1
			and a.empID = #empID#
			and a.gbn = 'I'
    		<isPropertyAvailable property="tmpVenueCD">
				<isNotEmpty prepend="and" property="tmpVenueCD">
					b.tmpVenueCD = #tmpVenueCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="tmpVenueCDs">
				<isNotEmpty prepend="and" property="tmpVenueCDs">
					b.tmpVenueCD in
    				<iterate property="tmpVenueCDs" open="(" close=")" conjunction=",">
      					#tmpVenueCDs[]#
    				</iterate>
    			</isNotEmpty>
			</isPropertyAvailable>	
			order by b.requestDate desc, b.tmpVenueCD desc
		) t
		where 1=1
	</select>
	
	<!--신규업소[승인] Selling Excel -->
	<select id="MDM0500305S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			'005D0000125sjoiIAA' as "customerOwner"
			, t.venueNm as "venueNm"
			, decode(t.activeYN, 'Y', 'Active', 'N', 'Closed') as "activeYNName"
			, 'Independent' as "outletOwner"
			, 'Independent' as "operator"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','LEGALCD', t.legalCD,null) as "venueDivCDName"
			, t.venueCD as "venueCD"
			, decode(t.kegYN, 'Y', '케그', 'N', '') as "kegYNName"
			, (case when t.fascia is not null 
					then (getLangDesc(#companyID#,#languageCD#,'F_CODE','FASCIACD', t.fascia,null) || '[KR]')
					else ' '
			  end) as "fasciaCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VENUEGRADCD', t.venueGradCD,null) as "venueGradCDName"
			, (case when t.siteCD is not null
					then getLangDesc(#companyID#,#languageCD#,'F_CODE','SITECD', t.siteCD,null) || '[KR]'  
					else ' '
				end
			  ) as "siteCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD1', t.addrTpCD1,null)  as "addrTpCD1Name"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD2', t.addrTpCD2,null)  as "addrTpCD2Name"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD3', t.addrTpCD3,null)  as "addrTpCD3Name"
			, t.postCD as "postCD"
			, 'KR' as "country"
			, t.phoneNo as "phoneNo"
			, 'DKF' || t.venueKey || '_load_' || t.excelKeyCD || '_' 
				|| getLangDesc(#companyID#,#languageCD#,'F_CODE','VENUEDIVEXCELCD', t.legalCD,null)   as "venueKeyCD"
			, (case when t.ws1SapCD is not null
					then getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws1SapCD,null) || '[KR]'  
					else ' '
				end
			  ) as "ws1SapCDName"
			, (case when t.ws2SapCD is not null
					then getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws2SapCD,null) || '[KR]'  
					else ' '
				end
			  ) as "ws2SapCDName"
			, (case when t.ws3SapCD is not null
					then getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws3SapCD,null) || '[KR]'  
					else ' '
				end
			  ) as "ws3SapCDName"
			, (case when t.ws4SapCD is not null
					then getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws4SapCD,null) || '[KR]'  
					else ' '
				end
			  ) as "ws4SapCDName"
			, 'TRUE' as "masterSellingArea"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SEGMENTCD',t.segmentCD,null) || '[KR]'  as "segmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','CHANNELCD',t.channelCD,null) || '[KR]' as "channelCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBSEGMENTCD',t.subSegmentCD,null) || '[KR]' as "subSegmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBCHANNELCD',t.subChannelCD,null) || '[KR]' as "subChannelCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','RESERVESEGMENTCD',t.reserveSegmentCD,null) || '[KR]' as "reserveSegmentCDName"
 			, getLangDesc(#companyID#,#languageCD#,'F_CODE','AGEINGCD',t.ageingCD, null) || '[KR]' as "ageingCDName"
 			, t.oldAddr2 as "oldAddr2" 
		from (
			select
    			  b.venueGradCD
    			, b.venueCD
    			, b.venueNm
    			, b.territoryCD
    			, b.phoneNo
    			, b.fascia
    			, b.addrTpCD1
    			, b.addrTpCD2
    			, b.addrTpCD3
    			, b.addrTpCD4
    			, b.siteCD
    			, b.segmentCD
    			, b.subSegmentCD
    			, b.channelCD
    			, b.subChannelCD
    			, b.reserveSegmentCD
    			, b.ageingCD
    			, b.kegYN
    			, b.locationCD
    			, b.ws1CD
    			, b.ws1SapCD
    			, b.ws2CD
    			, b.ws2SapCD
    			, b.ws3CD
    			, b.ws3SapCD
    			, b.ws4CD
    			, b.ws4SapCD
    			, b.venueDivCD
    			, b.incntTpCD
    			, b.activeYN
    			, b.mdVenueCD
    			, b.tmpVenueCD
    			, a.levelno
    			, b.lapprlevelno
    			, a.empID
    			, b.postCD
    			, b.newAddr2
    			, b.oldAddr2
    			, b.legalCD
    			, b.excelKeyCD
    			, (case when  TO_NUMBER(to_char(sysdate, 'MM')) <![CDATA[>]]> 6 
    						then TO_NUMBER(to_char(sysdate, 'YY'))+1
      					when TO_NUMBER(to_char(sysdate, 'MM')) <![CDATA[<]]> 7 
      						then TO_NUMBER(to_char(sysdate, 'YY')) end) as venueKey 
			from GVEN04MT a
			inner join GVEN03MT b
				on a.tmpVenueCD = b.tmpVenueCD
			where 1=1
			and a.empID = #empID#
			and a.gbn = 'I'
			<isPropertyAvailable property="tmpVenueCD">
				<isNotEmpty prepend="and" property="tmpVenueCD">
					b.tmpVenueCD = #tmpVenueCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="tmpVenueCDs">
				<isNotEmpty prepend="and" property="tmpVenueCDs">
					b.tmpVenueCD in
    				<iterate property="tmpVenueCDs" open="(" close=")" conjunction=",">
      					#tmpVenueCDs[]#
    				</iterate>
    			</isNotEmpty>
			</isPropertyAvailable>	
			order by b.requestDate desc, b.tmpVenueCD desc
		) t
		where 1=1
	</select>
	
	<!--신규업소[승인] Territory Outlet Excel -->
	<select id="MDM0500306S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
		     'DKF' || t.venueKey || '_load_' || t.excelKeyCD || '_' || t.territoryID as "DataLoadID" 
		    , t.territoryID as "territoryID" 
			, 'DKF' || t.venueKey || '_load_' || t.excelKeyCD || '_' 
				|| getLangDesc(#companyID#,#languageCD#,'F_CODE','VENUEDIVEXCELCD', t.legalCD,null) as "outletID"
			,  decode(t.activeYN, 'Y', 'Active', 'N', 'Closed') as "activeYNName"
			, 'KR' as "country"
		from (
			select
    			b.activeYN
    		 ,  (case when TO_NUMBER(to_char(sysdate, 'MM')) <![CDATA[>]]> 6 
    						then TO_NUMBER(to_char(sysdate, 'YY'))+1
      				  when TO_NUMBER(to_char(sysdate, 'MM')) <![CDATA[<]]> 7 
      						then TO_NUMBER(to_char(sysdate, 'YY')) end) as venueKey
      		 , c.territoryID
      		 , b.excelKeyCD
      		 , b.legalCD
			from GVEN04MT a
			inner join GVEN03MT b
				on a.tmpVenueCD = b.tmpVenueCD
			left outer join gter01mt c
				on b.territoryCD = c.territoryCD  
			where 1=1
			and a.empID = #empID#
			and a.gbn = 'I'
			<isPropertyAvailable property="tmpVenueCD">
				<isNotEmpty prepend="and" property="tmpVenueCD">
					b.tmpVenueCD = #tmpVenueCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="tmpVenueCDs">
				<isNotEmpty prepend="and" property="tmpVenueCDs">
					b.tmpVenueCD in
    				<iterate property="tmpVenueCDs" open="(" close=")" conjunction=",">
      					#tmpVenueCDs[]#
    				</iterate>
    			</isNotEmpty>
			</isPropertyAvailable>	
			order by b.requestDate desc, b.tmpVenueCD desc
		) t
		where 1=1
	</select>

	<!-- 	중간승인라인 체크	 -->
	<select id="MDM0500307S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select 
			(case when lapprlevelno > (select 
										   levelno 
									    from gven04mt 
									    where 
									    	empID = #empID# 
									    and rownum = 1) then 'N'
    			else 'Y' end) as "levelChk"
		from gven03mt 
		where 
    		not requeststatecd  = '40'
 		and tmpvenueCD = (select 
 							tmpVenueCD 
 						  from gven04mt 
 						  where 
 						     empID = #empID# 
 						    and rownum = 1)
	</select>
	
   <!-- 	 엑셀 다운로드	 -->
	<select id="MDM0500308S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			 TO_CHAR(TO_DATE(t.requestDate , 'YYYYMMDD'), 'YYYY.MM.DD')as "requestDate"
			, TO_CHAR(t.printDate, 'YYYY.MM.DD')as "printDate"
			, t.mdDupYN as "mdDupYN"
			, t.venueCD as "venueCD"
			, t.venueNm as "venueNm"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','TERRITORYCD', t.territoryCD,null) as "territoryCDName"
			, t.phoneNo as "phoneNo"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','FASCIACD', t.fascia,null) as "fasciaCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VENUEGRADCD', t.venueGradCD,null) as "venueGradCDName"
			, (select attrib04 from f_code where codediv = 'ADDRTPCD1' and comcode = t.addrTpCD1) as "addrTpCD1Name"
			, (select attrib04 from f_code where codediv = 'ADDRTPCD2' and comcode = t.addrTpCD2) as "addrTpCD2Name"
			, (select attrib04 from f_code where codediv = 'ADDRTPCD3' and comcode = t.addrTpCD3) as "addrTpCD3Name"
			, (select attrib04 from f_code where codediv = 'ADDRTPCD4' and comcode = t.addrTpCD4) as "addrTpCD4Name"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SITECD', t.siteCD,null) as "siteCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','CHANNELCD', t.channelCD,null) as "channelCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBCHANNELCD', t.subChannelCD,null) as "subChannelCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SEGMENTCD', t.segmentCD,null) as "segmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBSEGMENTCD', t.subSegmentCD,null) as "subSegmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','RESERVESEGMENTCD', t.reserveSegmentCD,null) as "reserveSegmentCDName"
 			, getLangDesc(#companyID#,#languageCD#,'F_CODE','AGEINGCD', t.ageingCD, null) as "ageingCDName" 
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ACTIVEYN', t.kegYN, null) as "kegYNName"
			, t.mdVenueCD as "mdVenueCD"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','LOCATIONCD', t.locationCD,null) as "locationCDName"
			, t.ws1SapCD as "ws1SapCD"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws1SapCD,null) as "ws1SapCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSCD',t.ws1CD,null) as "branch1"
			, t.ws2SapCD as "ws2SapCD"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws2SapCD,null) as "ws2SapCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSCD',t.ws2CD,null) as "branch2"
			, t.ws3SapCD as "ws3SapCD"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws3SapCD,null) as "ws3SapCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSCD',t.ws3CD,null) as "branch3"
			, t.ws4SapCD as "ws4SapCD"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD', t.ws4SapCD,null) as "ws4SapCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSCD',t.ws4CD,null) as "branch4"
			, t.apprCommt as "apprCommt"
			, t.commt as "commt"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','APPRSTATECD',t.apprStateCD,null) as "apprStateCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','APPRSTATECD',t.requestStateCD,null) as "requestStateCDName"
			, t.apprStateCD as "apprStateCD"
			, t.requestStateCD as "requestStateCD"
			, t.levelno as "levelNo"
			,  (case when t.lapprLevelNo = t.levelNo then 'Y'
				  else 'N' end) as "lastApprYN"
			, t.lapprlevelno as "lapprlevelno"
			, t.apprTpID as "apprTpID"
			, t.tmpVenueCD as "tmpVenueCD"
			, t.empID as "empID"
			, t.postCD as "postCD"
			, t.newAddr2 as "newAddr2"
			, t.oldAddr2 as "oldAddr2"
			, t.printYN as "printYN"
		from (
			select
				 b.requestDate
    			, b.mdDupYN
    			, b.venueGradCD
    			, b.venueCD
    			, b.venueNm
    			, b.territoryCD
    			, b.phoneNo
    			, b.fascia
    			, b.addrTpCD1
    			, b.addrTpCD2
    			, b.addrTpCD3
    			, b.addrTpCD4
    			, b.siteCD
    			, b.segmentCD
    			, b.subSegmentCD
    			, b.channelCD
    			, b.subChannelCD
    			, b.reserveSegmentCD
    			, b.ageingCD
    			, b.kegYN
    			, b.locationCD
    			, b.ws1CD
    			, b.ws1SapCD
    			, b.ws2CD
    			, b.ws2SapCD
    			, b.ws3CD
    			, b.ws3SapCD
    			, b.ws4CD
    			, b.ws4SapCD
    			, b.venueDivCD
    			, b.incntTpCD
    			, b.activeYN
    			, b.mdVenueCD
    			, b.tmpVenueCD
    			, a.commt	as apprCommt
    			, a.apprStateCD
    			, b.commt 	as commt
    			, b.requestStateCD
    			, a.levelno
    			, b.lapprlevelno
    			, a.empID
    			, a.apprTpID
    			, b.postCD
    			, b.newAddr2
    			, b.oldAddr2
    			, b.printDate
    			, b.printYN
			from GVEN04MT a
			inner join GVEN03MT b
				on a.tmpVenueCD = b.tmpVenueCD
			where 1=1
			and a.empID = #empID#
			and a.gbn = 'I'
			and b.requestDate between #requestDateFrom# and #requestDateTo#
			<isPropertyAvailable property="apprStateCD">
				<isNotEmpty prepend="and" property="apprStateCD">
					a.apprStateCD = #apprStateCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="venueGradCD" >
				<isNotEmpty prepend="and" property="venueGradCD">
					b.venueGradCD = #venueGradCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="venueNm" >
				<isNotEmpty prepend="and" property="venueNm">
					upper(b.venueNm) like '%'||upper(#venueNm#)||'%'
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="territoryCD" >
				<isNotEmpty prepend="and" property="territoryCD">
					b.territoryCD = #territoryCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="printYN" >
				<isNotEmpty prepend="and" property="printYN">
					b.printYN = #printYN#
				</isNotEmpty>
			</isPropertyAvailable>
			order by b.requestDate desc, a.tmpVenueCD desc
		) t
		where 1=1
	</select>
	
	<!-- 신규업소[승인] 전체 승인상태 갱신 -->
	<update id="MDM0500301U" parameterClass="com.kia.mdm.model.GVEN03MT">
		update GVEN03MT
		set
			requestStateCD = #apprStateCD#
			, chgID = #userID#
			, chgDate = sysdate
		where
			tmpVenueCD = #tmpVenueCD#
	</update>
	
	<!-- 신규업소[승인] 승인상태 갱신 -->
	<update id="MDM0500302U" parameterClass="com.kia.mdm.model.GVEN03MT">
		update GVEN04MT
		set
			apprStateCD = '50'
			, commt = #apprCommt#
			, apprDate = sysdate
			, chgID = #userID#
			, chgDate = sysdate
		where
			tmpVenueCD = #tmpVenueCD#
		and levelNo = #levelNo#
		and gbn = 'I'
	</update>
	
	<!-- 신규업소[승인] 상위자 승인요청처리 -->
	<update id="MDM0500303U" parameterClass="com.kia.mdm.model.GVEN03MT">
		update GVEN04MT
		set
			apprStateCD = '20'
			, chgID = #userID#
			, chgDate = sysdate
		where
			tmpVenueCD = #tmpVenueCD#
		and levelNo = #levelNo#+1
		and gbn = 'I'
	</update>
	
	<!-- 신규업소[반려] 상태 갱신 -->
	<update id="MDM0500304U" parameterClass="com.kia.mdm.model.GVEN03MT">
		update GVEN03MT
		set
			requestStateCD = #apprStateCD#
			, chgID = #userID#
			, commt = #commt#
			, chgDate = sysdate
		where
			tmpVenueCD = #tmpVenueCD#
	</update>
	
	<!-- 신규업소[반려] 승인상태 갱신 -->
	<update id="MDM0500305U" parameterClass="com.kia.mdm.model.GVEN03MT">
		update GVEN04MT
		set
			apprStateCD = #apprStateCD#
			, apprDate = sysdate
			, commt = #apprCommt#
			, chgID = #userID#
			, chgDate = sysdate
		where
			tmpVenueCD = #tmpVenueCD#
		and levelNo = #levelNo#
		and gbn = 'I'
	</update>
	
	<!-- 신규업소[반려] 승인상태 갱신 -->
	<update id="MDM0500306U" parameterClass="com.kia.mdm.model.GVEN03MT">
		update GVEN03MT
		set
			printYN = 'Y'
			, printDate = sysdate 
			, chgID = #userID#
			, chgDate = sysdate
		where
			tmpVenueCD = #tmpVenueCD#
	</update>
	
	<!-- 신규업소[반려] 승인상태 갱신 -->
	<update id="MDM0500307U" parameterClass="com.kia.mdm.model.GVEN03MT">
		update GVEN03MT
		set
			requestStateCD = #apprStateCD#
 			, excelSeq = excelSeq.NEXTVAL 
			, excelKeyCD = to_char(sysdate, 'YYYYMMDD') || '_' || excelSeq.NEXTVAL 
			, chgID = #userID#
			, chgDate = sysdate
		where
			tmpVenueCD = #tmpVenueCD#
	</update>
	
	<!-- 신규업소[반려] 승인상태 갱신 -->
	<insert id="MDM0500301I" parameterClass="com.kia.mdm.model.GVEN03MT">
		merge into GVEN07MT t1
		using dual
		on (
			excelDate = to_date(sysdate, 'YYYY.MM.DD')
		)
		when not matched then
			insert (
				excelDate
		  	  , maxNum
			)
			values (
				 , to_date(sysdate, 'YYYY.MM.DD')
				 , 0
			)
		when matched then
			update
			set
		  	  maxNum  = #maxNum#          
	</insert>
	
	
</sqlMap>
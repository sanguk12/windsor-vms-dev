<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="ANL03002">
	
	<!-- ************** -->
	<!-- *** SELECT *** -->
	<!-- ************** -->
	
	<!-- 조건: 회계기준년도 조회 -->
    <select id="ANL0300201S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        SELECT t1.fy as "comCode"
        	 , t1.fy as "codeName"
          FROM ESLT_CALENDAR_MT t1
         WHERE t1.fy = 'FY16'
         GROUP BY t1.fy
         ORDER BY t1.fy
    </select>
    
	<!-- 조건: 현재시스템월 전월의 회계기준년월을 가지고온다. -->
    <select id="ANL0300202S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        SELECT substr(t.fyPeriod,1,4) as "fy"
			 , substr(t.fyPeriod,5,7) as "period"
		  FROM (
		  			SELECT GETFISCALYM(TO_CHAR(ADD_MONTHS(TO_DATE(TO_CHAR(SYSDATE,'YYYYMM'),'YYYYMM'),-1), 'YYYYMM')) as fyPeriod
			  		  FROM dual
			    )t
    </select>
	
	<!-- 조건: 권역 조회 -->
    <select id="ANL0300203S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        SELECT  t1.region AS "regionCode"    
              , t1.region AS "regionName"   
          FROM ESLT_TEAM_MT  t1
         WHERE t1.useYn   = 'Y'
			<isPropertyAvailable property="channel">
				<isNotEmpty prepend="and" property="channel">
					t1.channel = #channel#
				</isNotEmpty>
			</isPropertyAvailable>
      GROUP BY t1.region
    </select>
    
    <!-- 조건: empID에 따른 채널 및 권역정보 값을 가지고 온다. -->
    <select id="ANL0300204S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        SELECT t1.channel  as "channel"
             , t1.region as "region"
             , case when t1.empId1 =  #empID#  then ''  else t1.team end  as "team"
             , case when t1.empId1 =  #empID#  then 'Y'  else 'N' end as "emp1YN"
          FROM ESLT_TEAM_MT t1
         WHERE 1=1
			<isPropertyAvailable property="empID">
				<isNotEmpty prepend="and" property="empID">
					( t1.empId  = #empID#   OR
                 	t1.empId1 = #empID# )
				</isNotEmpty>
			</isPropertyAvailable>
    </select>
    
    <!-- 조건: 팀 조회 -->
    <select id="ANL0300205S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        SELECT t1.TEAM AS "teamCode"    
               ,t1.TEAM  AS "teamName"   
          FROM ESLT_TEAM_MT  t1
         WHERE t1. UseYn   = 'Y'
         	<isPropertyAvailable property="channel">
				<isNotEmpty prepend="and" property="channel">
					t1. Channel = #channel#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="region">
				<isNotEmpty prepend="and" property="region">
					t1. Region  = #region#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="empid">
				<isNotEmpty prepend="and" property="empid">
					( t1.empId  = #empid#   OR
                 	t1.empId1 = #empid# )
				</isNotEmpty>
			</isPropertyAvailable>
      ORDER BY t1. dispSeq
    </select>
    
    <!-- Industry Depletion Forecast 조회 -->
    <select id="ANL0300206S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		SELECT    
				T1.DataLv1             	AS  DataLv1		<!-- Whisky--> 
              , T1.DataLv1_NM			AS  DataLv1_NM
              , T1.DataLv2             	AS  DataLv2     <!-- ON, OFF -->
              , T1.DataLv2_NM       	AS  DataLv2_NM
              , T1.DataLv3             	AS  DataLv3     <!-- LOCAL, INT`L, W OFF -->
              , T1.DataLv3_NM       	AS  DataLv3_NM     
              , T1.DataLv4             	AS  DataLv4     <!-- 권역 또는 팀 --> 
              , T1.DataLv4_NM       	AS  DataLv4_NM  
              , T1.sortNo                   			<!-- 팀의 조회 우선 순 -->
            <!-- 전년 ind Actual 실적 -->
			,NVL(t2.p_ind_ac_Vol01,0) AS  ind_ac_P01	<!--전년 P01볼륨 -->
			,NVL(t2.p_ind_ac_Vol02,0) AS  ind_ac_P02	<!--전년P02볼륨 -->
			,NVL(t2.p_ind_ac_Vol03,0) AS  ind_ac_P03	<!--전년P03볼륨 -->
			,NVL(t2.p_ind_ac_Vol04,0) AS  ind_ac_P04	<!--전년P04볼륨 -->
			,NVL(t2.p_ind_ac_Vol05,0) AS  ind_ac_P05	<!--전년P05볼륨 -->
			,NVL(t2.p_ind_ac_Vol06,0) AS  ind_ac_P06	<!--전년P06볼륨 -->
			,NVL(t2.p_ind_ac_Vol07,0) AS  ind_ac_P07	<!--전년P07볼륨 -->
			,NVL(t2.p_ind_ac_Vol08,0) AS  ind_ac_P08	<!--전년P08볼륨 -->
			,NVL(t2.p_ind_ac_Vol09,0) AS  ind_ac_P09	<!--전년P09볼륨 -->
			,NVL(t2.p_ind_ac_Vol10,0) AS  ind_ac_P10	<!--전년P10볼륨 -->
			,NVL(t2.p_ind_ac_Vol11,0) AS  ind_ac_P11	<!--전년P11볼륨 -->
			,NVL(t2.p_ind_ac_Vol12,0) AS  ind_ac_P12	<!--전년P12볼륨  -->
			,(NVL(t2.p_ind_ac_Vol01,0)+NVL(t2.p_ind_ac_Vol02,0)+NVL(t2.p_ind_ac_Vol03,0))  AS  ind_ac_Q01	<!--전년Q01볼륨  -->
			,(NVL(t2.p_ind_ac_Vol04,0)+NVL(t2.p_ind_ac_Vol05,0)+NVL(t2.p_ind_ac_Vol06,0))  AS  ind_ac_Q02	<!--전년Q01볼륨  -->
			,(NVL(t2.p_ind_ac_Vol07,0)+NVL(t2.p_ind_ac_Vol08,0)+NVL(t2.p_ind_ac_Vol09,0))  AS  ind_ac_Q03	<!--전년Q01볼륨  -->
			,(NVL(t2.p_ind_ac_Vol10,0)+NVL(t2.p_ind_ac_Vol11,0)+NVL(t2.p_ind_ac_Vol12,0))  AS  ind_ac_Q04	<!--전년Q01볼륨  -->
			,(NVL(t2.p_ind_ac_Vol01,0)+NVL(t2.p_ind_ac_Vol02,0)+NVL(t2.p_ind_ac_Vol03,0)+NVL(t2.p_ind_ac_Vol04,0)+NVL(t2.p_ind_ac_Vol05,0)+NVL(t2.p_ind_ac_Vol06,0))  AS  ind_ac_H01	<!--전년H01볼륨  -->
			,(NVL(t2.p_ind_ac_Vol07,0)+NVL(t2.p_ind_ac_Vol08,0)+NVL(t2.p_ind_ac_Vol09,0)+NVL(t2.p_ind_ac_Vol10,0)+NVL(t2.p_ind_ac_Vol11,0)+NVL(t2.p_ind_ac_Vol12,0))  AS  ind_ac_H02	<!--전년H02볼륨  -->
			,NVL(t2.p_ind_ac_Vol01,0) AS  ind_ac_YTD01
			,(NVL(t2.p_ind_ac_Vol01,0)+NVL(t2.p_ind_ac_Vol02,0)) AS  ind_ac_YTD02
			,(NVL(t2.p_ind_ac_Vol01,0)+NVL(t2.p_ind_ac_Vol02,0)+NVL(t2.p_ind_ac_Vol03,0)) AS  ind_ac_YTD03
			,(NVL(t2.p_ind_ac_Vol01,0)+NVL(t2.p_ind_ac_Vol02,0)+NVL(t2.p_ind_ac_Vol03,0)+NVL(t2.p_ind_ac_Vol04,0)) AS  ind_ac_YTD04
			,(NVL(t2.p_ind_ac_Vol01,0)+NVL(t2.p_ind_ac_Vol02,0)+NVL(t2.p_ind_ac_Vol03,0)+NVL(t2.p_ind_ac_Vol04,0)+NVL(t2.p_ind_ac_Vol05,0)) AS  ind_ac_YTD05
			,(NVL(t2.p_ind_ac_Vol01,0)+NVL(t2.p_ind_ac_Vol02,0)+NVL(t2.p_ind_ac_Vol03,0)+NVL(t2.p_ind_ac_Vol04,0)+NVL(t2.p_ind_ac_Vol05,0)+NVL(t2.p_ind_ac_Vol06,0)) AS  ind_ac_YTD06
			,(NVL(t2.p_ind_ac_Vol01,0)+NVL(t2.p_ind_ac_Vol02,0)+NVL(t2.p_ind_ac_Vol03,0)+NVL(t2.p_ind_ac_Vol04,0)+NVL(t2.p_ind_ac_Vol05,0)+NVL(t2.p_ind_ac_Vol06,0)+NVL(t2.p_ind_ac_Vol07,0)) AS  ind_ac_YTD07
			,(NVL(t2.p_ind_ac_Vol01,0)+NVL(t2.p_ind_ac_Vol02,0)+NVL(t2.p_ind_ac_Vol03,0)+NVL(t2.p_ind_ac_Vol04,0)+NVL(t2.p_ind_ac_Vol05,0)+NVL(t2.p_ind_ac_Vol06,0)+NVL(t2.p_ind_ac_Vol07,0)+NVL(t2.p_ind_ac_Vol08,0)) AS  ind_ac_YTD08
			,(NVL(t2.p_ind_ac_Vol01,0)+NVL(t2.p_ind_ac_Vol02,0)+NVL(t2.p_ind_ac_Vol03,0)+NVL(t2.p_ind_ac_Vol04,0)+NVL(t2.p_ind_ac_Vol05,0)+NVL(t2.p_ind_ac_Vol06,0)+NVL(t2.p_ind_ac_Vol07,0)+NVL(t2.p_ind_ac_Vol08,0)+NVL(t2.p_ind_ac_Vol09,0)) AS  ind_ac_YTD09
			,(NVL(t2.p_ind_ac_Vol01,0)+NVL(t2.p_ind_ac_Vol02,0)+NVL(t2.p_ind_ac_Vol03,0)+NVL(t2.p_ind_ac_Vol04,0)+NVL(t2.p_ind_ac_Vol05,0)+NVL(t2.p_ind_ac_Vol06,0)+NVL(t2.p_ind_ac_Vol07,0)+NVL(t2.p_ind_ac_Vol08,0)+NVL(t2.p_ind_ac_Vol09,0)+NVL(t2.p_ind_ac_Vol10,0)) AS  ind_ac_YTD10
			,(NVL(t2.p_ind_ac_Vol01,0)+NVL(t2.p_ind_ac_Vol02,0)+NVL(t2.p_ind_ac_Vol03,0)+NVL(t2.p_ind_ac_Vol04,0)+NVL(t2.p_ind_ac_Vol05,0)+NVL(t2.p_ind_ac_Vol06,0)+NVL(t2.p_ind_ac_Vol07,0)+NVL(t2.p_ind_ac_Vol08,0)+NVL(t2.p_ind_ac_Vol09,0)+NVL(t2.p_ind_ac_Vol10,0)+NVL(t2.p_ind_ac_Vol11,0)) AS  ind_ac_YTD11
			,(NVL(t2.p_ind_ac_Vol01,0)+NVL(t2.p_ind_ac_Vol02,0)+NVL(t2.p_ind_ac_Vol03,0)+NVL(t2.p_ind_ac_Vol04,0)+NVL(t2.p_ind_ac_Vol05,0)+NVL(t2.p_ind_ac_Vol06,0)+NVL(t2.p_ind_ac_Vol07,0)+NVL(t2.p_ind_ac_Vol08,0)+NVL(t2.p_ind_ac_Vol09,0)+NVL(t2.p_ind_ac_Vol10,0)+NVL(t2.p_ind_ac_Vol11,0)+NVL(t2.p_ind_ac_Vol12,0)) AS  ind_ac_YTD12
			
			<!-- 당년 ind Forecast -->
			,NVL(t3.n_ind_for_Vol01,0) AS  ind_for_P01	<!-- 당년P01볼륨 -->
			,NVL(t3.n_ind_for_Vol02,0) AS  ind_for_P02	<!-- 당년P02볼륨 -->
			,NVL(t3.n_ind_for_Vol03,0) AS  ind_for_P03	<!-- 당년P03볼륨 -->
			,NVL(t3.n_ind_for_Vol04,0) AS  ind_for_P04	<!-- 당년P04볼륨 -->
			,NVL(t3.n_ind_for_Vol05,0) AS  ind_for_P05	<!-- 당년P05볼륨 -->
			,NVL(t3.n_ind_for_Vol06,0) AS  ind_for_P06	<!-- 당년P06볼륨 -->
			,NVL(t3.n_ind_for_Vol07,0) AS  ind_for_P07	<!-- 당년P07볼륨 -->
			,NVL(t3.n_ind_for_Vol08,0) AS  ind_for_P08	<!-- 당년P08볼륨 -->
			,NVL(t3.n_ind_for_Vol09,0) AS  ind_for_P09	<!-- 당년P09볼륨 -->
			,NVL(t3.n_ind_for_Vol10,0) AS  ind_for_P10	<!-- 당년P10볼륨 -->
			,NVL(t3.n_ind_for_Vol11,0) AS  ind_for_P11	<!-- 당년P11볼륨 -->
			,NVL(t3.n_ind_for_Vol12,0) AS  ind_for_P12  <!--당년P12볼륨  -->
			,(NVL(t3.n_ind_for_Vol01,0)+NVL(t3.n_ind_for_Vol02,0)+NVL(t3.n_ind_for_Vol03,0)) AS  ind_for_Q01  <!--당년Q01볼륨  -->
			,(NVL(t3.n_ind_for_Vol04,0)+NVL(t3.n_ind_for_Vol05,0)+NVL(t3.n_ind_for_Vol06,0)) AS  ind_for_Q02  <!--당년Q02볼륨  -->
			,(NVL(t3.n_ind_for_Vol07,0)+NVL(t3.n_ind_for_Vol08,0)+NVL(t3.n_ind_for_Vol09,0)) AS  ind_for_Q03  <!--당년Q03볼륨  -->
			,(NVL(t3.n_ind_for_Vol10,0)+NVL(t3.n_ind_for_Vol11,0)+NVL(t3.n_ind_for_Vol12,0)) AS  ind_for_Q04  <!--당년Q04볼륨  -->
			,(NVL(t3.n_ind_for_Vol01,0)+NVL(t3.n_ind_for_Vol02,0)+NVL(t3.n_ind_for_Vol03,0)+NVL(t3.n_ind_for_Vol04,0)+NVL(t3.n_ind_for_Vol05,0)+NVL(t3.n_ind_for_Vol06,0)) AS  ind_for_H01  <!--당년H01볼륨  -->
			,(NVL(t3.n_ind_for_Vol07,0)+NVL(t3.n_ind_for_Vol08,0)+NVL(t3.n_ind_for_Vol09,0)+NVL(t3.n_ind_for_Vol10,0)+NVL(t3.n_ind_for_Vol11,0)+NVL(t3.n_ind_for_Vol12,0)) AS  ind_for_H02  <!--당년H02볼륨  -->
			,NVL(t3.n_ind_for_Vol01,0) AS  ind_for_YTD01
			,(NVL(t3.n_ind_for_Vol01,0)+NVL(t3.n_ind_for_Vol02,0)) AS  ind_for_YTD02
			,(NVL(t3.n_ind_for_Vol01,0)+NVL(t3.n_ind_for_Vol02,0)+NVL(t3.n_ind_for_Vol03,0)) AS  ind_for_YTD03
			,(NVL(t3.n_ind_for_Vol01,0)+NVL(t3.n_ind_for_Vol02,0)+NVL(t3.n_ind_for_Vol03,0)+NVL(t3.n_ind_for_Vol04,0)) AS  ind_for_YTD04
			,(NVL(t3.n_ind_for_Vol01,0)+NVL(t3.n_ind_for_Vol02,0)+NVL(t3.n_ind_for_Vol03,0)+NVL(t3.n_ind_for_Vol04,0)+NVL(t3.n_ind_for_Vol05,0)) AS  ind_for_YTD05
			,(NVL(t3.n_ind_for_Vol01,0)+NVL(t3.n_ind_for_Vol02,0)+NVL(t3.n_ind_for_Vol03,0)+NVL(t3.n_ind_for_Vol04,0)+NVL(t3.n_ind_for_Vol05,0)+NVL(t3.n_ind_for_Vol06,0)) AS  ind_for_YTD06
			,(NVL(t3.n_ind_for_Vol01,0)+NVL(t3.n_ind_for_Vol02,0)+NVL(t3.n_ind_for_Vol03,0)+NVL(t3.n_ind_for_Vol04,0)+NVL(t3.n_ind_for_Vol05,0)+NVL(t3.n_ind_for_Vol06,0)+NVL(t3.n_ind_for_Vol07,0)) AS  ind_for_YTD07
			,(NVL(t3.n_ind_for_Vol01,0)+NVL(t3.n_ind_for_Vol02,0)+NVL(t3.n_ind_for_Vol03,0)+NVL(t3.n_ind_for_Vol04,0)+NVL(t3.n_ind_for_Vol05,0)+NVL(t3.n_ind_for_Vol06,0)+NVL(t3.n_ind_for_Vol07,0)+NVL(t3.n_ind_for_Vol08,0)) AS  ind_for_YTD08
			,(NVL(t3.n_ind_for_Vol01,0)+NVL(t3.n_ind_for_Vol02,0)+NVL(t3.n_ind_for_Vol03,0)+NVL(t3.n_ind_for_Vol04,0)+NVL(t3.n_ind_for_Vol05,0)+NVL(t3.n_ind_for_Vol06,0)+NVL(t3.n_ind_for_Vol07,0)+NVL(t3.n_ind_for_Vol08,0)+NVL(t3.n_ind_for_Vol09,0)) AS  ind_for_YTD09
			,(NVL(t3.n_ind_for_Vol01,0)+NVL(t3.n_ind_for_Vol02,0)+NVL(t3.n_ind_for_Vol03,0)+NVL(t3.n_ind_for_Vol04,0)+NVL(t3.n_ind_for_Vol05,0)+NVL(t3.n_ind_for_Vol06,0)+NVL(t3.n_ind_for_Vol07,0)+NVL(t3.n_ind_for_Vol08,0)+NVL(t3.n_ind_for_Vol09,0)+NVL(t3.n_ind_for_Vol10,0)) AS  ind_for_YTD10
			,(NVL(t3.n_ind_for_Vol01,0)+NVL(t3.n_ind_for_Vol02,0)+NVL(t3.n_ind_for_Vol03,0)+NVL(t3.n_ind_for_Vol04,0)+NVL(t3.n_ind_for_Vol05,0)+NVL(t3.n_ind_for_Vol06,0)+NVL(t3.n_ind_for_Vol07,0)+NVL(t3.n_ind_for_Vol08,0)+NVL(t3.n_ind_for_Vol09,0)+NVL(t3.n_ind_for_Vol10,0)+NVL(t3.n_ind_for_Vol11,0)) AS  ind_for_YTD11
			,(NVL(t3.n_ind_for_Vol01,0)+NVL(t3.n_ind_for_Vol02,0)+NVL(t3.n_ind_for_Vol03,0)+NVL(t3.n_ind_for_Vol04,0)+NVL(t3.n_ind_for_Vol05,0)+NVL(t3.n_ind_for_Vol06,0)+NVL(t3.n_ind_for_Vol07,0)+NVL(t3.n_ind_for_Vol08,0)+NVL(t3.n_ind_for_Vol09,0)+NVL(t3.n_ind_for_Vol10,0)+NVL(t3.n_ind_for_Vol11,0)+NVL(t3.n_ind_for_Vol12,0)) AS  ind_for_YTD12
			<!-- 당년  ind Actual(Outlook) -->
			<!-- 당년실적이 있으면 실적으로 없으면 Outlook으로 보여줌 -->
			<!-- ,CASE WHEN  (t2.N_ind_ac_Vol01 IS NULL) THEN NVL(t3.N_ind_out_Vol01,0) ELSE NVL(t2.N_ind_ac_Vol01, 0) END AS ind_out_P01 -->	<!-- 당년P01볼륨 -->
			,CASE WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 > 0 THEN 0 
                 WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 = 0 THEN NVL(t3.N_ind_out_Vol01,0) ELSE NVL(t2.N_ind_ac_Vol01, 0) END AS ind_out_P01   <!-- 당년P01볼륨 -->
			,CASE WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 > 0 THEN 0 
                 WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 = 0 THEN NVL(t3.N_ind_out_Vol02,0) ELSE NVL(t2.N_ind_ac_Vol02, 0) END AS ind_out_P02   <!-- 당년P02볼륨 -->
			,CASE WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 > 0 THEN 0 
                 WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 = 0 THEN NVL(t3.N_ind_out_Vol03,0) ELSE NVL(t2.N_ind_ac_Vol03, 0) END AS ind_out_P03   <!-- 당년P03볼륨 -->
			,CASE WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 > 0 THEN 0 
                 WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 = 0 THEN NVL(t3.N_ind_out_Vol04,0) ELSE NVL(t2.N_ind_ac_Vol04, 0) END AS ind_out_P04   <!-- 당년P04볼륨 -->
			,CASE WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 > 0 THEN 0 
                 WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 = 0 THEN NVL(t3.N_ind_out_Vol05,0) ELSE NVL(t2.N_ind_ac_Vol05, 0) END AS ind_out_P05   <!-- 당년P05볼륨 -->
			,CASE WHEN  t2.N_ind_ac_Vol06 IS NULL AND t4.N_ind_Cnt06 > 0 THEN 0 
                 WHEN  t2.N_ind_ac_Vol06 IS NULL AND t4.N_ind_Cnt06 = 0 THEN NVL(t3.N_ind_out_Vol06,0) ELSE NVL(t2.N_ind_ac_Vol06, 0) END AS ind_out_P06   <!-- 당년P06볼륨 -->
			,CASE WHEN  t2.N_ind_ac_Vol07 IS NULL AND t4.N_ind_Cnt07 > 0 THEN 0 
                 WHEN  t2.N_ind_ac_Vol07 IS NULL AND t4.N_ind_Cnt07 = 0 THEN NVL(t3.N_ind_out_Vol07,0) ELSE NVL(t2.N_ind_ac_Vol07, 0) END AS ind_out_P07   <!-- 당년P07볼륨 -->
			,CASE WHEN  t2.N_ind_ac_Vol08 IS NULL AND t4.N_ind_Cnt08 > 0 THEN 0 
                 WHEN  t2.N_ind_ac_Vol08 IS NULL AND t4.N_ind_Cnt08 = 0 THEN NVL(t3.N_ind_out_Vol08,0) ELSE NVL(t2.N_ind_ac_Vol08, 0) END AS ind_out_P08   <!-- 당년P08볼륨 -->
			,CASE WHEN  t2.N_ind_ac_Vol09 IS NULL AND t4.N_ind_Cnt09 > 0 THEN 0 
                 WHEN  t2.N_ind_ac_Vol09 IS NULL AND t4.N_ind_Cnt09 = 0 THEN NVL(t3.N_ind_out_Vol09,0) ELSE NVL(t2.N_ind_ac_Vol09, 0) END AS ind_out_P09   <!-- 당년P09볼륨 -->
			,CASE WHEN  t2.N_ind_ac_Vol10 IS NULL AND t4.N_ind_Cnt10 > 0 THEN 0 
                 WHEN  t2.N_ind_ac_Vol10 IS NULL AND t4.N_ind_Cnt10 = 0 THEN NVL(t3.N_ind_out_Vol10,0) ELSE NVL(t2.N_ind_ac_Vol10, 0) END AS ind_out_P10   <!-- 당년P10볼륨 -->
			,CASE WHEN  t2.N_ind_ac_Vol11 IS NULL AND t4.N_ind_Cnt11 > 0 THEN 0 
                 WHEN  t2.N_ind_ac_Vol11 IS NULL AND t4.N_ind_Cnt11 = 0 THEN NVL(t3.N_ind_out_Vol11,0) ELSE NVL(t2.N_ind_ac_Vol11, 0) END AS ind_out_P11   <!-- 당년P11볼륨 -->
			,CASE WHEN  t2.N_ind_ac_Vol12 IS NULL AND t4.N_ind_Cnt12 > 0 THEN 0 
                 WHEN  t2.N_ind_ac_Vol12 IS NULL AND t4.N_ind_Cnt12 = 0 THEN NVL(t3.N_ind_out_Vol12,0) ELSE NVL(t2.N_ind_ac_Vol12, 0) END AS ind_out_P12   <!-- 당년P12볼륨 -->
			,((CASE WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 = 0 THEN NVL(t3.N_ind_out_Vol01,0) ELSE NVL(t2.N_ind_ac_Vol01, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 = 0 THEN NVL(t3.N_ind_out_Vol02,0) ELSE NVL(t2.N_ind_ac_Vol02, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 = 0 THEN NVL(t3.N_ind_out_Vol03,0) ELSE NVL(t2.N_ind_ac_Vol03, 0) END)) 
			AS  ind_out_Q01<!-- 당년Q01볼륨 -->
			,((CASE WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 = 0 THEN NVL(t3.N_ind_out_Vol04,0) ELSE NVL(t2.N_ind_ac_Vol04, 0) END) 
			+ (CASE WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 = 0 THEN NVL(t3.N_ind_out_Vol05,0) ELSE NVL(t2.N_ind_ac_Vol05, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol06 IS NULL AND t4.N_ind_Cnt06 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol06 IS NULL AND t4.N_ind_Cnt06 = 0 THEN NVL(t3.N_ind_out_Vol06,0) ELSE NVL(t2.N_ind_ac_Vol06, 0) END))
			AS  ind_out_Q02<!-- 당년Q02볼륨 -->
			, ((CASE WHEN  t2.N_ind_ac_Vol07 IS NULL AND t4.N_ind_Cnt07 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol07 IS NULL AND t4.N_ind_Cnt07 = 0 THEN NVL(t3.N_ind_out_Vol07,0) ELSE NVL(t2.N_ind_ac_Vol07, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol08 IS NULL AND t4.N_ind_Cnt08 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol08 IS NULL AND t4.N_ind_Cnt08 = 0 THEN NVL(t3.N_ind_out_Vol08,0) ELSE NVL(t2.N_ind_ac_Vol08, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol09 IS NULL AND t4.N_ind_Cnt09 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol09 IS NULL AND t4.N_ind_Cnt09 = 0 THEN NVL(t3.N_ind_out_Vol09,0) ELSE NVL(t2.N_ind_ac_Vol09, 0) END))
			AS  ind_out_Q03<!-- 당년Q03볼륨 -->
			, ((CASE WHEN  t2.N_ind_ac_Vol10 IS NULL AND t4.N_ind_Cnt10 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol10 IS NULL AND t4.N_ind_Cnt10 = 0 THEN NVL(t3.N_ind_out_Vol10,0) ELSE NVL(t2.N_ind_ac_Vol10, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol11 IS NULL AND t4.N_ind_Cnt11 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol11 IS NULL AND t4.N_ind_Cnt11 = 0 THEN NVL(t3.N_ind_out_Vol11,0) ELSE NVL(t2.N_ind_ac_Vol11, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol12 IS NULL AND t4.N_ind_Cnt12 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol12 IS NULL AND t4.N_ind_Cnt12 = 0 THEN NVL(t3.N_ind_out_Vol12,0) ELSE NVL(t2.N_ind_ac_Vol12, 0) END))
			AS  ind_out_Q04<!-- 당년Q04볼륨 -->
			,((CASE WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 = 0 THEN NVL(t3.N_ind_out_Vol01,0) ELSE NVL(t2.N_ind_ac_Vol01, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 = 0 THEN NVL(t3.N_ind_out_Vol02,0) ELSE NVL(t2.N_ind_ac_Vol02, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 = 0 THEN NVL(t3.N_ind_out_Vol03,0) ELSE NVL(t2.N_ind_ac_Vol03, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 = 0 THEN NVL(t3.N_ind_out_Vol04,0) ELSE NVL(t2.N_ind_ac_Vol04, 0) END) 
			+ (CASE WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 = 0 THEN NVL(t3.N_ind_out_Vol05,0) ELSE NVL(t2.N_ind_ac_Vol05, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol06 IS NULL AND t4.N_ind_Cnt06 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol06 IS NULL AND t4.N_ind_Cnt06 = 0 THEN NVL(t3.N_ind_out_Vol06,0) ELSE NVL(t2.N_ind_ac_Vol06, 0) END))
			AS  ind_out_H01<!-- 당년H01볼륨 -->
			, ((CASE WHEN  t2.N_ind_ac_Vol07 IS NULL AND t4.N_ind_Cnt07 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol07 IS NULL AND t4.N_ind_Cnt07 = 0 THEN NVL(t3.N_ind_out_Vol07,0) ELSE NVL(t2.N_ind_ac_Vol07, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol08 IS NULL AND t4.N_ind_Cnt08 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol08 IS NULL AND t4.N_ind_Cnt08 = 0 THEN NVL(t3.N_ind_out_Vol08,0) ELSE NVL(t2.N_ind_ac_Vol08, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol09 IS NULL AND t4.N_ind_Cnt09 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol09 IS NULL AND t4.N_ind_Cnt09 = 0 THEN NVL(t3.N_ind_out_Vol09,0) ELSE NVL(t2.N_ind_ac_Vol09, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol10 IS NULL AND t4.N_ind_Cnt10 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol10 IS NULL AND t4.N_ind_Cnt10 = 0 THEN NVL(t3.N_ind_out_Vol10,0) ELSE NVL(t2.N_ind_ac_Vol10, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol11 IS NULL AND t4.N_ind_Cnt11 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol11 IS NULL AND t4.N_ind_Cnt11 = 0 THEN NVL(t3.N_ind_out_Vol11,0) ELSE NVL(t2.N_ind_ac_Vol11, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol12 IS NULL AND t4.N_ind_Cnt12 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol12 IS NULL AND t4.N_ind_Cnt12 = 0 THEN NVL(t3.N_ind_out_Vol12,0) ELSE NVL(t2.N_ind_ac_Vol12, 0) END))
			AS  ind_out_H02<!-- 당년H02볼륨 -->
			, (CASE WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 > 0 THEN 0  WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 = 0 THEN NVL(t3.N_ind_out_Vol01,0) ELSE NVL(t2.N_ind_ac_Vol01, 0) END)
			AS  ind_out_YTD01
			, (CASE WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 = 0 THEN NVL(t3.N_ind_out_Vol01,0) ELSE NVL(t2.N_ind_ac_Vol01, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 = 0 THEN NVL(t3.N_ind_out_Vol02,0) ELSE NVL(t2.N_ind_ac_Vol02, 0) END)
			AS ind_out_YTD02
			, (CASE WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 = 0 THEN NVL(t3.N_ind_out_Vol01,0) ELSE NVL(t2.N_ind_ac_Vol01, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 = 0 THEN NVL(t3.N_ind_out_Vol02,0) ELSE NVL(t2.N_ind_ac_Vol02, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 = 0 THEN NVL(t3.N_ind_out_Vol03,0) ELSE NVL(t2.N_ind_ac_Vol03, 0) END)
			AS ind_out_YTD03
			, (CASE WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 = 0 THEN NVL(t3.N_ind_out_Vol01,0) ELSE NVL(t2.N_ind_ac_Vol01, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 = 0 THEN NVL(t3.N_ind_out_Vol02,0) ELSE NVL(t2.N_ind_ac_Vol02, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 = 0 THEN NVL(t3.N_ind_out_Vol03,0) ELSE NVL(t2.N_ind_ac_Vol03, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 = 0 THEN NVL(t3.N_ind_out_Vol04,0) ELSE NVL(t2.N_ind_ac_Vol04, 0) END)
			AS ind_out_YTD04
			, (CASE WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 = 0 THEN NVL(t3.N_ind_out_Vol01,0) ELSE NVL(t2.N_ind_ac_Vol01, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 = 0 THEN NVL(t3.N_ind_out_Vol02,0) ELSE NVL(t2.N_ind_ac_Vol02, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 = 0 THEN NVL(t3.N_ind_out_Vol03,0) ELSE NVL(t2.N_ind_ac_Vol03, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 = 0 THEN NVL(t3.N_ind_out_Vol04,0) ELSE NVL(t2.N_ind_ac_Vol04, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 = 0 THEN NVL(t3.N_ind_out_Vol05,0) ELSE NVL(t2.N_ind_ac_Vol05, 0) END)
			AS ind_out_YTD05
			, (CASE WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 = 0 THEN NVL(t3.N_ind_out_Vol01,0) ELSE NVL(t2.N_ind_ac_Vol01, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 = 0 THEN NVL(t3.N_ind_out_Vol02,0) ELSE NVL(t2.N_ind_ac_Vol02, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 = 0 THEN NVL(t3.N_ind_out_Vol03,0) ELSE NVL(t2.N_ind_ac_Vol03, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 = 0 THEN NVL(t3.N_ind_out_Vol04,0) ELSE NVL(t2.N_ind_ac_Vol04, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 = 0 THEN NVL(t3.N_ind_out_Vol05,0) ELSE NVL(t2.N_ind_ac_Vol05, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol06 IS NULL AND t4.N_ind_Cnt06 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol06 IS NULL AND t4.N_ind_Cnt06 = 0 THEN NVL(t3.N_ind_out_Vol06,0) ELSE NVL(t2.N_ind_ac_Vol06, 0) END)				
			AS ind_out_YTD06
			, (CASE WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 = 0 THEN NVL(t3.N_ind_out_Vol01,0) ELSE NVL(t2.N_ind_ac_Vol01, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 = 0 THEN NVL(t3.N_ind_out_Vol02,0) ELSE NVL(t2.N_ind_ac_Vol02, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 = 0 THEN NVL(t3.N_ind_out_Vol03,0) ELSE NVL(t2.N_ind_ac_Vol03, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 = 0 THEN NVL(t3.N_ind_out_Vol04,0) ELSE NVL(t2.N_ind_ac_Vol04, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 = 0 THEN NVL(t3.N_ind_out_Vol05,0) ELSE NVL(t2.N_ind_ac_Vol05, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol06 IS NULL AND t4.N_ind_Cnt06 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol06 IS NULL AND t4.N_ind_Cnt06 = 0 THEN NVL(t3.N_ind_out_Vol06,0) ELSE NVL(t2.N_ind_ac_Vol06, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol07 IS NULL AND t4.N_ind_Cnt07 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol07 IS NULL AND t4.N_ind_Cnt07 = 0 THEN NVL(t3.N_ind_out_Vol07,0) ELSE NVL(t2.N_ind_ac_Vol07, 0) END)				
			AS ind_out_YTD07
			, (CASE WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 = 0 THEN NVL(t3.N_ind_out_Vol01,0) ELSE NVL(t2.N_ind_ac_Vol01, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 = 0 THEN NVL(t3.N_ind_out_Vol02,0) ELSE NVL(t2.N_ind_ac_Vol02, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 = 0 THEN NVL(t3.N_ind_out_Vol03,0) ELSE NVL(t2.N_ind_ac_Vol03, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 = 0 THEN NVL(t3.N_ind_out_Vol04,0) ELSE NVL(t2.N_ind_ac_Vol04, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 = 0 THEN NVL(t3.N_ind_out_Vol05,0) ELSE NVL(t2.N_ind_ac_Vol05, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol06 IS NULL AND t4.N_ind_Cnt06 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol06 IS NULL AND t4.N_ind_Cnt06 = 0 THEN NVL(t3.N_ind_out_Vol06,0) ELSE NVL(t2.N_ind_ac_Vol06, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol07 IS NULL AND t4.N_ind_Cnt07 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol07 IS NULL AND t4.N_ind_Cnt07 = 0 THEN NVL(t3.N_ind_out_Vol07,0) ELSE NVL(t2.N_ind_ac_Vol07, 0) END)				
			+ (CASE WHEN  t2.N_ind_ac_Vol08 IS NULL AND t4.N_ind_Cnt08 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol08 IS NULL AND t4.N_ind_Cnt08 = 0 THEN NVL(t3.N_ind_out_Vol08,0) ELSE NVL(t2.N_ind_ac_Vol08, 0) END)
			AS ind_out_YTD08
			, (CASE WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 = 0 THEN NVL(t3.N_ind_out_Vol01,0) ELSE NVL(t2.N_ind_ac_Vol01, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 = 0 THEN NVL(t3.N_ind_out_Vol02,0) ELSE NVL(t2.N_ind_ac_Vol02, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 = 0 THEN NVL(t3.N_ind_out_Vol03,0) ELSE NVL(t2.N_ind_ac_Vol03, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 = 0 THEN NVL(t3.N_ind_out_Vol04,0) ELSE NVL(t2.N_ind_ac_Vol04, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 = 0 THEN NVL(t3.N_ind_out_Vol05,0) ELSE NVL(t2.N_ind_ac_Vol05, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol06 IS NULL AND t4.N_ind_Cnt06 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol06 IS NULL AND t4.N_ind_Cnt06 = 0 THEN NVL(t3.N_ind_out_Vol06,0) ELSE NVL(t2.N_ind_ac_Vol06, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol07 IS NULL AND t4.N_ind_Cnt07 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol07 IS NULL AND t4.N_ind_Cnt07 = 0 THEN NVL(t3.N_ind_out_Vol07,0) ELSE NVL(t2.N_ind_ac_Vol07, 0) END)				
			+ (CASE WHEN  t2.N_ind_ac_Vol08 IS NULL AND t4.N_ind_Cnt08 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol08 IS NULL AND t4.N_ind_Cnt08 = 0 THEN NVL(t3.N_ind_out_Vol08,0) ELSE NVL(t2.N_ind_ac_Vol08, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol09 IS NULL AND t4.N_ind_Cnt09 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol09 IS NULL AND t4.N_ind_Cnt09 = 0 THEN NVL(t3.N_ind_out_Vol09,0) ELSE NVL(t2.N_ind_ac_Vol09, 0) END)
			AS ind_out_YTD09
			, (CASE WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 = 0 THEN NVL(t3.N_ind_out_Vol01,0) ELSE NVL(t2.N_ind_ac_Vol01, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 = 0 THEN NVL(t3.N_ind_out_Vol02,0) ELSE NVL(t2.N_ind_ac_Vol02, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 = 0 THEN NVL(t3.N_ind_out_Vol03,0) ELSE NVL(t2.N_ind_ac_Vol03, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 = 0 THEN NVL(t3.N_ind_out_Vol04,0) ELSE NVL(t2.N_ind_ac_Vol04, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 = 0 THEN NVL(t3.N_ind_out_Vol05,0) ELSE NVL(t2.N_ind_ac_Vol05, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol06 IS NULL AND t4.N_ind_Cnt06 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol06 IS NULL AND t4.N_ind_Cnt06 = 0 THEN NVL(t3.N_ind_out_Vol06,0) ELSE NVL(t2.N_ind_ac_Vol06, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol07 IS NULL AND t4.N_ind_Cnt07 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol07 IS NULL AND t4.N_ind_Cnt07 = 0 THEN NVL(t3.N_ind_out_Vol07,0) ELSE NVL(t2.N_ind_ac_Vol07, 0) END)				
			+ (CASE WHEN  t2.N_ind_ac_Vol08 IS NULL AND t4.N_ind_Cnt08 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol08 IS NULL AND t4.N_ind_Cnt08 = 0 THEN NVL(t3.N_ind_out_Vol08,0) ELSE NVL(t2.N_ind_ac_Vol08, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol09 IS NULL AND t4.N_ind_Cnt09 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol09 IS NULL AND t4.N_ind_Cnt09 = 0 THEN NVL(t3.N_ind_out_Vol09,0) ELSE NVL(t2.N_ind_ac_Vol09, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol10 IS NULL AND t4.N_ind_Cnt10 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol10 IS NULL AND t4.N_ind_Cnt10 = 0 THEN NVL(t3.N_ind_out_Vol10,0) ELSE NVL(t2.N_ind_ac_Vol10, 0) END)
			AS ind_out_YTD10
			, (CASE WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 = 0 THEN NVL(t3.N_ind_out_Vol01,0) ELSE NVL(t2.N_ind_ac_Vol01, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 = 0 THEN NVL(t3.N_ind_out_Vol02,0) ELSE NVL(t2.N_ind_ac_Vol02, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 = 0 THEN NVL(t3.N_ind_out_Vol03,0) ELSE NVL(t2.N_ind_ac_Vol03, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 = 0 THEN NVL(t3.N_ind_out_Vol04,0) ELSE NVL(t2.N_ind_ac_Vol04, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 = 0 THEN NVL(t3.N_ind_out_Vol05,0) ELSE NVL(t2.N_ind_ac_Vol05, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol06 IS NULL AND t4.N_ind_Cnt06 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol06 IS NULL AND t4.N_ind_Cnt06 = 0 THEN NVL(t3.N_ind_out_Vol06,0) ELSE NVL(t2.N_ind_ac_Vol06, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol07 IS NULL AND t4.N_ind_Cnt07 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol07 IS NULL AND t4.N_ind_Cnt07 = 0 THEN NVL(t3.N_ind_out_Vol07,0) ELSE NVL(t2.N_ind_ac_Vol07, 0) END)				
			+ (CASE WHEN  t2.N_ind_ac_Vol08 IS NULL AND t4.N_ind_Cnt08 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol08 IS NULL AND t4.N_ind_Cnt08 = 0 THEN NVL(t3.N_ind_out_Vol08,0) ELSE NVL(t2.N_ind_ac_Vol08, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol09 IS NULL AND t4.N_ind_Cnt09 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol09 IS NULL AND t4.N_ind_Cnt09 = 0 THEN NVL(t3.N_ind_out_Vol09,0) ELSE NVL(t2.N_ind_ac_Vol09, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol10 IS NULL AND t4.N_ind_Cnt10 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol10 IS NULL AND t4.N_ind_Cnt10 = 0 THEN NVL(t3.N_ind_out_Vol10,0) ELSE NVL(t2.N_ind_ac_Vol10, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol11 IS NULL AND t4.N_ind_Cnt11 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol11 IS NULL AND t4.N_ind_Cnt11 = 0 THEN NVL(t3.N_ind_out_Vol11,0) ELSE NVL(t2.N_ind_ac_Vol11, 0) END)
			AS ind_out_YTD11
			, (CASE WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol01 IS NULL AND t4.N_ind_Cnt01 = 0 THEN NVL(t3.N_ind_out_Vol01,0) ELSE NVL(t2.N_ind_ac_Vol01, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol02 IS NULL AND t4.N_ind_Cnt02 = 0 THEN NVL(t3.N_ind_out_Vol02,0) ELSE NVL(t2.N_ind_ac_Vol02, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol03 IS NULL AND t4.N_ind_Cnt03 = 0 THEN NVL(t3.N_ind_out_Vol03,0) ELSE NVL(t2.N_ind_ac_Vol03, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol04 IS NULL AND t4.N_ind_Cnt04 = 0 THEN NVL(t3.N_ind_out_Vol04,0) ELSE NVL(t2.N_ind_ac_Vol04, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol05 IS NULL AND t4.N_ind_Cnt05 = 0 THEN NVL(t3.N_ind_out_Vol05,0) ELSE NVL(t2.N_ind_ac_Vol05, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol06 IS NULL AND t4.N_ind_Cnt06 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol06 IS NULL AND t4.N_ind_Cnt06 = 0 THEN NVL(t3.N_ind_out_Vol06,0) ELSE NVL(t2.N_ind_ac_Vol06, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol07 IS NULL AND t4.N_ind_Cnt07 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol07 IS NULL AND t4.N_ind_Cnt07 = 0 THEN NVL(t3.N_ind_out_Vol07,0) ELSE NVL(t2.N_ind_ac_Vol07, 0) END)				
			+ (CASE WHEN  t2.N_ind_ac_Vol08 IS NULL AND t4.N_ind_Cnt08 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol08 IS NULL AND t4.N_ind_Cnt08 = 0 THEN NVL(t3.N_ind_out_Vol08,0) ELSE NVL(t2.N_ind_ac_Vol08, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol09 IS NULL AND t4.N_ind_Cnt09 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol09 IS NULL AND t4.N_ind_Cnt09 = 0 THEN NVL(t3.N_ind_out_Vol09,0) ELSE NVL(t2.N_ind_ac_Vol09, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol10 IS NULL AND t4.N_ind_Cnt10 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol10 IS NULL AND t4.N_ind_Cnt10 = 0 THEN NVL(t3.N_ind_out_Vol10,0) ELSE NVL(t2.N_ind_ac_Vol10, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol11 IS NULL AND t4.N_ind_Cnt11 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol11 IS NULL AND t4.N_ind_Cnt11 = 0 THEN NVL(t3.N_ind_out_Vol11,0) ELSE NVL(t2.N_ind_ac_Vol11, 0) END)
			+ (CASE WHEN  t2.N_ind_ac_Vol12 IS NULL AND t4.N_ind_Cnt12 > 0 THEN 0 WHEN  t2.N_ind_ac_Vol12 IS NULL AND t4.N_ind_Cnt12 = 0 THEN NVL(t3.N_ind_out_Vol12,0) ELSE NVL(t2.N_ind_ac_Vol12, 0) END)
			AS ind_out_YTD12
			<!-- 당년  Ind Target -->
			,NVL(t5.n_ind_tg_Vol01,0) AS  ind_tg_P01		<!--당년P01볼륨 -->
			,NVL(t5.n_ind_tg_Vol02,0) AS  ind_tg_P02		<!--당년P02볼륨 -->
			,NVL(t5.n_ind_tg_Vol03,0) AS  ind_tg_P03		<!--당년P03볼륨 -->
			,NVL(t5.n_ind_tg_Vol04,0) AS  ind_tg_P04		<!--당년P04볼륨 -->
			,NVL(t5.n_ind_tg_Vol05,0) AS  ind_tg_P05		<!--당년P05볼륨 -->
			,NVL(t5.n_ind_tg_Vol06,0) AS  ind_tg_P06		<!--당년P06볼륨 -->
			,NVL(t5.n_ind_tg_Vol07,0) AS  ind_tg_P07		<!--당년P07볼륨 -->
			,NVL(t5.n_ind_tg_Vol08,0) AS  ind_tg_P08		<!--당년P08볼륨 -->
			,NVL(t5.n_ind_tg_Vol09,0) AS  ind_tg_P09		<!--당년P09볼륨 -->
			,NVL(t5.n_ind_tg_Vol10,0) AS  ind_tg_P10		<!--당년P10볼륨 -->
			,NVL(t5.n_ind_tg_Vol11,0) AS  ind_tg_P11		<!--당년P11볼륨 -->
			,NVL(t5.n_ind_tg_Vol12,0) AS  ind_tg_P12		<!--당년P12볼륨  -->
			,(NVL(t5.n_ind_tg_Vol01,0)+NVL(t5.n_ind_tg_Vol02,0)+NVL(t5.n_ind_tg_Vol03,0)) AS  ind_tg_Q01		<!--당년Q01볼륨 -->
			,(NVL(t5.n_ind_tg_Vol04,0)+NVL(t5.n_ind_tg_Vol05,0)+NVL(t5.n_ind_tg_Vol06,0)) AS  ind_tg_Q02		<!--당년Q02볼륨 -->
			,(NVL(t5.n_ind_tg_Vol07,0)+NVL(t5.n_ind_tg_Vol08,0)+NVL(t5.n_ind_tg_Vol09,0)) AS  ind_tg_Q03		<!--당년Q03볼륨 -->
			,(NVL(t5.n_ind_tg_Vol10,0)+NVL(t5.n_ind_tg_Vol11,0)+NVL(t5.n_ind_tg_Vol12,0)) AS  ind_tg_Q04		<!--당년Q04볼륨 -->
			,(NVL(t5.n_ind_tg_Vol01,0)+NVL(t5.n_ind_tg_Vol02,0)+NVL(t5.n_ind_tg_Vol03,0)+NVL(t5.n_ind_tg_Vol04,0)+NVL(t5.n_ind_tg_Vol05,0)+NVL(t5.n_ind_tg_Vol06,0)) AS  ind_tg_H01		<!--당년H01볼륨 -->
			,(NVL(t5.n_ind_tg_Vol07,0)+NVL(t5.n_ind_tg_Vol08,0)+NVL(t5.n_ind_tg_Vol09,0)+NVL(t5.n_ind_tg_Vol10,0)+NVL(t5.n_ind_tg_Vol11,0)+NVL(t5.n_ind_tg_Vol12,0)) AS  ind_tg_H02		<!--당년H02볼륨 -->
			,NVL(t5.n_ind_tg_Vol01,0) AS  ind_tg_YTD01
			,(NVL(t5.n_ind_tg_Vol01,0)+NVL(t5.n_ind_tg_Vol02,0)) AS  ind_tg_YTD02
			,(NVL(t5.n_ind_tg_Vol01,0)+NVL(t5.n_ind_tg_Vol02,0)+NVL(t5.n_ind_tg_Vol03,0)) AS  ind_tg_YTD03
			,(NVL(t5.n_ind_tg_Vol01,0)+NVL(t5.n_ind_tg_Vol02,0)+NVL(t5.n_ind_tg_Vol03,0)+NVL(t5.n_ind_tg_Vol04,0)) AS  ind_tg_YTD04
			,(NVL(t5.n_ind_tg_Vol01,0)+NVL(t5.n_ind_tg_Vol02,0)+NVL(t5.n_ind_tg_Vol03,0)+NVL(t5.n_ind_tg_Vol04,0)+NVL(t5.n_ind_tg_Vol05,0)) AS  ind_tg_YTD05
			,(NVL(t5.n_ind_tg_Vol01,0)+NVL(t5.n_ind_tg_Vol02,0)+NVL(t5.n_ind_tg_Vol03,0)+NVL(t5.n_ind_tg_Vol04,0)+NVL(t5.n_ind_tg_Vol05,0)+NVL(t5.n_ind_tg_Vol06,0)) AS  ind_tg_YTD06
			,(NVL(t5.n_ind_tg_Vol01,0)+NVL(t5.n_ind_tg_Vol02,0)+NVL(t5.n_ind_tg_Vol03,0)+NVL(t5.n_ind_tg_Vol04,0)+NVL(t5.n_ind_tg_Vol05,0)+NVL(t5.n_ind_tg_Vol06,0)+NVL(t5.n_ind_tg_Vol07,0)) AS  ind_tg_YTD07
			,(NVL(t5.n_ind_tg_Vol01,0)+NVL(t5.n_ind_tg_Vol02,0)+NVL(t5.n_ind_tg_Vol03,0)+NVL(t5.n_ind_tg_Vol04,0)+NVL(t5.n_ind_tg_Vol05,0)+NVL(t5.n_ind_tg_Vol06,0)+NVL(t5.n_ind_tg_Vol07,0)+NVL(t5.n_ind_tg_Vol08,0)) AS  ind_tg_YTD08
			,(NVL(t5.n_ind_tg_Vol01,0)+NVL(t5.n_ind_tg_Vol02,0)+NVL(t5.n_ind_tg_Vol03,0)+NVL(t5.n_ind_tg_Vol04,0)+NVL(t5.n_ind_tg_Vol05,0)+NVL(t5.n_ind_tg_Vol06,0)+NVL(t5.n_ind_tg_Vol07,0)+NVL(t5.n_ind_tg_Vol08,0)+NVL(t5.n_ind_tg_Vol09,0)) AS  ind_tg_YTD09
			,(NVL(t5.n_ind_tg_Vol01,0)+NVL(t5.n_ind_tg_Vol02,0)+NVL(t5.n_ind_tg_Vol03,0)+NVL(t5.n_ind_tg_Vol04,0)+NVL(t5.n_ind_tg_Vol05,0)+NVL(t5.n_ind_tg_Vol06,0)+NVL(t5.n_ind_tg_Vol07,0)+NVL(t5.n_ind_tg_Vol08,0)+NVL(t5.n_ind_tg_Vol09,0)+NVL(t5.n_ind_tg_Vol10,0)) AS  ind_tg_YTD10
			,(NVL(t5.n_ind_tg_Vol01,0)+NVL(t5.n_ind_tg_Vol02,0)+NVL(t5.n_ind_tg_Vol03,0)+NVL(t5.n_ind_tg_Vol04,0)+NVL(t5.n_ind_tg_Vol05,0)+NVL(t5.n_ind_tg_Vol06,0)+NVL(t5.n_ind_tg_Vol07,0)+NVL(t5.n_ind_tg_Vol08,0)+NVL(t5.n_ind_tg_Vol09,0)+NVL(t5.n_ind_tg_Vol10,0)+NVL(t5.n_ind_tg_Vol11,0)) AS  ind_tg_YTD11
			,(NVL(t5.n_ind_tg_Vol01,0)+NVL(t5.n_ind_tg_Vol02,0)+NVL(t5.n_ind_tg_Vol03,0)+NVL(t5.n_ind_tg_Vol04,0)+NVL(t5.n_ind_tg_Vol05,0)+NVL(t5.n_ind_tg_Vol06,0)+NVL(t5.n_ind_tg_Vol07,0)+NVL(t5.n_ind_tg_Vol08,0)+NVL(t5.n_ind_tg_Vol09,0)+NVL(t5.n_ind_tg_Vol10,0)+NVL(t5.n_ind_tg_Vol11,0)+NVL(t5.n_ind_tg_Vol12,0)) AS  ind_tg_YTD12
	FROM (   
		        <!-- 1) 주테이블정보 
		        LV1이 Whisky  LV2값이 On 인 경우    LV3(MARKET)로 소계표시 
				LV1이  Whisky  LV2값이 Off 인 경우   LV3(MARKET)
				권역조건 또는 팀조건이 있을 경우 팀을, 아닌 경우는 권역이 나온다. -->
		        SELECT	T1.DataLv1             AS  DataLv1,			<!-- Whisky --> 
		                T1.DataLv1_NM          AS  DataLv1_NM,
		                T1.DataLv2             AS  DataLv2,        	<!-- ON, OFF -->
		                T1.DataLv2_NM          AS  DataLv2_NM,
		                CASE WHEN T1.DataLv3 = 'LOCAL' AND T2.TEAM = 'MILITARY' THEN 'MILITARY' ELSE T1.DataLv3 END AS  DataLv3,
		                CASE WHEN T1.DataLv3_NM = 'LOCAL' AND T2.TEAM = 'MILITARY' THEN 'MILITARY' ELSE T1.DataLv3_NM END AS  DataLv3_NM,
		                <!-- T1.DataLv3             AS  DataLv3,       	LOCAL, INT`L, W OFF -->
		                <!-- T1.DataLv3_NM          AS  DataLv3_NM,      -->
		                T2.TEAM                AS  DataLv4,       	<!-- 권역 또는 팀  Local Off 등도 팀임 --> 
		                T2.TEAM                AS  DataLv4_NM, 
		                t2.SortNo                  					<!--팀의 우선조회순서 -->                                           
				  FROM  ( 
		               	SELECT  '10'           AS  DataLv1			<!-- WHISKY -->
		                         ,'Whisky'     AS  DataLv1_NM
		                         ,T1.Channel   AS  DataLv2      	<!-- ON, OFF -->
		                         ,T1.Channel   AS  DataLv2_NM
		                         ,T1.MARKET    AS  DataLv3      	<!-- LOCAL, INT`L, W OFF -->
		                         ,T1.MARKET    AS  DataLv3_NM                       
		                  FROM	ESLT_NTS_TG T1 						<!-- 월NTS목표|팀|ESLT -->
		                 WHERE	T1.Fy       =  #fy#
                 	<isPropertyAvailable property="channel">
						<isNotEmpty property="channel">
		                   AND  T1.Channel  =  #channel#			<!-- 검색조건 입력시 조건삽입 -->
		                </isNotEmpty>
		            </isPropertyAvailable>
		              GROUP BY	T1.Channel, T1.MARKET                                               
		              ) T1
		        <!-- IF 권역조건 또는 팀조건이 있을경우 팀을 가지고 온다. (팀조건을 넣어도 다른팀도 나온다) -->
		        <!-- ELSE   아닌경우 권역을 가지고 온다. -->
			    <isPropertyAvailable property="region">
					<isNotEmpty property="region">
						INNER JOIN 
						(
		                 	SELECT	T1.TEAM AS TEAM, t1.dispSeq	AS SortNo
		                      FROM	ESLT_TEAM_MT T1
		                     WHERE	T1.REGION = #region#
		                    <isPropertyAvailable property="channel">
								<isNotEmpty property="channel">
				                   AND  T1.CHANNEL  =  #channel#	<!-- 검색조건 입력시 조건삽입 -->
				                </isNotEmpty>
				            </isPropertyAvailable>
		                           AND	T1.USEYN = 'Y'
		              	) T2
		              	ON 1=1
					</isNotEmpty>
				</isPropertyAvailable>
					<isEmpty property="region">
						<isNotEmpty property="team">
							INNER JOIN 
							(
			                 	SELECT	T1.TEAM AS TEAM, t1.dispSeq	AS SortNo  
			                      FROM	ESLT_TEAM_MT T1
			                     WHERE	T1.REGION = #region#
				                    <isPropertyAvailable property="channel">
										<isNotEmpty property="channel">
						                   AND  T1.CHANNEL  =  #channel#			<!-- 검색조건 입력시 조건삽입 -->
						                </isNotEmpty>
						            </isPropertyAvailable>
			                           AND	T1.USEYN = 'Y'
			              	) T2
			              	ON 1=1
						</isNotEmpty>
						<isEmpty property="team">
							INNER JOIN 
		                  	(
		                      SELECT      T1.Region AS TEAM, MAX(T1.dispSeq) AS SortNo
		                      				, MAX(T1.CHANNEL) AS CHANNEL
		                        FROM         ESLT_TEAM_MT T1
		                       WHERE   T1.USEYN = 'Y'
				                    <isPropertyAvailable property="channel">
										<isNotEmpty property="channel">
							                 AND  T1.CHANNEL  =  #channel#			<!-- 검색조건 입력시 조건삽입 -->
						                </isNotEmpty>
									</isPropertyAvailable>
		                       GROUP BY  T1.Region
		                  ) T2
		                  <!-- ON 1=1 -->
		                  ON T1.DATALV2 = T2.CHANNEL
						</isEmpty>
					</isEmpty>
			) T1            
LEFT OUTER JOIN (
					<!-- 2)  Industry Depletion 실적(actual) 볼륨 구하기 쿼리(전년 +당년) -->
			        SELECT	'10'			AS DataLv1  <!-- Whisky --> 
			              	,T1.CHANNEL  	AS DataLv2  <!-- ON /OFF -->
			              	,CASE WHEN MAX(T5.region) = 'MILITARY' then 'MILITARY' else t1.MARKET  end   AS DataLv3
			                <!-- ,t1.MARKET    	AS DataLv3  LOCAL, INT`L, W OFF  -->
			                <!-- IF 권역조건 또는 팀조건이 있을경우 팀을 가지고 온다. -->
			                <!-- ELSE  아닌경우 권역을 가지고 온다. -->
					        <isNotEmpty property="region">
				        		,T5.TEAM    AS DataLv4
							</isNotEmpty>
							<isEmpty property="region">
								<isNotEmpty property="team">
				        			,T5.TEAM    AS DataLv4
								</isNotEmpty>
								<isEmpty property="team">
									,T5.Region    AS DataLv4  
								</isEmpty>
							</isEmpty> 
			                <!-- 전년도 P01 ~ P12 볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P01'  THEN NVL(T1.VOLUME,0) END) AS p_Ind_ac_Vol01 <!--전년P01볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P02'  THEN NVL(T1.VOLUME,0) END) AS p_Ind_ac_Vol02 <!--전년P02볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P03'  THEN NVL(T1.VOLUME,0) END) AS p_Ind_ac_Vol03 <!--전년P03볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P04'  THEN NVL(T1.VOLUME,0) END) AS p_Ind_ac_Vol04 <!--전년P04볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P05'  THEN NVL(T1.VOLUME,0) END) AS p_Ind_ac_Vol05 <!--전년P05볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P06'  THEN NVL(T1.VOLUME,0) END) AS p_Ind_ac_Vol06 <!--전년P06볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P07'  THEN NVL(T1.VOLUME,0) END) AS p_Ind_ac_Vol07 <!--전년P07볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P08'  THEN NVL(T1.VOLUME,0) END) AS p_Ind_ac_Vol08 <!--전년P08볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P09'  THEN NVL(T1.VOLUME,0) END) AS p_Ind_ac_Vol09 <!--전년P09볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P10'  THEN NVL(T1.VOLUME,0) END) AS p_Ind_ac_Vol10 <!--전년P10볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P11'  THEN NVL(T1.VOLUME,0) END) AS p_Ind_ac_Vol11 <!--전년P11볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P12'  THEN NVL(T1.VOLUME,0) END) AS p_Ind_ac_Vol12 <!--전년P12볼륨   -->
			                <!-- 당년도 P01 ~ P12 볼륨 -->        
			                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P01'  THEN NVL(T1.VOLUME,0) END) AS N_Ind_ac_Vol01 <!--금년P01볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P02'  THEN NVL(T1.VOLUME,0) END) AS N_Ind_ac_Vol02 <!--금년P02볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P03'  THEN NVL(T1.VOLUME,0) END) AS N_Ind_ac_Vol03 <!--금년P03볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P04'  THEN NVL(T1.VOLUME,0) END) AS N_Ind_ac_Vol04 <!--금년P04볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P05'  THEN NVL(T1.VOLUME,0) END) AS N_Ind_ac_Vol05 <!--금년P05볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P06'  THEN NVL(T1.VOLUME,0) END) AS N_Ind_ac_Vol06 <!--금년P06볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P07'  THEN NVL(T1.VOLUME,0) END) AS N_Ind_ac_Vol07 <!--금년P07볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P08'  THEN NVL(T1.VOLUME,0) END) AS N_Ind_ac_Vol08 <!--금년P08볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P09'  THEN NVL(T1.VOLUME,0) END) AS N_Ind_ac_Vol09 <!--금년P09볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P10'  THEN NVL(T1.VOLUME,0) END) AS N_Ind_ac_Vol10 <!--금년P10볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P11'  THEN NVL(T1.VOLUME,0) END) AS N_Ind_ac_Vol11 <!--금년P11볼륨 -->
			                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P12'  THEN NVL(T1.VOLUME,0) END) AS N_Ind_ac_Vol12 <!--금년P12볼륨 -->                 
			          from	eslt_NTS_act T1         		<!--월NTS실적|주소|ESLT-->
			    inner join	ESLT_AREA_MT t4         		<!-- 주소매핑조직정보|ESLT -->
			            on  UPPER(t1.CITY)        = UPPER(T4.CITY)
			           AND	UPPER(T1.SUBCITY1)    = UPPER(T4.SUBCITY1)
			           AND	UPPER(T1.SUBCITY2)    = UPPER(T4.SUBCITY2)
			    inner join	ESLT_TEAM_MT T5          		<!-- 팀정보|ESLT -->
			            <!-- on	UPPER(t4.LpbTeam)     = UPPER(T5.Team) -->
			            on  (case when t1.market = 'LOCAL' then t4.LpbTeam else t4.GpbTeam END) = UPPER(T5.Team)
			         where	t1.FY  BETWEEN  #Lfy#  AND #fy#
                    <isPropertyAvailable property="channel">
						<isNotEmpty property="channel">
		                 AND  T1.Channel  =  #channel#		<!-- 검색조건 입력시 조건삽입 -->
		                </isNotEmpty>
					</isPropertyAvailable>
			           and 	t1.COMPANY		= 'IND'
                    <isPropertyAvailable property="channel">
						<isNotEmpty property="channel">
			                 AND  T5.Channel  =  #channel#	<!-- 검색조건 입력시 조건삽입 -->
		                </isNotEmpty>
					</isPropertyAvailable>
					<isPropertyAvailable property="region">
						<isNotEmpty property="region">
			                 and  t5.Region   = #region#   	<!-- 검색조건 입력시 조건삽입 -->
		                </isNotEmpty>
					</isPropertyAvailable>
			      group by	T1.CHANNEL,  T1.MARKET
			        <!-- IF 권역조건 또는 팀조건이 있을경우 팀을 가지고 온다. -->
			        <!-- ELSE  아닌경우 권역을 가지고 온다. -->
			        <isNotEmpty property="region">
		        		, T5.TEAM
					</isNotEmpty>
					<isEmpty property="region">
						<isNotEmpty property="team">
		        			, T5.TEAM
						</isNotEmpty>
						<isEmpty property="team">
							, T5.Region
						</isEmpty>  
					</isEmpty> 
  			)	T2
		   ON   T1.DataLv1 = T2.DataLv1
		  AND   T1.DataLv2 = T2.DataLv2
		  AND   T1.DataLv3 = T2.DataLv3
		  AND   T1.DataLv4 = T2.DataLv4    
		LEFT OUTER JOIN	(  
					<!-- 3)  Industry Depletion Forecast   및 outlook 데이타 구하기 쿼리(당년) -->
					SELECT 
		                    '10'          AS DataLv1  <!--Whisky --> 
		                     ,T1.CHANNEL  AS DataLv2  <!-- ON /OFF -->
		                     ,t1.MARKET   AS DataLv3  <!-- LOCAL, INT`L, W OFF -->   
		                    <!-- IF 권역조건 또는 팀조건이 있을경우 팀을 가지고 온다. -->
		                    <!-- ELSE  아닌경우 권역을 가지고 온다. -->
					        <isNotEmpty property="region">
				        		,T5.TEAM    AS DataLv4
							</isNotEmpty>
							<isEmpty property="region">
								<isNotEmpty property="team">
				        			, T5.TEAM     AS DataLv4
								</isNotEmpty>
								<isEmpty property="team">
									,T5.Region    AS DataLv4 
								</isEmpty>  
							</isEmpty> 
							<!-- 당년도 P01 ~ P12 Forecast 볼륨  -->   
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P01'     THEN NVL(T1.ForVolume,0) END )      AS N_ind_for_Vol01   <!--금년P01 Forecast 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P02'     THEN NVL(T1.ForVolume,0) END )      AS N_ind_for_Vol02   <!--금년P02 Forecast 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P03'     THEN NVL(T1.ForVolume,0) END )      AS N_ind_for_Vol03   <!--금년P03 Forecast 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P04'     THEN NVL(T1.ForVolume,0) END )      AS N_ind_for_Vol04   <!--금년P04 Forecast 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P05'     THEN NVL(T1.ForVolume,0) END )      AS N_ind_for_Vol05   <!--금년P05 Forecast 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P06'     THEN NVL(T1.ForVolume,0) END )      AS N_ind_for_Vol06   <!--금년P06 Forecast 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P07'     THEN NVL(T1.ForVolume,0) END )      AS N_ind_for_Vol07   <!--금년P07 Forecast 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P08'     THEN NVL(T1.ForVolume,0) END )      AS N_ind_for_Vol08   <!--금년P08 Forecast 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P09'     THEN NVL(T1.ForVolume,0) END )      AS N_ind_for_Vol09   <!--금년P09 Forecast 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P10'     THEN NVL(T1.ForVolume,0) END )      AS N_ind_for_Vol10   <!--금년P10 Forecast 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P11'     THEN NVL(T1.ForVolume,0) END )      AS N_ind_for_Vol11   <!--금년P11 Forecast 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P12'     THEN NVL(T1.ForVolume,0) END )      AS N_ind_for_Vol12   <!--금년P12 Forecast 볼륨 --> 
		                   	<!-- 당년도 P01 ~ P12 outlook 볼륨   -->
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P01'     THEN NVL(T1.OutVolume,0) END )      AS N_ind_out_Vol01   <!--금년P01 outlook 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P02'     THEN NVL(T1.OutVolume,0) END )      AS N_ind_out_Vol02   <!--금년P02 outlook 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P03'     THEN NVL(T1.OutVolume,0) END )      AS N_ind_out_Vol03   <!--금년P03 outlook 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P04'     THEN NVL(T1.OutVolume,0) END )      AS N_ind_out_Vol04   <!--금년P04 outlook 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P05'     THEN NVL(T1.OutVolume,0) END )      AS N_ind_out_Vol05   <!--금년P05 outlook 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P06'     THEN NVL(T1.OutVolume,0) END )      AS N_ind_out_Vol06   <!--금년P06 outlook 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P07'     THEN NVL(T1.OutVolume,0) END )      AS N_ind_out_Vol07   <!--금년P07 outlook 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P08'     THEN NVL(T1.OutVolume,0) END )      AS N_ind_out_Vol08   <!--금년P08 outlook 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P09'     THEN NVL(T1.OutVolume,0) END )      AS N_ind_out_Vol09   <!--금년P09 outlook 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P10'     THEN NVL(T1.OutVolume,0) END )      AS N_ind_out_Vol10   <!--금년P10 outlook 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P11'     THEN NVL(T1.OutVolume,0) END )      AS N_ind_out_Vol11   <!--금년P11 outlook 볼륨 --> 
		                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P12'     THEN NVL(T1.OutVolume,0) END )      AS N_ind_out_Vol12   <!--금년P12 outlook 볼륨 --> 
       				  from	ESLT_NTS_FC  T1							<!-- 월NTS예측|팀|ESLT -->
        		inner join	ESLT_TEAM_MT T5							<!-- 팀정보|ESLT -->
          				on  t1.TEAM      = T5.Team
        			 where	t1.FY        = #fy#
					<isPropertyAvailable property="channel">
						<isNotEmpty property="channel">
			                 AND  T1.CHANNEL  =  #channel#			<!-- 검색조건 입력시 조건삽입 -->
		                </isNotEmpty>
					</isPropertyAvailable>
			           AND	T1.COMPANY   = 'IND'
					<isPropertyAvailable property="channel">
						<isNotEmpty property="channel">
			                 AND  T5.Channel  =  #channel#			<!-- 검색조건 입력시 조건삽입 -->
		                </isNotEmpty>
					</isPropertyAvailable>
					<isPropertyAvailable property="region">
						<isNotEmpty property="region">
			                 AND  T5.Region  =  #region#			<!-- 검색조건 입력시 조건삽입 -->
		                </isNotEmpty>
					</isPropertyAvailable>
			      group by	T1.CHANNEL, T1.MARKET
				        <!-- IF 권역조건 또는 팀조건이 있을경우 팀을 가지고 온다. -->
				        <!-- ELSE  아닌경우 권역을 가지고 온다. -->
				        <isNotEmpty property="region">
			        		,T5.TEAM  
						</isNotEmpty>
						<isEmpty property="region">
							<isNotEmpty property="team">
			        			, T5.TEAM    
							</isNotEmpty>
							<isEmpty property="team">
								, T5.Region
							</isEmpty> 
						</isEmpty> 
   			) T3
		   ON   T1.DataLv1 = T3.DataLv1
		  AND   T1.DataLv2 = T3.DataLv2
		  AND   T1.DataLv3 = T3.DataLv3
		  AND   T1.DataLv4 = T3.DataLv4
	LEFT OUTER JOIN	(  
					<!-- 4)  Industry Depletion Forecast   및 outlook 데이타 구하기 쿼리(당년) -->
					SELECT 
	                    '10' AS DataLv1  <!--Whisky --> 
	                     ,T1.CHANNEL  AS DataLv2  <!-- ON /OFF -->
	                     ,t1.MARKET   AS DataLv3  <!-- LOCAL, INT`L, W OFF -->   
	                   	<!-- 당년도 P01 ~ P12 outlook 볼륨   -->
	                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P01' THEN 1 ELSE 0 END)      AS N_ind_Cnt01   <!--금년P01 outlook 볼륨 --> 
	                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P02' THEN 1 ELSE 0 END)      AS N_ind_Cnt02   <!--금년P02 outlook 볼륨 --> 
	                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P03' THEN 1 ELSE 0 END)      AS N_ind_Cnt03   <!--금년P03 outlook 볼륨 --> 
	                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P04' THEN 1 ELSE 0 END)      AS N_ind_Cnt04   <!--금년P04 outlook 볼륨 --> 
	                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P05' THEN 1 ELSE 0 END)      AS N_ind_Cnt05   <!--금년P05 outlook 볼륨 --> 
	                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P06' THEN 1 ELSE 0 END)      AS N_ind_Cnt06   <!--금년P06 outlook 볼륨 --> 
	                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P07' THEN 1 ELSE 0 END)      AS N_ind_Cnt07   <!--금년P07 outlook 볼륨 --> 
	                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P08' THEN 1 ELSE 0 END)      AS N_ind_Cnt08   <!--금년P08 outlook 볼륨 --> 
	                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P09' THEN 1 ELSE 0 END)      AS N_ind_Cnt09   <!--금년P09 outlook 볼륨 --> 
	                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P10' THEN 1 ELSE 0 END)      AS N_ind_Cnt10   <!--금년P10 outlook 볼륨 --> 
	                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P11' THEN 1 ELSE 0 END)      AS N_ind_Cnt11   <!--금년P11 outlook 볼륨 --> 
	                    ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P12' THEN 1 ELSE 0 END)      AS N_ind_Cnt12   <!--금년P12 outlook 볼륨 --> 
					FROM 
						ESLT_NTS_ACT  T1								<!-- 월NTS예측|팀|ESLT -->
					INNER JOIN 
						ESLT_AREA_MT T4									<!-- 팀정보|ESLT -->
						ON UPPER(t1.CITY) = UPPER(T4.CITY)               
    					AND UPPER(T1.SUBCITY1) = UPPER(T4.SUBCITY1)               
						AND UPPER(T1.SUBCITY2) = UPPER(T4.SUBCITY2)
					INNER JOIN 
						ESLT_TEAM_MT T5
						<!-- ON UPPER(t4.LpbTeam) = UPPER(T5.Team) -->
						ON  (case when t1.market = 'LOCAL' then t4.LpbTeam else t4.GpbTeam END) = UPPER(T5.Team)
					WHERE 1=1 
						AND T1.FY BETWEEN #Lfy# AND #fy#
						<isPropertyAvailable property="channel">
							<isNotEmpty property="channel">
				                 AND  T1.CHANNEL  =  #channel#			<!-- 검색조건 입력시 조건삽입 -->
			                </isNotEmpty>
						</isPropertyAvailable>
			          	AND T1.COMPANY = 'IND'
						<isPropertyAvailable property="channel">
							<isNotEmpty property="channel">
				                 AND  T5.Channel  =  #channel#			<!-- 검색조건 입력시 조건삽입 -->
			                </isNotEmpty>
						</isPropertyAvailable>
						<isPropertyAvailable property="region">
							<isNotEmpty property="region">
				                 AND  T5.Region  =  #region#			<!-- 검색조건 입력시 조건삽입 -->
			                </isNotEmpty>
						</isPropertyAvailable>
			      	GROUP BY T1.CHANNEL, T1.MARKET
   			) T4
		   ON   T1.DataLv1 = T4.DataLv1
		  AND   T1.DataLv2 = T4.DataLv2
		  AND   T1.DataLv3 = T4.DataLv3
    LEFT OUTER JOIN ( 
		  <!-- 5   DK Depletion Target 데이타 구하기 쿼리(당년)  구하기 --> 
			SELECT 
				'10' AS DataLv1  			<!--Whisky--> 
				, T1.CHANNEL AS DataLv2  	<!-- ON /OFF -->                     
				, T1.MARKET  AS DataLv3  	<!--LOCAL, INT`L -->
				<!-- IF 권역조건 또는 팀조건이 있을경우 팀을 가지고 온다. -->
				<!-- ELSE  아닌경우 권역을 가지고 온다. -->
		        <isNotEmpty property="region">
	        		,T5.TEAM    AS DataLv4
				</isNotEmpty>
				<isEmpty property="region">
					<isNotEmpty property="team">
	        			,T5.TEAM    AS DataLv4
					</isNotEmpty>
					<isEmpty property="team">
						,T5.Region  AS DataLv4    
					</isEmpty>
				</isEmpty> 
                <!-- END IF -->         
                <!-- 당년도 P01 ~ P12 Forecast 볼륨     -->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P01' THEN NVL(T1.Volume,0) ELSE 0 END) AS n_ind_tg_Vol01   <!--금년P01 Target 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P02' THEN NVL(T1.Volume,0) ELSE 0 END) AS n_ind_tg_Vol02   <!--금년P02 Target 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P03' THEN NVL(T1.Volume,0) ELSE 0 END) AS n_ind_tg_Vol03   <!--금년P03 Target 볼륨 -->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P04' THEN NVL(T1.Volume,0) ELSE 0 END) AS n_ind_tg_Vol04   <!--금년P04 Target 볼륨 -->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P05' THEN NVL(T1.Volume,0) ELSE 0 END) AS n_ind_tg_Vol05   <!--금년P05 Target 볼륨 -->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P06' THEN NVL(T1.Volume,0) ELSE 0 END) AS n_ind_tg_Vol06   <!--금년P06 Target 볼륨 -->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P07' THEN NVL(T1.Volume,0) ELSE 0 END) AS n_ind_tg_Vol07   <!--금년P07 Target 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P08' THEN NVL(T1.Volume,0) ELSE 0 END) AS n_ind_tg_Vol08   <!--금년P08 Target 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P09' THEN NVL(T1.Volume,0) ELSE 0 END) AS n_ind_tg_Vol09   <!--금년P09 Target 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P10' THEN NVL(T1.Volume,0) ELSE 0 END) AS n_ind_tg_Vol10   <!--금년P10 Target 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P11' THEN NVL(T1.Volume,0) ELSE 0 END) AS n_ind_tg_Vol11   <!--금년P11 Target 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P12' THEN NVL(T1.Volume,0) ELSE 0 END) AS n_ind_tg_Vol12   <!--금년P12 Target 볼륨-->
			FROM ESLT_NTS_TG T1             <!-- 월NTS목표|팀|ESLT -->
			INNER JOIN ESLT_TEAM_MT T5   	<!-- 팀정보|ESLT -->
				ON T1.TEAM = T5.Team
			WHERE T1.FY = #fy#
				<isPropertyAvailable property="channel">
					<isNotEmpty property="channel">
						AND T1.Channel  =  #channel#			<!-- 검색조건 입력시 조건삽입 -->
		            </isNotEmpty>
				</isPropertyAvailable>
				AND T1.COMPANY = 'IND'         
				<isPropertyAvailable property="channel">
					<isNotEmpty property="channel">
		                 AND  T5.Channel  =  #channel#			<!-- 검색조건 입력시 조건삽입 -->
		            </isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="channel">
					<isNotEmpty property="region">
		                 AND  T5.Region  =  #region#			<!-- 검색조건 입력시 조건삽입 -->
		            </isNotEmpty>
				</isPropertyAvailable>
		        <!-- IF 권역조건 또는 팀조건이 있을경우 팀을 가지고 온다. -->
		        <!-- ELSE  아닌경우 권역을 가지고 온다. -->
		        <isNotEmpty property="region">
					GROUP BY T1.CHANNEL, T1.MARKET, T5.TEAM
				</isNotEmpty>
				<isEmpty property="region">
					<isNotEmpty property="team">
	        			GROUP BY T1.CHANNEL, T1.MARKET, T5.TEAM
					</isNotEmpty>
					<isEmpty property="team">
						group by	T1.CHANNEL,  T1.MARKET, T5.Region   
					</isEmpty>
				</isEmpty> 
				<!-- END IF -->
			) T5
			ON T1.DataLv1 = T5.DataLv1
			AND T1.DataLv2 = T5.DataLv2 
  			AND T1.DataLv3 = T5.DataLv3  
  			AND T1.DataLv4 = T5.DataLv4
     ORDER BY	T1.DataLv1, T1.DataLv2 DESC, T1.DataLv3 DESC, T1.sortNo
    </select>
    
    
    
    
    <!-- DK Depletion Forecast / Target 조회 -->
    <select id="ANL0300207S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
    <!-- LV1 WHISK, NON WHISK -->
	<!-- LV2 ON, OFF    **  NON WHISKY인 경우는 ON/OFF 레벨로 구분하지 않아서 '*'로 넣어줌 -->
	<!-- LV3 LOCAL, INT`L, W/OFF /BEER, WODKA, OTHERS -->
	<!-- LV4 조직 (팀 또는 권역이 나옴)  **** 현재 NON WHISK영역은 전체조회시는 권역이 보여주고 있으나 권역조건 넣으면 LV3소계만 표현 (일단 권역나오게 하자 !..) -->
	<!-- NON WHISKY의 경우도 ON/OFF 레벨 구분되도록 수정 2015.08.19 -->
		SELECT  
			T1.DataLv1 AS DataLv1										<!-- Whisky  , Non Whisk  -->
			, T1.DataLv1_NM AS DataLv1_NM
          	, T1.DataLv2 AS DataLv2										<!-- ON, OFF , (Non Whiks -> '*' 표기 ) -->
			, NVL(T1.DataLv2_NM, ' ') AS  DataLv2_NM
			, case when (T1.datalv1= '20' and (T1.datalv3 = 'VODKA' or T1.datalv3 = 'OTHERS')) then T1.DataLv3 
					when T1.datalv1 = '10' then T1.datalv3 else 'BEER' end AS  DataLv3         
			, case when (T1.datalv1= '20' and (T1.DataLv3_NM = 'VODKA' or T1.DataLv3_NM = 'OTHERS')) then T1.DataLv3_NM 
					when T1.datalv1 = '10' then T1.DataLv3_NM else 'BEER' end AS DataLv3_NM        
			, T1.DataLv4 AS  DataLv4									<!-- 권역 또는 팀  (Non Whisk인 경우는 권역) --> 
			, T1.DataLv4_NM AS  DataLv4_NM 
			, T1.sortNo													<!-- 팀의 조회우선순 -->                 
			<!--  전년 DK Actual 실적 -->
			, NVL(t2.p_dk_ac_Vol01,0) AS  dk_ac_P01		<!--전년P01볼륨-->
			, NVL(t2.p_dk_ac_Vol02,0) AS  dk_ac_P02		<!--전년P02볼륨-->
			, NVL(t2.p_dk_ac_Vol03,0) AS  dk_ac_P03		<!--전년P03볼륨-->
			, NVL(t2.p_dk_ac_Vol04,0) AS  dk_ac_P04		<!--전년P04볼륨-->
			, NVL(t2.p_dk_ac_Vol05,0) AS  dk_ac_P05		<!--전년P05볼륨-->
			, NVL(t2.p_dk_ac_Vol06,0) AS  dk_ac_P06		<!--전년P06볼륨-->
			, NVL(t2.p_dk_ac_Vol07,0) AS  dk_ac_P07		<!--전년P07볼륨-->
			, NVL(t2.p_dk_ac_Vol08,0) AS  dk_ac_P08		<!--전년P08볼륨-->
			, NVL(t2.p_dk_ac_Vol09,0) AS  dk_ac_P09		<!--전년P09볼륨-->
			, NVL(t2.p_dk_ac_Vol10,0) AS  dk_ac_P10		<!--전년P10볼륨-->
			, NVL(t2.p_dk_ac_Vol11,0) AS  dk_ac_P11		<!--전년P11볼륨-->
			, NVL(t2.p_dk_ac_Vol12,0) AS  dk_ac_P12		<!--전년P12볼륨 -->
			, (NVL(t2.p_dk_ac_Vol01,0)+NVL(t2.p_dk_ac_Vol02,0)+NVL(t2.p_dk_ac_Vol03,0)) AS  dk_ac_Q01		<!--전년Q01볼륨-->
			, (NVL(t2.p_dk_ac_Vol04,0)+NVL(t2.p_dk_ac_Vol05,0)+NVL(t2.p_dk_ac_Vol06,0)) AS  dk_ac_Q02		<!--전년Q02볼륨-->
			, (NVL(t2.p_dk_ac_Vol07,0)+NVL(t2.p_dk_ac_Vol08,0)+NVL(t2.p_dk_ac_Vol09,0)) AS  dk_ac_Q03		<!--전년Q03볼륨-->
			, (NVL(t2.p_dk_ac_Vol10,0)+NVL(t2.p_dk_ac_Vol11,0)+NVL(t2.p_dk_ac_Vol12,0)) AS  dk_ac_Q04		<!--전년Q04볼륨-->
			, (NVL(t2.p_dk_ac_Vol01,0)+NVL(t2.p_dk_ac_Vol02,0)+NVL(t2.p_dk_ac_Vol03,0)+NVL(t2.p_dk_ac_Vol04,0)+NVL(t2.p_dk_ac_Vol05,0)+NVL(t2.p_dk_ac_Vol06,0)) AS  dk_ac_H01		<!--전년H01볼륨-->
			, (NVL(t2.p_dk_ac_Vol07,0)+NVL(t2.p_dk_ac_Vol08,0)+NVL(t2.p_dk_ac_Vol09,0)+NVL(t2.p_dk_ac_Vol10,0)+NVL(t2.p_dk_ac_Vol11,0)+NVL(t2.p_dk_ac_Vol12,0)) AS  dk_ac_H02		<!--전년H02볼륨-->
			, NVL(t2.p_dk_ac_Vol01,0) AS  dk_ac_YTD01
			, (NVL(t2.p_dk_ac_Vol01,0)+NVL(t2.p_dk_ac_Vol02,0)) AS  dk_ac_YTD02
			, (NVL(t2.p_dk_ac_Vol01,0)+NVL(t2.p_dk_ac_Vol02,0)+NVL(t2.p_dk_ac_Vol03,0)) AS  dk_ac_YTD03
			, (NVL(t2.p_dk_ac_Vol01,0)+NVL(t2.p_dk_ac_Vol02,0)+NVL(t2.p_dk_ac_Vol03,0)+NVL(t2.p_dk_ac_Vol04,0)) AS  dk_ac_YTD04
			, (NVL(t2.p_dk_ac_Vol01,0)+NVL(t2.p_dk_ac_Vol02,0)+NVL(t2.p_dk_ac_Vol03,0)+NVL(t2.p_dk_ac_Vol04,0)+NVL(t2.p_dk_ac_Vol05,0)) AS  dk_ac_YTD05
			, (NVL(t2.p_dk_ac_Vol01,0)+NVL(t2.p_dk_ac_Vol02,0)+NVL(t2.p_dk_ac_Vol03,0)+NVL(t2.p_dk_ac_Vol04,0)+NVL(t2.p_dk_ac_Vol05,0)+NVL(t2.p_dk_ac_Vol06,0)) AS  dk_ac_YTD06
			, (NVL(t2.p_dk_ac_Vol01,0)+NVL(t2.p_dk_ac_Vol02,0)+NVL(t2.p_dk_ac_Vol03,0)+NVL(t2.p_dk_ac_Vol04,0)+NVL(t2.p_dk_ac_Vol05,0)+NVL(t2.p_dk_ac_Vol06,0)+NVL(t2.p_dk_ac_Vol07,0)) AS  dk_ac_YTD07
			, (NVL(t2.p_dk_ac_Vol01,0)+NVL(t2.p_dk_ac_Vol02,0)+NVL(t2.p_dk_ac_Vol03,0)+NVL(t2.p_dk_ac_Vol04,0)+NVL(t2.p_dk_ac_Vol05,0)+NVL(t2.p_dk_ac_Vol06,0)+NVL(t2.p_dk_ac_Vol07,0)+NVL(t2.p_dk_ac_Vol08,0)) AS  dk_ac_YTD08
			, (NVL(t2.p_dk_ac_Vol01,0)+NVL(t2.p_dk_ac_Vol02,0)+NVL(t2.p_dk_ac_Vol03,0)+NVL(t2.p_dk_ac_Vol04,0)+NVL(t2.p_dk_ac_Vol05,0)+NVL(t2.p_dk_ac_Vol06,0)+NVL(t2.p_dk_ac_Vol07,0)+NVL(t2.p_dk_ac_Vol08,0)+NVL(t2.p_dk_ac_Vol09,0)) AS  dk_ac_YTD09
			, (NVL(t2.p_dk_ac_Vol01,0)+NVL(t2.p_dk_ac_Vol02,0)+NVL(t2.p_dk_ac_Vol03,0)+NVL(t2.p_dk_ac_Vol04,0)+NVL(t2.p_dk_ac_Vol05,0)+NVL(t2.p_dk_ac_Vol06,0)+NVL(t2.p_dk_ac_Vol07,0)+NVL(t2.p_dk_ac_Vol08,0)+NVL(t2.p_dk_ac_Vol09,0)+NVL(t2.p_dk_ac_Vol10,0)) AS  dk_ac_YTD10
			, (NVL(t2.p_dk_ac_Vol01,0)+NVL(t2.p_dk_ac_Vol02,0)+NVL(t2.p_dk_ac_Vol03,0)+NVL(t2.p_dk_ac_Vol04,0)+NVL(t2.p_dk_ac_Vol05,0)+NVL(t2.p_dk_ac_Vol06,0)+NVL(t2.p_dk_ac_Vol07,0)+NVL(t2.p_dk_ac_Vol08,0)+NVL(t2.p_dk_ac_Vol09,0)+NVL(t2.p_dk_ac_Vol10,0)+NVL(t2.p_dk_ac_Vol11,0)) AS  dk_ac_YTD11
			, (NVL(t2.p_dk_ac_Vol01,0)+NVL(t2.p_dk_ac_Vol02,0)+NVL(t2.p_dk_ac_Vol03,0)+NVL(t2.p_dk_ac_Vol04,0)+NVL(t2.p_dk_ac_Vol05,0)+NVL(t2.p_dk_ac_Vol06,0)+NVL(t2.p_dk_ac_Vol07,0)+NVL(t2.p_dk_ac_Vol08,0)+NVL(t2.p_dk_ac_Vol09,0)+NVL(t2.p_dk_ac_Vol10,0)+NVL(t2.p_dk_ac_Vol11,0)+NVL(t2.p_dk_ac_Vol12,0)) AS  dk_ac_YTD12
			<!-- 당년 DK Forecast -->
			, NVL(t3.n_dk_for_Vol01,0) AS  dk_for_P01		<!--당년P01볼륨 -->
			, NVL(t3.n_dk_for_Vol02,0) AS  dk_for_P02		<!--당년P02볼륨 -->
			, NVL(t3.n_dk_for_Vol03,0) AS  dk_for_P03		<!--당년P03볼륨 -->
			, NVL(t3.n_dk_for_Vol04,0) AS  dk_for_P04		<!--당년P04볼륨 -->
			, NVL(t3.n_dk_for_Vol05,0) AS  dk_for_P05		<!--당년P05볼륨 -->
			, NVL(t3.n_dk_for_Vol06,0) AS  dk_for_P06		<!--당년P06볼륨 -->
			, NVL(t3.n_dk_for_Vol07,0) AS  dk_for_P07		<!--당년P07볼륨 -->
			, NVL(t3.n_dk_for_Vol08,0) AS  dk_for_P08		<!--당년P08볼륨 -->
			, NVL(t3.n_dk_for_Vol09,0) AS  dk_for_P09		<!--당년P09볼륨 -->
			, NVL(t3.n_dk_for_Vol10,0) AS  dk_for_P10		<!--당년P10볼륨 -->
			, NVL(t3.n_dk_for_Vol11,0) AS  dk_for_P11		<!--당년P11볼륨 -->
			, NVL(t3.n_dk_for_Vol12,0) AS  dk_for_P12		<!--당년P12볼륨  -->
			, (NVL(t3.n_dk_for_Vol01,0)+NVL(t3.n_dk_for_Vol02,0)+NVL(t3.n_dk_for_Vol03,0)) AS  dk_for_Q01		<!--당년Q01볼륨 -->
			, (NVL(t3.n_dk_for_Vol04,0)+NVL(t3.n_dk_for_Vol05,0)+NVL(t3.n_dk_for_Vol06,0)) AS  dk_for_Q02		<!--당년Q01볼륨 -->
			, (NVL(t3.n_dk_for_Vol07,0)+NVL(t3.n_dk_for_Vol08,0)+NVL(t3.n_dk_for_Vol09,0)) AS  dk_for_Q03		<!--당년Q01볼륨 -->
			, (NVL(t3.n_dk_for_Vol10,0)+NVL(t3.n_dk_for_Vol11,0)+NVL(t3.n_dk_for_Vol12,0)) AS  dk_for_Q04		<!--당년Q01볼륨 -->
			, (NVL(t3.n_dk_for_Vol01,0)+NVL(t3.n_dk_for_Vol02,0)+NVL(t3.n_dk_for_Vol03,0)+NVL(t3.n_dk_for_Vol04,0)+NVL(t3.n_dk_for_Vol05,0)+NVL(t3.n_dk_for_Vol06,0)) AS  dk_for_H01		<!--당년H01볼륨 -->
			, (NVL(t3.n_dk_for_Vol07,0)+NVL(t3.n_dk_for_Vol08,0)+NVL(t3.n_dk_for_Vol09,0)+NVL(t3.n_dk_for_Vol10,0)+NVL(t3.n_dk_for_Vol11,0)+NVL(t3.n_dk_for_Vol12,0)) AS  dk_for_H02		<!--당년H02볼륨 -->
			, NVL(t3.n_dk_for_Vol01,0) AS  dk_for_YTD01
			, (NVL(t3.n_dk_for_Vol01,0)+NVL(t3.n_dk_for_Vol02,0)) AS  dk_for_YTD02
			, (NVL(t3.n_dk_for_Vol01,0)+NVL(t3.n_dk_for_Vol02,0)+NVL(t3.n_dk_for_Vol03,0)) AS  dk_for_YTD03
			, (NVL(t3.n_dk_for_Vol01,0)+NVL(t3.n_dk_for_Vol02,0)+NVL(t3.n_dk_for_Vol03,0)+NVL(t3.n_dk_for_Vol04,0)) AS  dk_for_YTD04
			, (NVL(t3.n_dk_for_Vol01,0)+NVL(t3.n_dk_for_Vol02,0)+NVL(t3.n_dk_for_Vol03,0)+NVL(t3.n_dk_for_Vol04,0)+NVL(t3.n_dk_for_Vol05,0)) AS  dk_for_YTD05
			, (NVL(t3.n_dk_for_Vol01,0)+NVL(t3.n_dk_for_Vol02,0)+NVL(t3.n_dk_for_Vol03,0)+NVL(t3.n_dk_for_Vol04,0)+NVL(t3.n_dk_for_Vol05,0)+NVL(t3.n_dk_for_Vol06,0)) AS  dk_for_YTD06
			, (NVL(t3.n_dk_for_Vol01,0)+NVL(t3.n_dk_for_Vol02,0)+NVL(t3.n_dk_for_Vol03,0)+NVL(t3.n_dk_for_Vol04,0)+NVL(t3.n_dk_for_Vol05,0)+NVL(t3.n_dk_for_Vol06,0)+NVL(t3.n_dk_for_Vol07,0)) AS  dk_for_YTD07
			, (NVL(t3.n_dk_for_Vol01,0)+NVL(t3.n_dk_for_Vol02,0)+NVL(t3.n_dk_for_Vol03,0)+NVL(t3.n_dk_for_Vol04,0)+NVL(t3.n_dk_for_Vol05,0)+NVL(t3.n_dk_for_Vol06,0)+NVL(t3.n_dk_for_Vol07,0)+NVL(t3.n_dk_for_Vol08,0)) AS  dk_for_YTD08
			, (NVL(t3.n_dk_for_Vol01,0)+NVL(t3.n_dk_for_Vol02,0)+NVL(t3.n_dk_for_Vol03,0)+NVL(t3.n_dk_for_Vol04,0)+NVL(t3.n_dk_for_Vol05,0)+NVL(t3.n_dk_for_Vol06,0)+NVL(t3.n_dk_for_Vol07,0)+NVL(t3.n_dk_for_Vol08,0)+NVL(t3.n_dk_for_Vol09,0)) AS  dk_for_YTD09
			, (NVL(t3.n_dk_for_Vol01,0)+NVL(t3.n_dk_for_Vol02,0)+NVL(t3.n_dk_for_Vol03,0)+NVL(t3.n_dk_for_Vol04,0)+NVL(t3.n_dk_for_Vol05,0)+NVL(t3.n_dk_for_Vol06,0)+NVL(t3.n_dk_for_Vol07,0)+NVL(t3.n_dk_for_Vol08,0)+NVL(t3.n_dk_for_Vol09,0)+NVL(t3.n_dk_for_Vol10,0)) AS  dk_for_YTD10
			, (NVL(t3.n_dk_for_Vol01,0)+NVL(t3.n_dk_for_Vol02,0)+NVL(t3.n_dk_for_Vol03,0)+NVL(t3.n_dk_for_Vol04,0)+NVL(t3.n_dk_for_Vol05,0)+NVL(t3.n_dk_for_Vol06,0)+NVL(t3.n_dk_for_Vol07,0)+NVL(t3.n_dk_for_Vol08,0)+NVL(t3.n_dk_for_Vol09,0)+NVL(t3.n_dk_for_Vol10,0)+NVL(t3.n_dk_for_Vol11,0)) AS  dk_for_YTD11
			, (NVL(t3.n_dk_for_Vol01,0)+NVL(t3.n_dk_for_Vol02,0)+NVL(t3.n_dk_for_Vol03,0)+NVL(t3.n_dk_for_Vol04,0)+NVL(t3.n_dk_for_Vol05,0)+NVL(t3.n_dk_for_Vol06,0)+NVL(t3.n_dk_for_Vol07,0)+NVL(t3.n_dk_for_Vol08,0)+NVL(t3.n_dk_for_Vol09,0)+NVL(t3.n_dk_for_Vol10,0)+NVL(t3.n_dk_for_Vol11,0)+NVL(t3.n_dk_for_Vol12,0)) AS  dk_for_YTD12
			<!-- 당년  DK  Actual(Outlook) -->
			<!-- 당년실적이 있으면 실적으로 없으면 Outlook으로 보여줌 -->
			,CASE WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) =0 THEN NVL(t3.N_dk_out_Vol01,0)
	          WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol01,0)  END  AS  dk_out_P01					<!--당년P01볼륨-->
			,CASE WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) =0 THEN NVL(t3.N_dk_out_Vol02,0)
		        WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol02,0)  END  AS  dk_out_P02					<!--당년P02볼륨-->
			,CASE WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) =0 THEN NVL(t3.N_dk_out_Vol03,0)
			      WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol03,0)  END  AS  dk_out_P03					<!--당년P03볼륨-->
			,CASE WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) =0 THEN NVL(t3.N_dk_out_Vol04,0)
			      WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol04,0)  END  AS  dk_out_P04					<!--당년P04볼륨-->
			,CASE WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) =0 THEN NVL(t3.N_dk_out_Vol05,0)
			      WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol05,0)  END  AS  dk_out_P05					<!--당년P05볼륨-->
			,CASE WHEN  t2.N_dk_ac_Vol06 IS NULL and NVL(t5.CNT_N_dk_ac_Vol06,0) =0 THEN NVL(t3.N_dk_out_Vol06,0)
			      WHEN  t2.N_dk_ac_Vol06 IS NULL and NVL(t5.CNT_N_dk_ac_Vol06,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol06,0)  END  AS  dk_out_P06					<!--당년P06볼륨-->
			,CASE WHEN  t2.N_dk_ac_Vol07 IS NULL and NVL(t5.CNT_N_dk_ac_Vol07,0) =0 THEN NVL(t3.N_dk_out_Vol07,0)
			      WHEN  t2.N_dk_ac_Vol07 IS NULL and NVL(t5.CNT_N_dk_ac_Vol07,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol07,0)  END  AS  dk_out_P07					<!--당년P07볼륨-->
			,CASE WHEN  t2.N_dk_ac_Vol08 IS NULL and NVL(t5.CNT_N_dk_ac_Vol08,0) =0 THEN NVL(t3.N_dk_out_Vol08,0)
			      WHEN  t2.N_dk_ac_Vol08 IS NULL and NVL(t5.CNT_N_dk_ac_Vol08,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol08,0)  END  AS  dk_out_P08					<!--당년P08볼륨-->
			,CASE WHEN  t2.N_dk_ac_Vol09 IS NULL and NVL(t5.CNT_N_dk_ac_Vol09,0) =0 THEN NVL(t3.N_dk_out_Vol09,0)
			      WHEN  t2.N_dk_ac_Vol09 IS NULL and NVL(t5.CNT_N_dk_ac_Vol09,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol09,0)  END  AS  dk_out_P09					<!--당년P09볼륨-->
			,CASE WHEN  t2.N_dk_ac_Vol10 IS NULL and NVL(t5.CNT_N_dk_ac_Vol10,0) =0 THEN NVL(t3.N_dk_out_Vol10,0)
			      WHEN  t2.N_dk_ac_Vol10 IS NULL and NVL(t5.CNT_N_dk_ac_Vol10,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol10,0)  END  AS  dk_out_P10					<!--당년P10볼륨-->
			,CASE WHEN  t2.N_dk_ac_Vol11 IS NULL and NVL(t5.CNT_N_dk_ac_Vol11,0) =0 THEN NVL(t3.N_dk_out_Vol11,0)
			      WHEN  t2.N_dk_ac_Vol11 IS NULL and NVL(t5.CNT_N_dk_ac_Vol11,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol11,0)  END  AS  dk_out_P11					<!--당년P11볼륨-->
			,CASE WHEN  t2.N_dk_ac_Vol12 IS NULL and NVL(t5.CNT_N_dk_ac_Vol12,0) =0 THEN NVL(t3.N_dk_out_Vol12,0)
			      WHEN  t2.N_dk_ac_Vol12 IS NULL and NVL(t5.CNT_N_dk_ac_Vol12,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol12,0)  END  AS  dk_out_P12					<!--당년P12볼륨 -->
			,((CASE WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) =0 THEN NVL(t3.N_dk_out_Vol01,0)
			        WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol01,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) =0 THEN NVL(t3.N_dk_out_Vol02,0)
			       WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol02,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) =0 THEN NVL(t3.N_dk_out_Vol03,0)
			       WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol03,0) END)) AS  dk_out_Q01						<!--당년Q01볼륨-->
			,((CASE WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) =0 THEN NVL(t3.N_dk_out_Vol04,0)
			        WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol04,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) =0 THEN NVL(t3.N_dk_out_Vol05,0)
			       WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol05,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol06 IS NULL and NVL(t5.CNT_N_dk_ac_Vol06,0) =0 THEN NVL(t3.N_dk_out_Vol06,0)
			       WHEN  t2.N_dk_ac_Vol06 IS NULL and NVL(t5.CNT_N_dk_ac_Vol06,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol06,0) END))  AS  dk_out_Q02					<!--당년Q02볼륨-->
			,((CASE WHEN  t2.N_dk_ac_Vol07 IS NULL and NVL(t5.CNT_N_dk_ac_Vol07,0) =0 THEN NVL(t3.N_dk_out_Vol07,0)
			        WHEN  t2.N_dk_ac_Vol07 IS NULL and NVL(t5.CNT_N_dk_ac_Vol07,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol07,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol08 IS NULL and NVL(t5.CNT_N_dk_ac_Vol08,0) =0 THEN NVL(t3.N_dk_out_Vol08,0)
			       WHEN  t2.N_dk_ac_Vol08 IS NULL and NVL(t5.CNT_N_dk_ac_Vol08,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol08,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol09 IS NULL and NVL(t5.CNT_N_dk_ac_Vol09,0) =0 THEN NVL(t3.N_dk_out_Vol09,0)
			       WHEN  t2.N_dk_ac_Vol09 IS NULL and NVL(t5.CNT_N_dk_ac_Vol09,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol09,0) END))  AS  dk_out_Q03					<!--당년Q03볼륨-->
			,((CASE WHEN  t2.N_dk_ac_Vol10 IS NULL and NVL(t5.CNT_N_dk_ac_Vol10,0) =0 THEN NVL(t3.N_dk_out_Vol10,0)
			        WHEN  t2.N_dk_ac_Vol10 IS NULL and NVL(t5.CNT_N_dk_ac_Vol10,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol10,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol11 IS NULL and NVL(t5.CNT_N_dk_ac_Vol11,0) =0 THEN NVL(t3.N_dk_out_Vol11,0)
			       WHEN  t2.N_dk_ac_Vol11 IS NULL and NVL(t5.CNT_N_dk_ac_Vol11,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol11,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol12 IS NULL and NVL(t5.CNT_N_dk_ac_Vol12,0) =0 THEN NVL(t3.N_dk_out_Vol12,0)
			       WHEN  t2.N_dk_ac_Vol12 IS NULL and NVL(t5.CNT_N_dk_ac_Vol12,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol12,0) END))  AS  dk_out_Q04					<!--당년Q04볼륨-->
			,((CASE WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) =0 THEN NVL(t3.N_dk_out_Vol01,0)
			        WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol01,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) =0 THEN NVL(t3.N_dk_out_Vol02,0)
			       WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol02,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) =0 THEN NVL(t3.N_dk_out_Vol03,0)
			       WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol03,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) =0 THEN NVL(t3.N_dk_out_Vol04,0)
			       WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol04,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) =0 THEN NVL(t3.N_dk_out_Vol05,0)
			       WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol05,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol06 IS NULL and NVL(t5.CNT_N_dk_ac_Vol06,0) =0 THEN NVL(t3.N_dk_out_Vol06,0)
			       WHEN  t2.N_dk_ac_Vol06 IS NULL and NVL(t5.CNT_N_dk_ac_Vol06,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol06,0) END)) AS  dk_out_H01					<!--당년H01볼륨-->
			,((CASE WHEN  t2.N_dk_ac_Vol07 IS NULL and NVL(t5.CNT_N_dk_ac_Vol07,0) =0 THEN NVL(t3.N_dk_out_Vol07,0)
			        WHEN  t2.N_dk_ac_Vol07 IS NULL and NVL(t5.CNT_N_dk_ac_Vol07,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol07,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol08 IS NULL and NVL(t5.CNT_N_dk_ac_Vol08,0) =0 THEN NVL(t3.N_dk_out_Vol08,0)
			       WHEN  t2.N_dk_ac_Vol08 IS NULL and NVL(t5.CNT_N_dk_ac_Vol08,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol08,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol09 IS NULL and NVL(t5.CNT_N_dk_ac_Vol09,0) =0 THEN NVL(t3.N_dk_out_Vol09,0)
			       WHEN  t2.N_dk_ac_Vol09 IS NULL and NVL(t5.CNT_N_dk_ac_Vol09,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol09,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol10 IS NULL and NVL(t5.CNT_N_dk_ac_Vol10,0) =0 THEN NVL(t3.N_dk_out_Vol10,0)
			       WHEN  t2.N_dk_ac_Vol10 IS NULL and NVL(t5.CNT_N_dk_ac_Vol10,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol10,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol11 IS NULL and NVL(t5.CNT_N_dk_ac_Vol11,0) =0 THEN NVL(t3.N_dk_out_Vol11,0)
			       WHEN  t2.N_dk_ac_Vol11 IS NULL and NVL(t5.CNT_N_dk_ac_Vol11,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol11,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol12 IS NULL and NVL(t5.CNT_N_dk_ac_Vol12,0) =0 THEN NVL(t3.N_dk_out_Vol12,0)
			       WHEN  t2.N_dk_ac_Vol12 IS NULL and NVL(t5.CNT_N_dk_ac_Vol12,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol12,0) END)) AS  dk_out_H02					<!--당년H02볼륨-->
			,CASE WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) =0 THEN NVL(t3.N_dk_out_Vol01,0)
			      WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol01,0)  END  AS  dk_out_YTD01
			,((CASE WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) =0 THEN NVL(t3.N_dk_out_Vol01,0)
			        WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol01,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) =0 THEN NVL(t3.N_dk_out_Vol02,0)
			       WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol02,0) END)) AS  dk_out_YTD02	
			,((CASE WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) =0 THEN NVL(t3.N_dk_out_Vol01,0)
			        WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol01,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) =0 THEN NVL(t3.N_dk_out_Vol02,0)
			       WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol02,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) =0 THEN NVL(t3.N_dk_out_Vol03,0)
			       WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol03,0) END)) AS  dk_out_YTD03
			,((CASE WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) =0 THEN NVL(t3.N_dk_out_Vol01,0)
			        WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol01,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) =0 THEN NVL(t3.N_dk_out_Vol02,0)
			       WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol02,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) =0 THEN NVL(t3.N_dk_out_Vol03,0)
			       WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) >0 THEN 0  
			 ELSE  NVL(t2.N_dk_ac_Vol03,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) =0 THEN NVL(t3.N_dk_out_Vol04,0)
			       WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol04,0) END)) AS  dk_out_YTD04
			,((CASE WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) =0 THEN NVL(t3.N_dk_out_Vol01,0)
			        WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol01,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) =0 THEN NVL(t3.N_dk_out_Vol02,0)
			       WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol02,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) =0 THEN NVL(t3.N_dk_out_Vol03,0)
			       WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol03,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) =0 THEN NVL(t3.N_dk_out_Vol04,0)
			       WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) >0 THEN 0   
			 ELSE  NVL(t2.N_dk_ac_Vol04,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) =0 THEN NVL(t3.N_dk_out_Vol05,0)
			       WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol05,0) END)) AS  dk_out_YTD05
			,((CASE WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) =0 THEN NVL(t3.N_dk_out_Vol01,0)
			        WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol01,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) =0 THEN NVL(t3.N_dk_out_Vol02,0)
			       WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol02,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) =0 THEN NVL(t3.N_dk_out_Vol03,0)
			       WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol03,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) =0 THEN NVL(t3.N_dk_out_Vol04,0)
			       WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) >0 THEN 0           
			 ELSE  NVL(t2.N_dk_ac_Vol04,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) =0 THEN NVL(t3.N_dk_out_Vol05,0)
			       WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol05,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol06 IS NULL and NVL(t5.CNT_N_dk_ac_Vol06,0) =0 THEN NVL(t3.N_dk_out_Vol06,0)
			       WHEN  t2.N_dk_ac_Vol06 IS NULL and NVL(t5.CNT_N_dk_ac_Vol06,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol06,0) END)) AS  dk_out_YTD06
			,((CASE WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) =0 THEN NVL(t3.N_dk_out_Vol01,0)
			        WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol01,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) =0 THEN NVL(t3.N_dk_out_Vol02,0)
			       WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol02,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) =0 THEN NVL(t3.N_dk_out_Vol03,0)
			       WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol03,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) =0 THEN NVL(t3.N_dk_out_Vol04,0)
			       WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol04,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) =0 THEN NVL(t3.N_dk_out_Vol05,0)
			       WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol05,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol06 IS NULL and NVL(t5.CNT_N_dk_ac_Vol06,0) =0 THEN NVL(t3.N_dk_out_Vol06,0)
			       WHEN  t2.N_dk_ac_Vol06 IS NULL and NVL(t5.CNT_N_dk_ac_Vol06,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol06,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol07 IS NULL and NVL(t5.CNT_N_dk_ac_Vol07,0) =0 THEN NVL(t3.N_dk_out_Vol07,0)
			       WHEN  t2.N_dk_ac_Vol07 IS NULL and NVL(t5.CNT_N_dk_ac_Vol07,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol07,0) END)) AS  dk_out_YTD07
			,((CASE WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) =0 THEN NVL(t3.N_dk_out_Vol01,0)
			        WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol01,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) =0 THEN NVL(t3.N_dk_out_Vol02,0)
			       WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol02,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) =0 THEN NVL(t3.N_dk_out_Vol03,0)
			       WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol03,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) =0 THEN NVL(t3.N_dk_out_Vol04,0)
			       WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol04,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) =0 THEN NVL(t3.N_dk_out_Vol05,0)
			       WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol05,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol06 IS NULL and NVL(t5.CNT_N_dk_ac_Vol06,0) =0 THEN NVL(t3.N_dk_out_Vol06,0)
			       WHEN  t2.N_dk_ac_Vol06 IS NULL and NVL(t5.CNT_N_dk_ac_Vol06,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol06,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol07 IS NULL and NVL(t5.CNT_N_dk_ac_Vol07,0) =0 THEN NVL(t3.N_dk_out_Vol07,0)
			       WHEN  t2.N_dk_ac_Vol07 IS NULL and NVL(t5.CNT_N_dk_ac_Vol07,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol07,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol08 IS NULL and NVL(t5.CNT_N_dk_ac_Vol08,0) =0 THEN NVL(t3.N_dk_out_Vol08,0)
			       WHEN  t2.N_dk_ac_Vol08 IS NULL and NVL(t5.CNT_N_dk_ac_Vol08,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol08,0) END)) AS  dk_out_YTD08
			,((CASE WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) =0 THEN NVL(t3.N_dk_out_Vol01,0)
			        WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol01,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) =0 THEN NVL(t3.N_dk_out_Vol02,0)
			       WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol02,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) =0 THEN NVL(t3.N_dk_out_Vol03,0)
			       WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol03,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) =0 THEN NVL(t3.N_dk_out_Vol04,0)
			       WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol04,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) =0 THEN NVL(t3.N_dk_out_Vol05,0)
			       WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol05,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol06 IS NULL and NVL(t5.CNT_N_dk_ac_Vol06,0) =0 THEN NVL(t3.N_dk_out_Vol06,0)
			       WHEN  t2.N_dk_ac_Vol06 IS NULL and NVL(t5.CNT_N_dk_ac_Vol06,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol06,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol07 IS NULL and NVL(t5.CNT_N_dk_ac_Vol07,0) =0 THEN NVL(t3.N_dk_out_Vol07,0)
			       WHEN  t2.N_dk_ac_Vol07 IS NULL and NVL(t5.CNT_N_dk_ac_Vol07,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol07,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol08 IS NULL and NVL(t5.CNT_N_dk_ac_Vol08,0) =0 THEN NVL(t3.N_dk_out_Vol08,0)
			       WHEN  t2.N_dk_ac_Vol08 IS NULL and NVL(t5.CNT_N_dk_ac_Vol08,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol08,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol09 IS NULL and NVL(t5.CNT_N_dk_ac_Vol09,0) =0 THEN NVL(t3.N_dk_out_Vol09,0)
			       WHEN  t2.N_dk_ac_Vol09 IS NULL and NVL(t5.CNT_N_dk_ac_Vol09,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol09,0) END)) AS  dk_out_YTD09
			,((CASE WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) =0 THEN NVL(t3.N_dk_out_Vol01,0)
			        WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol01,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) =0 THEN NVL(t3.N_dk_out_Vol02,0)
			       WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol02,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) =0 THEN NVL(t3.N_dk_out_Vol03,0)
			       WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol03,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) =0 THEN NVL(t3.N_dk_out_Vol04,0)
			       WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol04,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) =0 THEN NVL(t3.N_dk_out_Vol05,0)
			       WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) >0 THEN 0 
			 ELSE  NVL(t2.N_dk_ac_Vol05,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol06 IS NULL and NVL(t5.CNT_N_dk_ac_Vol06,0) =0 THEN NVL(t3.N_dk_out_Vol06,0)
			       WHEN  t2.N_dk_ac_Vol06 IS NULL and NVL(t5.CNT_N_dk_ac_Vol06,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol06,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol07 IS NULL and NVL(t5.CNT_N_dk_ac_Vol07,0) =0 THEN NVL(t3.N_dk_out_Vol07,0)
			       WHEN  t2.N_dk_ac_Vol07 IS NULL and NVL(t5.CNT_N_dk_ac_Vol07,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol07,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol08 IS NULL and NVL(t5.CNT_N_dk_ac_Vol08,0) =0 THEN NVL(t3.N_dk_out_Vol08,0)
			       WHEN  t2.N_dk_ac_Vol08 IS NULL and NVL(t5.CNT_N_dk_ac_Vol08,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol08,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol09 IS NULL and NVL(t5.CNT_N_dk_ac_Vol09,0) =0 THEN NVL(t3.N_dk_out_Vol09,0)
			       WHEN  t2.N_dk_ac_Vol09 IS NULL and NVL(t5.CNT_N_dk_ac_Vol09,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol09,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol10 IS NULL and NVL(t5.CNT_N_dk_ac_Vol10,0) =0 THEN NVL(t3.N_dk_out_Vol10,0)
			       WHEN  t2.N_dk_ac_Vol10 IS NULL and NVL(t5.CNT_N_dk_ac_Vol10,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol10,0) END)) AS  dk_out_YTD10
			,((CASE WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) =0 THEN NVL(t3.N_dk_out_Vol01,0)
			        WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol01,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) =0 THEN NVL(t3.N_dk_out_Vol02,0)
			       WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol02,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) =0 THEN NVL(t3.N_dk_out_Vol03,0)
			       WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol03,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) =0 THEN NVL(t3.N_dk_out_Vol04,0)
			       WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol04,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) =0 THEN NVL(t3.N_dk_out_Vol05,0)
			       WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol05,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol06 IS NULL and NVL(t5.CNT_N_dk_ac_Vol06,0) =0 THEN NVL(t3.N_dk_out_Vol06,0)
			       WHEN  t2.N_dk_ac_Vol06 IS NULL and NVL(t5.CNT_N_dk_ac_Vol06,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol06,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol07 IS NULL and NVL(t5.CNT_N_dk_ac_Vol07,0) =0 THEN NVL(t3.N_dk_out_Vol07,0)
			       WHEN  t2.N_dk_ac_Vol07 IS NULL and NVL(t5.CNT_N_dk_ac_Vol07,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol07,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol08 IS NULL and NVL(t5.CNT_N_dk_ac_Vol08,0) =0 THEN NVL(t3.N_dk_out_Vol08,0)
			       WHEN  t2.N_dk_ac_Vol08 IS NULL and NVL(t5.CNT_N_dk_ac_Vol08,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol08,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol09 IS NULL and NVL(t5.CNT_N_dk_ac_Vol09,0) =0 THEN NVL(t3.N_dk_out_Vol09,0)
			       WHEN  t2.N_dk_ac_Vol09 IS NULL and NVL(t5.CNT_N_dk_ac_Vol09,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol09,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol10 IS NULL and NVL(t5.CNT_N_dk_ac_Vol10,0) =0 THEN NVL(t3.N_dk_out_Vol10,0)
			       WHEN  t2.N_dk_ac_Vol10 IS NULL and NVL(t5.CNT_N_dk_ac_Vol10,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol10,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol11 IS NULL and NVL(t5.CNT_N_dk_ac_Vol11,0) =0 THEN NVL(t3.N_dk_out_Vol11,0)
			       WHEN  t2.N_dk_ac_Vol11 IS NULL and NVL(t5.CNT_N_dk_ac_Vol11,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol11,0) END)) AS  dk_out_YTD11
			,((CASE WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) =0 THEN NVL(t3.N_dk_out_Vol01,0)
			        WHEN  t2.N_dk_ac_Vol01 IS NULL and NVL(t5.CNT_N_dk_ac_Vol01,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol01,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) =0 THEN NVL(t3.N_dk_out_Vol02,0)
			       WHEN  t2.N_dk_ac_Vol02 IS NULL and NVL(t5.CNT_N_dk_ac_Vol02,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol02,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) =0 THEN NVL(t3.N_dk_out_Vol03,0)
			       WHEN  t2.N_dk_ac_Vol03 IS NULL and NVL(t5.CNT_N_dk_ac_Vol03,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol03,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) =0 THEN NVL(t3.N_dk_out_Vol04,0)
			       WHEN  t2.N_dk_ac_Vol04 IS NULL and NVL(t5.CNT_N_dk_ac_Vol04,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol04,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) =0 THEN NVL(t3.N_dk_out_Vol05,0)
			       WHEN  t2.N_dk_ac_Vol05 IS NULL and NVL(t5.CNT_N_dk_ac_Vol05,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol05,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol06 IS NULL and NVL(t5.CNT_N_dk_ac_Vol06,0) =0 THEN NVL(t3.N_dk_out_Vol06,0)
			       WHEN  t2.N_dk_ac_Vol06 IS NULL and NVL(t5.CNT_N_dk_ac_Vol06,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol06,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol07 IS NULL and NVL(t5.CNT_N_dk_ac_Vol07,0) =0 THEN NVL(t3.N_dk_out_Vol07,0)
			       WHEN  t2.N_dk_ac_Vol07 IS NULL and NVL(t5.CNT_N_dk_ac_Vol07,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol07,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol08 IS NULL and NVL(t5.CNT_N_dk_ac_Vol08,0) =0 THEN NVL(t3.N_dk_out_Vol08,0)
			       WHEN  t2.N_dk_ac_Vol08 IS NULL and NVL(t5.CNT_N_dk_ac_Vol08,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol08,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol09 IS NULL and NVL(t5.CNT_N_dk_ac_Vol09,0) =0 THEN NVL(t3.N_dk_out_Vol09,0)
			       WHEN  t2.N_dk_ac_Vol09 IS NULL and NVL(t5.CNT_N_dk_ac_Vol09,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol09,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol10 IS NULL and NVL(t5.CNT_N_dk_ac_Vol10,0) =0 THEN NVL(t3.N_dk_out_Vol10,0)
			       WHEN  t2.N_dk_ac_Vol10 IS NULL and NVL(t5.CNT_N_dk_ac_Vol10,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol10,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol11 IS NULL and NVL(t5.CNT_N_dk_ac_Vol11,0) =0 THEN NVL(t3.N_dk_out_Vol11,0)
			       WHEN  t2.N_dk_ac_Vol11 IS NULL and NVL(t5.CNT_N_dk_ac_Vol11,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol11,0) END)+
			 (CASE WHEN  t2.N_dk_ac_Vol12 IS NULL and NVL(t5.CNT_N_dk_ac_Vol12,0) =0 THEN NVL(t3.N_dk_out_Vol12,0)
			       WHEN  t2.N_dk_ac_Vol12 IS NULL and NVL(t5.CNT_N_dk_ac_Vol12,0) >0 THEN 0
			 ELSE  NVL(t2.N_dk_ac_Vol12,0) END)) AS  dk_out_YTD12
			<!-- 당년  DK Target -->
			,NVL(t4.n_dk_tg_Vol01,0) AS  dk_tg_P01		<!--당년P01볼륨 -->
			,NVL(t4.n_dk_tg_Vol02,0) AS  dk_tg_P02		<!--당년P02볼륨 -->
			,NVL(t4.n_dk_tg_Vol03,0) AS  dk_tg_P03		<!--당년P03볼륨 -->
			,NVL(t4.n_dk_tg_Vol04,0) AS  dk_tg_P04		<!--당년P04볼륨 -->
			,NVL(t4.n_dk_tg_Vol05,0) AS  dk_tg_P05		<!--당년P05볼륨 -->
			,NVL(t4.n_dk_tg_Vol06,0) AS  dk_tg_P06		<!--당년P06볼륨 -->
			,NVL(t4.n_dk_tg_Vol07,0) AS  dk_tg_P07		<!--당년P07볼륨 -->
			,NVL(t4.n_dk_tg_Vol08,0) AS  dk_tg_P08		<!--당년P08볼륨 -->
			,NVL(t4.n_dk_tg_Vol09,0) AS  dk_tg_P09		<!--당년P09볼륨 -->
			,NVL(t4.n_dk_tg_Vol10,0) AS  dk_tg_P10		<!--당년P10볼륨 -->
			,NVL(t4.n_dk_tg_Vol11,0) AS  dk_tg_P11		<!--당년P11볼륨 -->
			,NVL(t4.n_dk_tg_Vol12,0) AS  dk_tg_P12		<!--당년P12볼륨  -->
			,(NVL(t4.n_dk_tg_Vol01,0)+NVL(t4.n_dk_tg_Vol02,0)+NVL(t4.n_dk_tg_Vol03,0)) AS  dk_tg_Q01		<!--당년Q01볼륨 -->
			,(NVL(t4.n_dk_tg_Vol04,0)+NVL(t4.n_dk_tg_Vol05,0)+NVL(t4.n_dk_tg_Vol06,0)) AS  dk_tg_Q02		<!--당년Q02볼륨 -->
			,(NVL(t4.n_dk_tg_Vol07,0)+NVL(t4.n_dk_tg_Vol08,0)+NVL(t4.n_dk_tg_Vol09,0)) AS  dk_tg_Q03		<!--당년Q03볼륨 -->
			,(NVL(t4.n_dk_tg_Vol10,0)+NVL(t4.n_dk_tg_Vol11,0)+NVL(t4.n_dk_tg_Vol12,0)) AS  dk_tg_Q04		<!--당년Q04볼륨 -->
			,(NVL(t4.n_dk_tg_Vol01,0)+NVL(t4.n_dk_tg_Vol02,0)+NVL(t4.n_dk_tg_Vol03,0)+NVL(t4.n_dk_tg_Vol04,0)+NVL(t4.n_dk_tg_Vol05,0)+NVL(t4.n_dk_tg_Vol06,0)) AS  dk_tg_H01		<!--당년H01볼륨 -->
			,(NVL(t4.n_dk_tg_Vol07,0)+NVL(t4.n_dk_tg_Vol08,0)+NVL(t4.n_dk_tg_Vol09,0)+NVL(t4.n_dk_tg_Vol10,0)+NVL(t4.n_dk_tg_Vol11,0)+NVL(t4.n_dk_tg_Vol12,0)) AS  dk_tg_H02		<!--당년H02볼륨 -->
			,NVL(t4.n_dk_tg_Vol01,0) AS  dk_tg_YTD01
			,(NVL(t4.n_dk_tg_Vol01,0)+NVL(t4.n_dk_tg_Vol02,0)) AS  dk_tg_YTD02
			,(NVL(t4.n_dk_tg_Vol01,0)+NVL(t4.n_dk_tg_Vol02,0)+NVL(t4.n_dk_tg_Vol03,0)) AS  dk_tg_YTD03
			,(NVL(t4.n_dk_tg_Vol01,0)+NVL(t4.n_dk_tg_Vol02,0)+NVL(t4.n_dk_tg_Vol03,0)+NVL(t4.n_dk_tg_Vol04,0)) AS  dk_tg_YTD04
			,(NVL(t4.n_dk_tg_Vol01,0)+NVL(t4.n_dk_tg_Vol02,0)+NVL(t4.n_dk_tg_Vol03,0)+NVL(t4.n_dk_tg_Vol04,0)+NVL(t4.n_dk_tg_Vol05,0)) AS  dk_tg_YTD05
			,(NVL(t4.n_dk_tg_Vol01,0)+NVL(t4.n_dk_tg_Vol02,0)+NVL(t4.n_dk_tg_Vol03,0)+NVL(t4.n_dk_tg_Vol04,0)+NVL(t4.n_dk_tg_Vol05,0)+NVL(t4.n_dk_tg_Vol06,0)) AS  dk_tg_YTD06
			,(NVL(t4.n_dk_tg_Vol01,0)+NVL(t4.n_dk_tg_Vol02,0)+NVL(t4.n_dk_tg_Vol03,0)+NVL(t4.n_dk_tg_Vol04,0)+NVL(t4.n_dk_tg_Vol05,0)+NVL(t4.n_dk_tg_Vol06,0)+NVL(t4.n_dk_tg_Vol07,0)) AS  dk_tg_YTD07
			,(NVL(t4.n_dk_tg_Vol01,0)+NVL(t4.n_dk_tg_Vol02,0)+NVL(t4.n_dk_tg_Vol03,0)+NVL(t4.n_dk_tg_Vol04,0)+NVL(t4.n_dk_tg_Vol05,0)+NVL(t4.n_dk_tg_Vol06,0)+NVL(t4.n_dk_tg_Vol07,0)+NVL(t4.n_dk_tg_Vol08,0)) AS  dk_tg_YTD08
			,(NVL(t4.n_dk_tg_Vol01,0)+NVL(t4.n_dk_tg_Vol02,0)+NVL(t4.n_dk_tg_Vol03,0)+NVL(t4.n_dk_tg_Vol04,0)+NVL(t4.n_dk_tg_Vol05,0)+NVL(t4.n_dk_tg_Vol06,0)+NVL(t4.n_dk_tg_Vol07,0)+NVL(t4.n_dk_tg_Vol08,0)+NVL(t4.n_dk_tg_Vol09,0)) AS  dk_tg_YTD09
			,(NVL(t4.n_dk_tg_Vol01,0)+NVL(t4.n_dk_tg_Vol02,0)+NVL(t4.n_dk_tg_Vol03,0)+NVL(t4.n_dk_tg_Vol04,0)+NVL(t4.n_dk_tg_Vol05,0)+NVL(t4.n_dk_tg_Vol06,0)+NVL(t4.n_dk_tg_Vol07,0)+NVL(t4.n_dk_tg_Vol08,0)+NVL(t4.n_dk_tg_Vol09,0)+NVL(t4.n_dk_tg_Vol10,0)) AS  dk_tg_YTD10
			,(NVL(t4.n_dk_tg_Vol01,0)+NVL(t4.n_dk_tg_Vol02,0)+NVL(t4.n_dk_tg_Vol03,0)+NVL(t4.n_dk_tg_Vol04,0)+NVL(t4.n_dk_tg_Vol05,0)+NVL(t4.n_dk_tg_Vol06,0)+NVL(t4.n_dk_tg_Vol07,0)+NVL(t4.n_dk_tg_Vol08,0)+NVL(t4.n_dk_tg_Vol09,0)+NVL(t4.n_dk_tg_Vol10,0)+NVL(t4.n_dk_tg_Vol11,0)) AS  dk_tg_YTD11
			,(NVL(t4.n_dk_tg_Vol01,0)+NVL(t4.n_dk_tg_Vol02,0)+NVL(t4.n_dk_tg_Vol03,0)+NVL(t4.n_dk_tg_Vol04,0)+NVL(t4.n_dk_tg_Vol05,0)+NVL(t4.n_dk_tg_Vol06,0)+NVL(t4.n_dk_tg_Vol07,0)+NVL(t4.n_dk_tg_Vol08,0)+NVL(t4.n_dk_tg_Vol09,0)+NVL(t4.n_dk_tg_Vol10,0)+NVL(t4.n_dk_tg_Vol11,0)+NVL(t4.n_dk_tg_Vol12,0)) AS  dk_tg_YTD12
		FROM (
			<!-- WHISKY인 경우 --> 
			SELECT 
				'10' AS DataLv1		<!--WHISKY-->
				, 'Whisky' AS DataLv1_NM
				, T1.DataLv2 		<!--ON, OFF-->
				, T1.DataLv2_NM
				, CASE WHEN T1.DataLv3 = 'LOCAL' AND T2.TEAM = 'MILITARY' THEN 'MILITARY' ELSE T1.DataLv3 end as DataLv3
				, CASE WHEN T1.DataLv3_NM = 'LOCAL' AND T2.TEAM = 'MILITARY' THEN 'MILITARY' ELSE T1.DataLv3_NM end as DataLv3_NM
				, T2.TEAM AS DataLv4
				, T2.TEAM AS DataLv4_NM
				, T2.SortNo                                           
			FROM             
				( SELECT	
					T1.Channel AS DataLv2      		<!-- ON, OFF -->
					,T1.Channel 	AS DataLv2_NM
					,T1.MARKET	AS DataLv3			<!-- LOCAL, INT`L, W OFFF -->
					,T1.MARKET AS DataLv3_NM                                                     
				FROM ESLT_NTS_TG T1					<!-- 월NTS목표|팀|ESLTF -->
				WHERE 
					T1.Fy = #fy#
					<isPropertyAvailable property="channel">
						<isNotEmpty property="channel">
			                 AND  T1.Channel  =  #channel#			<!-- 검색조건 입력시 조건삽입 -->
		                </isNotEmpty>
					</isPropertyAvailable>
				GROUP BY T1.Channel, T1.MARKET ) T1
				<!-- IF 권역조건 또는 팀조건 입력시   팀을 가지고 온다. --> 
				<isPropertyAvailable property="region">
					<isNotEmpty property="region">
					INNER JOIN 
						(SELECT 
							T1.TEAM AS TEAM
							, t1.dispSeq AS SortNo  
						FROM ESLT_TEAM_MT T1
						WHERE
							T1.REGION	= #region#
							<isPropertyAvailable property="channel">
								<isNotEmpty property="channel">
				                	AND  T1.CHANNEL  =  #channel#	<!-- 검색조건 입력시 조건삽입 -->
			                	</isNotEmpty>
							</isPropertyAvailable>
	                         AND T1.USEYN = 'Y' ) T2
					ON 1=1  
					</isNotEmpty>
				</isPropertyAvailable>
				<isEmpty property="region">
					<isNotEmpty property="team">
						INNER JOIN 
							(SELECT
								T1.TEAM AS TEAM, t1.dispSeq AS SortNo  
							FROM	
								ESLT_TEAM_MT T1
							WHERE 
								T1.REGION = #region#
								<isPropertyAvailable property="channel">
									<isNotEmpty property="channel">
						                 AND T1.CHANNEL = #channel#	<!-- 검색조건 입력시 조건삽입 -->
					                </isNotEmpty>
								</isPropertyAvailable>
								AND	T1.USEYN = 'Y' ) T2
						ON 1=1  
					</isNotEmpty>
					<isEmpty property="team">
						INNER JOIN    
							(SELECT
								T1.Region AS TEAM
								, MAX(t1.dispSeq) AS SortNo  
								, MAX(T1.CHANNEL) AS CHANNEL 
							FROM 
								ESLT_TEAM_MT T1
							WHERE 
								T1.USEYN = 'Y'
								<isPropertyAvailable property="channel">
									<isNotEmpty property="channel">
						                 AND  T1.CHANNEL  =  #channel# <!-- 검색조건 입력시 조건삽입 -->
					                </isNotEmpty>
								</isPropertyAvailable>
							GROUP BY T1.Region) T2	
						ON T1.DATALV2 = T2.CHANNEL
					</isEmpty>
				</isEmpty>             
       		<!--IF 팀 조건이 없는 경우  THEN   Non Wihisk 데이타 출력 -->  
       		<!-- 전체 조회일 경우로 수정 2015.08.19 --> 
			<isEmpty property="channel">
			<isEmpty property="region">
			<isEmpty property="team">
			UNION ALL
            SELECT
            	'20' AS  DataLv1									<!-- Non Whisky -->
				,'Non Whisky'						AS  DataLv1_NM
				, T1.DataLv2						AS  DataLv2		<!-- ON /OFF구분 있음 --> 
                , T1.DataLv2_NM                    	AS  DataLv2_NM  
                , T1.DataLv3 										<!-- BEER, VODKA, OTHERS --> 
                , T1.DataLv3_NM
                , T2. TEAM   AS DataLv4
                , T2. TEAM   AS DataLv4_NM
                , T2. SortNo
			FROM	
				(SELECT
					T4.Channel AS DataLv2
					,T4.Channel AS DataLv2_NM 
					,T1.productL3          AS  DataLv3				<!-- BEER, VODKA, OTHERS -->                     
					,T1.productL3         AS  DataLv3_NM        
				FROM
					ESLT_PRODUCT_MT T1
				INNER JOIN
	                ESLT_BRANCH_MT T4                                 
	            	on 1=1
				WHERE T1.ProductL2 = 'NON WHISKY'      
				GROUP BY T4.Channel, T1.productL3 ) T1
			INNER JOIN 
				(SELECT
					T1.Region AS TEAM
					, MAX(t1.dispSeq) AS    SortNo  
					, MAX(T1.CHANNEL) AS CHANNEL 
				FROM	
					ESLT_TEAM_MT T1
				WHERE 
					T1.USEYN = 'Y'
					<isPropertyAvailable property="channel">
						<isNotEmpty property="channel">
							AND  T1.CHANNEL  =  #channel#			<!-- 검색조건 입력시 조건삽입 -->
						</isNotEmpty>
					</isPropertyAvailable>
                  	<isPropertyAvailable property="region">
						<isNotEmpty property="region">
							AND  T1.Region = #region#			
						</isNotEmpty>
					</isPropertyAvailable>
				GROUP BY  T1.Region ) T2
				ON T1.DATALV2 = T2.CHANNEL
			</isEmpty>	   
			</isEmpty>  
			</isEmpty>) T1  
		LEFT OUTER JOIN
			<!-- 2  Dk Depletion 실적(actual) 볼륨 구하기 쿼리(전년 +당년) --> 
			<!-- 2.1 Whisky On 실적 -->
			(SELECT
				'10' AS	DataLv1				<!-- Whisky --> 
				, T1.CHANNEL AS DataLv2		<!-- ON /OFF -->
				, CASE When t1.MARKET = 'LOCAL' and max(t5.region) = 'MILITARY' THEN 'MILITARY' else T1.market end  AS  DataLv3
                <!-- ,t1.MARKET  AS 	DataLv3		LOCAL, INT`L -->
                <!-- IF 권역조건 또는 팀조건 입력시   팀을 가지고 온다. --> 
                <!-- ELSE  아닌경우 권역을 가지고 온다. -->
				<isNotEmpty property="region">
	        		,T5.TEAM  AS DataLv4
				</isNotEmpty>
				<isEmpty property="region">
					<isNotEmpty property="team">
	        			, T5.TEAM AS DataLv4  
					</isNotEmpty>
					<isEmpty property="team">
						,T5.Region AS DataLv4      	   
					</isEmpty>  
				</isEmpty>  
                <!--전년도 P01 ~ P12 볼 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P01'  THEN NVL(T1.VOLUME,0) END )    AS p_Dk_ac_Vol01 <!--전년P01볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P02'  THEN NVL(T1.VOLUME,0) END )    AS p_Dk_ac_Vol02 <!--전년P02볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P03'  THEN NVL(T1.VOLUME,0) END )    AS p_Dk_ac_Vol03 <!--전년P03볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P04'  THEN NVL(T1.VOLUME,0) END )    AS p_Dk_ac_Vol04 <!--전년P04볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P05'  THEN NVL(T1.VOLUME,0) END )    AS p_Dk_ac_Vol05 <!--전년P05볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P06'  THEN NVL(T1.VOLUME,0) END )    AS p_Dk_ac_Vol06 <!--전년P06볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P07'  THEN NVL(T1.VOLUME,0) END )    AS p_Dk_ac_Vol07 <!--전년P07볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P08'  THEN NVL(T1.VOLUME,0) END )    AS p_Dk_ac_Vol08 <!--전년P08볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P09'  THEN NVL(T1.VOLUME,0) END )    AS p_Dk_ac_Vol09 <!--전년P09볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P10'  THEN NVL(T1.VOLUME,0) END )    AS p_Dk_ac_Vol10 <!--전년P10볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P11'  THEN NVL(T1.VOLUME,0) END )    AS p_Dk_ac_Vol11 <!--전년P11볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P12'  THEN NVL(T1.VOLUME,0) END )    AS p_Dk_ac_Vol12 <!--전년P12볼륨  -->      
                <!--당년도 P01 ~ P12 볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P01'  THEN NVL(T1.VOLUME,0) END )      AS N_Dk_ac_Vol01 <!--금년P01볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P02'  THEN NVL(T1.VOLUME,0) END )      AS N_Dk_ac_Vol02 <!--금년P02볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P03'  THEN NVL(T1.VOLUME,0) END )      AS N_Dk_ac_Vol03 <!--금년P03볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P04'  THEN NVL(T1.VOLUME,0) END )      AS N_Dk_ac_Vol04 <!--금년P04볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P05'  THEN NVL(T1.VOLUME,0) END )      AS N_Dk_ac_Vol05 <!--금년P05볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P06'  THEN NVL(T1.VOLUME,0) END )      AS N_Dk_ac_Vol06 <!--금년P06볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P07'  THEN NVL(T1.VOLUME,0) END )      AS N_Dk_ac_Vol07 <!--금년P07볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P08'  THEN NVL(T1.VOLUME,0) END )      AS N_Dk_ac_Vol08 <!--금년P08볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P09'  THEN NVL(T1.VOLUME,0) END )      AS N_Dk_ac_Vol09 <!--금년P09볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P10'  THEN NVL(T1.VOLUME,0) END )      AS N_Dk_ac_Vol10 <!--금년P10볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P11'  THEN NVL(T1.VOLUME,0) END )      AS N_Dk_ac_Vol11 <!--금년P11볼륨 -->
                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P12'  THEN NVL(T1.VOLUME,0) END )      AS N_Dk_ac_Vol12 <!--금년P12볼륨 -->            
			FROM
				eslt_NTS_act T1			<!-- 월NTS실적|주소|ESLT -->
			INNER JOIN 
				ESLT_AREA_MT t4         <!-- 주소매핑조직정보|ESLT -->
                ON upper(t1.CITY) = upper(T4.CITY)
                AND upper(T1.SUBCITY1) = upper(T4.SUBCITY1)
                AND upper(T1.SUBCITY2) = upper(T4.SUBCITY2)
			INNER JOIN ESLT_TEAM_MT T5	<!-- 팀정보|ESLT -->
				<!-- ON upper(t4.LpbTeam) = upper(T5.Team) -->
				 ON  (case when t1.market = 'LOCAL' then t4.LpbTeam else t4.GpbTeam END) = UPPER(T5.Team)
			WHERE 
				t1.FY  BETWEEN  #Lfy#  AND #fy#
				<isPropertyAvailable property="channel">
					<isNotEmpty property="channel">
						AND T1.Channel  =  #channel#			<!-- 검색조건 입력시 조건삽입 -->
					</isNotEmpty>
				</isPropertyAvailable>
				and t1.COMPANY = 'DK'
				<isPropertyAvailable property="channel">
					<isNotEmpty property="channel">
		                 AND T5.Channel = #channel#				<!-- 검색조건 입력시 조건삽입 -->
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="region">
					<isNotEmpty property="region">
						AND T5.Region = #region#				<!-- 검색조건 입력시 조건삽입 -->
		            </isNotEmpty>
				</isPropertyAvailable>
			<!-- IF 권역조건 또는 팀조건이 있을경우 팀을 가지고 온다. -->
			<!-- ELSE  아닌경우 권역을 가지고 온다. -->
	        <isNotEmpty property="region">
        		group by T1.CHANNEL, T1.MARKET, T5.TEAM
			</isNotEmpty>
			<isEmpty property="region">
				<isNotEmpty property="team">
        			group by T1.CHANNEL, T1.MARKET, T5.TEAM
				</isNotEmpty>
				<isEmpty property="team">
					group by T1.CHANNEL,  T1.MARKET, T5.Region   
				</isEmpty>
			</isEmpty> 
			<!-- 2.1 Non Whisky 실적  (조직 검색조건이 팀조건이 없는경우 -> 권역이상인 경우) -->
			<!-- IF 팀검색조건 입력이 없는경우 THEN   Non Wihisk 데이타 출력   ( Shipment 실적을 가지고 온다) --> 
			<!-- 전체 조회일 경우로 수정 2015.08.19 -->
			<isEmpty property="channel">
			<isEmpty property="region">
			<isEmpty property="team">
			UNION ALL 
			SELECT	
				'20' AS DataLv1  					<!--Non Whisky -->
                , T5.Channel		AS DataLv2  
                , T2.productL3		AS DataLv3    	<!-- BEER, VODKA , OTHERS -->
                ,(case when T5.Channel='OFF' then 'OFF' else T5.Region end )  AS DataLv4  
                <!--전년도 P01 ~ P12 볼륨 -->
                , SUM(CASE WHEN T1.FY||T1.Period = #Lfy#||'P01' THEN NVL(T1.VOLUME,0) END) AS p_sh_ac_Vol01		<!--전년P01볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #Lfy#||'P02' THEN NVL(T1.VOLUME,0) END) AS p_sh_ac_Vol02 	<!--전년P02볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #Lfy#||'P03' THEN NVL(T1.VOLUME,0) END) AS p_sh_ac_Vol03 	<!--전년P03볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #Lfy#||'P04' THEN NVL(T1.VOLUME,0) END) AS p_sh_ac_Vol04 	<!--전년P04볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #Lfy#||'P05' THEN NVL(T1.VOLUME,0) END) AS p_sh_ac_Vol05 	<!--전년P05볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #Lfy#||'P06' THEN NVL(T1.VOLUME,0) END) AS p_sh_ac_Vol06 	<!--전년P06볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #Lfy#||'P07' THEN NVL(T1.VOLUME,0) END) AS p_sh_ac_Vol07 	<!--전년P07볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #Lfy#||'P08' THEN NVL(T1.VOLUME,0) END) AS p_sh_ac_Vol08 	<!--전년P08볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #Lfy#||'P09' THEN NVL(T1.VOLUME,0) END) AS p_sh_ac_Vol09 	<!--전년P09볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #Lfy#||'P10' THEN NVL(T1.VOLUME,0) END) AS p_sh_ac_Vol10 	<!--전년P10볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #Lfy#||'P11' THEN NVL(T1.VOLUME,0) END) AS p_sh_ac_Vol11 	<!--전년P11볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #Lfy#||'P12' THEN NVL(T1.VOLUME,0) END) AS p_sh_ac_Vol12 	<!--전년P12볼륨-->
                <!--금년도 P01 ~ P12 볼륨 -->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P01' THEN NVL(T1.VOLUME,0) END) AS N_sh_ac_Vol01   	<!--금년P01볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P02' THEN NVL(T1.VOLUME,0) END) AS N_sh_ac_Vol02   	<!--금년P02볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P03' THEN NVL(T1.VOLUME,0) END) AS N_sh_ac_Vol03   	<!--금년P02볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P04' THEN NVL(T1.VOLUME,0) END) AS N_sh_ac_Vol04   	<!--금년P02볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P05' THEN NVL(T1.VOLUME,0) END) AS N_sh_ac_Vol05   	<!--금년P02볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P06' THEN NVL(T1.VOLUME,0) END) AS N_sh_ac_Vol06   	<!--금년P02볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P07' THEN NVL(T1.VOLUME,0) END) AS N_sh_ac_Vol07   	<!--금년P02볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P08' THEN NVL(T1.VOLUME,0) END) AS N_sh_ac_Vol08   	<!--금년P02볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P09' THEN NVL(T1.VOLUME,0) END) AS N_sh_ac_Vol09   	<!--금년P02볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P10' THEN NVL(T1.VOLUME,0) END) AS N_sh_ac_Vol10   	<!--금년P02볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P11' THEN NVL(T1.VOLUME,0) END) AS N_sh_ac_Vol11		<!--금년P02볼륨-->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P12' THEN NVL(T1.VOLUME,0) END) AS N_sh_ac_Vol12  	<!--금년P12볼륨-->            
			FROM ESLT_SH_ACT T1							<!--월SH실적|도매장|ESLT-->
			INNER JOIN ESLT_PRODUCT_MT t2				<!--품목속성정보|eslt-->
				ON t1.ProductL7 = t2.ProductL7
			INNER JOIN ESLT_CUSTOMER_MT t4				<!-- 거래처정보|도매장|ESLT-->
				ON t1.CustomerCd = t4.CustomerCd
			INNER JOIN ESLT_BRANCH_MT T5				<!-- 지점정보|도매상|ESLT-->
				ON t4.Branch = T5.Branch
			WHERE t1.FY  BETWEEN  #Lfy#  AND #fy#
				AND T2.ProductL2 = 'NON WHISKY'      
				<isPropertyAvailable property="channel">
					<isNotEmpty property="channel">
		                 AND  T5.Channel  =  #channel#	<!-- 검색조건 입력시 조건삽입 -->
		            </isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="region">
					<isNotEmpty property="region">
		                 and  t5.Region = #region#		<!--검색조건 입력시 조건삽입--> 
		            </isNotEmpty>
				</isPropertyAvailable>
			GROUP BY T5.Channel, T2.productL3 , T5.Region
			</isEmpty>  
			</isEmpty>
			</isEmpty>
			<!-- END IF --> 
			)T2
			ON T1.DataLv1 = T2.DataLv1
			AND T1.DataLv2 = T2.DataLv2 
		  	AND T1.DataLv3 = T2.DataLv3  
		  	AND T1.DataLv4 = T2.DataLv4  
		LEFT OUTER JOIN (
		<!-- 3   DK Depletion Forecast   및 outlook 데이타 구하기 쿼리(당년)  구하기--> 
		<!-- 2.1 Whisky On 실적 --> 
			SELECT 
				'10' AS DataLv1 			<!--Whisky--> 
				, T1.CHANNEL  AS DataLv2  	<!-- ON /OFF -->                            
				, t1.MARKET   AS DataLv3  	<!-- LOCAL, INT`L -->
				<!-- IF 권역조건 또는 팀조건이 있을경우 팀을 가지고 온다. -->
				<!-- ELSE  아닌경우 권역을 가지고 온다. -->
		        <isNotEmpty property="region">
	        		,T5.TEAM    AS DataLv4
				</isNotEmpty>
				<isEmpty property="region">
					<isNotEmpty property="team">
	        			,T5.TEAM    AS DataLv4
					</isNotEmpty>
					<isEmpty property="team">
						,T5.Region    AS DataLv4   
					</isEmpty>  
				</isEmpty> 
				<!-- END IF -->      
				<!-- 당년도 P01 ~ P12 Forecast 볼륨 -->      
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P01' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_dk_for_Vol01   <!--금년P01 Forecast 볼륨 -->
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P02' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_dk_for_Vol02   <!--금년P02 Forecast 볼륨 -->
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P03' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_dk_for_Vol03   <!--금년P03 Forecast 볼륨--> 
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P04' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_dk_for_Vol04   <!--금년P04 Forecast 볼륨 -->
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P05' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_dk_for_Vol05   <!--금년P05 Forecast 볼륨 -->
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P06' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_dk_for_Vol06   <!--금년P06 Forecast 볼륨 -->
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P07' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_dk_for_Vol07   <!--금년P07 Forecast 볼륨 -->
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P08' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_dk_for_Vol08   <!--금년P08 Forecast 볼륨 -->
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P09' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_dk_for_Vol09   <!--금년P09 Forecast 볼륨--> 
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P10' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_dk_for_Vol10   <!--금년P10 Forecast 볼륨--> 
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P11' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_dk_for_Vol11   <!--금년P11 Forecast 볼륨--> 
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P12' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_dk_for_Vol12   <!--금년P12 Forecast 볼륨--> 
                 <!-- 당년도 P01 ~ P12 outlook 볼륨 -->     
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P01' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_dk_out_Vol01   <!--금년P01 outlook 볼륨 -->
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P02' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_dk_out_Vol02   <!--금년P02 outlook 볼륨--> 
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P03' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_dk_out_Vol03   <!--금년P03 outlook 볼륨--> 
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P04' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_dk_out_Vol04   <!--금년P04 outlook 볼륨--> 
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P05' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_dk_out_Vol05   <!--금년P05 outlook 볼륨--> 
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P06' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_dk_out_Vol06   <!--금년P06 outlook 볼륨--> 
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P07' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_dk_out_Vol07   <!--금년P07 outlook 볼륨--> 
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P08' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_dk_out_Vol08   <!--금년P08 outlook 볼륨--> 
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P09' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_dk_out_Vol09   <!--금년P09 outlook 볼륨--> 
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P10' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_dk_out_Vol10   <!--금년P10 outlook 볼륨--> 
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P11' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_dk_out_Vol11   <!--금년P11 outlook 볼륨 -->
                 , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P12' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_dk_out_Vol12   <!--금년P12 outlook 볼륨 -->
			FROM ESLT_NTS_FC  T1          <!-- 월NTS예측|팀|ESLT -->
			INNER JOIN ESLT_TEAM_MT T5    <!-- 팀정보|ESLT -->
				ON t1.TEAM = T5.Team
			WHERE t1.FY = #fy#
		         <isPropertyAvailable property="channel">
					<isNotEmpty property="channel">
		                 AND  T1.CHANNEL  =  #channel#			<!-- 검색조건 입력시 조건삽입 -->
		            </isNotEmpty>
				</isPropertyAvailable>
				AND T1.COMPANY   = 'DK'         
		        <isPropertyAvailable property="channel">
					<isNotEmpty property="channel">
		                 AND  T5.Channel  =  #channel#			<!-- 검색조건 입력시 조건삽입 -->
		            </isNotEmpty>
				</isPropertyAvailable>
		        <isPropertyAvailable property="region">
					<isNotEmpty property="region">
		                 AND  T5.Region  =  #region#			<!-- 검색조건 입력시 조건삽입 -->
		            </isNotEmpty>
				</isPropertyAvailable>
			<!-- IF 권역조건 또는 팀조건이 있을경우 팀을 가지고 온다. -->
			<!-- ELSE  아닌경우 권역을 가지고 온다. -->
			<isNotEmpty property="region">
				group by T1.CHANNEL, T1.MARKET, T5.TEAM
			</isNotEmpty>
			<isEmpty property="region">
				<isNotEmpty property="team">
					group by T1.CHANNEL, T1.MARKET, T5.TEAM
				</isNotEmpty>
				<isEmpty property="team">
					group by T1.CHANNEL, T1.MARKET, T5.Region  
				</isEmpty> 
			</isEmpty>  
            <!-- END IF --> 
            <!--2.1 Non Whisky 실적  (조직 검색조건이 팀조건이 없는경우 권역이상인 경우) -->
            <!--IF 팀 조건이 없을 경우 THEN   Non Wihisk 데이타 출력   ( Shipment  자료를  가지고 온다) -->
            <!-- 전체 조회일 경우로 수정 2015.08.19 --> 
            <isEmpty property="channel">
			<isEmpty property="region">
			<isEmpty property="team">
			UNION ALL 
			SELECT
				'20' AS DataLv1   			<!--Non Whisky -->
				, T5.Channel AS DataLv2                                  
				, T1.productL3 AS DataLv3 	<!-- BE역ER, VODKA , OTHERS --> 
				, (case when T5.Channel='OFF' then 'OFF' else T5.Region end )  AS DataLv4
                <!--당년도 P01 ~ P12 Forecast 볼륨-->     
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P01' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_sh_for_Vol01   <!--금년P01 Forecast 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P02' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_sh_for_Vol02   <!--금년P02 Forecast 볼륨 -->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P03' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_sh_for_Vol03   <!--금년P03 Forecast 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P04' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_sh_for_Vol04   <!--금년P04 Forecast 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P05' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_sh_for_Vol05   <!--금년P05 Forecast 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P06' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_sh_for_Vol06   <!--금년P06 Forecast 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P07' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_sh_for_Vol07   <!--금년P07 Forecast 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P08' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_sh_for_Vol08   <!--금년P08 Forecast 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P09' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_sh_for_Vol09   <!--금년P09 Forecast 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P10' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_sh_for_Vol10   <!--금년P10 Forecast 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P11' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_sh_for_Vol11   <!--금년P11 Forecast 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P12' THEN NVL(T1.ForVolume,0) ELSE 0 END) AS N_sh_for_Vol12   <!--금년P12 Forecast 볼륨--> 
                <!-- 당년도 P01 ~ P12 outlook 볼륨 -->     
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P01' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_sh_out_Vol01   <!--금년P01 outlook 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P02' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_sh_out_Vol02   <!--금년P02 outlook 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P03' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_sh_out_Vol03   <!--금년P03 outlook 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P04' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_sh_out_Vol04   <!--금년P04 outlook 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P05' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_sh_out_Vol05   <!--금년P05 outlook 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P06' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_sh_out_Vol06   <!--금년P06 outlook 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P07' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_sh_out_Vol07   <!--금년P07 outlook 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P08' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_sh_out_Vol08   <!--금년P08 outlook 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P09' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_sh_out_Vol09   <!--금년P09 outlook 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P10' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_sh_out_Vol10   <!--금년P10 outlook 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P11' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_sh_out_Vol11   <!--금년P11 outlook 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P12' THEN NVL(T1.OutVolume,0) ELSE 0 END) AS N_sh_out_Vol12   <!--금년P12 outlook 볼륨--> 
			FROM ESLT_SH_FC  T1 			<!--월SH예측|지점|ESLT -->
			INNER JOIN ESLT_BRANCH_MT T5   	<!-- 지점정보|도매상|ESLT -->
				ON t1.Branch = T5.Branch
			WHERE t1.FY  =  #fy#
				AND T1.ProductL2 = 'NON WHISKY'                 
				<isPropertyAvailable property="channel">
					<isNotEmpty property="channel">
		                 AND  T5.Channel  =  #channel#			<!-- 검색조건 입력시 조건삽입 -->
		            </isNotEmpty>
				</isPropertyAvailable>
                <isPropertyAvailable property="region">
					<isNotEmpty property="region">
		                 AND  T5.Region  =  #region#			<!-- 검색조건 입력시 조건삽입 -->
		            </isNotEmpty>
				</isPropertyAvailable>
			GROUP BY T5.Channel, T1.productL3, T5.Region  
			</isEmpty>
			</isEmpty>
			</isEmpty>
			<!--END IF--> 
			) T3
			ON T1.DataLv1 = T3.DataLv1
			AND T1.DataLv2 = T3.DataLv2 
  			AND T1.DataLv3 = T3.DataLv3  
  			AND T1.DataLv4 = T3.DataLv4 
		LEFT OUTER JOIN (
			<!-- 4   DK Depletion Target 데이타 구하기 쿼리(당년)  구하기 --> 
			<!-- 2.1 Whisky On 실적 --> 
			SELECT 
				'10' AS DataLv1  			<!--Whisky On--> 
				, T1.CHANNEL AS DataLv2  	<!-- ON /OFF -->                     
				, T1.MARKET  AS DataLv3  	<!--LOCAL, INT`L -->
				<!-- IF 권역조건 또는 팀조건이 있을경우 팀을 가지고 온다. -->
				<!-- ELSE  아닌경우 권역을 가지고 온다. -->
		        <isNotEmpty property="region">
	        		,T5.TEAM    AS DataLv4
				</isNotEmpty>
				<isEmpty property="region">
					<isNotEmpty property="team">
	        			,T5.TEAM    AS DataLv4
					</isNotEmpty>
					<isEmpty property="team">
						,T5.Region  AS DataLv4    
					</isEmpty>
				</isEmpty> 
                <!-- END IF -->         
                <!-- 당년도 P01 ~ P12 Forecast 볼륨     -->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P01' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_dk_tg_Vol01   <!--금년P01 Target 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P02' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_dk_tg_Vol02   <!--금년P02 Target 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P03' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_dk_tg_Vol03   <!--금년P03 Target 볼륨 -->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P04' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_dk_tg_Vol04   <!--금년P04 Target 볼륨 -->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P05' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_dk_tg_Vol05   <!--금년P05 Target 볼륨 -->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P06' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_dk_tg_Vol06   <!--금년P06 Target 볼륨 -->
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P07' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_dk_tg_Vol07   <!--금년P07 Target 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P08' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_dk_tg_Vol08   <!--금년P08 Target 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P09' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_dk_tg_Vol09   <!--금년P09 Target 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P10' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_dk_tg_Vol10   <!--금년P10 Target 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P11' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_dk_tg_Vol11   <!--금년P11 Target 볼륨--> 
                , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P12' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_dk_tg_Vol12   <!--금년P12 Target 볼륨-->
			FROM ESLT_NTS_TG T1             <!-- 월NTS목표|팀|ESLT -->
			INNER JOIN ESLT_TEAM_MT T5   	<!-- 팀정보|ESLT -->
				ON T1.TEAM = T5.Team
			WHERE T1.FY = #fy#
				<isPropertyAvailable property="channel">
					<isNotEmpty property="channel">
						AND T1.Channel  =  #channel#			<!-- 검색조건 입력시 조건삽입 -->
		            </isNotEmpty>
				</isPropertyAvailable>
				AND T1.COMPANY = 'DK'         
				<isPropertyAvailable property="channel">
					<isNotEmpty property="channel">
		                 AND  T5.Channel  =  #channel#			<!-- 검색조건 입력시 조건삽입 -->
		            </isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="channel">
					<isNotEmpty property="region">
		                 AND  T5.Region  =  #region#			<!-- 검색조건 입력시 조건삽입 -->
		            </isNotEmpty>
				</isPropertyAvailable>
		        <!-- IF 권역조건 또는 팀조건이 있을경우 팀을 가지고 온다. -->
		        <!-- ELSE  아닌경우 권역을 가지고 온다. -->
		        <isNotEmpty property="region">
					GROUP BY T1.CHANNEL, T1.MARKET, T5.TEAM
				</isNotEmpty>
				<isEmpty property="region">
					<isNotEmpty property="team">
	        			GROUP BY T1.CHANNEL, T1.MARKET, T5.TEAM
					</isNotEmpty>
					<isEmpty property="team">
						group by	T1.CHANNEL,  T1.MARKET, T5.Region   
					</isEmpty>
				</isEmpty> 
				<!-- END IF -->
			<!--2.1 Non Whisky 실적  (조직 검색조건이 팀조건이 없는경우 - 권역이상인 경우)  -->
       		<!--IF 팀 조건이 없을 경우 THEN   Non Wihisk 데이타 출력   ( Shipment  자료를  가지고 온다)  -->
       		<!-- 전체 조회일 경우로 수정 2015.08.19 -->
       		<isEmpty property="channel">
			<isEmpty property="region">
			<isEmpty property="team">
			UNION ALL 
			SELECT
				'20' AS  DataLv1															<!--Non Whisky -->
				, T5.Channel        AS DataLv2                                  
				, T2.productL3      AS DataLv3    											<!--BE역ER, VODKA , OTHERS-->
				, (case when T5.Channel='OFF' then 'OFF' else T5.Region end )  AS DataLv4   <!--권역 --> 
                   <!-- 당년도 P01 ~ P12 Target 볼륨 -->     
                   , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P01' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_sh_tg_Vol01   <!--금년P01 Target 볼륨--> 
                   , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P02' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_sh_tg_Vol02   <!--금년P02 Target 볼륨 -->
                   , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P03' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_sh_tg_Vol03   <!--금년P03 Target 볼륨--> 
                   , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P04' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_sh_tg_Vol04   <!--금년P04 Target 볼륨--> 
                   , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P05' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_sh_tg_Vol05   <!--금년P05 Target 볼륨--> 
                   , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P06' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_sh_tg_Vol06   <!--금년P06 Target 볼륨--> 
                   , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P07' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_sh_tg_Vol07   <!--금년P07 Target 볼륨--> 
                   , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P08' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_sh_tg_Vol08   <!--금년P08 Target 볼륨--> 
                   , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P09' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_sh_tg_Vol09   <!--금년P09 Target 볼륨--> 
                   , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P10' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_sh_tg_Vol10   <!--금년P10 Target 볼륨--> 
                   , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P11' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_sh_tg_Vol11   <!--금년P11 Target 볼륨 -->
                   , SUM(CASE WHEN T1.FY||T1.Period = #fy#||'P12' THEN NVL(T1.Volume,0) ELSE 0 END) AS N_sh_tg_Vol12   <!--금년P12 Target 볼륨--> 
			FROM ESLT_SH_TG  T1							<!-- 월SH목표|지점|ESLT -->
			INNER JOIN eslt_product_mt t2				<!-- 품목속성정보|eslt -->
				ON t1.ProductL7 = t2.ProductL7
			INNER JOIN ESLT_BRANCH_MT T5    			<!-- 지점정보|도매상|ESLT -->
				ON t1.Branch = T5.Branch
			WHERE t1.FY  =  #fy#
				AND t2.ProductL2 = 'NON WHISKY'     
			<isPropertyAvailable property="channel">
				<isNotEmpty property="channel">
					AND  T5.Channel  =  #channel#		<!-- 검색조건 입력시 조건삽입 -->
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="region">
				<isNotEmpty property="region">
					AND  T5.Region  =  #region#			<!-- 검색조건 입력시 조건삽입 -->
				</isNotEmpty>
			</isPropertyAvailable>
			GROUP BY T5.Channel, t2.productL3  ,T5.Region
			</isEmpty>
			</isEmpty>
			</isEmpty>
       		<!-- END IF --> 
			) T4
			ON T1.DataLv1 = T4.DataLv1
			AND T1.DataLv2 = T4.DataLv2 
  			AND T1.DataLv3 = T4.DataLv3  
  			AND T1.DataLv4 = T4.DataLv4
  			LEFT OUTER JOIN
  			<!-- 2  Dk Depletion 실적(actual) 볼륨 구하기 쿼리(전년 +당년) --> 
			<!-- 2.1 Whisky On 실적 -->
			(SELECT
				'10' AS	DataLv1		<!-- Whisky --> 
                <!--전년도 P01 ~ P12 볼 -->
                <!--당년도 P01 ~ P12 볼륨 -->
                ,COUNT( CASE WHEN T1.FY||T1.Period = #fy#||'P01'  THEN NVL(T1.VOLUME,0) END )      AS CNT_N_Dk_ac_Vol01 <!--금년P01볼륨 -->
                ,COUNT( CASE WHEN T1.FY||T1.Period = #fy#||'P02'  THEN NVL(T1.VOLUME,0) END )      AS CNT_N_Dk_ac_Vol02 <!--금년P02볼륨 -->
                ,COUNT( CASE WHEN T1.FY||T1.Period = #fy#||'P03'  THEN NVL(T1.VOLUME,0) END )      AS CNT_N_Dk_ac_Vol03 <!--금년P03볼륨 -->
                ,COUNT( CASE WHEN T1.FY||T1.Period = #fy#||'P04'  THEN NVL(T1.VOLUME,0) END )      AS CNT_N_Dk_ac_Vol04 <!--금년P04볼륨 -->
                ,COUNT( CASE WHEN T1.FY||T1.Period = #fy#||'P05'  THEN NVL(T1.VOLUME,0) END )      AS CNT_N_Dk_ac_Vol05 <!--금년P05볼륨 -->
                ,COUNT( CASE WHEN T1.FY||T1.Period = #fy#||'P06'  THEN NVL(T1.VOLUME,0) END )      AS CNT_N_Dk_ac_Vol06 <!--금년P06볼륨 -->
                ,COUNT( CASE WHEN T1.FY||T1.Period = #fy#||'P07'  THEN NVL(T1.VOLUME,0) END )      AS CNT_N_Dk_ac_Vol07 <!--금년P07볼륨 -->
                ,COUNT( CASE WHEN T1.FY||T1.Period = #fy#||'P08'  THEN NVL(T1.VOLUME,0) END )      AS CNT_N_Dk_ac_Vol08 <!--금년P08볼륨 -->
                ,COUNT( CASE WHEN T1.FY||T1.Period = #fy#||'P09'  THEN NVL(T1.VOLUME,0) END )      AS CNT_N_Dk_ac_Vol09 <!--금년P09볼륨 -->
                ,COUNT( CASE WHEN T1.FY||T1.Period = #fy#||'P10'  THEN NVL(T1.VOLUME,0) END )      AS CNT_N_Dk_ac_Vol10 <!--금년P10볼륨 -->
                ,COUNT( CASE WHEN T1.FY||T1.Period = #fy#||'P11'  THEN NVL(T1.VOLUME,0) END )      AS CNT_N_Dk_ac_Vol11 <!--금년P11볼륨 -->
                ,COUNT( CASE WHEN T1.FY||T1.Period = #fy#||'P12'  THEN NVL(T1.VOLUME,0) END )      AS CNT_N_Dk_ac_Vol12 <!--금년P12볼륨 -->            
			FROM
				eslt_NTS_act T1									<!-- 월NTS실적|주소|ESLT -->
			INNER JOIN 
				ESLT_AREA_MT t4         						<!-- 주소매핑조직정보|ESLT -->
                ON upper(t1.CITY) = upper(T4.CITY)
                AND upper(T1.SUBCITY1) = upper(T4.SUBCITY1)
                AND upper(T1.SUBCITY2) = upper(T4.SUBCITY2)
			INNER JOIN ESLT_TEAM_MT T5							<!-- 팀정보|ESLT -->
				<!-- ON upper(t4.LpbTeam) = upper(T5.Team) -->
				ON  (case when t1.market = 'LOCAL' then t4.LpbTeam else t4.GpbTeam END) = UPPER(T5.Team)
			WHERE 
				t1.FY  BETWEEN  #Lfy#  AND #fy#
				<isPropertyAvailable property="channel">
					<isNotEmpty property="channel">
						AND T1.Channel  =  #channel#			<!-- 검색조건 입력시 조건삽입 -->
					</isNotEmpty>
				</isPropertyAvailable>
				and t1.COMPANY = 'DK'
				<isPropertyAvailable property="channel">
					<isNotEmpty property="channel">
		                 AND T5.Channel = #channel#				<!-- 검색조건 입력시 조건삽입 -->
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="region">
					<isNotEmpty property="region">
						AND T5.Region = #region#				<!-- 검색조건 입력시 조건삽입 -->
		            </isNotEmpty>
				</isPropertyAvailable>
			<!-- 2.1 Non Whisky 실적  (조직 검색조건이 팀조건이 없는경우 -> 권역이상인 경우) -->
			<!-- IF 팀검색조건 입력이 없는경우 THEN   Non Wihisk 데이타 출력   ( Shipment 실적을 가지고 온다) --> 
			<!-- 전체 조회일 경우로 수정 2015.08.19 -->
			<isEmpty property="channel">
			<isEmpty property="region">
			<isEmpty property="team">
			UNION ALL 
			SELECT	
				'20' AS DataLv1  <!--Non Whisky -->
                <!--금년도 P01 ~ P12 볼륨 -->
                , COUNT(CASE WHEN T1.FY||T1.Period = #fy#||'P01' THEN NVL(T1.VOLUME,0) END) AS CNT_N_sh_ac_Vol01   	<!--금년P01볼륨-->
                , COUNT(CASE WHEN T1.FY||T1.Period = #fy#||'P02' THEN NVL(T1.VOLUME,0) END) AS CNT_N_sh_ac_Vol02   	<!--금년P02볼륨-->
                , COUNT(CASE WHEN T1.FY||T1.Period = #fy#||'P03' THEN NVL(T1.VOLUME,0) END) AS CNT_N_sh_ac_Vol03   	<!--금년P02볼륨-->
                , COUNT(CASE WHEN T1.FY||T1.Period = #fy#||'P04' THEN NVL(T1.VOLUME,0) END) AS CNT_N_sh_ac_Vol04   	<!--금년P02볼륨-->
                , COUNT(CASE WHEN T1.FY||T1.Period = #fy#||'P05' THEN NVL(T1.VOLUME,0) END) AS CNT_N_sh_ac_Vol05   	<!--금년P02볼륨-->
                , COUNT(CASE WHEN T1.FY||T1.Period = #fy#||'P06' THEN NVL(T1.VOLUME,0) END) AS CNT_N_sh_ac_Vol06   	<!--금년P02볼륨-->
                , COUNT(CASE WHEN T1.FY||T1.Period = #fy#||'P07' THEN NVL(T1.VOLUME,0) END) AS CNT_N_sh_ac_Vol07   	<!--금년P02볼륨-->
                , COUNT(CASE WHEN T1.FY||T1.Period = #fy#||'P08' THEN NVL(T1.VOLUME,0) END) AS CNT_N_sh_ac_Vol08   	<!--금년P02볼륨-->
                , COUNT(CASE WHEN T1.FY||T1.Period = #fy#||'P09' THEN NVL(T1.VOLUME,0) END) AS CNT_N_sh_ac_Vol09   	<!--금년P02볼륨-->
                , COUNT(CASE WHEN T1.FY||T1.Period = #fy#||'P10' THEN NVL(T1.VOLUME,0) END) AS CNT_N_sh_ac_Vol10   	<!--금년P02볼륨-->
                , COUNT(CASE WHEN T1.FY||T1.Period = #fy#||'P11' THEN NVL(T1.VOLUME,0) END) AS CNT_N_sh_ac_Vol11	  <!--금년P02볼륨-->
                , COUNT(CASE WHEN T1.FY||T1.Period = #fy#||'P12' THEN NVL(T1.VOLUME,0) END) AS CNT_N_sh_ac_Vol12  	<!--금년P12볼륨-->            
			FROM ESLT_SH_ACT T1							<!--월SH실적|도매장|ESLT-->
			INNER JOIN ESLT_PRODUCT_MT t2				<!--품목속성정보|eslt-->
				ON t1.ProductL7 = t2.ProductL7
			INNER JOIN ESLT_CUSTOMER_MT t4				<!-- 거래처정보|도매장|ESLT-->
				ON t1.CustomerCd = t4.CustomerCd
			INNER JOIN ESLT_BRANCH_MT T5				<!-- 지점정보|도매상|ESLT-->
				ON t4.Branch = T5.Branch
			WHERE t1.FY  BETWEEN  #Lfy#  AND #fy#
				AND T2.ProductL2 = 'NON WHISKY'      
				<isPropertyAvailable property="channel">
					<isNotEmpty property="channel">
		                 AND  T5.Channel  =  #channel#	<!-- 검색조건 입력시 조건삽입 -->
		            </isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="region">
					<isNotEmpty property="region">
		                 and  t5.Region = #region#		<!--검색조건 입력시 조건삽입--> 
		            </isNotEmpty>
				</isPropertyAvailable>
			</isEmpty>  
			</isEmpty>
			</isEmpty>
			<!-- END IF --> 
			)T5
			ON T1.DataLv1 = T5.DataLv1
		ORDER BY T1.DataLv1 , T1.DataLv2 DESC, T1.DataLv3 DESC , t1.sortNo 
	</select>
    
    
	<!--Note G Forecast / Target (ON channel) 조회 -->
    <select id="ANL0300208S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		<!-- LV 1 LOCAL, INT`L, VODKA, BEER -->
		<!-- LV 2 0값은  -> 20 Total Dependency Rate 및  40 Total Note G Case Rate 값을 만들어 주기 위한 HINNDEN 데이타 -->
		<!--              20 =   (  10 :Total Account Plan Volume     / 0: HIDDEN ROW  ) * 100 -->       
		<!--              40 =   (  30 :Total Note G Spending(K KRW)  / 0: HIDDEN ROW  ) -->       
		SELECT	T1.DataLv1             AS  DataLv1			<!-- LOCAL,INT`L, VODKA, BEER --> 
				,T1.DataLv1_NM         AS  DataLv1_NM
				,T1.DataLv2            AS  DataLv2
				,T1.DataLv2_NM         AS  DataLv2_NM 
				<!-- 전년 notag Actual 실적 -->
				,NVL(t2.p_notag_ac_Vol01,0) AS  notag_ac_P01	<!--전년P01볼륨-->
				,NVL(t2.p_notag_ac_Vol02,0) AS  notag_ac_P02	<!--전년P02볼륨-->
				,NVL(t2.p_notag_ac_Vol03,0) AS  notag_ac_P03	<!--전년P03볼륨-->
				,NVL(t2.p_notag_ac_Vol04,0) AS  notag_ac_P04	<!--전년P04볼륨-->
				,NVL(t2.p_notag_ac_Vol05,0) AS  notag_ac_P05	<!--전년P05볼륨-->
				,NVL(t2.p_notag_ac_Vol06,0) AS  notag_ac_P06	<!--전년P06볼륨-->
				,NVL(t2.p_notag_ac_Vol07,0) AS  notag_ac_P07	<!--전년P07볼륨-->
				,NVL(t2.p_notag_ac_Vol08,0) AS  notag_ac_P08	<!--전년P08볼륨-->
				,NVL(t2.p_notag_ac_Vol09,0) AS  notag_ac_P09	<!--전년P09볼륨-->
				,NVL(t2.p_notag_ac_Vol10,0) AS  notag_ac_P10	<!--전년P10볼륨-->
				,NVL(t2.p_notag_ac_Vol11,0) AS  notag_ac_P11	<!--전년P11볼륨-->
				,NVL(t2.p_notag_ac_Vol12,0) AS  notag_ac_P12	<!--전년P12볼륨-->
				,(NVL(t2.p_notag_ac_Vol01,0)+NVL(t2.p_notag_ac_Vol02,0)+NVL(t2.p_notag_ac_Vol03,0)) AS  notag_ac_Q01	<!--전년Q01볼륨-->
				,(NVL(t2.p_notag_ac_Vol04,0)+NVL(t2.p_notag_ac_Vol05,0)+NVL(t2.p_notag_ac_Vol06,0)) AS  notag_ac_Q02	<!--전년Q02볼륨-->
				,(NVL(t2.p_notag_ac_Vol07,0)+NVL(t2.p_notag_ac_Vol08,0)+NVL(t2.p_notag_ac_Vol09,0)) AS  notag_ac_Q03	<!--전년Q03볼륨-->
				,(NVL(t2.p_notag_ac_Vol10,0)+NVL(t2.p_notag_ac_Vol11,0)+NVL(t2.p_notag_ac_Vol12,0)) AS  notag_ac_Q04	<!--전년Q04볼륨-->
				,(NVL(t2.p_notag_ac_Vol01,0)+NVL(t2.p_notag_ac_Vol02,0)+NVL(t2.p_notag_ac_Vol03,0)+NVL(t2.p_notag_ac_Vol04,0)+NVL(t2.p_notag_ac_Vol05,0)+NVL(t2.p_notag_ac_Vol06,0)) AS  notag_ac_H01	<!--전년H01볼륨-->
				,(NVL(t2.p_notag_ac_Vol07,0)+NVL(t2.p_notag_ac_Vol08,0)+NVL(t2.p_notag_ac_Vol09,0)+NVL(t2.p_notag_ac_Vol10,0)+NVL(t2.p_notag_ac_Vol11,0)+NVL(t2.p_notag_ac_Vol12,0)) AS  notag_ac_H02	<!--전년H02볼륨-->
             	,NVL(t2.p_notag_ac_Vol01,0) AS  notag_ac_YTD01
				,(NVL(t2.p_notag_ac_Vol01,0)+NVL(t2.p_notag_ac_Vol02,0)) AS  notag_ac_YTD02
				,(NVL(t2.p_notag_ac_Vol01,0)+NVL(t2.p_notag_ac_Vol02,0)+NVL(t2.p_notag_ac_Vol03,0)) AS  notag_ac_YTD03
				,(NVL(t2.p_notag_ac_Vol01,0)+NVL(t2.p_notag_ac_Vol02,0)+NVL(t2.p_notag_ac_Vol03,0)+NVL(t2.p_notag_ac_Vol04,0)) AS  notag_ac_YTD04
				,(NVL(t2.p_notag_ac_Vol01,0)+NVL(t2.p_notag_ac_Vol02,0)+NVL(t2.p_notag_ac_Vol03,0)+NVL(t2.p_notag_ac_Vol04,0)+NVL(t2.p_notag_ac_Vol05,0)) AS  notag_ac_YTD05
				,(NVL(t2.p_notag_ac_Vol01,0)+NVL(t2.p_notag_ac_Vol02,0)+NVL(t2.p_notag_ac_Vol03,0)+NVL(t2.p_notag_ac_Vol04,0)+NVL(t2.p_notag_ac_Vol05,0)+NVL(t2.p_notag_ac_Vol06,0)) AS  notag_ac_YTD06
				,(NVL(t2.p_notag_ac_Vol01,0)+NVL(t2.p_notag_ac_Vol02,0)+NVL(t2.p_notag_ac_Vol03,0)+NVL(t2.p_notag_ac_Vol04,0)+NVL(t2.p_notag_ac_Vol05,0)+NVL(t2.p_notag_ac_Vol06,0)+NVL(t2.p_notag_ac_Vol07,0)) AS  notag_ac_YTD07
				,(NVL(t2.p_notag_ac_Vol01,0)+NVL(t2.p_notag_ac_Vol02,0)+NVL(t2.p_notag_ac_Vol03,0)+NVL(t2.p_notag_ac_Vol04,0)+NVL(t2.p_notag_ac_Vol05,0)+NVL(t2.p_notag_ac_Vol06,0)+NVL(t2.p_notag_ac_Vol07,0)+NVL(t2.p_notag_ac_Vol08,0)) AS  notag_ac_YTD08
				,(NVL(t2.p_notag_ac_Vol01,0)+NVL(t2.p_notag_ac_Vol02,0)+NVL(t2.p_notag_ac_Vol03,0)+NVL(t2.p_notag_ac_Vol04,0)+NVL(t2.p_notag_ac_Vol05,0)+NVL(t2.p_notag_ac_Vol06,0)+NVL(t2.p_notag_ac_Vol07,0)+NVL(t2.p_notag_ac_Vol08,0)+NVL(t2.p_notag_ac_Vol09,0)) AS  notag_ac_YTD09
				,(NVL(t2.p_notag_ac_Vol01,0)+NVL(t2.p_notag_ac_Vol02,0)+NVL(t2.p_notag_ac_Vol03,0)+NVL(t2.p_notag_ac_Vol04,0)+NVL(t2.p_notag_ac_Vol05,0)+NVL(t2.p_notag_ac_Vol06,0)+NVL(t2.p_notag_ac_Vol07,0)+NVL(t2.p_notag_ac_Vol08,0)+NVL(t2.p_notag_ac_Vol09,0)+NVL(t2.p_notag_ac_Vol10,0)) AS  notag_ac_YTD10
				,(NVL(t2.p_notag_ac_Vol01,0)+NVL(t2.p_notag_ac_Vol02,0)+NVL(t2.p_notag_ac_Vol03,0)+NVL(t2.p_notag_ac_Vol04,0)+NVL(t2.p_notag_ac_Vol05,0)+NVL(t2.p_notag_ac_Vol06,0)+NVL(t2.p_notag_ac_Vol07,0)+NVL(t2.p_notag_ac_Vol08,0)+NVL(t2.p_notag_ac_Vol09,0)+NVL(t2.p_notag_ac_Vol10,0)+NVL(t2.p_notag_ac_Vol11,0)) AS  notag_ac_YTD11
				,(NVL(t2.p_notag_ac_Vol01,0)+NVL(t2.p_notag_ac_Vol02,0)+NVL(t2.p_notag_ac_Vol03,0)+NVL(t2.p_notag_ac_Vol04,0)+NVL(t2.p_notag_ac_Vol05,0)+NVL(t2.p_notag_ac_Vol06,0)+NVL(t2.p_notag_ac_Vol07,0)+NVL(t2.p_notag_ac_Vol08,0)+NVL(t2.p_notag_ac_Vol09,0)+NVL(t2.p_notag_ac_Vol10,0)+NVL(t2.p_notag_ac_Vol11,0)+NVL(t2.p_notag_ac_Vol12,0)) AS  notag_ac_YTD12
				
             	<!-- 당년 notag Forecast -->
				,NVL(t3.n_notag_for_Vol01,0) AS  notag_for_P01	<!--당년P01볼륨-->
				,NVL(t3.n_notag_for_Vol02,0) AS  notag_for_P02	<!--당년P02볼륨-->
				,NVL(t3.n_notag_for_Vol03,0) AS  notag_for_P03	<!--당년P03볼륨-->
				,NVL(t3.n_notag_for_Vol04,0) AS  notag_for_P04	<!--당년P04볼륨-->
				,NVL(t3.n_notag_for_Vol05,0) AS  notag_for_P05	<!--당년P05볼륨-->
				,NVL(t3.n_notag_for_Vol06,0) AS  notag_for_P06	<!--당년P06볼륨-->
				,NVL(t3.n_notag_for_Vol07,0) AS  notag_for_P07	<!--당년P07볼륨-->
				,NVL(t3.n_notag_for_Vol08,0) AS  notag_for_P08	<!--당년P08볼륨-->
				,NVL(t3.n_notag_for_Vol09,0) AS  notag_for_P09	<!--당년P09볼륨-->
				,NVL(t3.n_notag_for_Vol10,0) AS  notag_for_P10	<!--당년P10볼륨-->
				,NVL(t3.n_notag_for_Vol11,0) AS  notag_for_P11	<!--당년P11볼륨-->
				,NVL(t3.n_notag_for_Vol12,0) AS  notag_for_P12	<!--당년P12볼륨 -->
				,(NVL(t3.n_notag_for_Vol01,0)+NVL(t3.n_notag_for_Vol02,0)+NVL(t3.n_notag_for_Vol03,0)) AS  notag_for_Q01	<!--당년Q01볼륨-->
				,(NVL(t3.n_notag_for_Vol04,0)+NVL(t3.n_notag_for_Vol05,0)+NVL(t3.n_notag_for_Vol06,0)) AS  notag_for_Q02	<!--당년Q02볼륨-->
				,(NVL(t3.n_notag_for_Vol07,0)+NVL(t3.n_notag_for_Vol08,0)+NVL(t3.n_notag_for_Vol09,0)) AS  notag_for_Q03	<!--당년Q03볼륨-->
				,(NVL(t3.n_notag_for_Vol10,0)+NVL(t3.n_notag_for_Vol11,0)+NVL(t3.n_notag_for_Vol12,0)) AS  notag_for_Q04	<!--당년Q04볼륨-->
				,(NVL(t3.n_notag_for_Vol01,0)+NVL(t3.n_notag_for_Vol02,0)+NVL(t3.n_notag_for_Vol03,0)+NVL(t3.n_notag_for_Vol04,0)+NVL(t3.n_notag_for_Vol05,0)+NVL(t3.n_notag_for_Vol06,0)) AS  notag_for_H01	<!--당년H01볼륨-->
				,(NVL(t3.n_notag_for_Vol07,0)+NVL(t3.n_notag_for_Vol08,0)+NVL(t3.n_notag_for_Vol09,0)+NVL(t3.n_notag_for_Vol10,0)+NVL(t3.n_notag_for_Vol11,0)+NVL(t3.n_notag_for_Vol12,0)) AS  notag_for_H02	<!--당년H02볼륨-->
				,NVL(t3.n_notag_for_Vol01,0) AS  notag_for_YTD01
				,(NVL(t3.n_notag_for_Vol01,0)+NVL(t3.n_notag_for_Vol02,0)) AS  notag_for_YTD02
				,(NVL(t3.n_notag_for_Vol01,0)+NVL(t3.n_notag_for_Vol02,0)+NVL(t3.n_notag_for_Vol03,0)) AS  notag_for_YTD03
				,(NVL(t3.n_notag_for_Vol01,0)+NVL(t3.n_notag_for_Vol02,0)+NVL(t3.n_notag_for_Vol03,0)+NVL(t3.n_notag_for_Vol04,0)) AS  notag_for_YTD04
				,(NVL(t3.n_notag_for_Vol01,0)+NVL(t3.n_notag_for_Vol02,0)+NVL(t3.n_notag_for_Vol03,0)+NVL(t3.n_notag_for_Vol04,0)+NVL(t3.n_notag_for_Vol05,0)) AS  notag_for_YTD05
				,(NVL(t3.n_notag_for_Vol01,0)+NVL(t3.n_notag_for_Vol02,0)+NVL(t3.n_notag_for_Vol03,0)+NVL(t3.n_notag_for_Vol04,0)+NVL(t3.n_notag_for_Vol05,0)+NVL(t3.n_notag_for_Vol06,0)) AS  notag_for_YTD06
				,(NVL(t3.n_notag_for_Vol01,0)+NVL(t3.n_notag_for_Vol02,0)+NVL(t3.n_notag_for_Vol03,0)+NVL(t3.n_notag_for_Vol04,0)+NVL(t3.n_notag_for_Vol05,0)+NVL(t3.n_notag_for_Vol06,0)+NVL(t3.n_notag_for_Vol07,0)) AS  notag_for_YTD07
				,(NVL(t3.n_notag_for_Vol01,0)+NVL(t3.n_notag_for_Vol02,0)+NVL(t3.n_notag_for_Vol03,0)+NVL(t3.n_notag_for_Vol04,0)+NVL(t3.n_notag_for_Vol05,0)+NVL(t3.n_notag_for_Vol06,0)+NVL(t3.n_notag_for_Vol07,0)+NVL(t3.n_notag_for_Vol08,0)) AS  notag_for_YTD08
				,(NVL(t3.n_notag_for_Vol01,0)+NVL(t3.n_notag_for_Vol02,0)+NVL(t3.n_notag_for_Vol03,0)+NVL(t3.n_notag_for_Vol04,0)+NVL(t3.n_notag_for_Vol05,0)+NVL(t3.n_notag_for_Vol06,0)+NVL(t3.n_notag_for_Vol07,0)+NVL(t3.n_notag_for_Vol08,0)+NVL(t3.n_notag_for_Vol09,0)) AS  notag_for_YTD09
				,(NVL(t3.n_notag_for_Vol01,0)+NVL(t3.n_notag_for_Vol02,0)+NVL(t3.n_notag_for_Vol03,0)+NVL(t3.n_notag_for_Vol04,0)+NVL(t3.n_notag_for_Vol05,0)+NVL(t3.n_notag_for_Vol06,0)+NVL(t3.n_notag_for_Vol07,0)+NVL(t3.n_notag_for_Vol08,0)+NVL(t3.n_notag_for_Vol09,0)+NVL(t3.n_notag_for_Vol10,0)) AS  notag_for_YTD10
				,(NVL(t3.n_notag_for_Vol01,0)+NVL(t3.n_notag_for_Vol02,0)+NVL(t3.n_notag_for_Vol03,0)+NVL(t3.n_notag_for_Vol04,0)+NVL(t3.n_notag_for_Vol05,0)+NVL(t3.n_notag_for_Vol06,0)+NVL(t3.n_notag_for_Vol07,0)+NVL(t3.n_notag_for_Vol08,0)+NVL(t3.n_notag_for_Vol09,0)+NVL(t3.n_notag_for_Vol10,0)+NVL(t3.n_notag_for_Vol11,0)) AS  notag_for_YTD11
				,(NVL(t3.n_notag_for_Vol01,0)+NVL(t3.n_notag_for_Vol02,0)+NVL(t3.n_notag_for_Vol03,0)+NVL(t3.n_notag_for_Vol04,0)+NVL(t3.n_notag_for_Vol05,0)+NVL(t3.n_notag_for_Vol06,0)+NVL(t3.n_notag_for_Vol07,0)+NVL(t3.n_notag_for_Vol08,0)+NVL(t3.n_notag_for_Vol09,0)+NVL(t3.n_notag_for_Vol10,0)+NVL(t3.n_notag_for_Vol11,0)+NVL(t3.n_notag_for_Vol12,0)) AS  notag_for_YTD12
				
				<!-- 당년  notag  Actual(Outlook) -->
             	<!-- 당년실적이 있으면 실적으로 없으면 Outlook으로 보여줌 -->
				,CASE WHEN  t2.N_notag_ac_Vol01 IS NULL  THEN NVL(t3.N_notag_out_Vol01,0)
				 ELSE  NVL(t2.N_notag_ac_Vol01,0)  END  AS  notag_out_P01	<!--당년P01볼륨-->
				,CASE WHEN  t2.N_notag_ac_Vol02 IS NULL THEN NVL(t3.N_notag_out_Vol02,0)
				 ELSE  NVL(t2.N_notag_ac_Vol02,0)  END  AS  notag_out_P02	<!--당년P02볼륨-->
				,CASE WHEN  t2.N_notag_ac_Vol03 IS NULL THEN NVL(t3.N_notag_out_Vol03,0)
				 ELSE  NVL(t2.N_notag_ac_Vol03,0)  END  AS  notag_out_P03	<!--당년P03볼륨-->
				,CASE WHEN  t2.N_notag_ac_Vol04 IS NULL THEN NVL(t3.N_notag_out_Vol04,0)
				 ELSE  NVL(t2.N_notag_ac_Vol04,0)  END  AS  notag_out_P04	<!--당년P04볼륨-->
				,CASE WHEN  t2.N_notag_ac_Vol05 IS NULL THEN NVL(t3.N_notag_out_Vol05,0)
				 ELSE  NVL(t2.N_notag_ac_Vol05,0)  END  AS  notag_out_P05	<!--당년P05볼륨-->
				,CASE WHEN  t2.N_notag_ac_Vol06 IS NULL THEN NVL(t3.N_notag_out_Vol06,0)
				 ELSE  NVL(t2.N_notag_ac_Vol06,0)  END  AS  notag_out_P06	<!--당년P06볼륨-->
				,CASE WHEN  t2.N_notag_ac_Vol07 IS NULL THEN NVL(t3.N_notag_out_Vol07,0)
				 ELSE  NVL(t2.N_notag_ac_Vol07,0)  END  AS  notag_out_P07	<!--당년P07볼륨-->
				,CASE WHEN  t2.N_notag_ac_Vol08 IS NULL THEN NVL(t3.N_notag_out_Vol08,0)
				 ELSE  NVL(t2.N_notag_ac_Vol08,0)  END  AS  notag_out_P08	<!--당년P08볼륨-->
				,CASE WHEN  t2.N_notag_ac_Vol09 IS NULL THEN NVL(t3.N_notag_out_Vol09,0)
				 ELSE  NVL(t2.N_notag_ac_Vol09,0)  END  AS  notag_out_P09	<!--당년P09볼륨-->
				,CASE WHEN  t2.N_notag_ac_Vol10 IS NULL THEN NVL(t3.N_notag_out_Vol10,0)
				 ELSE  NVL(t2.N_notag_ac_Vol10,0)  END  AS  notag_out_P10	<!--당년P10볼륨-->
				,CASE WHEN  t2.N_notag_ac_Vol11 IS NULL THEN NVL(t3.N_notag_out_Vol11,0)
				 ELSE  NVL(t2.N_notag_ac_Vol11,0)  END  AS  notag_out_P11	<!--당년P11볼륨-->
				,CASE WHEN  t2.N_notag_ac_Vol12 IS NULL THEN NVL(t3.N_notag_out_Vol12,0)
				 ELSE  NVL(t2.N_notag_ac_Vol12,0)  END  AS notag_out_P12 	<!--당년P12볼륨-->
				,((CASE WHEN  t2.N_notag_ac_Vol01 IS NULL  THEN NVL(t3.N_notag_out_Vol01,0)
				 ELSE  NVL(t2.N_notag_ac_Vol01,0)  END)+
				 (CASE WHEN  t2.N_notag_ac_Vol02 IS NULL  THEN NVL(t3.N_notag_out_Vol02,0)
				 ELSE  NVL(t2.N_notag_ac_Vol02,0)  END)+
				 (CASE WHEN  t2.N_notag_ac_Vol03 IS NULL  THEN NVL(t3.N_notag_out_Vol03,0)
				 ELSE  NVL(t2.N_notag_ac_Vol03,0)  END))  AS  notag_out_Q01	<!--당년Q01볼륨-->
				,((CASE WHEN  t2.N_notag_ac_Vol04 IS NULL  THEN NVL(t3.N_notag_out_Vol04,0)
				 ELSE  NVL(t2.N_notag_ac_Vol04,0)  END)+
				 (CASE WHEN  t2.N_notag_ac_Vol05 IS NULL  THEN NVL(t3.N_notag_out_Vol05,0)
				 ELSE  NVL(t2.N_notag_ac_Vol05,0)  END)+
				 (CASE WHEN  t2.N_notag_ac_Vol06 IS NULL  THEN NVL(t3.N_notag_out_Vol06,0)
				 ELSE  NVL(t2.N_notag_ac_Vol06,0)  END))  AS  notag_out_Q02	<!--당년Q02볼륨-->
				,((CASE WHEN  t2.N_notag_ac_Vol07 IS NULL  THEN NVL(t3.N_notag_out_Vol07,0)
				 ELSE  NVL(t2.N_notag_ac_Vol07,0)  END)+
				 (CASE WHEN  t2.N_notag_ac_Vol08 IS NULL  THEN NVL(t3.N_notag_out_Vol08,0)
				 ELSE  NVL(t2.N_notag_ac_Vol08,0)  END)+
				 (CASE WHEN  t2.N_notag_ac_Vol09 IS NULL  THEN NVL(t3.N_notag_out_Vol09,0)
				 ELSE  NVL(t2.N_notag_ac_Vol09,0)  END))  AS  notag_out_Q03	<!--당년Q03볼륨-->
				,((CASE WHEN  t2.N_notag_ac_Vol10 IS NULL  THEN NVL(t3.N_notag_out_Vol10,0)
				 ELSE  NVL(t2.N_notag_ac_Vol10,0)  END)+
				 (CASE WHEN  t2.N_notag_ac_Vol11 IS NULL  THEN NVL(t3.N_notag_out_Vol11,0)
				 ELSE  NVL(t2.N_notag_ac_Vol11,0)  END)+
				 (CASE WHEN  t2.N_notag_ac_Vol12 IS NULL  THEN NVL(t3.N_notag_out_Vol12,0)
				 ELSE  NVL(t2.N_notag_ac_Vol12,0)  END))  AS  notag_out_Q04	<!--당년Q04볼륨-->
				,((CASE WHEN  t2.N_notag_ac_Vol01 IS NULL  THEN NVL(t3.N_notag_out_Vol01,0)
				 ELSE  NVL(t2.N_notag_ac_Vol01,0)  END)+
				 (CASE WHEN  t2.N_notag_ac_Vol02 IS NULL  THEN NVL(t3.N_notag_out_Vol02,0)
				 ELSE  NVL(t2.N_notag_ac_Vol02,0)  END)+
				 (CASE WHEN  t2.N_notag_ac_Vol03 IS NULL  THEN NVL(t3.N_notag_out_Vol03,0)
				 ELSE  NVL(t2.N_notag_ac_Vol03,0)  END)+
				 (CASE WHEN  t2.N_notag_ac_Vol04 IS NULL  THEN NVL(t3.N_notag_out_Vol04,0)
				 ELSE  NVL(t2.N_notag_ac_Vol04,0)  END)+
				 (CASE WHEN  t2.N_notag_ac_Vol05 IS NULL  THEN NVL(t3.N_notag_out_Vol05,0)
				 ELSE  NVL(t2.N_notag_ac_Vol05,0)  END)+
				 (CASE WHEN  t2.N_notag_ac_Vol06 IS NULL  THEN NVL(t3.N_notag_out_Vol06,0)
				 ELSE  NVL(t2.N_notag_ac_Vol06,0)  END))  AS  notag_out_H01	<!--당년H01볼륨-->
				,((CASE WHEN  t2.N_notag_ac_Vol07 IS NULL  THEN NVL(t3.N_notag_out_Vol07,0)
				 ELSE  NVL(t2.N_notag_ac_Vol07,0)  END)+
				 (CASE WHEN  t2.N_notag_ac_Vol08 IS NULL  THEN NVL(t3.N_notag_out_Vol08,0)
				 ELSE  NVL(t2.N_notag_ac_Vol08,0)  END)+
				 (CASE WHEN  t2.N_notag_ac_Vol09 IS NULL  THEN NVL(t3.N_notag_out_Vol09,0)
				 ELSE  NVL(t2.N_notag_ac_Vol09,0)  END)+
				 (CASE WHEN  t2.N_notag_ac_Vol10 IS NULL  THEN NVL(t3.N_notag_out_Vol10,0)
				 ELSE  NVL(t2.N_notag_ac_Vol10,0)  END)+
				 (CASE WHEN  t2.N_notag_ac_Vol11 IS NULL  THEN NVL(t3.N_notag_out_Vol11,0)
				 ELSE  NVL(t2.N_notag_ac_Vol11,0)  END)+
				 (CASE WHEN  t2.N_notag_ac_Vol12 IS NULL  THEN NVL(t3.N_notag_out_Vol12,0)
				 ELSE  NVL(t2.N_notag_ac_Vol12,0)  END))  AS  notag_out_H02	<!--당년H02볼륨-->
				,CASE WHEN  t2.N_notag_ac_Vol01 IS NULL  THEN NVL(t3.N_notag_out_Vol01,0)
				 ELSE  NVL(t2.N_notag_ac_Vol01,0)  END  AS  notag_out_YTD01
				,((CASE WHEN  t2.N_notag_ac_Vol01 IS NULL  THEN NVL(t3.N_notag_out_Vol01,0)
				 ELSE  NVL(t2.N_notag_ac_Vol01,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol02 IS NULL  THEN NVL(t3.N_notag_out_Vol02,0)
				 ELSE  NVL(t2.N_notag_ac_Vol02,0) END)) AS  notag_out_YTD02	
				,((CASE WHEN  t2.N_notag_ac_Vol01 IS NULL  THEN NVL(t3.N_notag_out_Vol01,0)
				 ELSE  NVL(t2.N_notag_ac_Vol01,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol02 IS NULL  THEN NVL(t3.N_notag_out_Vol02,0)
				 ELSE  NVL(t2.N_notag_ac_Vol02,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol03 IS NULL  THEN NVL(t3.N_notag_out_Vol03,0)
				 ELSE  NVL(t2.N_notag_ac_Vol03,0) END)) AS  notag_out_YTD03
				,((CASE WHEN  t2.N_notag_ac_Vol01 IS NULL  THEN NVL(t3.N_notag_out_Vol01,0)
				 ELSE  NVL(t2.N_notag_ac_Vol01,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol02 IS NULL  THEN NVL(t3.N_notag_out_Vol02,0)
				 ELSE  NVL(t2.N_notag_ac_Vol02,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol03 IS NULL  THEN NVL(t3.N_notag_out_Vol03,0)
				 ELSE  NVL(t2.N_notag_ac_Vol03,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol04 IS NULL  THEN NVL(t3.N_notag_out_Vol04,0)
				 ELSE  NVL(t2.N_notag_ac_Vol04,0) END)) AS  notag_out_YTD04
				,((CASE WHEN  t2.N_notag_ac_Vol01 IS NULL  THEN NVL(t3.N_notag_out_Vol01,0)
				 ELSE  NVL(t2.N_notag_ac_Vol01,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol02 IS NULL  THEN NVL(t3.N_notag_out_Vol02,0)
				 ELSE  NVL(t2.N_notag_ac_Vol02,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol03 IS NULL  THEN NVL(t3.N_notag_out_Vol03,0)
				 ELSE  NVL(t2.N_notag_ac_Vol03,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol04 IS NULL  THEN NVL(t3.N_notag_out_Vol04,0)
				 ELSE  NVL(t2.N_notag_ac_Vol04,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol05 IS NULL  THEN NVL(t3.N_notag_out_Vol05,0)
				 ELSE  NVL(t2.N_notag_ac_Vol05,0) END)) AS  notag_out_YTD05
				,((CASE WHEN  t2.N_notag_ac_Vol01 IS NULL  THEN NVL(t3.N_notag_out_Vol01,0)
				 ELSE  NVL(t2.N_notag_ac_Vol01,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol02 IS NULL  THEN NVL(t3.N_notag_out_Vol02,0)
				 ELSE  NVL(t2.N_notag_ac_Vol02,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol03 IS NULL  THEN NVL(t3.N_notag_out_Vol03,0)
				 ELSE  NVL(t2.N_notag_ac_Vol03,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol04 IS NULL  THEN NVL(t3.N_notag_out_Vol04,0)
				 ELSE  NVL(t2.N_notag_ac_Vol04,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol05 IS NULL  THEN NVL(t3.N_notag_out_Vol05,0)
				 ELSE  NVL(t2.N_notag_ac_Vol05,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol06 IS NULL  THEN NVL(t3.N_notag_out_Vol06,0)
				 ELSE  NVL(t2.N_notag_ac_Vol06,0) END)) AS  notag_out_YTD06
				,((CASE WHEN  t2.N_notag_ac_Vol01 IS NULL  THEN NVL(t3.N_notag_out_Vol01,0)
				 ELSE  NVL(t2.N_notag_ac_Vol01,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol02 IS NULL  THEN NVL(t3.N_notag_out_Vol02,0)
				 ELSE  NVL(t2.N_notag_ac_Vol02,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol03 IS NULL  THEN NVL(t3.N_notag_out_Vol03,0)
				 ELSE  NVL(t2.N_notag_ac_Vol03,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol04 IS NULL  THEN NVL(t3.N_notag_out_Vol04,0)
				 ELSE  NVL(t2.N_notag_ac_Vol04,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol05 IS NULL  THEN NVL(t3.N_notag_out_Vol05,0)
				 ELSE  NVL(t2.N_notag_ac_Vol05,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol06 IS NULL  THEN NVL(t3.N_notag_out_Vol06,0)
				 ELSE  NVL(t2.N_notag_ac_Vol06,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol07 IS NULL  THEN NVL(t3.N_notag_out_Vol07,0)
				 ELSE  NVL(t2.N_notag_ac_Vol07,0) END)) AS  notag_out_YTD07
				,((CASE WHEN  t2.N_notag_ac_Vol01 IS NULL  THEN NVL(t3.N_notag_out_Vol01,0)
				 ELSE  NVL(t2.N_notag_ac_Vol01,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol02 IS NULL  THEN NVL(t3.N_notag_out_Vol02,0)
				 ELSE  NVL(t2.N_notag_ac_Vol02,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol03 IS NULL  THEN NVL(t3.N_notag_out_Vol03,0)
				 ELSE  NVL(t2.N_notag_ac_Vol03,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol04 IS NULL  THEN NVL(t3.N_notag_out_Vol04,0)
				 ELSE  NVL(t2.N_notag_ac_Vol04,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol05 IS NULL  THEN NVL(t3.N_notag_out_Vol05,0)
				 ELSE  NVL(t2.N_notag_ac_Vol05,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol06 IS NULL  THEN NVL(t3.N_notag_out_Vol06,0)
				 ELSE  NVL(t2.N_notag_ac_Vol06,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol07 IS NULL  THEN NVL(t3.N_notag_out_Vol07,0)
				 ELSE  NVL(t2.N_notag_ac_Vol07,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol08 IS NULL  THEN NVL(t3.N_notag_out_Vol08,0)
				 ELSE  NVL(t2.N_notag_ac_Vol08,0) END)) AS  notag_out_YTD08
				,((CASE WHEN  t2.N_notag_ac_Vol01 IS NULL  THEN NVL(t3.N_notag_out_Vol01,0)
				 ELSE  NVL(t2.N_notag_ac_Vol01,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol02 IS NULL  THEN NVL(t3.N_notag_out_Vol02,0)
				 ELSE  NVL(t2.N_notag_ac_Vol02,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol03 IS NULL  THEN NVL(t3.N_notag_out_Vol03,0)
				 ELSE  NVL(t2.N_notag_ac_Vol03,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol04 IS NULL  THEN NVL(t3.N_notag_out_Vol04,0)
				 ELSE  NVL(t2.N_notag_ac_Vol04,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol05 IS NULL  THEN NVL(t3.N_notag_out_Vol05,0)
				 ELSE  NVL(t2.N_notag_ac_Vol05,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol06 IS NULL  THEN NVL(t3.N_notag_out_Vol06,0)
				 ELSE  NVL(t2.N_notag_ac_Vol06,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol07 IS NULL  THEN NVL(t3.N_notag_out_Vol07,0)
				 ELSE  NVL(t2.N_notag_ac_Vol07,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol08 IS NULL  THEN NVL(t3.N_notag_out_Vol08,0)
				 ELSE  NVL(t2.N_notag_ac_Vol08,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol09 IS NULL  THEN NVL(t3.N_notag_out_Vol09,0)
				 ELSE  NVL(t2.N_notag_ac_Vol09,0) END)) AS  notag_out_YTD09
				,((CASE WHEN  t2.N_notag_ac_Vol01 IS NULL  THEN NVL(t3.N_notag_out_Vol01,0)
				 ELSE  NVL(t2.N_notag_ac_Vol01,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol02 IS NULL  THEN NVL(t3.N_notag_out_Vol02,0)
				 ELSE  NVL(t2.N_notag_ac_Vol02,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol03 IS NULL  THEN NVL(t3.N_notag_out_Vol03,0)
				 ELSE  NVL(t2.N_notag_ac_Vol03,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol04 IS NULL  THEN NVL(t3.N_notag_out_Vol04,0)
				 ELSE  NVL(t2.N_notag_ac_Vol04,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol05 IS NULL  THEN NVL(t3.N_notag_out_Vol05,0)
				 ELSE  NVL(t2.N_notag_ac_Vol05,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol06 IS NULL  THEN NVL(t3.N_notag_out_Vol06,0)
				 ELSE  NVL(t2.N_notag_ac_Vol06,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol07 IS NULL  THEN NVL(t3.N_notag_out_Vol07,0)
				 ELSE  NVL(t2.N_notag_ac_Vol07,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol08 IS NULL  THEN NVL(t3.N_notag_out_Vol08,0)
				 ELSE  NVL(t2.N_notag_ac_Vol08,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol09 IS NULL  THEN NVL(t3.N_notag_out_Vol09,0)
				 ELSE  NVL(t2.N_notag_ac_Vol09,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol10 IS NULL  THEN NVL(t3.N_notag_out_Vol10,0)
				 ELSE  NVL(t2.N_notag_ac_Vol10,0) END)) AS  notag_out_YTD10
				,((CASE WHEN  t2.N_notag_ac_Vol01 IS NULL  THEN NVL(t3.N_notag_out_Vol01,0)
				 ELSE  NVL(t2.N_notag_ac_Vol01,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol02 IS NULL  THEN NVL(t3.N_notag_out_Vol02,0)
				 ELSE  NVL(t2.N_notag_ac_Vol02,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol03 IS NULL  THEN NVL(t3.N_notag_out_Vol03,0)
				 ELSE  NVL(t2.N_notag_ac_Vol03,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol04 IS NULL  THEN NVL(t3.N_notag_out_Vol04,0)
				 ELSE  NVL(t2.N_notag_ac_Vol04,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol05 IS NULL  THEN NVL(t3.N_notag_out_Vol05,0)
				 ELSE  NVL(t2.N_notag_ac_Vol05,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol06 IS NULL  THEN NVL(t3.N_notag_out_Vol06,0)
				 ELSE  NVL(t2.N_notag_ac_Vol06,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol07 IS NULL  THEN NVL(t3.N_notag_out_Vol07,0)
				 ELSE  NVL(t2.N_notag_ac_Vol07,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol08 IS NULL  THEN NVL(t3.N_notag_out_Vol08,0)
				 ELSE  NVL(t2.N_notag_ac_Vol08,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol09 IS NULL  THEN NVL(t3.N_notag_out_Vol09,0)
				 ELSE  NVL(t2.N_notag_ac_Vol09,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol10 IS NULL  THEN NVL(t3.N_notag_out_Vol10,0)
				 ELSE  NVL(t2.N_notag_ac_Vol10,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol11 IS NULL  THEN NVL(t3.N_notag_out_Vol11,0)
				 ELSE  NVL(t2.N_notag_ac_Vol11,0) END)) AS  notag_out_YTD11
				,((CASE WHEN  t2.N_notag_ac_Vol01 IS NULL  THEN NVL(t3.N_notag_out_Vol01,0)
				 ELSE  NVL(t2.N_notag_ac_Vol01,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol02 IS NULL  THEN NVL(t3.N_notag_out_Vol02,0)
				 ELSE  NVL(t2.N_notag_ac_Vol02,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol03 IS NULL  THEN NVL(t3.N_notag_out_Vol03,0)
				 ELSE  NVL(t2.N_notag_ac_Vol03,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol04 IS NULL  THEN NVL(t3.N_notag_out_Vol04,0)
				 ELSE  NVL(t2.N_notag_ac_Vol04,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol05 IS NULL  THEN NVL(t3.N_notag_out_Vol05,0)
				 ELSE  NVL(t2.N_notag_ac_Vol05,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol06 IS NULL  THEN NVL(t3.N_notag_out_Vol06,0)
				 ELSE  NVL(t2.N_notag_ac_Vol06,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol07 IS NULL  THEN NVL(t3.N_notag_out_Vol07,0)
				 ELSE  NVL(t2.N_notag_ac_Vol07,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol08 IS NULL  THEN NVL(t3.N_notag_out_Vol08,0)
				 ELSE  NVL(t2.N_notag_ac_Vol08,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol09 IS NULL  THEN NVL(t3.N_notag_out_Vol09,0)
				 ELSE  NVL(t2.N_notag_ac_Vol09,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol10 IS NULL  THEN NVL(t3.N_notag_out_Vol10,0)
				 ELSE  NVL(t2.N_notag_ac_Vol10,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol11 IS NULL  THEN NVL(t3.N_notag_out_Vol11,0)
				 ELSE  NVL(t2.N_notag_ac_Vol11,0) END)+
				 (CASE WHEN  t2.N_notag_ac_Vol12 IS NULL  THEN NVL(t3.N_notag_out_Vol12,0)
				 ELSE  NVL(t2.N_notag_ac_Vol12,0) END)) AS  notag_out_YTD12
				<!-- 당년 notag Target -->
				,NVL(t4.n_notag_tg_Vol01,0) AS  notag_tg_P01	<!--당년P01볼륨-->
				,NVL(t4.n_notag_tg_Vol02,0) AS  notag_tg_P02	<!--당년P02볼륨-->
				,NVL(t4.n_notag_tg_Vol03,0) AS  notag_tg_P03	<!--당년P03볼륨-->
				,NVL(t4.n_notag_tg_Vol04,0) AS  notag_tg_P04	<!--당년P04볼륨-->
				,NVL(t4.n_notag_tg_Vol05,0) AS  notag_tg_P05	<!--당년P05볼륨-->
				,NVL(t4.n_notag_tg_Vol06,0) AS  notag_tg_P06	<!--당년P06볼륨-->
				,NVL(t4.n_notag_tg_Vol07,0) AS  notag_tg_P07	<!--당년P07볼륨-->
				,NVL(t4.n_notag_tg_Vol08,0) AS  notag_tg_P08	<!--당년P08볼륨-->
				,NVL(t4.n_notag_tg_Vol09,0) AS  notag_tg_P09	<!--당년P09볼륨-->
				,NVL(t4.n_notag_tg_Vol10,0) AS  notag_tg_P10	<!--당년P10볼륨-->
				,NVL(t4.n_notag_tg_Vol11,0) AS  notag_tg_P11	<!--당년P11볼륨-->
				,NVL(t4.n_notag_tg_Vol12,0) AS  notag_tg_P12	<!--당년P12볼륨 -->
				,(NVL(t4.n_notag_tg_Vol01,0)+NVL(t4.n_notag_tg_Vol02,0)+NVL(t4.n_notag_tg_Vol03,0)) AS  notag_tg_Q01	<!--당년Q01볼륨-->
				,(NVL(t4.n_notag_tg_Vol04,0)+NVL(t4.n_notag_tg_Vol05,0)+NVL(t4.n_notag_tg_Vol06,0)) AS  notag_tg_Q02	<!--당년Q01볼륨-->
				,(NVL(t4.n_notag_tg_Vol07,0)+NVL(t4.n_notag_tg_Vol08,0)+NVL(t4.n_notag_tg_Vol09,0)) AS  notag_tg_Q03	<!--당년Q01볼륨-->
				,(NVL(t4.n_notag_tg_Vol10,0)+NVL(t4.n_notag_tg_Vol11,0)+NVL(t4.n_notag_tg_Vol12,0)) AS  notag_tg_Q04	<!--당년Q01볼륨-->
				,(NVL(t4.n_notag_tg_Vol01,0)+NVL(t4.n_notag_tg_Vol02,0)+NVL(t4.n_notag_tg_Vol03,0)+NVL(t4.n_notag_tg_Vol04,0)+NVL(t4.n_notag_tg_Vol05,0)+NVL(t4.n_notag_tg_Vol06,0)) AS  notag_tg_H01	<!--당년H01볼륨-->
				,(NVL(t4.n_notag_tg_Vol07,0)+NVL(t4.n_notag_tg_Vol08,0)+NVL(t4.n_notag_tg_Vol09,0)+NVL(t4.n_notag_tg_Vol10,0)+NVL(t4.n_notag_tg_Vol11,0)+NVL(t4.n_notag_tg_Vol12,0)) AS  notag_tg_H02	<!--당년H02볼륨-->
				,NVL(t4.n_notag_tg_Vol01,0) AS  notag_tg_YTD01
				,(NVL(t4.n_notag_tg_Vol01,0)+NVL(t4.n_notag_tg_Vol02,0)) AS  notag_tg_YTD02
				,(NVL(t4.n_notag_tg_Vol01,0)+NVL(t4.n_notag_tg_Vol02,0)+NVL(t4.n_notag_tg_Vol03,0)) AS  notag_tg_YTD03
				,(NVL(t4.n_notag_tg_Vol01,0)+NVL(t4.n_notag_tg_Vol02,0)+NVL(t4.n_notag_tg_Vol03,0)+NVL(t4.n_notag_tg_Vol04,0)) AS  notag_tg_YTD04
				,(NVL(t4.n_notag_tg_Vol01,0)+NVL(t4.n_notag_tg_Vol02,0)+NVL(t4.n_notag_tg_Vol03,0)+NVL(t4.n_notag_tg_Vol04,0)+NVL(t4.n_notag_tg_Vol05,0)) AS  notag_tg_YTD05
				,(NVL(t4.n_notag_tg_Vol01,0)+NVL(t4.n_notag_tg_Vol02,0)+NVL(t4.n_notag_tg_Vol03,0)+NVL(t4.n_notag_tg_Vol04,0)+NVL(t4.n_notag_tg_Vol05,0)+NVL(t4.n_notag_tg_Vol06,0)) AS  notag_tg_YTD06
				,(NVL(t4.n_notag_tg_Vol01,0)+NVL(t4.n_notag_tg_Vol02,0)+NVL(t4.n_notag_tg_Vol03,0)+NVL(t4.n_notag_tg_Vol04,0)+NVL(t4.n_notag_tg_Vol05,0)+NVL(t4.n_notag_tg_Vol06,0)+NVL(t4.n_notag_tg_Vol07,0)) AS  notag_tg_YTD07
				,(NVL(t4.n_notag_tg_Vol01,0)+NVL(t4.n_notag_tg_Vol02,0)+NVL(t4.n_notag_tg_Vol03,0)+NVL(t4.n_notag_tg_Vol04,0)+NVL(t4.n_notag_tg_Vol05,0)+NVL(t4.n_notag_tg_Vol06,0)+NVL(t4.n_notag_tg_Vol07,0)+NVL(t4.n_notag_tg_Vol08,0)) AS  notag_tg_YTD08
				,(NVL(t4.n_notag_tg_Vol01,0)+NVL(t4.n_notag_tg_Vol02,0)+NVL(t4.n_notag_tg_Vol03,0)+NVL(t4.n_notag_tg_Vol04,0)+NVL(t4.n_notag_tg_Vol05,0)+NVL(t4.n_notag_tg_Vol06,0)+NVL(t4.n_notag_tg_Vol07,0)+NVL(t4.n_notag_tg_Vol08,0)+NVL(t4.n_notag_tg_Vol09,0)) AS  notag_tg_YTD09
				,(NVL(t4.n_notag_tg_Vol01,0)+NVL(t4.n_notag_tg_Vol02,0)+NVL(t4.n_notag_tg_Vol03,0)+NVL(t4.n_notag_tg_Vol04,0)+NVL(t4.n_notag_tg_Vol05,0)+NVL(t4.n_notag_tg_Vol06,0)+NVL(t4.n_notag_tg_Vol07,0)+NVL(t4.n_notag_tg_Vol08,0)+NVL(t4.n_notag_tg_Vol09,0)+NVL(t4.n_notag_tg_Vol10,0)) AS  notag_tg_YTD10
				,(NVL(t4.n_notag_tg_Vol01,0)+NVL(t4.n_notag_tg_Vol02,0)+NVL(t4.n_notag_tg_Vol03,0)+NVL(t4.n_notag_tg_Vol04,0)+NVL(t4.n_notag_tg_Vol05,0)+NVL(t4.n_notag_tg_Vol06,0)+NVL(t4.n_notag_tg_Vol07,0)+NVL(t4.n_notag_tg_Vol08,0)+NVL(t4.n_notag_tg_Vol09,0)+NVL(t4.n_notag_tg_Vol10,0)+NVL(t4.n_notag_tg_Vol11,0)) AS  notag_tg_YTD11
				,(NVL(t4.n_notag_tg_Vol01,0)+NVL(t4.n_notag_tg_Vol02,0)+NVL(t4.n_notag_tg_Vol03,0)+NVL(t4.n_notag_tg_Vol04,0)+NVL(t4.n_notag_tg_Vol05,0)+NVL(t4.n_notag_tg_Vol06,0)+NVL(t4.n_notag_tg_Vol07,0)+NVL(t4.n_notag_tg_Vol08,0)+NVL(t4.n_notag_tg_Vol09,0)+NVL(t4.n_notag_tg_Vol10,0)+NVL(t4.n_notag_tg_Vol11,0)+NVL(t4.n_notag_tg_Vol12,0)) AS  notag_tg_YTD12
		  FROM 
				(
					SELECT	t1.SortNo
							,T1.DataLv1			AS  DataLv1			<!--LOCAL, INT`L, VODKA, BEER--> 
							,T1.DataLv1         AS  DataLv1_NM
							,T2.DataLv2         AS  DataLv2 
							,T2.DataLv2_NM      AS  DataLv2_NM                 
			          FROM  ( 
							SELECT	1					AS SortNo
										, 'LOCAL'       AS DataLv1
			                      FROM	DUAL       
			                 UNION ALL
			                    SELECT  2               AS SortNo
		                            ,'INT`L'        				<!-- 'INT`L'을 'INT`L'로 변경하여 입력 upper & replace ' to ` -->
			                      FROM	DUAL       
			                 UNION ALL
			                    SELECT	3               AS SortNo
			                            ,'VODKA'           
			                      FROM	DUAL       
			                 UNION ALL
			                    SELECT	4               AS SortNo
			                            ,'BEER'             
			                      FROM	DUAL   
							) T1     
				INNER JOIN 
			                (
								SELECT '0'				AS DataLv2	<!--계산을위한 row 화면에는 출력안됨-->
			                          	,'Hedden Row'   AS DataLv2_NM 
			                      FROM	DUAL      
			                 UNION ALL  
			                    SELECT	'10'                                    
			                            ,'Total Account Plan Volume'  
			                      FROM	DUAL       
			                 UNION ALL
			                    SELECT	'30'   
			                            , 'Total Note G Spending(K KRW)'  
			                      FROM	DUAL       
			                 ) T2
			            ON 1=1    
     			) T1
 LEFT OUTER JOIN
  				(    
     				<!--2)  NOTE G 적(actual) 볼륨 구하기 쿼리(전년 +당년) --> 
      				<!-- 0)  Total Dependency Rate 및 Total Note G Case Rate 를 구하기 위한 HIDDEND ROW ... --> 
       				<!-- LOCAL, INT`L인 경우는 DK Depletion 실적을 VODKA, BEER인 경우는 SHIPMENT실적을 가지고온다. -->

					SELECT	t1.MARKET	AS DataLv1  <!-- LOCAL, INT`L -->
                            ,'0'        AS DataLv2  <!--'Hedden Row' --> 
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P01'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol01    <!--전년P01볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P02'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol02    <!--전년P02볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P03'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol03    <!--전년P03볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P04'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol04    <!--전년P04볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P05'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol05    <!--전년P05볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P06'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol06    <!--전년P06볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P07'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol07    <!--전년P07볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P08'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol08    <!--전년P08볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P09'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol09    <!--전년P09볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P10'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol10    <!--전년P10볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P11'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol11    <!--전년P11볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P12'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol12    <!--전년P12볼륨-->       
                            <!-- 당년도 P01 ~ P12 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P01'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol01   <!--금년P01볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P02'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol02   <!--금년P02볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P03'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol03   <!--금년P03볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P04'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol04   <!--금년P04볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P05'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol05   <!--금년P05볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P06'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol06   <!--금년P06볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P07'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol07   <!--금년P07볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P08'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol08   <!--금년P08볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P09'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol09   <!--금년P09볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P10'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol10   <!--금년P10볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P11'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol11   <!--금년P11볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P12'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol12   <!--금년P12볼륨 -->          
					  from	eslt_NTS_act T1	<!--월NTS실적|주소|ESLT-->
                inner join	ESLT_AREA_MT t4	<!-- 주소매핑조직정보|ESLT-->
                        on	t1.CITY = T4.CITY
                  	   AND	T1.SUBCITY1 = T4.SUBCITY1
                       AND	T1.SUBCITY2 = T4.SUBCITY2
                inner join	ESLT_TEAM_MT T5	<!-- 팀정보|ESLT-->
                        on	t4.LpbTeam = T5.Team
                	 where	t1.FY  BETWEEN  #Lfy#  AND #fy#
                   	   and  t1.Channel = 'ON'		<!--검색조건 입력시 조건삽입(채널은 무조건 ON )-->
                       and 	t1.COMPANY = 'DK'
                       and  t5.Channel = 'ON'       <!--검색조건 입력시 조건삽입(채널은 무조건 ON )-->
                        <isPropertyAvailable property="region">
							<isNotEmpty property="region">
				                 AND  T5.Region  =  #region#		<!-- 검색조건 입력시 조건삽입 -->
				            </isNotEmpty>
						</isPropertyAvailable>
                       <isPropertyAvailable property="team">
							<isNotEmpty property="team">
				                 AND  T5.TEAM  =  #team#			<!-- 검색조건 입력시 조건삽입 -->
				            </isNotEmpty>
						</isPropertyAvailable>
                  GROUP BY 	t1.MARKET
                 UNION ALL 
                 	SELECT	t2.ProductL3      AS DataLv1		<!--BEER, VODKA-->
							,'0'                AS DataLv2		<!--'Hedden Row'--> 
                            <!--전년도 P01 ~ P12 볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P01'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol01 <!--전년P01볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P02'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol02 <!--전년P02볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P03'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol03 <!--전년P03볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P04'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol04 <!--전년P04볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P05'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol05 <!--전년P05볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P06'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol06 <!--전년P06볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P07'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol07 <!--전년P07볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P08'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol08 <!--전년P08볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P09'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol09 <!--전년P09볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P10'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol10 <!--전년P10볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P11'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol11 <!--전년P11볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P12'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol12 <!--전년P12볼륨-->  
                            <!--당년도 P01 ~ p12볼륨-->          
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P01'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol01   <!--금년P01볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P02'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol02   <!--금년P02볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P03'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol03   <!--금년P03볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P04'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol04   <!--금년P04볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P05'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol05   <!--금년P05볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P06'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol06   <!--금년P06볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P07'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol07   <!--금년P07볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P08'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol08   <!--금년P08볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P09'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol09   <!--금년P09볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P10'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol10   <!--금년P10볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P11'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol11   <!--금년P11볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P12'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol12   <!--금년P12볼륨 -->          
                      from	eslt_SH_act T1		<!--월SH실적|도매장|ESLT-->
                inner join	eslt_product_mt t2	<!--품목속성정보|eslt-->
                        on	t1.ProductL7 = t2.ProductL7
                inner join	ESLT_CUSTOMER_MT t4 <!-- 거래처정보|도매장|ESLT-->
                        on	t1.CustomerCd = t4.CustomerCd
                inner join	ESLT_BRANCH_MT T5   <!-- 지점정보|도매상|ESLT-->
                        on 	t4.Branch = T5.Branch
                     where 	t1.FY  BETWEEN  #Lfy#  AND #fy#
                           	AND T2.ProductL2 = 'NON WHISKY'      
                           	AND T2.ProductL3 IN ('BEER', 'VODKA')
                           	and  T5.Channel = 'ON'						<!--검색조건 입력시 조건삽입(채널은 무조건 ON )-->
                           	<isPropertyAvailable property="region">
							<isNotEmpty property="region">
				                 AND  T5.Region  =  #region#			<!-- 검색조건 입력시 조건삽입 -->
				            </isNotEmpty>
						</isPropertyAvailable>
                       <isPropertyAvailable property="team">
							<isNotEmpty property="team">
				                 AND  T5.BRANCH  =  #team#				<!-- 검색조건 입력시 조건삽입 -->
				            </isNotEmpty>
						</isPropertyAvailable>
                  group by	t2.ProductL3          
                 UNION ALL
                   <!-- 10 Total Account Plan Volume 실적구하기 -->  
                    SELECT	t1.MARKET   AS DataLv1  
							,'10'       AS DataLv2  <!--'Total Account Plan Volume'--> 
							<!--전년도 P01 ~ P12 볼-->
							,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P01'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol01   <!--전년P01볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P02'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol02   <!--전년P02볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P03'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol03   <!--전년P03볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P04'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol04   <!--전년P04볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P05'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol05   <!--전년P05볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P06'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol06   <!--전년P06볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P07'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol07   <!--전년P07볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P08'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol08   <!--전년P08볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P09'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol09   <!--전년P09볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P10'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol10   <!--전년P10볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P11'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol11   <!--전년P11볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P12'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS p_notag_ac_Vol12   <!--전년P12볼륨-->     
							<!--당년도 P01 ~ P12 볼륨-->        
							,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P01'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol01   <!--금년P01볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P02'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol02   <!--금년P02볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P03'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol03   <!--금년P03볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P04'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol04   <!--금년P04볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P05'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol05   <!--금년P05볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P06'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol06   <!--금년P06볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P07'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol07   <!--금년P07볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P08'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol08   <!--금년P08볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P09'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol09   <!--금년P09볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P10'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol10   <!--금년P10볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P11'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol11   <!--금년P11볼륨-->
							,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P12'  THEN NVL(T1.VOLUME,0) END )      AS N_notag_ac_Vol12   <!--금년P12볼륨 -->             
                      FROM	(
								SELECT	T1.*
                                  from	eslt_noteg_act T1			<!--월NOTEG실적|주소|ESLT-->
                            inner join	ESLT_AREA_MT t4         	<!-- 주소매핑조직정보|ESLT -->
                                    on	t1.CITY        = T4.CITY
                                   AND 	T1.SUBCITY1    = T4.SUBCITY1
                                   AND 	T1.SUBCITY2    = T4.SUBCITY2
                            inner join	ESLT_TEAM_MT T5          	<!-- 팀정보|ESLT-->
                                    on	t4.LpbTeam     = T5.Team 	<!-- *** MARKET이 LOCAL인 경우는 LPB팀기준으로 조인--> 
                                 where	t1.FY  BETWEEN   #Lfy#  AND #fy#
                                   and	T1.MARKET      =  'LOCAL' 
                                   and  t5.Channel     = 'ON'		<!--검색조건 입력시 조건삽입(채널은 무조건 ON )-->
                                   <isPropertyAvailable property="region">
										<isNotEmpty property="region">
							                 AND  T5.Region  =  #region#			<!-- 검색조건 입력시 조건삽입 -->
							            </isNotEmpty>
									</isPropertyAvailable>
			                       <isPropertyAvailable property="team">
										<isNotEmpty property="team">
							                 AND  T5.team  =  #team#				<!-- 검색조건 입력시 조건삽입 -->
							            </isNotEmpty>
									</isPropertyAvailable>
                             UNION ALL
										SELECT	T1.*
                               			  from	eslt_noteg_act T1                 	<!--월NOTEG실적|주소|ESLT-->
                                	inner join	ESLT_AREA_MT t4         			<!-- 주소매핑조직정보|ESLT-->
                                  			on	t1.CITY  = T4.CITY
                                  		   AND	T1.SUBCITY1    = T4.SUBCITY1
                                  		   AND	T1.SUBCITY2    = T4.SUBCITY2
                                    inner join	ESLT_TEAM_MT T5          			<!-- 팀정보|ESLT-->
                                  			on	t4.gpbTeam     = T5.Team 			<!-- *** MARKET이 LOCAL 아닌 경우는 GPB팀기준으로 조인--> 
                                		 where	t1.FY  BETWEEN   #Lfy#  AND #fy#
                                   		   and	T1.MARKET      !=  'LOCAL' 
                                   		   and  t5.Channel     = 'ON'         		<!--검색조건 입력시 조건삽입(채널은 무조건 ON )-->
                                   		   <isPropertyAvailable property="region">
												<isNotEmpty property="region">
									                 AND  T5.Region  =  #region#	<!-- 검색조건 입력시 조건삽입 -->
									            </isNotEmpty>
											</isPropertyAvailable>
					                       <isPropertyAvailable property="team">
												<isNotEmpty property="team">
									                 AND  T5.team  =  #team#		<!-- 검색조건 입력시 조건삽입 -->
									            </isNotEmpty>
											</isPropertyAvailable>          
							 ) T1     
                      GROUP BY T1.MARKET
                     UNION ALL
                    	<!-- 30 Total Note G Spending(K KRW)-->
						SELECT	t1.MARKET   AS DataLv1  
                                ,'30' AS DataLv2  <!--'Total Account Plan Volume'--> 
                                <!--전년도 P01 ~ P12 금액-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P01'  THEN NVL(T1.AMOUNT/1000, 0) END )    AS p_notag_ac_Vol01 <!--전년P01볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P02'  THEN NVL(T1.AMOUNT/1000, 0) END )    AS p_notag_ac_Vol02 <!--전년P02볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P03'  THEN NVL(T1.AMOUNT/1000, 0) END )    AS p_notag_ac_Vol03 <!--전년P03볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P04'  THEN NVL(T1.AMOUNT/1000, 0) END )    AS p_notag_ac_Vol04 <!--전년P04볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P05'  THEN NVL(T1.AMOUNT/1000, 0) END )    AS p_notag_ac_Vol05 <!--전년P05볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P06'  THEN NVL(T1.AMOUNT/1000, 0) END )    AS p_notag_ac_Vol06 <!--전년P06볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P07'  THEN NVL(T1.AMOUNT/1000, 0) END )    AS p_notag_ac_Vol07 <!--전년P07볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P08'  THEN NVL(T1.AMOUNT/1000, 0) END )    AS p_notag_ac_Vol08 <!--전년P08볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P09'  THEN NVL(T1.AMOUNT/1000, 0) END )    AS p_notag_ac_Vol09 <!--전년P09볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P10'  THEN NVL(T1.AMOUNT/1000, 0) END )    AS p_notag_ac_Vol10 <!--전년P10볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P11'  THEN NVL(T1.AMOUNT/1000, 0) END )    AS p_notag_ac_Vol11 <!--전년P11볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #Lfy#||'P12'  THEN NVL(T1.AMOUNT/1000, 0) END )    AS p_notag_ac_Vol12 <!--전년P12볼륨 -->      
                                <!--당년도 P01 ~ P12 금액-->        
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P01'    THEN NVL(T1.AMOUNT/1000, 0) END )      AS N_notag_ac_Vol01   <!--금년P01볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P02'    THEN NVL(T1.AMOUNT/1000, 0) END )      AS N_notag_ac_Vol02   <!--금년P02볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P03'    THEN NVL(T1.AMOUNT/1000, 0) END )      AS N_notag_ac_Vol03   <!--금년P03볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P04'    THEN NVL(T1.AMOUNT/1000, 0) END )      AS N_notag_ac_Vol04   <!--금년P04볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P05'    THEN NVL(T1.AMOUNT/1000, 0) END )      AS N_notag_ac_Vol05   <!--금년P05볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P06'    THEN NVL(T1.AMOUNT/1000, 0) END )      AS N_notag_ac_Vol06   <!--금년P06볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P07'    THEN NVL(T1.AMOUNT/1000, 0) END )      AS N_notag_ac_Vol07   <!--금년P07볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P08'    THEN NVL(T1.AMOUNT/1000, 0) END )      AS N_notag_ac_Vol08   <!--금년P08볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P09'    THEN NVL(T1.AMOUNT/1000, 0) END )      AS N_notag_ac_Vol09   <!--금년P09볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P10'    THEN NVL(T1.AMOUNT/1000, 0) END )      AS N_notag_ac_Vol10   <!--금년P10볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P11'    THEN NVL(T1.AMOUNT/1000, 0) END )      AS N_notag_ac_Vol11   <!--금년P11볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P12'    THEN NVL(T1.AMOUNT/1000, 0) END )      AS N_notag_ac_Vol12   <!--금년P12볼륨-->               
                     FROM (
                              SELECT T1.*
                               from eslt_noteg_act T1                  	<!-- 월NOTEG실적|주소|ESLT-->
                                inner join ESLT_AREA_MT t4         		<!-- 주소매핑조직정보|ESLT-->
                                  on    t1.CITY            = T4.CITY
                                  AND T1.SUBCITY1    = T4.SUBCITY1
                                  AND T1.SUBCITY2    = T4.SUBCITY2
                                inner join ESLT_TEAM_MT T5          	<!-- 팀정보|ESLT-->
                                  on t4.LpbTeam         = T5.Team    	<!-- *** MARKET이 LOCAL인 경우는 LPB팀기준으로 조인--> 
                                where t1.FY  BETWEEN   #Lfy#  AND #fy#
                                   and T1.MARKET       =  'LOCAL' 
                                   and  t5.Channel        = 'ON'        <!--검색조건 입력시 조건삽입(채널은 무조건 ON )-->
                                   <isPropertyAvailable property="region">
										<isNotEmpty property="region">
							                 AND  T5.Region  =  #region#	<!-- 검색조건 입력시 조건삽입 -->
							            </isNotEmpty>
									</isPropertyAvailable>
			                       <isPropertyAvailable property="team">
										<isNotEmpty property="team">
							                 AND  T5.team  =  #team#		<!-- 검색조건 입력시 조건삽입 -->
							            </isNotEmpty>
									</isPropertyAvailable>
                               UNION ALL
                              SELECT T1.*
                               from eslt_noteg_act T1                  	<!-- 월NOTEG실적|주소|ESLT -->
                                inner join ESLT_AREA_MT t4         		<!-- 주소매핑조직정보|ESLT -->
                                  on    t1.CITY            = T4.CITY
                                  AND T1.SUBCITY1    = T4.SUBCITY1
                                  AND T1.SUBCITY2    = T4.SUBCITY2
                                inner join ESLT_TEAM_MT T5          	<!-- 팀정보|ESLT -->
                                  on t4.gpbTeam         = T5.Team    	<!-- *** MARKET이 LOCAL 아닌 경우는 GPB팀기준으로 조인  -->
                                where t1.FY  BETWEEN   #Lfy#  AND #fy#
                                   and T1.MARKET       !=  'LOCAL' 
                                   and  t5.Channel       =  'ON'		<!--검색조건 입력시 조건삽입(채널은 무조건 ON ) -->
                                   <isPropertyAvailable property="region">
										<isNotEmpty property="region">
							                 AND  T5.Region  =  #region#	<!-- 검색조건 입력시 조건삽입 -->
							            </isNotEmpty>
									</isPropertyAvailable>
			                       <isPropertyAvailable property="team">
										<isNotEmpty property="team">
							                 AND  T5.team  =  #team#		<!-- 검색조건 입력시 조건삽입 -->
							            </isNotEmpty>
									</isPropertyAvailable>
                     ) T1
                   GROUP BY T1.MARKET        
    ) T2
    ON     T1.DataLv1    = T2.DataLv1
    AND   T1.DataLv2    = T2.DataLv2
 LEFT OUTER JOIN
 (
      <!-- 3)   NOTE G  Forecast   및 outlook 데이타 구하기 쿼리(당년)  구하기  -->
         <!--0)  Total Dependency Rate 및 Total Note G Case Rate 를 구하기 위한 HIDDEND ROW ...  -->
        <!-- LOCAL, INT`L인 경우는 DK Depletion 데이타를  VODKA, BEER인 경우는 SHIPMENT  데이타를  가지고온다. -->

                SELECT  t1.MARKET   AS DataLv1  <!--LOCAL, INT`L-->
                            ,'0'    AS DataLv2  <!--'Hedden Row'  -->  
                            <!--당년도 P01 ~ P12 Forecast 볼륨     -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P01'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol01    <!--금년P01 Forecast 볼륨--> 
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P02'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol02    <!--금년P02 Forecast 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P03'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol03    <!--금년P03 Forecast 볼륨--> 
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P04'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol04    <!--금년P04 Forecast 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P05'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol05    <!--금년P05 Forecast 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P06'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol06    <!--금년P06 Forecast 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P07'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol07    <!--금년P07 Forecast 볼륨--> 
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P08'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol08    <!--금년P08 Forecast 볼륨--> 
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P09'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol09    <!--금년P09 Forecast 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P10'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol10    <!--금년P10 Forecast 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P11'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol11    <!--금년P11 Forecast 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P12'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol12    <!--금년P12 Forecast 볼륨 -->
                            <!--당년도 P01 ~ P12 outlook 볼륨-->     
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P01'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol01    <!--금년P01 outlook 볼륨--> 
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P02'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol02    <!--금년P02 outlook 볼륨--> 
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P03'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol03    <!--금년P03 outlook 볼륨--> 
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P04'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol04    <!--금년P04 outlook 볼륨--> 
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P05'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol05    <!--금년P05 outlook 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P06'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol06    <!--금년P06 outlook 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P07'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol07    <!--금년P07 outlook 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P08'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol08    <!--금년P08 outlook 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P09'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol09    <!--금년P09 outlook 볼륨--> 
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P10'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol10    <!--금년P10 outlook 볼륨--> 
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P11'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol11    <!--금년P11 outlook 볼륨--> 
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P12'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol12    <!--금년P12 outlook 볼륨--> 
                from ESLT_NTS_FC  T1            	<!-- 월NTS예측|팀|ESLT-->
                inner join ESLT_TEAM_MT T5    		<!-- 팀정보|ESLT-->
                  on  t1.TEAM            = T5.Team
                where t1.FY              =  #fy#
                   AND T1.CHANNEL     = 'ON'		<!--검색조건 입력시 조건삽입(채널은 무조건 ON )-->
                   AND T1.COMPANY   = 'DK'         
                   and  t5.Channel         = 'ON'	<!--검색조건 입력시 조건삽입(채널은 무조건 ON )-->
                   <isPropertyAvailable property="region">
						<isNotEmpty property="region">
			                 AND  T5.Region  =  #region#	<!-- 검색조건 입력시 조건삽입 -->
			            </isNotEmpty>
					</isPropertyAvailable>
                      <isPropertyAvailable property="team">
						<isNotEmpty property="team">
			                 AND  T5.team  =  #team#		<!-- 검색조건 입력시 조건삽입 -->
			            </isNotEmpty>
					</isPropertyAvailable>
                GROUP BY    t1.MARKET
                 UNION ALL 
                  SELECT   t1.EsltProduct      AS DataLv2	<!--BEER, VODKA-->
                              ,'0'             AS DataLv2	<!--'Hedden Row'-->    
                             <!--당년도 P01 ~ P12 Forecast 볼륨-->     
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P01'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol01   <!--금년P01 Forecast 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P02'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol02   <!--금년P02 Forecast 볼륨--> 
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P03'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol03   <!--금년P03 Forecast 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P04'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol04   <!--금년P04 Forecast 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P05'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol05   <!--금년P05 Forecast 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P06'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol06   <!--금년P06 Forecast 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P07'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol07   <!--금년P07 Forecast 볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P08'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol08   <!--금년P08 Forecast 볼륨--> 
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P09'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol09   <!--금년P09 Forecast 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P10'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol10   <!--금년P10 Forecast 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P11'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol11   <!--금년P11 Forecast 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P12'     THEN NVL(T1.ForVolume,0) END )      AS N_notag_for_Vol12   <!--금년P12 Forecast 볼륨 -->
                              <!-- 당년도 P01 ~ P12 outlook 볼륨     -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P01'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol01   <!--금년P01 outlook 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P02'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol02   <!--금년P02 outlook 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P03'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol03   <!--금년P03 outlook 볼륨--> 
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P04'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol04   <!--금년P04 outlook 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P05'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol05   <!--금년P05 outlook 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P06'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol06   <!--금년P06 outlook 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P07'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol07   <!--금년P07 outlook 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P08'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol08   <!--금년P08 outlook 볼륨--> 
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P09'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol09   <!--금년P09 outlook 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P10'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol10   <!--금년P10 outlook 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P11'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol11   <!--금년P11 outlook 볼륨 -->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P12'     THEN NVL(T1.OutVolume,0) END )      AS N_notag_out_Vol12   <!--금년P12 outlook 볼륨 -->
                from ESLT_SH_FC  T1	<!--월SH예측|지점|ESLT-->
                inner join ESLT_BRANCH_MT T5	<!-- 지점정보|도매상|ESLT-->
                  on t1.Branch = T5.Branch
                where t1.FY  =  #fy#
                   AND T1.ProductL2     =  'NON WHISKY'  
                   AND T1.EsltProduct IN ('BEER', 'VODKA')             
                   and  T5.Channel        = 'ON'         	<!--검색조건 입력시 조건삽입(채널은 무조건 ON )-->
                   <isPropertyAvailable property="region">
						<isNotEmpty property="region">
			                 AND  T5.Region  =  #region#	<!-- 검색조건 입력시 조건삽입 -->
			            </isNotEmpty>
					</isPropertyAvailable>
                      <isPropertyAvailable property="team">
						<isNotEmpty property="team">
			                 AND  T5.branch  =  #team#		<!-- 검색조건 입력시 조건삽입 -->
			            </isNotEmpty>
					</isPropertyAvailable>    
                group by t1.EsltProduct          
               
                UNION ALL 
                   <!-- 10 Total Account Plan Forecast , Outlook 구하기 --> 
                    SELECT   t1.MARKET   AS DataLv1  
                                 ,'10'   AS DataLv2  <!--'Total Account Plan Volume'--> 
                                <!--당년도 P01 ~ P12 Forecast 볼륨-->     
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P01'  THEN NVL(T1.ForVOLUME,0) END )    AS N_notag_for_Vol01   <!--당년P01볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P02'  THEN NVL(T1.ForVOLUME,0) END )    AS N_notag_for_Vol02   <!--당년P02볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P03'  THEN NVL(T1.ForVOLUME,0) END )    AS N_notag_for_Vol03   <!--당년P03볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P04'  THEN NVL(T1.ForVOLUME,0) END )    AS N_notag_for_Vol04   <!--당년P04볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P05'  THEN NVL(T1.ForVOLUME,0) END )    AS N_notag_for_Vol05   <!--당년P05볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P06'  THEN NVL(T1.ForVOLUME,0) END )    AS N_notag_for_Vol06   <!--당년P06볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P07'  THEN NVL(T1.ForVOLUME,0) END )    AS N_notag_for_Vol07   <!--당년P07볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P08'  THEN NVL(T1.ForVOLUME,0) END )    AS N_notag_for_Vol08   <!--당년P08볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P09'  THEN NVL(T1.ForVOLUME,0) END )    AS N_notag_for_Vol09   <!--당년P09볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P10'  THEN NVL(T1.ForVOLUME,0) END )    AS N_notag_for_Vol10   <!--당년P10볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P11'  THEN NVL(T1.ForVOLUME,0) END )    AS N_notag_for_Vol11   <!--당년P11볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P12'  THEN NVL(T1.ForVOLUME,0) END )    AS N_notag_for_Vol12   <!--당년P12볼륨-->       
                                 <!-- 당년도 P01 ~ P12 outlook 볼륨-->         
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P01'  THEN NVL(T1.OutVOLUME,0) END )      AS N_notag_out_Vol01   <!--금년P01볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P02'  THEN NVL(T1.OutVOLUME,0) END )      AS N_notag_out_Vol02   <!--금년P02볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P03'  THEN NVL(T1.OutVOLUME,0) END )      AS N_notag_out_Vol03   <!--금년P03볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P04'  THEN NVL(T1.OutVOLUME,0) END )      AS N_notag_out_Vol04   <!--금년P04볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P05'  THEN NVL(T1.OutVOLUME,0) END )      AS N_notag_out_Vol05   <!--금년P05볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P06'  THEN NVL(T1.OutVOLUME,0) END )      AS N_notag_out_Vol06   <!--금년P06볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P07'  THEN NVL(T1.OutVOLUME,0) END )      AS N_notag_out_Vol07   <!--금년P07볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P08'  THEN NVL(T1.OutVOLUME,0) END )      AS N_notag_out_Vol08   <!--금년P08볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P09'  THEN NVL(T1.OutVOLUME,0) END )      AS N_notag_out_Vol09   <!--금년P09볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P10'  THEN NVL(T1.OutVOLUME,0) END )      AS N_notag_out_Vol10   <!--금년P10볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P11'  THEN NVL(T1.OutVOLUME,0) END )      AS N_notag_out_Vol11   <!--금년P11볼륨-->
                                ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P12'  THEN NVL(T1.OutVOLUME,0) END )      AS N_notag_out_Vol12   <!--금년P12볼륨-->              
                     FROM (
                              SELECT T1.*
                               from eslt_noteg_fc T1                    	<!--월NOTEG예측|팀|ESLT-->
                                inner join ESLT_TEAM_MT T5					<!-- 팀정보|ESLT-->
                                  on t1.Team             = T5.Team    		<!-- *** MARKET이 LOCAL인 경우는 LPB팀기준으로 조인 -->
                                where t1.FY               = #fy#
                                   and T1.MARKET       =  'LOCAL' 
                                   and  t5.Channel        = 'ON'			<!--검색조건 입력시 조건삽입(채널은 무조건 ON )-->
                                   <isPropertyAvailable property="region">
										<isNotEmpty property="region">
							                 AND  T5.Region  =  #region#	<!-- 검색조건 입력시 조건삽입 -->
							            </isNotEmpty>
									</isPropertyAvailable>
						                    <isPropertyAvailable property="team">
										<isNotEmpty property="team">
							                 AND  T5.team  =  #team#		<!-- 검색조건 입력시 조건삽입 -->
							            </isNotEmpty>
									</isPropertyAvailable>
                               UNION ALL
                              SELECT T1.*
                               from eslt_noteg_fc T1                 		<!--월NOTEG예측|팀|ESLT-->
                                inner join ESLT_TEAM_MT T5          		<!-- 팀정보|ESLT-->
                                  on t1.Team              = T5.Team    		<!-- *** MARKET이 LOCAL 아닌 경우는 GPB팀기준으로 조인 -->
                                where t1.FY               =  #fy#
                                   and T1.MARKET      !=  'LOCAL' 
                                   and  t5.Channel        = 'ON'         	<!--검색조건 입력시 조건삽입(채널은 무조건 ON )-->
                                   <isPropertyAvailable property="region">
										<isNotEmpty property="region">
						                 AND  T5.Region  =  #region#		<!-- 검색조건 입력시 조건삽입 -->
							            </isNotEmpty>
									</isPropertyAvailable>
			                       <isPropertyAvailable property="team">
										<isNotEmpty property="team">
							                 AND  T5.team  =  #team#		<!-- 검색조건 입력시 조건삽입 -->
							            </isNotEmpty>
									</isPropertyAvailable>  
                       ) T1     
                   GROUP BY T1.MARKET
                   UNION ALL
                  <!-- 30 Total Note G Spending(K KRW)  Forecast , Outlook 구하기-->  
                  SELECT   t1.MARKET   AS DataLv1  
                             ,'30'              AS DataLv2  <!--' Total Note G Spending(K KRW) '--> 
                            <!--당년도 P01 ~ P12 Forecast 볼륨-->     
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P01'  THEN NVL(T1.ForAmount,0) END )    AS N_notag_for_Vol01   <!--금년P01볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P02'  THEN NVL(T1.ForAmount,0) END )    AS N_notag_for_Vol02   <!--금년P02볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P03'  THEN NVL(T1.ForAmount,0) END )    AS N_notag_for_Vol03   <!--금년P03볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P04'  THEN NVL(T1.ForAmount,0) END )    AS N_notag_for_Vol04   <!--금년P04볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P05'  THEN NVL(T1.ForAmount,0) END )    AS N_notag_for_Vol05   <!--금년P05볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P06'  THEN NVL(T1.ForAmount,0) END )    AS N_notag_for_Vol06   <!--금년P06볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P07'  THEN NVL(T1.ForAmount,0) END )    AS N_notag_for_Vol07   <!--금년P07볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P08'  THEN NVL(T1.ForAmount,0) END )    AS N_notag_for_Vol08   <!--금년P08볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P09'  THEN NVL(T1.ForAmount,0) END )    AS N_notag_for_Vol09   <!--금년P09볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P10'  THEN NVL(T1.ForAmount,0) END )    AS N_notag_for_Vol10   <!--금년P10볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P11'  THEN NVL(T1.ForAmount,0) END )    AS N_notag_for_Vol11   <!--금년P11볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P12'  THEN NVL(T1.ForAmount,0) END )    AS N_notag_for_Vol12   <!--금년P12볼륨-->       
                             <!-- 당년도 P01 ~ P12 outlook 볼륨-->         
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P01'  THEN NVL(T1.OutAmount,0) END )      AS N_notag_out_Vol01   <!--금년P01볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P02'  THEN NVL(T1.OutAmount,0) END )      AS N_notag_out_Vol02   <!--금년P02볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P03'  THEN NVL(T1.OutAmount,0) END )      AS N_notag_out_Vol03   <!--금년P03볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P04'  THEN NVL(T1.OutAmount,0) END )      AS N_notag_out_Vol04   <!--금년P04볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P05'  THEN NVL(T1.OutAmount,0) END )      AS N_notag_out_Vol05   <!--금년P05볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P06'  THEN NVL(T1.OutAmount,0) END )      AS N_notag_out_Vol06   <!--금년P06볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P07'  THEN NVL(T1.OutAmount,0) END )      AS N_notag_out_Vol07   <!--금년P07볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P08'  THEN NVL(T1.OutAmount,0) END )      AS N_notag_out_Vol08   <!--금년P08볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P09'  THEN NVL(T1.OutAmount,0) END )      AS N_notag_out_Vol09   <!--금년P09볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P10'  THEN NVL(T1.OutAmount,0) END )      AS N_notag_out_Vol10   <!--금년P10볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P11'  THEN NVL(T1.OutAmount,0) END )      AS N_notag_out_Vol11   <!--금년P11볼륨-->
                            ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P12'  THEN NVL(T1.OutAmount,0) END )      AS N_notag_out_Vol12   <!--금년P12볼륨-->              
                 FROM (
                          SELECT T1.*
                           from eslt_noteg_fc T1                    	<!--월NOTEG예측|팀|ESLT-->
                            inner join ESLT_TEAM_MT T5          		<!-- 팀정보|ESLT-->
                              on t1.Team             = T5.Team    		<!-- *** MARKET이 LOCAL인 경우는 LPB팀기준으로 조인 -->
                            where t1.FY               = #fy#
                               and T1.MARKET       =  'LOCAL' 
                               and  t5.Channel        = 'ON'         	<!--검색조건 입력시 조건삽입(채널은 무조건 ON )-->
                               <isPropertyAvailable property="region">
									<isNotEmpty property="region">
						                 AND  T5.Region  =  #region#	<!-- 검색조건 입력시 조건삽입 -->
						            </isNotEmpty>
								</isPropertyAvailable>
		                       <isPropertyAvailable property="team">
									<isNotEmpty property="team">
						                 AND  T5.team  =  #team#		<!-- 검색조건 입력시 조건삽입 -->
						            </isNotEmpty>
								</isPropertyAvailable>
                           UNION ALL
                          SELECT T1.*
                           from eslt_noteg_fc T1                 		<!--월NOTEG예측|팀|ESLT -->
                            inner join ESLT_TEAM_MT T5         		 	<!-- 팀정보|ESLT -->
                              on t1.Team              = T5.Team    		<!-- *** MARKET이 LOCAL 아닌 경우는 GPB팀기준으로 조인  -->
                            where t1.FY               =  #fy#
                               and T1.MARKET      !=  'LOCAL' 
                               and  t5.Channel        = 'ON'         	<!--검색조건 입력시 조건삽입(채널은 무조건 ON ) -->
                               <isPropertyAvailable property="region">
									<isNotEmpty property="region">
						                 AND  T5.Region  =  #region#	<!-- 검색조건 입력시 조건삽입 -->
						            </isNotEmpty>
								</isPropertyAvailable>
		                       <isPropertyAvailable property="team">
									<isNotEmpty property="team">
						                 AND  T5.team  =  #team#		<!-- 검색조건 입력시 조건삽입 -->
						            </isNotEmpty>
								</isPropertyAvailable>       
                   ) T1     
               GROUP BY T1.MARKET   
    ) T3
     ON    T1.DataLv1    = T3.DataLv1
    AND   T1.DataLv2     = T3.DataLv2
 LEFT OUTER JOIN
 (   
     	<!-- 4)   NOTE G Target 데이타 구하기 쿼리(당년)  구하기--> 
        <!--0)  Total Dependency Rate 및 Total Note G Case Rate 를 구하기 위한 HIDDEND ROW ... --> 
        <!-- LOCAL, INT`L인 경우는 DK Depletion 데이타를  VODKA, BEER인 경우는 SHIPMENT  데이타를  가지고온다.--> 
       
           SELECT 
                      t1.MARKET    AS DataLv1  			<!--LOCAL, INT`L--> 
                      ,'0'                AS DataLv2  	<!--'Hedden Row'-->    
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P01'     THEN NVL(T1.Volume,0) ELSE 0 END )           AS N_notag_tg_Vol01   <!--금년P01 Target 볼륨-->  
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P02'     THEN NVL(T1.Volume,0) ELSE 0 END )           AS N_notag_tg_Vol02   <!--금년P02 Target 볼륨-->  
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P03'     THEN NVL(T1.Volume,0) ELSE 0 END )           AS N_notag_tg_Vol03   <!--금년P03 Target 볼륨-->  
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P04'     THEN NVL(T1.Volume,0) ELSE 0 END )           AS N_notag_tg_Vol04   <!--금년P04 Target 볼륨 --> 
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P05'     THEN NVL(T1.Volume,0) ELSE 0 END )           AS N_notag_tg_Vol05   <!--금년P05 Target 볼륨 --> 
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P06'     THEN NVL(T1.Volume,0) ELSE 0 END )           AS N_notag_tg_Vol06   <!--금년P06 Target 볼륨 --> 
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P07'     THEN NVL(T1.Volume,0) ELSE 0 END )           AS N_notag_tg_Vol07   <!--금년P07 Target 볼륨-->  
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P08'     THEN NVL(T1.Volume,0) ELSE 0 END )           AS N_notag_tg_Vol08   <!--금년P08 Target 볼륨-->  
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P09'     THEN NVL(T1.Volume,0) ELSE 0 END )           AS N_notag_tg_Vol09   <!--금년P09 Target 볼륨 --> 
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P10'     THEN NVL(T1.Volume,0) ELSE 0 END )           AS N_notag_tg_Vol10   <!--금년P10 Target 볼륨-->  
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P11'     THEN NVL(T1.Volume,0) ELSE 0 END )           AS N_notag_tg_Vol11   <!--금년P11 Target 볼륨-->  
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P12'     THEN NVL(T1.Volume,0) ELSE 0 END )           AS N_notag_tg_Vol12   <!--금년P12 Target 볼륨-->  
            from ESLT_NTS_TG  T1			<!-- 월NTS목표|팀|ESLT-->
            inner join ESLT_TEAM_MT T5		<!-- 팀정보|ESLT-->
              on    T1.TEAM       = T5.Team
            where T1.FY           =  #fy#
               AND T1.Channel     = 'ON'    <!--검색조건 입력시 조건삽입(채널은 무조건 ON )-->
               AND T1.COMPANY     = 'DK'         
               and  T5.Channel    = 'ON'    <!--검색조건 입력시 조건삽입(채널은 무조건 ON )-->
               <isPropertyAvailable property="region">
					<isNotEmpty property="region">
		                 AND  T5.Region  =  #region#		<!-- 검색조건 입력시 조건삽입 -->
		            </isNotEmpty>
				</isPropertyAvailable>
                     <isPropertyAvailable property="team">
					<isNotEmpty property="team">
		                 AND  T1.team  =  #team#			<!-- 검색조건 입력시 조건삽입 -->
		            </isNotEmpty>
				</isPropertyAvailable>
           GROUP BY T1.MARKET
           UNION ALL 
            SELECT  t2.EsltProduct      AS DataLv1    <!--BEER, VODKA-->
                          ,'0'          AS DataLv2    <!--'Hedden Row' -->   
                         <!--당년도 P01 ~ P12 Target 볼륨 -->    
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P01'     THEN NVL(T1.Volume,0) ELSE 0 END )      AS N_sh_tg_Vol01   <!--금년P01 Target 볼륨 -->
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P02'     THEN NVL(T1.Volume,0) ELSE 0 END )      AS N_sh_tg_Vol02   <!--금년P02 Target 볼륨 --> 
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P03'     THEN NVL(T1.Volume,0) ELSE 0 END )      AS N_sh_tg_Vol03   <!--금년P03 Target 볼륨  -->
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P04'     THEN NVL(T1.Volume,0) ELSE 0 END )      AS N_sh_tg_Vol04   <!--금년P04 Target 볼륨  -->
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P05'     THEN NVL(T1.Volume,0) ELSE 0 END )      AS N_sh_tg_Vol05   <!--금년P05 Target 볼륨  -->
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P06'     THEN NVL(T1.Volume,0) ELSE 0 END )      AS N_sh_tg_Vol06   <!--금년P06 Target 볼륨  -->
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P07'     THEN NVL(T1.Volume,0) ELSE 0 END )      AS N_sh_tg_Vol07   <!--금년P07 Target 볼륨  -->
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P08'     THEN NVL(T1.Volume,0) ELSE 0 END )      AS N_sh_tg_Vol08   <!--금년P08 Target 볼륨  -->
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P09'     THEN NVL(T1.Volume,0) ELSE 0 END )      AS N_sh_tg_Vol09   <!--금년P09 Target 볼륨 --> 
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P10'     THEN NVL(T1.Volume,0) ELSE 0 END )      AS N_sh_tg_Vol10   <!--금년P10 Target 볼륨 --> 
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P11'     THEN NVL(T1.Volume,0) ELSE 0 END )      AS N_sh_tg_Vol11   <!--금년P11 Target 볼륨 --> 
                        ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P12'     THEN NVL(T1.Volume,0) ELSE 0 END )      AS N_sh_tg_Vol12   <!--금년P12 Target 볼륨  -->
            from ESLT_SH_TG  T1 				<!--월SH목표|지점|ESLT-->
                inner join eslt_product_mt t2	<!--품목속성정보|eslt-->
                  on t1.ProductL7 = t2.ProductL7
            inner join ESLT_BRANCH_MT T5    	<!-- 지점정보|도매상|ESLT-->
              on t1.Branch = T5.Branch
            where t1.FY  =  #fy#
               and  t2.ProductL2     =  'NON WHISKY'  
               AND T2.EsltProduct IN ('BEER', 'VODKA')      
               and  t5.Channel        = 'ON'    <!--검색조건 입력시 조건삽입(채널은 무조건 ON )-->
               <isPropertyAvailable property="region">
					<isNotEmpty property="region">
		                 AND  T5.Region  =  #region#		<!-- 검색조건 입력시 조건삽입 -->
		            </isNotEmpty>
				</isPropertyAvailable>
                     <isPropertyAvailable property="team">
					<isNotEmpty property="team">
		                 AND  T5.branch  =  #team#			<!-- 검색조건 입력시 조건삽입 -->
		            </isNotEmpty>
				</isPropertyAvailable>
          group by t2.EsltProduct            
          UNION ALL 
          <!-- 10 Total Account Plan Target 구하기-->  
          SELECT   t1.MARKET   AS DataLv1  
                   ,'10'       AS DataLv2	<!--'Total Account Plan Volume' -->
                   <!--당년도 P01 ~ P12 Target 볼륨     -->
                   ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P01'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS N_notag_tg_Vol01   <!--당년P01볼륨-->
                   ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P02'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS N_notag_tg_Vol02   <!--당년P02볼륨-->
                   ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P03'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS N_notag_tg_Vol03   <!--당년P03볼륨-->
                   ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P04'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS N_notag_tg_Vol04   <!--당년P04볼륨-->
                   ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P05'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS N_notag_tg_Vol05   <!--당년P05볼륨-->
                   ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P06'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS N_notag_tg_Vol06   <!--당년P06볼륨-->
                   ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P07'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS N_notag_tg_Vol07   <!--당년P07볼륨-->
                   ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P08'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS N_notag_tg_Vol08   <!--당년P08볼륨-->
                   ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P09'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS N_notag_tg_Vol09   <!--당년P09볼륨-->
                   ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P10'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS N_notag_tg_Vol10   <!--당년P10볼륨-->
                   ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P11'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS N_notag_tg_Vol11   <!--당년P11볼륨-->
                   ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P12'  THEN NVL(T1.VOLUME,0) ELSE 0 END )    AS N_notag_tg_Vol12   <!--당년P12볼륨  -->              
             FROM (
                      SELECT T1.*
                       from ESLT_NOTEG_TG T1                		<!--월NOTEG목표|팀|ESLT-->
                        inner join ESLT_TEAM_MT T5          		<!-- 팀정보|ESLT-->
                          on t1.Team             = T5.Team      	<!-- *** MARKET이 LOCAL인 경우는 LPB팀기준으로 조인 -->
                        where t1.FY               = #fy#
                           and T1.MARKET       =  'LOCAL' 
                           and  t5.Channel        = 'ON'         	<!--검색조건 입력시 조건삽입(채널은 무조건 ON )-->
                           <isPropertyAvailable property="region">
								<isNotEmpty property="region">
					                 AND  T5.Region  =  #region#	<!-- 검색조건 입력시 조건삽입 -->
					            </isNotEmpty>
							</isPropertyAvailable>
	                       <isPropertyAvailable property="team">
								<isNotEmpty property="team">
					                 AND  T5.team  =  #team#		<!-- 검색조건 입력시 조건삽입 -->
					            </isNotEmpty>
							</isPropertyAvailable>
                       UNION ALL
                      SELECT T1.*
                       from ESLT_NOTEG_TG T1                 		<!--월NOTEG목표|팀|ESLT-->
                        inner join ESLT_TEAM_MT T5          		<!-- 팀정보|ESLT-->
                          on t1.Team              = T5.Team    		<!-- *** MARKET이 LOCAL 아닌 경우는 GPB팀기준으로 조인--> 
                        where t1.FY               =  #fy#
                           and T1.MARKET      !=  'LOCAL' 
                           and  t5.Channel        = 'ON'         	<!--검색조건 입력시 조건삽입(채널은 무조건 ON )-->
                           <isPropertyAvailable property="region">
								<isNotEmpty property="region">
					                 AND  T5.Region  =  #region#	<!-- 검색조건 입력시 조건삽입 -->
					            </isNotEmpty>
							</isPropertyAvailable>
	                       <isPropertyAvailable property="team">
								<isNotEmpty property="team">
					                 AND  T5.team  =  #team#		<!-- 검색조건 입력시 조건삽입 -->
					            </isNotEmpty>
							</isPropertyAvailable>        
               ) T1     
           GROUP BY T1.MARKET
           UNION ALL
            <!-- 30 Total Note G Spending(K KRW)  Target 구하기  -->
            SELECT   t1.MARKET   AS DataLv1  
                     ,'30'   AS DataLv2  							<!--'30 Total Note G Spending(K KRW)'-->      
                     <!-- 당년도 P01 ~ P12 outlook 볼륨       -->  
                     ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P01'  THEN NVL(T1.Amount,0) ELSE 0 END )      AS N_notag_tg_Vol01   <!--금년P01볼륨-->
                     ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P02'  THEN NVL(T1.Amount,0) ELSE 0 END )      AS N_notag_tg_Vol02   <!--금년P02볼륨-->
                     ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P03'  THEN NVL(T1.Amount,0) ELSE 0 END )      AS N_notag_tg_Vol03   <!--금년P03볼륨-->
                     ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P04'  THEN NVL(T1.Amount,0) ELSE 0 END )      AS N_notag_tg_Vol04   <!--금년P04볼륨-->
                     ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P05'  THEN NVL(T1.Amount,0) ELSE 0 END )      AS N_notag_tg_Vol05   <!--금년P05볼륨-->
                     ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P06'  THEN NVL(T1.Amount,0) ELSE 0 END )      AS N_notag_tg_Vol06   <!--금년P06볼륨-->
                     ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P07'  THEN NVL(T1.Amount,0) ELSE 0 END )      AS N_notag_tg_Vol07   <!--금년P07볼륨-->
                     ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P08'  THEN NVL(T1.Amount,0) ELSE 0 END )      AS N_notag_tg_Vol08   <!--금년P08볼륨-->
                     ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P09'  THEN NVL(T1.Amount,0) ELSE 0 END )      AS N_notag_tg_Vol09   <!--금년P09볼륨-->
                     ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P10'  THEN NVL(T1.Amount,0) ELSE 0 END )      AS N_notag_tg_Vol10   <!--금년P10볼륨-->
                     ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P11'  THEN NVL(T1.Amount,0) ELSE 0 END )      AS N_notag_tg_Vol11   <!--금년P11볼륨-->
                     ,SUM( CASE WHEN T1.FY||T1.Period = #fy#||'P12'  THEN NVL(T1.Amount,0) ELSE 0 END )      AS N_notag_tg_Vol12   <!--금년P12볼륨-->                
             FROM (
                      SELECT T1.*
                       from ESLT_NOTEG_TG       T1					<!--월NOTEG목표|팀|ESLT-->
                        inner join ESLT_TEAM_MT T5          		<!-- 팀정보|ESLT-->
                          on t1.Team             = T5.Team     		<!-- *** MARKET이 LOCAL인 경우는 LPB팀기준으로 조인 -->
                        where t1.FY               = #fy#
                           and T1.MARKET       =  'LOCAL' 
                           and  t5.Channel        = 'ON'			<!--검색조건 입력시 조건삽입(채널은 무조건 ON )-->
                           <isPropertyAvailable property="region">
								<isNotEmpty property="region">
					                 AND  T5.Region  =  #region#	<!-- 검색조건 입력시 조건삽입 -->
					            </isNotEmpty>
							</isPropertyAvailable>
	                       <isPropertyAvailable property="team">
								<isNotEmpty property="team">
					                 AND  T5.team  =  #team#		<!-- 검색조건 입력시 조건삽입 -->
					            </isNotEmpty>
							</isPropertyAvailable>
                       UNION ALL
                      SELECT T1.*
                       from ESLT_NOTEG_TG   T1                      <!--월NOTEG목표|팀|ESLT-->
                        inner join ESLT_TEAM_MT T5               	<!-- 팀정보|ESLT-->
                          on t1.Team              = T5.Team    		<!-- *** MARKET이 LOCAL 아닌 경우는 GPB팀기준으로 조인--> 
                        where t1.FY               =  #fy#
                           and T1.MARKET      !=  'LOCAL' 
                           and  t5.Channel       =  'ON'         	<!--검색조건 입력시 조건삽입(채널은 무조건 ON )-->
                           <isPropertyAvailable property="region">
							<isNotEmpty property="region">
				                 AND  T5.Region  =  #region#		<!-- 검색조건 입력시 조건삽입 -->
				            </isNotEmpty>
						</isPropertyAvailable>
                       <isPropertyAvailable property="team">
							<isNotEmpty property="team">
				                 AND  T5.team  =  #team#			<!-- 검색조건 입력시 조건삽입 -->
				            </isNotEmpty>
						</isPropertyAvailable>        
               ) T1     
           GROUP BY T1.MARKET   
 ) T4
  ON     T1.DataLv1    = T4.DataLv1
 AND    T1.DataLv2    = T4.DataLv2 
 
 ORDER BY T1.SortNo, T1.DataLv2 ASC   
    </select>
    
    <!-- 조건: 팀 조회 -->
    <select id="ANL0300209S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        SELECT t1.branch AS "branchCD"    
               ,t1.branch  AS "branchNm"   
          FROM ESLT_BRANCH_MT  t1
         WHERE t1. UseYn   = 'Y'
			<isPropertyAvailable property="region">
				<isNotEmpty prepend="and" property="region">
					t1. Region  = #region#
				</isNotEmpty>
			</isPropertyAvailable>
      ORDER BY t1. dispSeq
    </select>
    
    <!-- 조건: empID에 따른 채널 및 권역정보,지점,팀 값을 가지고 온다. -->
    <select id="ANL0300210S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        SELECT t1.channel  as "channel"
             , t1.region as "region"
             , case when t1.empId1 =  #empID# then '' else t1.branch end as "branch"
             , case when t1.empId1 =  #empID# then 'Y' else 'N' end as "emp1YN"
          FROM ESLT_BRANCH_MT t1
         WHERE 1=1
			<isPropertyAvailable property="empID">
				<isNotEmpty prepend="and" property="empID">
					( t1.empId  = #empID#   OR
                 	t1.empId1 = #empID# )
				</isNotEmpty>
			</isPropertyAvailable>	
    </select>
    
</sqlMap>
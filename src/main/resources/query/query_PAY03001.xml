<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="PAY03001">
	
	<!-- 검증 리스트 조회 -->
	<select id="PAY0300101S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			t2.*
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','PROGRAMCD',programCD,null) as "programCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ACTIVITYCD',activityCD,null) as "activityCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','RAGESPHERECD',rageSphereCD,null) as "rageSphereCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','OFFICECD',officeCD,null) as "officeCDName"
			, (select empNm from GEMP01MT where empID=t2.empID) as "empNm"
			, venueCD as "venueCD"
			, venueNm as "venueNm"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VENUEGRADCD',venueGradCD,null) as "venueGradCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SEGMENTCD',segmentCD,null) as "segmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBSEGMENTCD',subSegmentCD,null) as "subSegmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD1',addrTpCD1,null) as "addrTpCD1Name"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD2',addrTpCD2,null) as "addrTpCD2Name"
			, tpayAmt as "tpayAmt"
			, nvl(taxExclAmt,0) as "taxExclAmt"
			, resultTQty as "resultTQty"
			, avgUnitAmt as "avgUnitAmt"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','RESULTTPCD',resultTpCD,null) as "resultTpCDName"
			, targetRate as "targetRate"
			, payRate as "payRate"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','EXCPAYTPCD',excPayTpCD,null) as "excPayTpCDName"
			, gsvRate as "gsvRate"
			, commt as "commt"
			, verifyErrCommt as "verifyErrCommt"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VERIFYSTATECD',verifyStateCD,null) as "verifyStateCDName"
			, verifyStateCD as "verifyStateCD"
			, guidPayRate as "guidPayRate"
			, excPayTpCD as "excPayTpCD"
			, activityCD as "activityCD"
			, supportID as "supportID"
		from (
			select
				t.*
				, rank() over(
					order by
						dkmdTpCD
						, rageSphereCD
						, officeCD
						, teamCD
						, empID
						, resultTpCD
						, venueCD
				) as "rowNum"
				, floor((rank() over(
					order by
						dkmdTpCD
						, rageSphereCD
						, officeCD
						, teamCD
						, empID
						, resultTpCD
						, venueCD
				)-1)/#displayNum#+1) as pageNum
			from (
				select
					t3.*
				from (
					select
						programCD
						, activityCD
						, rageSphereCD
						, officeCD
						, teamCD
						, empID
						, a.venueCD
						, venueNm
						, venueGradCD
						, segmentCD
						, subSegmentCD
						, addrTpCD1
						, addrTpCD2
						, (case when activityCD='50'
    						then (
    							NVL(
    							(select c.tpayAmt
            					from gltc01mt c
            					where 
            					c.contractDateTo = #eventYM#
            					and c.venueCD = a.venueCD),0)
        						) + a.tpayAmt
    							else a.tpayAmt end
    					) as tpayAmt
						,(select sum(nvl(payAmt,0)) as taxExclAmt from GRLT01DT where eventYm=a.eventYM and venueCD=a.venueCD) as taxExclAmt
						, resultTQty
						, (
							case when resultTQty=0 then 0
							else round(tpayAmt / resultTQty)
							end
						) as avgUnitAmt
						, resultTpCD
						, targetRate
						, payRate
						, guidPayRate
						, excPayTpCD
						, gsvRate
						, commt
						, verifyErrCommt
						, verifyStateCD
						, (select supportID from GPLN01MT where eventYM=a.eventYM and venueCD=a.venueCD) as supportID
						, a.dkmdTpCD
						, (
							select max(apprDate)
							from GRLT07MT
							where
								eventYM = a.eventYM
								and venueCD = a.venueCD
								and diffNo = a.diffNo
						) as lastApprDate
					from GRLT01MT a
					inner join GVEN01MT b
						on a.venueCD = b.venueCD
					where
						eventYM = #eventYM#
						and diffNo = #diffNo#
						and programCD = 'G1'
						and verifyStateCD in (
							select comCode
							from F_CODE
							where
								codediv='VERIFYSTATECD'
								and activeFlg = 'U'
								and useYN = 'Y'
								and attrib03 = 'VELEX'
						)
						<isPropertyAvailable property="dkmdTpCD">
							<isNotEmpty prepend="and" property="dkmdTpCD">
								a.dkmdTpCD = #dkmdTpCD#
							</isNotEmpty>
						</isPropertyAvailable>
						<isPropertyAvailable property="activityCD">
							<isNotEmpty prepend="and" property="activityCD">
								activityCD = #activityCD#
							</isNotEmpty>
						</isPropertyAvailable>
						<isPropertyAvailable property="rageSphereCD">
							<isNotEmpty prepend="and" property="rageSphereCD">
								rageSphereCD = #rageSphereCD#
							</isNotEmpty>
						</isPropertyAvailable>
						<isPropertyAvailable property="officeCD">
							<isNotEmpty prepend="and" property="officeCD">
								officeCD = #officeCD#
							</isNotEmpty>
						</isPropertyAvailable>
						<isPropertyAvailable property="resultTpCD">
							<isNotEmpty prepend="and" property="resultTpCD">
								resultTpCD = #resultTpCD#
							</isNotEmpty>
						</isPropertyAvailable>
						<isPropertyAvailable property="verifyStateCD">
							<isNotEmpty prepend="and" property="verifyStateCD">
								verifyStateCD = #verifyStateCD#
							</isNotEmpty>
						</isPropertyAvailable>
				) t3
				where 1=1
					<isNotEmpty property="lastApprDateStartDate">
						<isNotEmpty property="lastApprDateEndDate">
							and to_char(lastApprDate,'YYYYMMDDHH24MISS') between concat(#lastApprDateStartDate#, '000000') and  concat(#lastApprDateEndDate#, '180000')
						</isNotEmpty>
					</isNotEmpty>
			) t
		) t2
		where 1=1
			<isPropertyAvailable property="pageNum">
				<isNotEmpty prepend="and" property="pageNum">
					pageNum = #pageNum#
				</isNotEmpty>
			</isPropertyAvailable>
	</select>
	
	<select id="PAY0300104S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			count(*) as "totalCount"
		from (
			select
				t3.*
			from (
				select
					programCD
					, activityCD
					, rageSphereCD
					, officeCD
					, teamCD
					, empID
					, a.venueCD
					, venueNm
					, venueGradCD
					, segmentCD
					, subSegmentCD
					, addrTpCD1
					, addrTpCD2
					, tpayAmt
					, resultTQty
					, (
						case when resultTQty=0 then 0
						else round(tpayAmt / resultTQty)
						end
					) as avgUnitAmt
					, resultTpCD
					, targetRate
					, payRate
					, guidPayRate
					, excPayTpCD
					, gsvRate
					, commt
					, verifyErrCommt
					, verifyStateCD
					, (select supportID from GPLN01MT where eventYM=a.eventYM and venueCD=a.venueCD) as supportID
					, a.dkmdTpCD
					, (
						select max(apprDate)
						from GRLT07MT
						where
							eventYM = a.eventYM
							and venueCD = a.venueCD
							and diffNo = a.diffNo
					) as lastApprDate
				from GRLT01MT a
				inner join GVEN01MT b
					on a.venueCD = b.venueCD
				where
					eventYM = #eventYM#
					and diffNo = #diffNo#
					and programCD = 'G1'
					and verifyStateCD in (
						select comCode
						from F_CODE
						where
							codediv='VERIFYSTATECD'
							and activeFlg = 'U'
							and useYN = 'Y'
							and attrib03 = 'VELEX'
					)
					<isPropertyAvailable property="dkmdTpCD">
						<isNotEmpty prepend="and" property="dkmdTpCD">
							a.dkmdTpCD = #dkmdTpCD#
						</isNotEmpty>
					</isPropertyAvailable>
					<isPropertyAvailable property="activityCD">
						<isNotEmpty prepend="and" property="activityCD">
							activityCD = #activityCD#
						</isNotEmpty>
					</isPropertyAvailable>
					<isPropertyAvailable property="rageSphereCD">
						<isNotEmpty prepend="and" property="rageSphereCD">
							rageSphereCD = #rageSphereCD#
						</isNotEmpty>
					</isPropertyAvailable>
					<isPropertyAvailable property="officeCD">
						<isNotEmpty prepend="and" property="officeCD">
							officeCD = #officeCD#
						</isNotEmpty>
					</isPropertyAvailable>
					<isPropertyAvailable property="resultTpCD">
						<isNotEmpty prepend="and" property="resultTpCD">
							resultTpCD = #resultTpCD#
						</isNotEmpty>
					</isPropertyAvailable>
					<isPropertyAvailable property="verifyStateCD">
						<isNotEmpty prepend="and" property="verifyStateCD">
							verifyStateCD = #verifyStateCD#
						</isNotEmpty>
					</isPropertyAvailable>
			) t3
			where 1=1
				<isNotEmpty property="lastApprDateStartDate">
					<isNotEmpty property="lastApprDateEndDate">
						and to_char(lastApprDate,'YYYYMMDDHH24MISS') between concat(#lastApprDateStartDate#, '000000') and  concat(#lastApprDateEndDate#, '180000')
					</isNotEmpty>
				</isNotEmpty>
		) t
	</select>
	
	<!-- 검증완료시 메일대상자(자신제외, apprTpID가 plan/result승인라인과 검증라인 합집합)
	2014.08.04. taejoon.jang, VALEX담당자는 EMPID가 없어 자신제외 쿼리 없음
	-->
	<select id="PAY0300102S" parameterClass="com.kia.rlt.model.GRLT01MT" resultClass="java.util.LinkedHashMap">
		select
			empID as "empID"
			, max(empNm) as "empNm"
			, max(emailAddr) as "emailAddr"
		from (
			select
				b.empID
				, empNm
				, emailAddr
			from GRLT01MT a
			inner join GRLT07MT b
				on a.eventYM = b.eventYM
				and a.venueCD = b.venueCD
				and a.diffNo = b.diffNo
			inner join GEMP01MT c
				on b.empID = c.empID
			where
				a.eventYM = #eventYM#
				and a.venueCD in
				<iterate property="venueCDs" open="(" close=")" conjunction=",">
					#venueCDs[]#
				</iterate>
				and a.diffNo = #diffNo#
				and b.apprTpID in (
					#apprTpID#, #apprTpID_bef#
				)
				<!--2014.08.04. taejoon.jang
 				and b.empID != #empID# -->
		)
		group by empID
	</select>
	
	<!-- 검증완료시 검증상태 갱신 -->
	<update id="PAY0300101U" parameterClass="com.kia.rlt.model.GRLT01MT">
		update GRLT01MT
		set
			verifyStateCD = #verifyStateCD#
			, verifyErrCommt = #verifyErrCommt#
			, payStateCD = #payStateCD#
			, chgID = #userID#
			, chgDate = sysdate
		where
			eventYM = #eventYM#
			and venueCD = #venueCD#
			and diffNo = #diffNo#
	</update>
	
	<!-- 검증완료시 선지원차감내역 갱신 -->
	<update id="PAY0300102U" parameterClass="com.kia.rlt.model.GRLT01MT">
		update GSUP01MT
		set
			subtractAmt = nvl(subtractAmt,0) + #tpayAmt#
			, chgID = #userID#
			, chgDate = sysdate
		where
			supportID = #supportID#
	</update>
	
	<!-- 검증 엑셀 조회 -->
	<select id="PAY0300103S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			getLangDesc(#companyID#,#languageCD#,'F_CODE','PROGRAMCD',programCD,null) as "programCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ACTIVITYCD',activityCD,null) as "activityCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','RAGESPHERECD',rageSphereCD,null) as "rageSphereCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','OFFICECD',officeCD,null) as "officeCDName"
			, (select empNm from GEMP01MT where empID=t.empID) as "empNm"
			, venueCD as "venueCD"
			, venueNm as "venueNm"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VENUEGRADCD',venueGradCD,null) as "venueGradCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SEGMENTCD',segmentCD,null) as "segmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBSEGMENTCD',subSegmentCD,null) as "subSegmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD1',addrTpCD1,null) as "addrTpCD1Name"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD2',addrTpCD2,null) as "addrTpCD2Name"
			, tpayAmt as "tpayAmt"
			, nvl(taxExclAmt,0) as "taxExclAmt"
			, resultTQty as "resultTQty"
			, avgUnitAmt as "avgUnitAmt"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','RESULTTPCD',resultTpCD,null) as "resultTpCDName"
			, targetRate as "targetRate"
			, payRate as "payRate"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','EXCPAYTPCD',excPayTpCD,null) as "excPayTpCDName"
			, gsvRate as "gsvRate"
			, commt as "commt"
			, verifyErrCommt as "verifyErrCommt"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VERIFYSTATECD',verifyStateCD,null) as "verifyStateCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','KINDTPCD5',kindTpCD5,null) as "kindTpCD5Name"
			, prdNm as "prdNm"
			, factoryPrice as "factoryPrice"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','QTYUNITCD',qtyUnitCD,null) as "qtyUnitCDName"
			, planQty as "planQty"
			, inputQty as "inputQty"
			, inputAmt as "inputAmt"
			, resultQty as "resultQty"
			, resultUnitAmt as "resultUnitAmt"
			, payAmt as "payAmt"
		from (
			select
				t3.*
			from (
				select
					programCD
					, activityCD
					, rageSphereCD
					, officeCD
					, teamCD
					, empID
					, a.venueCD
					, venueNm
					, venueGradCD
					, segmentCD
					, subSegmentCD
					, addrTpCD1
					, addrTpCD2
					, (case when activityCD='50'
    						then (
    							NVL(
    							(select e.tpayAmt
            					from gltc01mt e
            					where 
            					e.contractDateTo = #eventYM#
            					and e.venueCD = a.venueCD),0)
        						) + a.tpayAmt
    							else a.tpayAmt end
    					) as tpayAmt
					,(select sum(nvl(totalAmt,0)) as taxExclAmt from GRLT01DT where eventYm=a.eventYM and venueCD=a.venueCD) as taxExclAmt
					, resultTQty
					, (
						case when resultTQty=0 then 0
						else round(tpayAmt / resultTQty)
						end
					) as avgUnitAmt
					, resultTpCD
					, targetRate
					, payRate
					, guidPayRate
					, excPayTpCD
					, gsvRate
					, commt
					, verifyErrCommt
					, verifyStateCD
					, d.kindTpCD5
					, d.prdNm
					, c.factoryPrice
					, d.qtyUnitCD
					, (select planQty from GPLN01DT where eventYM=c.eventYM and venueCD=c.venueCD and prdCD=c.prdCD) as planQty
					, c.inputQty
					, c.inputAmt
					, c.resultQty
					, c.resultUnitAmt
					, c.payAmt
					, a.dkmdTpCD
					, c.prdCD
					, (
						select max(apprDate)
						from GRLT07MT
						where
							eventYM = a.eventYM
							and venueCD = a.venueCD
							and diffNo = a.diffNo
					) as lastApprDate
				from GRLT01MT a
				inner join GVEN01MT b
					on a.venueCD = b.venueCD
				inner join GRLT01DT c
					on a.eventYM = c.eventYM
					and a.venueCD = c.venueCD
					and a.diffNo = c.diffNo
				inner join GPRD01MT d
					on c.prdCD = d.prdCD
				where
					a.eventYM = #eventYM#
					and a.diffNo = #diffNo#
					and a.programCD = 'G1'
					and a.verifyStateCD in (
						select comCode
						from F_CODE
						where
							codediv='VERIFYSTATECD'
							and activeFlg = 'U'
							and useYN = 'Y'
							and attrib03 = 'VELEX'
					)
					<isPropertyAvailable property="dkmdTpCD">
						<isNotEmpty prepend="and" property="dkmdTpCD">
							a.dkmdTpCD = #dkmdTpCD#
						</isNotEmpty>
					</isPropertyAvailable>
					<isPropertyAvailable property="activityCD">
						<isNotEmpty prepend="and" property="activityCD">
							a.activityCD = #activityCD#
						</isNotEmpty>
					</isPropertyAvailable>
					<isPropertyAvailable property="rageSphereCD">
						<isNotEmpty prepend="and" property="rageSphereCD">
							a.rageSphereCD = #rageSphereCD#
						</isNotEmpty>
					</isPropertyAvailable>
					<isPropertyAvailable property="officeCD">
						<isNotEmpty prepend="and" property="officeCD">
							a.officeCD = #officeCD#
						</isNotEmpty>
					</isPropertyAvailable>
					<isPropertyAvailable property="resultTpCD">
						<isNotEmpty prepend="and" property="resultTpCD">
							a.resultTpCD = #resultTpCD#
						</isNotEmpty>
					</isPropertyAvailable>
					<isPropertyAvailable property="verifyStateCD">
						<isNotEmpty prepend="and" property="verifyStateCD">
							a.verifyStateCD = #verifyStateCD#
						</isNotEmpty>
					</isPropertyAvailable>
			) t3
			where 1=1
				<isNotEmpty property="lastApprDateStartDate">
					<isNotEmpty property="lastApprDateEndDate">
						and to_char(lastApprDate,'YYYYMMDDHH24MISS') between concat(#lastApprDateStartDate#, '000000') and  concat(#lastApprDateEndDate#, '180000')
					</isNotEmpty>
				</isNotEmpty>
		) t
		order by
			dkmdTpCD
			, rageSphereCD
			, officeCD
			, teamCD
			, empID
			, resultTpCD
			, venueCD
			, prdCD
	</select>
	
</sqlMap>
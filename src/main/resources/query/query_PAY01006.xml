<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="PAY01006">
	
	<!-- 검증오류 승인요청 업소단위 리스트 조회 -->
	<select id="PAY0100601S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			mileageID as "mileageID"
			, venueCD as "venueCD"
			, venueNm as "venueNm"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VENUEGRADCD',venueGradCD,null) as "venueGradCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SEGMENTCD',segmentCD,null) as "segmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBSEGMENTCD',subSegmentCD,null) as "subSegmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD1',addrTpCD1,null) as "addrTpCD1Name"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD2',addrTpCD2,null) as "addrTpCD2Name"
			, contractDateFrom as "contractDateFrom"
			, contractDateTo as "contractDateTo"
			, contractMonthCt as "contractMonthCt"
			, apAmt as "apAmt"
			, targetRate as "targetRate"
			, msTargetRate as "msTargetRate"
			, tcontractQty as "tcontractQty"
			, gsvAmt as "gsvAmt"
			, gsvRate as "gsvRate"
			, contractAmt as "contractAmt"
			, contractTaxAmt as "contractTaxAmt"
			, addContractAmt as "addContractAmt"
			, addContractTaxAmt as "addContractTaxAmt"
			<!-- 약정금액추가 2016.10.10 -->
			, stipulationAmt as "stipulationAmt"
			, keymanAmt as "keymanAmt"
			, payRequestDate as "payRequestDate"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','MILEAGESTATECD',mileageStateCD,null) as "mileageStateCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','MILEAGEPAYTPCD',mileagePayTPCD,null) as "mileagePayTPCDName"
			, transferDate as "transferDate"
			, commt as "commt"
			, mileageStateCD as "mileageStateCD"
			, mileagePayTPCD as "mileagePayTPCD"
			, verifyStateCD as "verifyStateCD"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VERIFYSTATECD',verifyStateCD,null) as "verifyStateCDName"
			, verifyErrCommt as "verifyErrCommt"
		from (
			select
				a.mileageID
				, a.venueCD
				, b.venueNm
				, b.venueGradCD
				, b.segmentCD
				, b.subSegmentCD
				, b.addrTpCD1
				, b.addrTpCD2
				, a.contractDateFrom
				, a.contractDateTo
				, a.contractMonthCt
				, a.apAmt
				, a.targetRate
				, a.msTargetRate
				, a.tcontractQty
				, a.gsvAmt
				, a.gsvRate
				, a.contractAmt
				, a.contractTaxAmt
				, a.addContractAmt
				, a.addContractTaxAmt
				, a.stipulationAmt
				, (select sum(payAmt) from GMIL03MT where mileageID=a.mileageID and payTpCD='ORG') as keymanAmt
				, a.payRequestDate
				, a.mileageStateCD
				, a.mileagePayTPCD
				, a.transferDate
				, a.commt
				, a.verifyErrCommt
				, a.verifyStateCD
			from GMIL02MT a
			inner join GVEN01MT b
				on a.venueCD = b.venueCD
			where
				empID = #empID#
				<![CDATA[
				and a.contractDateTo >= #contractDateFrom#
				and a.contractDateFrom <= #contractDateTo#
				]]>
				<isPropertyAvailable property="activityCD">
					<isNotEmpty prepend="and" property="activityCD">
						activityCD = #activityCD#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="venueGradCD">
					<isNotEmpty prepend="and" property="venueGradCD">
						venueGradCD = #venueGradCD#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="segmentCD">
					<isNotEmpty prepend="and" property="segmentCD">
						segmentCD = #segmentCD#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="subSegmentCD">
					<isNotEmpty prepend="and" property="subSegmentCD">
						subSegmentCD = #subSegmentCD#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="addrTpCD1">
					<isNotEmpty prepend="and" property="addrTpCD1">
						addrTpCD1 = #addrTpCD1#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="addrTpCD2">
					<isNotEmpty prepend="and" property="addrTpCD2">
						addrTpCD2 = #addrTpCD2#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="verifyStateCD">
					<isNotEmpty prepend="and" property="verifyStateCD">
						verifyStateCD = #verifyStateCD#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="rageSphereCD_S">
					<isNotEmpty prepend="and" property="rageSphereCD_S">
						a.rageSphereCD = #rageSphereCD_S#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="officeCD_S">
					<isNotEmpty prepend="and" property="officeCD_S">
						a.officeCD = #officeCD_S#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="mileagePayTPCD">
					<isNotEmpty prepend="and" property="mileagePayTPCD">
						mileagePayTPCD = #mileagePayTPCD#
					</isNotEmpty>
				</isPropertyAvailable>
		) t
		order by venueCD
	</select>
	
	<!-- 검증오류 승인요청 제품 상세 조회 -->
	<select id="PAY0100602S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			getLangDesc(#companyID#,#languageCD#,'F_CODE','KINDTPCD5',kindTpCD5,null) as "kindTpCD5Name"
			, prdNm as "prdNm"
			, factoryPrice as "factoryPrice"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','QTYUNITCD',qtyUnitCD,null) as "qtyUnitCDName"
			, planQty as "planQty"
			, resultQty as "resultQty"
			, resultUnitAmt as "resultUnitAmt"
			, payAmt as "payAmt"
			, prdCD as "prdCD"
		from (
			select
				b.kindTpCD5
				, b.prdNm
				, a.factoryPrice
				, b.qtyUnitCD
				, c.planQty
				, a.resultQty
				, a.resultUnitAmt
				, a.payAmt
				, a.prdCD
			from GRLT01DT a
			inner join GPRD01MT b
				on a.prdCD = b.prdCD
			inner join GPLN01DT c
				on a.eventYM = c.eventYM
				and a.venueCD = c.venueCD
				and a.prdCD = c.prdCD
			where
				a.eventYM = #eventYM#
				and a.venueCD = #venueCD#
				and a.diffNo = #diffNo#
		) t
	</select>
	
	<!-- 검증오류 승인요청 -->
	<insert id="PAY0100601I" parameterClass="com.kia.mil.model.GMIL01MT">
		insert into GMIL05MT (
			mileageID
			, levelNo
			, apprTpID
			, apprGrpNm
			, empID
			, mileageStateCD
			, apprDate
			, regID
			, regDate
		)
		select
			#mileageID#
			, lv
			, #apprTpID#
			, apprGrpNm
			, empID
			, (
				case when lv=1 then '50'
				when lv=2 then '20'
				end
			) as mileageStateCD
			, (
				case when lv=1 then sysdate
				end
			) as apprDate
			, #userID#
			, sysdate
		from (
			select
				level as lv
				, apprGrpNm
				, empID
			from GAPP01DT t
			where
				apprTpID = #apprTpID#
			connect by prior papprGrpID = apprGrpID and apprTpID = #apprTpID#
			start with apprGrpID = (
				select
					apprGrpID
				from GAPP01DT
				Where
					empID = #empID#
					and apprTpID = #apprTpID#
			)  and apprTpID = #apprTpID#
		)
	</insert>
	
	<!-- 검증오류 검증상태 갱신 -->
	<update id="PAY0100601U" parameterClass="com.kia.mil.model.GMIL01MT">
		update GMIL02MT
		set
			verifyStateCD = #verifyStateCD#
			, lapprLevelNo = (
				select
					max(lv) as lv
				from (
					select
						level as lv
						, apprGrpNm
						, empID
					from GAPP01DT t
					where
						apprTpID = #apprTpID#
					connect by prior papprGrpID = apprGrpID and apprTpID = #apprTpID#
					start with apprGrpID = (
						select
							apprGrpID
						from GAPP01DT
						Where
							empID = #empID#
							and apprTpID = #apprTpID#
					)
				)
			)
			, chgID = #userID#
			, chgDate = sysdate
		where
			mileageID = #mileageID#
	</update>
	
	<!-- 검증오류 승인요청취소 -->
	<delete id="PAY0100601D" parameterClass="com.kia.mil.model.GMIL01MT">
		delete from GMIL05MT
		where
			mileageID = #mileageID#
			and apprTpID = #apprTpID#
	</delete>
	
	<!-- 검증오류 승인요청 엑셀 조회 -->
	<select id="PAY0100603S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			mileageID as "mileageID"
			, venueCD as "venueCD"
			, venueNm as "venueNm"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VENUEGRADCD',venueGradCD,null) as "venueGradCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SEGMENTCD',segmentCD,null) as "segmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBSEGMENTCD',subSegmentCD,null) as "subSegmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD1',addrTpCD1,null) as "addrTpCD1Name"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD2',addrTpCD2,null) as "addrTpCD2Name"
			, contractDateFrom as "contractDateFrom"
			, contractDateTo as "contractDateTo"
			, contractMonthCt as "contractMonthCt"
			, apAmt as "apAmt"
			, targetRate as "targetRate"
			, msTargetRate as "msTargetRate"
			, tcontractQty as "tcontractQty"
			, gsvAmt as "gsvAmt"
			, gsvRate as "gsvRate"
			, contractAmt as "contractAmt"
			, contractTaxAmt as "contractTaxAmt"
			, addContractAmt as "addContractAmt"
			, addContractTaxAmt as "addContractTaxAmt"
			<!-- 약정금액추가 2016.10.10 -->
			, stipulationAmt as "stipulationAmt"
			, keymanAmt as "keymanAmt"
			, payRequestDate as "payRequestDate"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','MILEAGESTATECD',mileageStateCD,null) as "mileageStateCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','MILEAGEPAYTPCD',mileagePayTPCD,null) as "mileagePayTPCDName"
			, transferDate as "transferDate"
			, commt as "commt"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VERIFYSTATECD',verifyStateCD,null) as "verifyStateCDName"
			, verifyErrCommt as "verifyErrCommt"
			, mileageStateCD as "mileageStateCD"
			, mileagePayTPCD as "mileagePayTPCD"
			, eventYM as "eventYM"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','KINDTPCD5',kindTpCD5,null) as "kindTpCD5Name"
			, prdNm as "prdNm"
			, factoryPrice as "factoryPrice"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','QTYUNITCD',qtyUnitCD,null) as "qtyUnitCDName"
			, contractQty as "contractQty"
			, plnEnterQty as "plnEnterQty"
			, plnEnterUnitAmt as "plnEnterUnitAmt"
			, plnAddEnterUnitAmt as "plnAddEnterUnitAmt"
			, rltEnterQty as "rltEnterQty"
			, rltEnterUnitAmt as "rltEnterUnitAmt"
			, payAmt as "payAmt"
			, addEnterUnitAmt as "addEnterUnitAmt"
			, addPayAmt as "addPayAmt"
		from (
			select
				a.mileageID
				, a.venueCD
				, b.venueNm
				, b.venueGradCD
				, b.segmentCD
				, b.subSegmentCD
				, b.addrTpCD1
				, b.addrTpCD2
				, a.contractDateFrom
				, a.contractDateTo
				, a.contractMonthCt
				, a.apAmt
				, a.targetRate
				, a.msTargetRate
				, a.tcontractQty
				, a.gsvAmt
				, a.gsvRate
				, a.contractAmt
				, a.contractTaxAmt
				, a.addContractAmt
				, a.addContractTaxAmt
				, a.stipulationAmt
				, (select sum(payAmt) from GMIL03MT where mileageID=a.mileageID and payTpCD='ORG') as keymanAmt
				, a.payRequestDate
				, a.mileageStateCD
				, a.mileagePayTPCD
				, a.transferDate
				, a.commt
				, a.verifyErrCommt
				, a.verifyStateCD
				, c.eventYM
				, d.kindTpCD5
				, d.prdNm
				, c.factoryPrice
				, d.qtyUnitCD
				, c.contractQty
				, c.plnEnterQty
				, c.plnEnterUnitAmt
				, c.plnAddEnterUnitAmt
				, c.rltEnterQty
				, c.rltEnterUnitAmt
				, c.payAmt
				, c.addEnterUnitAmt
				, c.addPayAmt
				, c.prdCD
			from GMIL02MT a
			inner join GVEN01MT b
				on a.venueCD = b.venueCD
			inner join GMIL02DT c
				on a.mileageID = c.mileageID
			inner join GPRD01MT d
				on c.prdCD = d.prdCD
			where
				empID = #empID#
				<![CDATA[
				and a.contractDateTo >= #contractDateFrom#
				and a.contractDateFrom <= #contractDateTo#
				]]>
				<isPropertyAvailable property="activityCD">
					<isNotEmpty prepend="and" property="activityCD">
						activityCD = #activityCD#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="venueGradCD">
					<isNotEmpty prepend="and" property="venueGradCD">
						venueGradCD = #venueGradCD#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="segmentCD">
					<isNotEmpty prepend="and" property="segmentCD">
						segmentCD = #segmentCD#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="subSegmentCD">
					<isNotEmpty prepend="and" property="subSegmentCD">
						subSegmentCD = #subSegmentCD#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="addrTpCD1">
					<isNotEmpty prepend="and" property="addrTpCD1">
						addrTpCD1 = #addrTpCD1#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="addrTpCD2">
					<isNotEmpty prepend="and" property="addrTpCD2">
						addrTpCD2 = #addrTpCD2#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="verifyStateCD">
					<isNotEmpty prepend="and" property="verifyStateCD">
						verifyStateCD = #verifyStateCD#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="rageSphereCD_S">
					<isNotEmpty prepend="and" property="rageSphereCD_S">
						a.rageSphereCD = #rageSphereCD_S#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="officeCD_S">
					<isNotEmpty prepend="and" property="officeCD_S">
						a.officeCD = #officeCD_S#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="mileagePayTPCD">
					<isNotEmpty prepend="and" property="mileagePayTPCD">
						mileagePayTPCD = #mileagePayTPCD#
					</isNotEmpty>
				</isPropertyAvailable>
		) t
		order by mileageID, venueCD, prdCD, eventYM
	</select>
	
</sqlMap>
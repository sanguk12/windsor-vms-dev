<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="PAY05001">
	
	<!-- 지급내역 리스트 조회 -->
	<select id="PAY0500101S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			rowNumber as "rowNum"
			, eventYM as "eventYM"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','DKMDTPCD',dkmdTpCD,null) as "dkmdTpCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','PROGRAMCD',programCD,null) as "programCDName"
			, decode(activityCD,'99','마일리지 지급',getLangDesc(#companyID#,#languageCD#,'F_CODE','ACTIVITYCD2',activityCD,null)) as "activityCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','RAGESPHERECD',rageSphereCD_reg,null) as "rageSphereCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','OFFICECD',officeCD_reg,null) as "officeCDName"
			<isPropertyAvailable property="grpID">
				<isNotEmpty property="grpID">
			, (case when (select dkmdtpcd from GEMP01MT where empID=t2.empID) != 'DK' then '' else (select empNm from GEMP01MT where empID=t2.empID) end) as "empNm"
				</isNotEmpty>
				<isEmpty property="grpID">
			, (select empNm from GEMP01MT where empID=t2.empID) as "empNm"
				</isEmpty>
			</isPropertyAvailable>
			, venueCD as "venueCD"
			, venueNm as "venueNm"
			, (
				case when programCD='G1' then ''
				else to_char(diffNo)
				end
			) as "diffNo"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VENUEGRADCD',venueGradCD,null) as "venueGradCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SEGMENTCD',segmentCD,null) as "segmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBSEGMENTCD',subSegmentCD,null) as "subSegmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD1',addrTpCD1,null) as "addrTpCD1Name"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD2',addrTpCD2,null) as "addrTpCD2Name"
			, tpayAmt as "tpayAmt"
			, resultTQty as "resultTQty"
			, avgUnitAmt as "avgUnitAmt"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','RESULTTPCD',resultTpCD,null) as "resultTpCDName"
			, targetRate as "targetRate"
			, payRate as "payRate"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','EXCPAYTPCD',excPayTpCD,null) as "excPayTpCDName"
			, gsvRate as "gsvRate"
			, commt as "commt"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VERIFYSTATECD',verifyStateCD,null) as "verifyStateCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','PAYSTATECD',payStateCD,null) as "payStateCDName"
			, transferDueDate as "transferDueDate"
			, transferDate as "transferDate"
			, (select keymanNm from GKEY01MT where keymanID=t2.keymanID) as "keymanNm"
			, payAmt as "payAmt"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','BANKCD',bankCD,null) as "bankCDName"
			, accountNo as "accountNo"
			, holderNm as "holderNm"
			, payCommt as "payCommt"
			, mileageYN as "mileageYN"
		from (
			select
				t.*
				, rank() over(
					order by
					      dkmdTpCD
						, programCD
						, activityCD
						, rageSphereCD_reg
						, officeCD_reg
						, empID
						, venueCD
						, eventYM
						, diffNo
						, keymanID
				) as rowNumber
				, floor((rank() over(
					order by
						  dkmdTpCD
						, programCD
						, activityCD
						, rageSphereCD_reg
						, officeCD_reg
						, empID
						, venueCD
						, eventYM
						, diffNo
						, keymanID
					)-1)/#displayNum#+1) as pageNum
			from (
				select
					 t3.*
					 , (
						select attrib02
						from F_CODE
						where
							useYN='Y'
							and activeFlg='U'
							and codediv='OFFICECD'
							and comCode=t3.officeCD
					 ) as rageSphereCD
				from (
					select
						 t2.*
						 , (
							select attrib02
							from F_CODE
							where
								useYN='Y'
								and activeFlg='U'
								and codediv='TEAMCD'
								and comCode=t2.teamCD
						 ) as officeCD
					from (
						select
							 t1.*
							 , (
								select attrib02
								from F_CODE
								where
									useYN='Y'
									and activeFlg='U'
									and codediv='TERRITORYCD'
									and comCode=t1.territoryCD
							 ) as teamCD
						from (
							select
								a.dkmdTpCD
								, programCD
								, activityCD
								, rageSphereCD as rageSphereCD_reg
								, officeCD as officeCD_reg
								, empID
								, a.venueCD
								, venueNm
								, a.diffNo
								, venueGradCD
								, segmentCD
								, subSegmentCD
								, addrTpCD1
								, addrTpCD2
								, tpayAmt
								, resultTQty
								, (
									case when resultTQty=0 then 0
									else round(tpayAmt / resultTQty)
									end
								) as avgUnitAmt
								, resultTpCD
								, targetRate
								, payRate
								, guidPayRate
								, excPayTpCD
								, gsvRate
								, commt
								, verifyStateCD
								, payStateCD
								, transferDueDate
								, transferDate
								, b.keymanID
								, b.payAmt
								, b.bankCD
								, b.accountNo
								, b.holderNm
								, d.territoryCD
								, payCommt
								, a.eventYM
								, a.mileageYN
							from GRLT01MT a
							left outer join GRLT06MT b
								on a.eventYM = b.eventYM
								and a.venueCD = b.venueCD
								and a.diffNo = b.diffNo
							inner join GVEN01MT d
								on a.venueCD = d.venueCD
							where
								a.eventYM between #eventFromYM# and #eventToYM#
								and a.apprStateCd = '50'
								<isPropertyAvailable property="programCD">
									<isNotEmpty prepend="and" property="programCD">
										a.programCD = #programCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="diffNo">
									<isNotEmpty prepend="and" property="diffNo">
										a.eventYM||a.diffNo = #diffNo#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="activityCD">
									<isNotEmpty prepend="and" property="activityCD">
										a.activityCD = #activityCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<!--
								2015.01.23. taejoon.jang, 현재의 dkmd구분으로 조회된다. 
								 -->
								<isPropertyAvailable property="dkmdTpCD">
									<isNotEmpty prepend="and" property="dkmdTpCD">
										d.dkmdTpCD = #dkmdTpCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="verifyStateCD">
									<isNotEmpty prepend="and" property="verifyStateCD">
										a.verifyStateCD = #verifyStateCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="payStateCD">
									<isNotEmpty prepend="and" property="payStateCD">
										a.payStateCD = #payStateCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="venueCD">
									<isNotEmpty prepend="and" property="venueCD">
										a.venueCD = #venueCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="keymanID">
									<isNotEmpty prepend="and" property="keymanID">
										b.keymanID = #keymanID#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="mileageYN">
									<isNotEmpty prepend="and" property="mileageYN">
										a.mileageYN = #mileageYN#
									</isNotEmpty>
								</isPropertyAvailable>
							<!-- union all
							select
								a.dkmdTpCD
								, programCD
								, '99' activityCD
								, rageSphereCD as rageSphereCD_reg
								, officeCD as officeCD_reg
								, empID
								, a.venueCD
								, venueNm
								, a.diffNo
								, venueGradCD
								, segmentCD
								, subSegmentCD
								, addrTpCD1
								, addrTpCD2
								, tpayAmt
								, resultTQty
								, (
									case when resultTQty=0 then 0
									else round(tpayAmt / resultTQty)
									end
								) as avgUnitAmt
								, resultTpCD
								, targetRate
								, payRate
								, guidPayRate
								, excPayTpCD
								, gsvRate
								, b.commt
								, b.verifyStateCD
								, b.payStateCD
								, b.transferDueDate
								, b.transferDate
								, b.keymanID
								, b.payAmt
								, b.bankCD
								, b.accountNo
								, b.holderNm
								, d.territoryCD
								, payCommt
								, a.eventYM
								, a.mileageYN
							from GRLT01MT a
							inner join (
								select
								   t3.venueCD
								  , keymanID
								  , max(bankCD) as bankCD
								  , max(accountNo) as accountNo
								  , max(holderNm) as holderNm
								  , eventYM
								  , sum(t1.addPayAmt)*decode(sum(t3.addcontractamt),0,0,max(t2.payAmt)/max(t3.addcontractamt)) as payAmt
								  , max(t3.commt) as commt
								  , max(t3.payStateCD) as payStateCD
								  , max(t3.verifyStateCD) as verifyStateCD
								  , max(t3.mileageStateCd) as mileageStateCd
								  , max(transferDueDate) as transferDueDate
								  , max(transferDate) as transferDate
								from
								  GMIL02DT t1
								  inner join GMIL03MT t2
								  on t1.mileageID = t2.mileageID
								  inner join GMIL02MT t3
								  on t1.mileageID = t3.mileageID
								  group by venueCD, eventYM, keymanid
							) b
								on a.eventYM = b.eventYM
								and a.venueCD = b.venueCD
							inner join GVEN01MT d
								on a.venueCD = d.venueCD
							where
								a.eventYM between #eventFromYM# and #eventToYM#
								and a.programCD = 'G1'
								and b.mileageStateCd = '50'
								and nvl(b.payAmt,0) <![CDATA[<>]]> 0
								<isPropertyAvailable property="programCD">
									<isNotEmpty prepend="and" property="programCD">
										programCD = #programCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="diffNo">
									<isNotEmpty prepend="and" property="diffNo">
										a.eventYM||a.diffNo = #diffNo#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="activityCD">
									<isNotEmpty prepend="and" property="activityCD">
										activityCD = #activityCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="dkmdTpCD">
									<isNotEmpty prepend="and" property="dkmdTpCD">
										d.dkmdTpCD = #dkmdTpCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="activityCD">
									<isNotEmpty prepend="and" property="activityCD">
										activityCD = #activityCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="verifyStateCD">
									<isNotEmpty prepend="and" property="verifyStateCD">
										verifyStateCD = #verifyStateCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="payStateCD">
									<isNotEmpty prepend="and" property="payStateCD">
										payStateCD = #payStateCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="venueCD">
									<isNotEmpty prepend="and" property="venueCD">
										a.venueCD = #venueCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="keymanID">
									<isNotEmpty prepend="and" property="keymanID">
										b.keymanID = #keymanID#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="mileageYN">
									<isNotEmpty prepend="and" property="mileageYN">
										a.mileageYN = #mileageYN#
									</isNotEmpty>
								</isPropertyAvailable> -->
							<isEmpty prepend="" property="diffNo">
							union all
							select
								max(a.dkmdTpCD)
								, 'G1' programCD
								, '99' activityCD
								, max(rageSphereCD) as rageSphereCD_reg
								, max(officeCD) as officeCD_reg
								, max(empID)
								, a.venueCD
								, venueNm
								, null
								, max(venueGradCD)
								, max(segmentCD)
								, max(subSegmentCD)
								, max(addrTpCD1)
								, max(addrTpCD2)
								, max(a.addcontractamt)
								, sum(rltenterqty)
								, (
									case when sum(rltenterqty)=0 then 0
									else round(max(a.addcontractamt) / sum(rltenterqty))
									end
								) as avgUnitAmt
								, null
								, max(targetRate)
								, null
								, null
								, null
								, max(gsvRate)
								, max(commt)
								, max(verifyStateCD)
								, max(a.payStateCD)
								, max(transferDueDate)
								, max(transferDate)
								, max(b.keymanID)
								, max(b.payAmt)
								, max(b.bankCD)
								, max(b.accountNo)
								, max(b.holderNm)
								, max(d.territoryCD)
								, max(payCommt)
								, max(a.contractdateto)
								, 'Y'
							from GMIL02MT a
              				inner join GMIL02DT c
              					on a.mileageID = c.mileageID
							left outer join GMIL03MT b
								on a.mileageID = b.mileageID
							inner join GVEN01MT d
								on a.venueCD = d.venueCD
                				and d.incntTpCD = 'VEN'
							where
                				a.contractdateto between #eventFromYM# and #eventToYM#
								and a.mileageStateCd = '50'
								<isPropertyAvailable property="programCD">
									<isNotEmpty prepend="and" property="programCD">
										'G1' = #programCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="diffNo">
									<isNotEmpty prepend="and" property="diffNo">
										a.eventYM||a.diffNo = #diffNo#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="activityCD">
									<isNotEmpty prepend="and" property="activityCD">
										'99' = #activityCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="dkmdTpCD">
									<isNotEmpty prepend="and" property="dkmdTpCD">
										d.dkmdTpCD = #dkmdTpCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="verifyStateCD">
									<isNotEmpty prepend="and" property="verifyStateCD">
										verifyStateCD = #verifyStateCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="payStateCD">
									<isNotEmpty prepend="and" property="payStateCD">
										a.payStateCD = #payStateCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="venueCD">
									<isNotEmpty prepend="and" property="venueCD">
										a.venueCD = #venueCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="keymanID">
									<isNotEmpty prepend="and" property="keymanID">
										b.keymanID = #keymanID#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="mileageYN">
									<isNotEmpty prepend="and" property="mileageYN">
										'Y' = #mileageYN#
									</isNotEmpty>
								</isPropertyAvailable>
              				group by a.mileageID, a.venueCD
								, d.venueNm
							</isEmpty>
						) t1
					) t2
				) t3
			) t
			where 1=1
				<isPropertyAvailable property="rageSphereCD">
					<isNotEmpty prepend="and" property="rageSphereCD">
						rageSphereCD = #rageSphereCD#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="officeCD">
					<isNotEmpty prepend="and" property="officeCD">
						officeCD = #officeCD#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="rageSphereCD_S">
					<isNotEmpty prepend="and" property="rageSphereCD_S">
						rageSphereCD = #rageSphereCD_S#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="officeCD_S">
					<isNotEmpty prepend="and" property="officeCD_S">
						officeCD = #officeCD_S#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="teamCD_S">
					<isNotEmpty prepend="and" property="teamCD_S">
						teamCD = #teamCD_S#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="territoryCD">
					<isNotEmpty prepend="and" property="territoryCD">
						territoryCD = #territoryCD#
					</isNotEmpty>
				</isPropertyAvailable>
		) t2
		where 1=1
			<isPropertyAvailable property="pageNum">
				<isNotEmpty prepend="and" property="pageNum">
					pageNum = #pageNum#
				</isNotEmpty>
			</isPropertyAvailable>
	</select>
	
	<select id="PAY0500102S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			count(*) as "totalCount"
		from (
			select
				 t3.*
				 , (
					select attrib02
					from F_CODE
					where
						useYN='Y'
						and activeFlg='U'
						and codediv='OFFICECD'
						and comCode=t3.officeCD
				 ) as rageSphereCD
			from (
				select
					 t2.*
					 , (
						select attrib02
						from F_CODE
						where
							useYN='Y'
							and activeFlg='U'
							and codediv='TEAMCD'
							and comCode=t2.teamCD
					 ) as officeCD
				from (
					select
						 t1.*
						 , (
							select attrib02
							from F_CODE
							where
								useYN='Y'
								and activeFlg='U'
								and codediv='TERRITORYCD'
								and comCode=t1.territoryCD
						 ) as teamCD
					from (
						select
							a.dkmdTpCD
							, programCD
							, activityCD
							, rageSphereCD as rageSphereCD_reg
							, officeCD as officeCD_reg
							, empID
							, a.venueCD
							, venueNm
							, a.diffNo
							, venueGradCD
							, segmentCD
							, subSegmentCD
							, addrTpCD1
							, addrTpCD2
							, tpayAmt
							, resultTQty
							, (
								case when resultTQty=0 then 0
								else round(tpayAmt / resultTQty)
								end
							) as avgUnitAmt
							, resultTpCD
							, targetRate
							, payRate
							, guidPayRate
							, excPayTpCD
							, gsvRate
							, commt
							, verifyStateCD
							, payStateCD
							, transferDate
							, b.keymanID
							, b.payAmt
							, b.bankCD
							, b.accountNo
							, b.holderNm
							, d.territoryCD
						from GRLT01MT a
						left outer join GRLT06MT b
							on a.eventYM = b.eventYM
							and a.venueCD = b.venueCD
							and a.diffNo = b.diffNo
						inner join GVEN01MT d
							on a.venueCD = d.venueCD
						where
							a.eventYM between #eventFromYM# and #eventToYM#
							and a.apprStateCd = '50'
							<isPropertyAvailable property="programCD">
								<isNotEmpty prepend="and" property="programCD">
									a.programCD = #programCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="diffNo">
								<isNotEmpty prepend="and" property="diffNo">
									a.eventYM||a.diffNo = #diffNo#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="activityCD">
								<isNotEmpty prepend="and" property="activityCD">
									a.activityCD = #activityCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<!--
							2015.01.23. taejoon.jang, 현재의 dkmd구분으로 조회된다. 
							 -->
							<isPropertyAvailable property="dkmdTpCD">
								<isNotEmpty prepend="and" property="dkmdTpCD">
									d.dkmdTpCD = #dkmdTpCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="verifyStateCD">
								<isNotEmpty prepend="and" property="verifyStateCD">
									a.verifyStateCD = #verifyStateCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="payStateCD">
								<isNotEmpty prepend="and" property="payStateCD">
									a.payStateCD = #payStateCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="venueCD">
								<isNotEmpty prepend="and" property="venueCD">
									a.venueCD = #venueCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="keymanID">
								<isNotEmpty prepend="and" property="keymanID">
									b.keymanID = #keymanID#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="mileageYN">
								<isNotEmpty prepend="and" property="mileageYN">
									a.mileageYN = #mileageYN#
								</isNotEmpty>
							</isPropertyAvailable>
						<!-- union all
						select
							a.dkmdTpCD
							, programCD
							, '99' as activityCD
							, rageSphereCD as rageSphereCD_reg
							, officeCD as officeCD_reg
							, empID
							, a.venueCD
							, venueNm
							, a.diffNo
							, venueGradCD
							, segmentCD
							, subSegmentCD
							, addrTpCD1
							, addrTpCD2
							, tpayAmt
							, resultTQty
							, (
								case when resultTQty=0 then 0
								else round(tpayAmt / resultTQty)
								end
							) as avgUnitAmt
							, resultTpCD
							, targetRate
							, payRate
							, guidPayRate
							, excPayTpCD
							, gsvRate
							, b.commt
							, b.verifyStateCD
							, b.payStateCD
							, transferDate
							, b.keymanID
							, b.payAmt
							, b.bankCD
							, b.accountNo
							, b.holderNm
							, d.territoryCD
						from GRLT01MT a
						inner join (
							select
							   t3.venueCD
							  , keymanID
							  , max(bankCD) as bankCD
							  , max(accountNo) as accountNo
							  , max(holderNm) as holderNm
							  , eventYM
							  , sum(t1.addPayAmt)*decode(sum(t3.addcontractamt),0,0,max(t2.payAmt)/max(t3.addcontractamt)) as payAmt
							  , max(t3.commt) as commt
							  , max(t3.payStateCD) as payStateCD
							  , max(t3.verifyStateCD) as verifyStateCD
							  , max(t3.mileageStateCd) as mileageStateCd
							from
							  GMIL02DT t1
							  inner join GMIL03MT t2
							  on t1.mileageID = t2.mileageID
							  inner join GMIL02MT t3
							  on t1.mileageID = t3.mileageID
							  group by venueCD, eventYM, keymanid
						) b
							on a.eventYM = b.eventYM
							and a.venueCD = b.venueCD
						inner join GVEN01MT d
							on a.venueCD = d.venueCD
						where
							a.eventYM between #eventFromYM# and #eventToYM#
							and a.programCD = 'G1'
							and b.mileageStateCd = '50'
							and nvl(b.payAmt,0) <![CDATA[<>]]> 0
							<isPropertyAvailable property="programCD">
								<isNotEmpty prepend="and" property="programCD">
									programCD = #programCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="diffNo">
								<isNotEmpty prepend="and" property="diffNo">
									a.eventYM||a.diffNo = #diffNo#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="dkmdTpCD">
								<isNotEmpty prepend="and" property="dkmdTpCD">
									d.dkmdTpCD = #dkmdTpCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="activityCD">
								<isNotEmpty prepend="and" property="activityCD">
									1 = 2
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="verifyStateCD">
								<isNotEmpty prepend="and" property="verifyStateCD">
									b.verifyStateCD = #verifyStateCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="payStateCD">
								<isNotEmpty prepend="and" property="payStateCD">
									b.payStateCD = #payStateCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="venueCD">
								<isNotEmpty prepend="and" property="venueCD">
									a.venueCD = #venueCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="keymanID">
								<isNotEmpty prepend="and" property="keymanID">
									b.keymanID = #keymanID#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="mileageYN">
								<isNotEmpty prepend="and" property="mileageYN">
									a.mileageYN = #mileageYN#
								</isNotEmpty>
							</isPropertyAvailable> -->
						<isEmpty prepend="" property="diffNo">
						union all
						select
							max(a.dkmdTpCD)
							, 'G1' programCD
							, '99' activityCD
							, max(rageSphereCD) as rageSphereCD_reg
							, max(officeCD) as officeCD_reg
							, max(empID)
							, a.venueCD
							, venueNm
							, null
							, max(venueGradCD)
							, max(segmentCD)
							, max(subSegmentCD)
							, max(addrTpCD1)
							, max(addrTpCD2)
							, max(a.addcontractamt)
							, sum(rltenterqty)
							, (
								case when sum(rltenterqty)=0 then 0
								else round(max(a.addcontractamt) / sum(rltenterqty))
								end
							) as avgUnitAmt
							, null
							, max(targetRate)
							, null
							, null
							, null
							, max(gsvRate)
							, max(commt)
							, max(verifyStateCD)
							, max(a.payStateCD)
							, max(transferDate)
							, max(b.keymanID)
							, max(b.payAmt)
							, max(b.bankCD)
							, max(b.accountNo)
							, max(b.holderNm)
							, max(d.territoryCD)
						from GMIL02MT a
             				inner join GMIL02DT c
             					on a.mileageID = c.mileageID
						left outer join GMIL03MT b
							on a.mileageID = b.mileageID
						inner join GVEN01MT d
							on a.venueCD = d.venueCD
               				and d.incntTpCD = 'VEN'
						where
               				a.contractdateto between #eventFromYM# and #eventToYM#
							and a.mileageStateCd = '50'
							<isPropertyAvailable property="programCD">
								<isNotEmpty prepend="and" property="programCD">
									'G1' = #programCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="diffNo">
								<isNotEmpty prepend="and" property="diffNo">
									a.eventYM||a.diffNo = #diffNo#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="activityCD">
								<isNotEmpty prepend="and" property="activityCD">
									'99' = #activityCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="dkmdTpCD">
								<isNotEmpty prepend="and" property="dkmdTpCD">
									d.dkmdTpCD = #dkmdTpCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="verifyStateCD">
								<isNotEmpty prepend="and" property="verifyStateCD">
									a.verifyStateCD = #verifyStateCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="payStateCD">
								<isNotEmpty prepend="and" property="payStateCD">
									a.payStateCD = #payStateCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="venueCD">
								<isNotEmpty prepend="and" property="venueCD">
									a.venueCD = #venueCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="keymanID">
								<isNotEmpty prepend="and" property="keymanID">
									b.keymanID = #keymanID#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="mileageYN">
								<isNotEmpty prepend="and" property="mileageYN">
									'Y' = #mileageYN#
								</isNotEmpty>
							</isPropertyAvailable>
             				group by a.mileageID, a.venueCD
							, d.venueNm
						</isEmpty>
					) t1
				) t2
			) t3
		) t
		where 1=1
			<isPropertyAvailable property="rageSphereCD">
				<isNotEmpty prepend="and" property="rageSphereCD">
					rageSphereCD = #rageSphereCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="officeCD">
				<isNotEmpty prepend="and" property="officeCD">
					officeCD = #officeCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="rageSphereCD_S">
				<isNotEmpty prepend="and" property="rageSphereCD_S">
					rageSphereCD = #rageSphereCD_S#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="officeCD_S">
				<isNotEmpty prepend="and" property="officeCD_S">
					officeCD = #officeCD_S#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="teamCD_S">
				<isNotEmpty prepend="and" property="teamCD_S">
					teamCD = #teamCD_S#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="territoryCD">
				<isNotEmpty prepend="and" property="territoryCD">
					territoryCD = #territoryCD#
				</isNotEmpty>
			</isPropertyAvailable>
	</select>
	
</sqlMap>
<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="PAY04011">
	
	<!-- Paging 구현쿼리 Header 조각 -->
    <sql id="PAY04011.paging.header">
        <isPropertyAvailable property="pageNum">
        select p.* from (
            select
    	        count(*) over() as "totalCount",
    	</isPropertyAvailable>
    	<isNotPropertyAvailable property="pageNum">
    		select
    	</isNotPropertyAvailable>
    </sql>
    
    <!-- Paging 구현쿼리 Header 조각 -->
    <sql id="PAY04011.paging.footer">
        <isPropertyAvailable property="pageNum">
        ) p
		where
			p.pageNum = #pageNum#
		</isPropertyAvailable>
    </sql>
	
	<!-- 지급처리(마일리지) 리스트 조회 -->
	<select id="PAY0401101S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		<include refid="PAY04011.paging.header"/>
			rank() over(
				order by
					mileageID
					, payTpCD
			) as "rowNum"
			, floor((rank() over(
				order by
					mileageID
					, payTpCD
			)-1)/#displayNum#+1) as pageNum
			, mileageID as "mileageID"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','RAGESPHERECD',rageSphereCD,null) as "rageSphereCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','OFFICECD',officeCD,null) as "officeCDName"
			, (select empNm from GEMP01MT where empID=t.empID) as "empNm"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','PAYTPCD',payTpCD,null) as "payTpCDName"
			, venueCD as "venueCD"
			, venueNm as "venueNm"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VENUEGRADCD',venueGradCD,null) as "venueGradCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SEGMENTCD',segmentCD,null) as "segmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBSEGMENTCD',subSegmentCD,null) as "subSegmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD1',addrTpCD1,null) as "addrTpCD1Name"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD2',addrTpCD2,null) as "addrTpCD2Name"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','MILEAGEPAYTPCD',mileagePayTPCD,null) as "mileagePayTPCDName"
			, stipulationAmt as "stipulationAmt"
			, contractDateFrom as "contractDateFrom"
			, contractDateTo as "contractDateTo"
			, contractMonthCt as "contractMonthCt"
			, contractAmt as "contractAmt"
			, addContractAmt as "addContractAmt"
			, keymanAmt as "keymanAmt"
			, payApprDate as "payApprDate"
			, transferDate as "transferDate"
			, transferDueDate as "transferDueDate"
			, commt as "commt"
			, payCommt as "payCommt"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','MILEAGEPAYSTATCD',payStateCD,null) as "payStateCDName"
			, payStateCD as "payStateCD"
			, payTpCD as "payTpCD"
		from (
			select
				max(mileageID) as mileageID
				, max(rageSphereCD) as rageSphereCD
				, max(officeCD) as officeCD
				, max(empID) as empID
				, max(payTpCD) as payTpCD
				, max(venueCD) as venueCD
				, max(venueNm) as venueNm
				, max(venueGradCD) as venueGradCD
				, max(segmentCD) as segmentCD
				, max(subSegmentCD) as subSegmentCD
				, max(addrTpCD1) as addrTpCD1
				, max(addrTpCD2) as addrTpCD2
				, max(stipulationAmt) as stipulationAmt
				, max(contractDateFrom) as contractDateFrom
				, max(contractDateTo) as contractDateTo
				, max(contractMonthCt) as contractMonthCt
				, max(contractAmt) as contractAmt
				, max(addContractAmt) as addContractAmt
				, sum(keymanAmt) as keymanAmt
				, max(payApprDate) as payApprDate
				, max(transferDate) as transferDate
				, max(transferDueDate) as transferDueDate
				, max(commt) as commt
				, max(payCommt) as payCommt
				, max(payStateCD) as payStateCD
				, max(mileagePayTPCD) as mileagePayTPCD
			from (
				select
					a.mileageID
					, a.rageSphereCD
					, a.officeCD
					, a.empID
					, b.payTpCD
					, a.venueCD
					, c.venueNm
					, c.venueGradCD
					, c.segmentCD
					, c.subSegmentCD
					, c.addrTpCD1
					, c.addrTpCD2
					, a.stipulationAmt
					, a.contractDateFrom
					, a.contractDateTo
					, a.contractMonthCt
					, a.contractAmt
					, a.addContractAmt
					, b.payAmt as keymanAmt
					, a.payApprDate
					, a.transferDate
					, a.transferDueDate
					, a.commt
					, a.payCommt
					, a.payStateCD
					, a.mileagePayTPCD
				from GMIL02MT a
				inner join GMIL03MT b
					on a.mileageID = b.mileageID
				inner join GVEN01MT c
					on a.venueCD = c.venueCD
				where
					b.payTpCD = 'ORG'
			)
			group by mileageID
		) t
		where
			payApprDate between #payApprDateFrom# and #payApprDateTo#
			<isPropertyAvailable property="payTpCD">
				<isNotEmpty prepend="and" property="payTpCD">
					payTpCD = #payTpCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="mileageStateCD">
				<isNotEmpty prepend="and" property="mileageStateCD">
					payStateCD = #mileageStateCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="transferDate">
				<isNotEmpty prepend="and" property="transferDate">
					transferDate = #transferDate#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="rageSphereCD_S">
				<isNotEmpty prepend="and" property="rageSphereCD_S">
					rageSphereCD = #rageSphereCD_S#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="officeCD_S">
				<isNotEmpty prepend="and" property="officeCD_S">
					officeCD = #officeCD_S#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="mileagePayTPCD">
				<isNotEmpty prepend="and" property="mileagePayTPCD">
					mileagePayTPCD = #mileagePayTPCD#
				</isNotEmpty>
			</isPropertyAvailable>
		<include refid="PAY04011.paging.footer"/>
	</select>
	
	<!-- 지급 완료 약정지급 -->
	<update id="PAY0401101U" parameterClass="com.kia.mil.model.GMIL01MT">
		update GMIL02MT
		set
			payStateCD = #mileageStateCD#
			, payCommt = #payCommt#
			, transferDate = #transferDate#
			, chgID = #userID#
			, chgDate = sysdate
		where
			mileageID = #mileageID#
	</update>
	
	<!-- 지급 보류 약정지급 -->
	<update id="PAY0401102U" parameterClass="com.kia.mil.model.GMIL01MT">
		update GMIL02MT
		set
			payStateCD = #mileageStateCD#
			, payCommt = #payCommt#
			, transferDueDate = #transferDueDate#
			, chgID = #userID#
			, chgDate = sysdate
		where
			mileageID = #mileageID#
	</update>
	
	<!-- 지급의견 수정 -->
	<update id="PAY0401105U" parameterClass="com.kia.mil.model.GMIL01MT">
		update GMIL02MT
		set
			payCommt = #payCommt#
			, chgID = #userID#
			, chgDate = sysdate
		where
			mileageID = #mileageID#
	</update>
	
	<!-- 지급처리(마일리지) 전체 엑셀 조회 -->
	<select id="PAY0401102S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			eventYM as "eventYM"
			, diffNo as "diffNo"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','INCNTTPCD',incntTpCD,null) as "incntTpCDName"
			, '마일리지' as "activityCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','PAYTPCD',payTpCD,null) as "programCDName"
			, payApprDate as "payApprDate"
			, transferDate as "transferDate"
			, transferDueDate as "transferDueDate"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','DKMDTPCD',dkmdTpCD,null) as "dkmdTpCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','RAGESPHERECD',rageSphereCD,null) as "rageSphereCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','OFFICECD',officeCD,null) as "officeCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','MILEAGEPAYTPCD',mileagePayTPCD,null) as "mileagePayTPCDName"
			, (select empNm from GEMP01MT where empID=t.empID) as "empNm"
			, venueCD as "venueCD"
			, venueNm as "venueNm"
			, prdNm as "prdNm"
			, keymanID as "keymanID"
			, keymanNm as "keymanNm"
			, regIDNo as "regIDNo"
			, addr as "addr"
			, phoneNo as "phoneNo"
			, bankCD as "bankCD"
			, accountNo as "accountNo"
			, holderNm as "holderNm"
			, payAmt as "payAmt"
			, commt as "commt"
			, payCommt as "payCommt"
		from (
			select
				'' as eventYM
				, '' as diffNo
				, '' as incntTpCD
				, '20' as activityCD
				, b.payTpCD
				, a.payApprDate
				, a.transferDate
				, a.transferDueDate
				, a.dkmdTpCD
				, a.rageSphereCD
				, a.officeCD
				, a.empID
				, a.venueCD
				, c.venueNm
				, '' as prdNm
				, b.keymanID
				, e.keymanNm
				, SCP.DEC_B64('DAMO','SCP','AES_256.SCPS',e.regIDNo) AS regIDNo
				, e.addr
				, e.phoneNo
				, b.bankCD
				, b.accountNo
				, b.holderNm
				, b.payAmt
				, a.payStateCD
				, a.mileageID
				, a.commt
				, a.payCommt
				, a.mileagePayTPCD
			from GMIL02MT a
			inner join GMIL03MT b
				on a.mileageID = b.mileageID
			inner join GVEN01MT c
				on a.venueCD = c.venueCD
			left outer join GKEY01MT e
				on b.keymanID = e.keymanID
			where
				b.payTpCD = 'ORG'
		) t
		where
			payApprDate between #payApprDateFrom# and #payApprDateTo#
			<isPropertyAvailable property="payTpCD">
				<isNotEmpty prepend="and" property="payTpCD">
					payTpCD = #payTpCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="mileageStateCD">
				<isNotEmpty prepend="and" property="mileageStateCD">
					payStateCD = #mileageStateCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="transferDate">
				<isNotEmpty prepend="and" property="transferDate">
					transferDate = #transferDate#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="rageSphereCD_S">
				<isNotEmpty prepend="and" property="rageSphereCD_S">
					rageSphereCD = #rageSphereCD_S#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="officeCD_S">
				<isNotEmpty prepend="and" property="officeCD_S">
					officeCD = #officeCD_S#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="mileagePayTPCD">
				<isNotEmpty prepend="and" property="mileagePayTPCD">
					mileagePayTPCD = #mileagePayTPCD#
				</isNotEmpty>
			</isPropertyAvailable>
		order by
			mileageID
			, payTpCD
			, keymanID
	</select>

	<!-- 지급예정일 입력 -->
	<update id="PAY0401107U" parameterClass="com.kia.mil.model.GMIL01MT">
		update GMIL02MT
		set
			transferDueDate = #transferDueDate#
			, chgID = #userID#
			, chgDate = sysdate
		where
			mileageID = #mileageID#
	</update>
</sqlMap>
<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="ANL01002">
	
	<!-- Result내역 리스트 조회 -->
	<select id="ANL0100201S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			rowNumber as "rowNum"
			, eventYM as "eventYM"
			, (
				case when programCD='G1' then ''
				else to_char(diffNo)
				end
			) as "diffNo"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','PROGRAMCD',programCD,null) as "programCDName"
			, decode(activityCD,'99','마일리지 지급',getLangDesc(#companyID#,#languageCD#,'F_CODE','ACTIVITYCD2',activityCD,null)) as "activityCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','DKMDTPCD',dkmdTpCD,null) as "dkmdTpCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','RAGESPHERECD',rageSphereCD_reg,null) as "rageSphereCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','OFFICECD',officeCD_reg,null) as "officeCDName"
			<isPropertyAvailable property="grpID">
				<isNotEmpty property="grpID">
			, (case when (select dkmdtpcd from GEMP01MT where empID=t.empID) != 'DK' then '' else (select empNm from GEMP01MT where empID=t.empID) end) as "empNm"
				</isNotEmpty>
				<isEmpty property="grpID">
			, (select empNm from GEMP01MT where empID=t.empID) as "empNm"
				</isEmpty>
			</isPropertyAvailable>
			, venueCD as "venueCD"
			, venueNm as "venueNm"
			, wsSapCD as "wsSapCD"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','WSSAPCD',wsSapCD,null) as "wsSapCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VENUEGRADCD',venueGradCD,null) as "venueGradCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SEGMENTCD',segmentCD,null) as "segmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','SUBSEGMENTCD',subSegmentCD,null) as "subSegmentCDName"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD1',addrTpCD1,null) as "addrTpCD1Name"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD2',addrTpCD2,null) as "addrTpCD2Name"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD3',addrTpCD3,null) as "addrTpCD3Name"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','ADDRTPCD4',addrTpCD4,null) as "addrTpCD4Name"
			, targetRate as "targetRate"
			, payRate as "payRate"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','EXCPAYTPCD',excPayTpCD,null) as "excPayTpCDName"
			, gsvRate as "gsvRate"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','KINDTPCD5',kindTpCD5,null) as "kindTpCD5Name"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','KINDTPCD2',kindTpCD2,null) as "kindTpCD2Name"
			, prdNm as "prdNm"
			, planQty as "planQty"
			, resultQty as "resultQty"
			, planUnitAmt as "planUnitAmt"
			, resultUnitAmt as "resultUnitAmt"
			, payAmt as "payAmt"
			, (
				case when resultQty=0 then 0
				else round(payAmt/resultQty)
				end
			) as "finalUnitAmt"
			, nvl(incomeTax, 0) as "incomeTax"
			, nvl(residentTax, 0) as "residentTax"
			, nvl(withholdingTax, 0) as "withholdingTax"
			, nvl(totalAmt, 0) as "totalAmt"
			, nvl(inputQty, 0) as "inputQty"
			, nvl(inputAmt, 0) as "inputAmt"
			, round(resultQty * eu, 5) as "euResultQty"
			, getLangDesc(#companyID#,#languageCD#,'F_CODE','VERIFYSTATECD', verifyStateCD, null) as "verifyStateCDName"
		from (
			select
				 t4.*
				 , rank() over(
					order by
						dkmdTpCD
						, programCD
						, activityCD
						, rageSphereCD_reg
						, officeCD_reg
						, empID
						, venueCD
						, diffNo
						, prdCD
				) as rowNumber
				 , floor((rank() over(
					order by
						dkmdTpCD
						, programCD
						, activityCD
						, rageSphereCD_reg
						, officeCD_reg
						, empID
						, venueCD
						, diffNo
						, prdCD
					)-1)/#displayNum#+1) as pageNum
			from (
				select
					 t3.*
					 , (
						select attrib02
						from F_CODE
						where
							activeFlg='U'
							and codediv='OFFICECD'
							and comCode=t3.officeCD
					 ) as rageSphereCD
				from (
					select
						 t2.*
						 , (
							select attrib02
							from F_CODE
							where
								activeFlg='U'
								and codediv='TEAMCD'
								and comCode=t2.teamCD
						 ) as officeCD
					from (
						select
							 t1.*
							 , (
								select attrib02
								from F_CODE
								where
									activeFlg='U'
									and codediv='TERRITORYCD'
									and comCode=t1.territoryCD
							 ) as teamCD
						from (
							select
								a.eventYM
								, a.diffNo
								, a.programCD
								, a.activityCD
								, a.dkmdTpCD
								, a.rageSphereCD as rageSphereCD_reg
								, a.officeCD as officeCD_reg
								, a.empID
								, a.venueCD
								, f.venueNm
								, f.wsSapCD
								, venueGradCD
								, segmentCD
								, subSegmentCD
								, addrTpCD1
								, addrTpCD2
								, addrTpCD3
								, addrTpCD4
								, targetRate
								, payRate
								, excPayTpCD
								, a.gsvRate
								, e.kindTpCD5
								, e.kindTpCD2
								, e.prdNm
								, d.planQty
								, b.resultQty
								, d.planUnitAmt
								, b.resultUnitAmt
								, (
									case when nvl(b.totalAmt, 0) = 0 then
										round (
											case when excPayTpCD='NPAY' then 
												(((b.resultQty * b.resultUnitAmt) * (payRate/100)) / (targetRate/100)) * 1.2
											else
												b.resultQty * b.resultUnitAmt
											end
										)
									else
										b.payAmt
									end
								) as payAmt
								, b.prdCD
								, f.territoryCD
								, b.incomeTax
								, b.residentTax
								, b.withholdingTax
								, b.totalAmt
								, b.inputQty
								, b.inputAmt
								, e.eu
								, a.verifyStateCD
							from GRLT01MT a
							inner join GRLT01DT b
								on a.eventYM = b.eventYM
								and a.venueCD = b.venueCD
								and a.diffNo = b.diffNo
							inner join GPLN01MT c
								on a.eventYM = c.eventYM
								and a.venueCD = c.venueCD
							inner join GPLN01DT d
								on b.eventYM = d.eventYM
								and b.venueCD = d.venueCD
								and b.prdCD = d.prdCD
							inner join GPRD01MT e
								on b.prdCD = e.prdCD
							inner join GVEN01MT f
								on a.venueCD = f.venueCD
							where
								a.apprStateCD = '50'
								and a.eventYM = #eventYM#
								and b.resultQty != 0
								and a.eventYM > '201907'
								<isPropertyAvailable property="diffNo">
									<isNotEmpty prepend="and" property="diffNo">
										a.diffNo = #diffNo#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="programCD">
									<isNotEmpty prepend="and" property="programCD">
										a.programCD = #programCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<!--
								2015.01.23. taejoon.jang, 현재의 dkmd구분으로 조회된다. 
								 -->
								<isPropertyAvailable property="dkmdTpCD">
									<isNotEmpty prepend="and" property="dkmdTpCD">
										f.dkmdTpCD = #dkmdTpCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="activityCD">
									<isNotEmpty prepend="and" property="activityCD">
										a.activityCD = #activityCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="mileageYN">
									<isNotEmpty prepend="and" property="mileageYN">
										a.mileageYN = #mileageYN#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="verifyStateCD">
									<isNotEmpty prepend="and" property="verifyStateCD">
										a.verifyStateCD = #verifyStateCD#
									</isNotEmpty>
								</isPropertyAvailable>
							union all
							select
								max(a.contractdateto)
								, null
								, 'G1' as programCD
								, '99'
								, max(a.dkmdTpCD)
								, max(a.rageSphereCD) as rageSphereCD_reg
								, max(a.officeCD) as officeCD_reg
								, max(a.empID)
								, a.venueCD
								, f.venueNm
								, max(f.wsSapCD)
								, max(venueGradCD)
								, max(segmentCD)
								, max(subSegmentCD)
								, max(addrTpCD1)
								, max(addrTpCD2)
								, max(addrTpCD3)
								, max(addrTpCD4)
								, max(targetRate)
								, null
								, null
								, max(a.gsvRate)
								, max(e.kindTpCD5)
								, max(e.kindTpCD2)
								, e.prdNm
								, sum(b.plnenterQty)
								, sum(b.rltenterQty)
								, max(b.plnenterUnitAmt)
								, max(b.addenterUnitAmt)
								, sum(b.addpayamt)
								, b.prdCD
								, max(f.territoryCD)
								, null
								, null
								, null
								, null
								, null
								, null
								, max(e.eu)
								, null
							from GMIL02MT a
							inner join GMIL02DT b
								on a.mileageID = b.mileageID
							inner join GMIL01MT c
								on a.mileageID = c.mileageID
							inner join GPRD01MT e
								on b.prdCD = e.prdCD
							inner join GVEN01MT f
								on a.venueCD = f.venueCD
							and f.incnttpcd = 'VEN'
							where
								a.mileageStateCD = '50'
							and a.contractdateto = #eventYM#
								<isPropertyAvailable property="diffNo">
									<isNotEmpty prepend="and" property="diffNo">
										'' = #diffNo#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="programCD">
									<isNotEmpty prepend="and" property="programCD">
										'G1' = #programCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<!--
								2015.01.23. taejoon.jang, 현재의 dkmd구분으로 조회된다. 
								 -->
								<isPropertyAvailable property="dkmdTpCD">
									<isNotEmpty prepend="and" property="dkmdTpCD">
										f.dkmdTpCD = #dkmdTpCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="activityCD">
									<isNotEmpty prepend="and" property="activityCD">
										'99' = #activityCD#
									</isNotEmpty>
								</isPropertyAvailable>
								<isPropertyAvailable property="mileageYN">
									<isNotEmpty prepend="and" property="mileageYN">
										'Y' = #mileageYN#
									</isNotEmpty>
								</isPropertyAvailable>
							group by a.mileageID, a.venueCD, f.venueNm, b.prdCD,e.prdNm
						) t1
					) t2
				) t3
			) t4
			where 1=1
				<isPropertyAvailable property="rageSphereCD">
					<isNotEmpty prepend="and" property="rageSphereCD">
						rageSphereCD = #rageSphereCD#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="officeCD">
					<isNotEmpty prepend="and" property="officeCD">
						officeCD = #officeCD#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="rageSphereCD_S">
					<isNotEmpty prepend="and" property="rageSphereCD_S">
						rageSphereCD = #rageSphereCD_S#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="officeCD_S">
					<isNotEmpty prepend="and" property="officeCD_S">
						officeCD = #officeCD_S#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="teamCD_S">
					<isNotEmpty prepend="and" property="teamCD_S">
						teamCD = #teamCD_S#
					</isNotEmpty>
				</isPropertyAvailable>
				<isPropertyAvailable property="territoryCD">
					<isNotEmpty prepend="and" property="territoryCD">
						territoryCD = #territoryCD#
					</isNotEmpty>
				</isPropertyAvailable>
		) t
		where 1=1
			<isPropertyAvailable property="pageNum">
				<isNotEmpty prepend="and" property="pageNum">
					pageNum = #pageNum#
				</isNotEmpty>
			</isPropertyAvailable>
	</select>
	
	<select id="ANL0100202S" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		select
			count(*) as "totalCount"
		from (
			select
				 t3.*
				 , (
					select attrib02
					from F_CODE
					where
						activeFlg='U'
						and codediv='OFFICECD'
						and comCode=t3.officeCD
				 ) as rageSphereCD
			from (
				select
					 t2.*
					 , (
						select attrib02
						from F_CODE
						where
							activeFlg='U'
							and codediv='TEAMCD'
							and comCode=t2.teamCD
					 ) as officeCD
				from (
					select
						 t1.*
						 , (
							select attrib02
							from F_CODE
							where
								activeFlg='U'
								and codediv='TERRITORYCD'
								and comCode=t1.territoryCD
						 ) as teamCD
					from (
						select
							a.eventYM
							, a.diffNo
							, a.programCD
							, a.activityCD
							, a.dkmdTpCD
							, a.rageSphereCD as rageSphereCD_reg
							, a.officeCD as officeCD_reg
							, a.empID
							, a.venueCD
							, f.venueNm
							, f.wsSapCD
							, venueGradCD
							, segmentCD
							, subSegmentCD
							, addrTpCD1
							, addrTpCD2
							, addrTpCD3
							, addrTpCD4
							, targetRate
							, payRate
							, excPayTpCD
							, a.gsvRate
							, e.kindTpCD5
							, e.kindTpCD2
							, e.prdNm
							, d.planQty
							, b.resultQty
							, d.planUnitAmt
							, b.resultUnitAmt
							, (
								round (
									case when excPayTpCD='NPAY' then 
										(((b.resultQty * b.resultUnitAmt) * (payRate/100)) / (targetRate/100)) * 1.2
									else
										b.resultQty * b.resultUnitAmt
									end
								)
							) as payAmt
							, b.prdCD
							, f.territoryCD
							, a.verifyStateCD 
						from GRLT01MT a
						inner join GRLT01DT b
							on a.eventYM = b.eventYM
							and a.venueCD = b.venueCD
							and a.diffNo = b.diffNo
						inner join GPLN01MT c
							on a.eventYM = c.eventYM
							and a.venueCD = c.venueCD
						inner join GPLN01DT d
							on b.eventYM = d.eventYM
							and b.venueCD = d.venueCD
							and b.prdCD = d.prdCD
						inner join GPRD01MT e
							on b.prdCD = e.prdCD
						inner join GVEN01MT f
							on a.venueCD = f.venueCD
						where
							a.apprStateCD = '50'
							and a.eventYM = #eventYM#
							and b.resultQty != 0
							and a.eventYM > '201907'
							<isPropertyAvailable property="diffNo">
								<isNotEmpty prepend="and" property="diffNo">
									a.diffNo = #diffNo#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="programCD">
								<isNotEmpty prepend="and" property="programCD">
									a.programCD = #programCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<!--
							2015.01.23. taejoon.jang, 현재의 dkmd구분으로 조회된다. 
							 -->
							<isPropertyAvailable property="dkmdTpCD">
								<isNotEmpty prepend="and" property="dkmdTpCD">
									f.dkmdTpCD = #dkmdTpCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="activityCD">
								<isNotEmpty prepend="and" property="activityCD">
									a.activityCD = #activityCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="mileageYN">
								<isNotEmpty prepend="and" property="mileageYN">
									a.mileageYN = #mileageYN#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="verifyStateCD">
								<isNotEmpty prepend="and" property="verifyStateCD">
									a.verifyStateCD = #verifyStateCD#
								</isNotEmpty>
							</isPropertyAvailable>
						union all
						select
							max(a.contractdateto)
							, null
							, 'G1' as programCD
							, '99'
							, max(a.dkmdTpCD)
							, max(a.rageSphereCD) as rageSphereCD_reg
							, max(a.officeCD) as officeCD_reg
							, max(a.empID)
							, a.venueCD
							, f.venueNm
							, max(f.wsSapCD)
							, max(venueGradCD)
							, max(segmentCD)
							, max(subSegmentCD)
							, max(addrTpCD1)
							, max(addrTpCD2)
							, max(addrTpCD3)
							, max(addrTpCD4)
							, max(targetRate)
							, null
							, null
							, max(a.gsvRate)
							, max(e.kindTpCD5)
							, max(e.kindTpCD2)
							, e.prdNm
							, sum(b.plnenterQty)
							, sum(b.rltenterQty)
							, max(b.plnenterUnitAmt)
							, max(b.addenterUnitAmt)
							, sum(b.addpayamt)
							, b.prdCD
							, max(f.territoryCD)
							, null
						from GMIL02MT a
						inner join GMIL02DT b
							on a.mileageID = b.mileageID
						inner join GMIL01MT c
							on a.mileageID = c.mileageID
						inner join GPRD01MT e
							on b.prdCD = e.prdCD
						inner join GVEN01MT f
							on a.venueCD = f.venueCD
							and f.incnttpcd = 'VEN'
						where
							a.mileageStateCD = '50'
						and a.contractdateto = #eventYM#
							<isPropertyAvailable property="diffNo">
								<isNotEmpty prepend="and" property="diffNo">
									'' = #diffNo#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="programCD">
								<isNotEmpty prepend="and" property="programCD">
									'G1' = #programCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<!--
							2015.01.23. taejoon.jang, 현재의 dkmd구분으로 조회된다. 
							 -->
							<isPropertyAvailable property="dkmdTpCD">
								<isNotEmpty prepend="and" property="dkmdTpCD">
									f.dkmdTpCD = #dkmdTpCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="activityCD">
								<isNotEmpty prepend="and" property="activityCD">
									'99' = #activityCD#
								</isNotEmpty>
							</isPropertyAvailable>
							<isPropertyAvailable property="mileageYN">
								<isNotEmpty prepend="and" property="mileageYN">
									'Y' = #mileageYN#
								</isNotEmpty>
							</isPropertyAvailable>
						group by a.mileageID, a.venueCD, f.venueNm, b.prdCD,e.prdNm
					) t1
				) t2
			) t3
		) t
		where 1=1
			<isPropertyAvailable property="rageSphereCD">
				<isNotEmpty prepend="and" property="rageSphereCD">
					rageSphereCD = #rageSphereCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="officeCD">
				<isNotEmpty prepend="and" property="officeCD">
					officeCD = #officeCD#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="rageSphereCD_S">
				<isNotEmpty prepend="and" property="rageSphereCD_S">
					rageSphereCD = #rageSphereCD_S#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="officeCD_S">
				<isNotEmpty prepend="and" property="officeCD_S">
					officeCD = #officeCD_S#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="teamCD_S">
				<isNotEmpty prepend="and" property="teamCD_S">
					teamCD = #teamCD_S#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="territoryCD">
				<isNotEmpty prepend="and" property="territoryCD">
					territoryCD = #territoryCD#
				</isNotEmpty>
			</isPropertyAvailable>
	</select>
	
</sqlMap>